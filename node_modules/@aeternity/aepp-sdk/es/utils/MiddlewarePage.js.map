{"version":3,"file":"MiddlewarePage.js","names":["BaseError","isMiddlewareRawPage","maybePage","testPage","data","Array","isArray","MiddlewarePageMissed","constructor","isNext","name","_middleware","WeakMap","MiddlewarePage","rawPage","middleware","_classPrivateFieldInitSpec","nextPath","next","prevPath","prev","_classPrivateFieldSet","_classPrivateFieldGet","requestByPath"],"sources":["../../src/utils/MiddlewarePage.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport type Middleware from '../Middleware.js';\nimport { BaseError } from './errors.js';\n\ninterface MiddlewareRawPage<T = unknown> {\n  data: T[];\n  next: string | null;\n  prev: string | null;\n}\n\nexport function isMiddlewareRawPage(maybePage: unknown): maybePage is MiddlewareRawPage {\n  const testPage = maybePage as MiddlewareRawPage;\n  return (\n    testPage?.data != null &&\n    Array.isArray(testPage.data) &&\n    'next' in testPage &&\n    'prev' in testPage\n  );\n}\n\n/**\n * @category exception\n */\nexport class MiddlewarePageMissed extends BaseError {\n  constructor(isNext: boolean) {\n    super(`There is no ${isNext ? 'next' : 'previous'} page`);\n    this.name = 'MiddlewarePageMissed';\n  }\n}\n\n/**\n * A wrapper around the middleware's page allowing to get the next/previous pages.\n */\nexport class MiddlewarePage<Item> {\n  readonly data: Item[];\n\n  readonly nextPath: null | string;\n\n  readonly prevPath: null | string;\n\n  readonly #middleware: Middleware;\n\n  constructor(rawPage: MiddlewareRawPage<Item>, middleware: Middleware) {\n    this.data = rawPage.data;\n    this.nextPath = rawPage.next;\n    this.prevPath = rawPage.prev;\n    this.#middleware = middleware;\n  }\n\n  /**\n   * Get the next page.\n   * Check the presence of `nextPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async next(): Promise<MiddlewarePage<Item>> {\n    if (this.nextPath == null) throw new MiddlewarePageMissed(true);\n    return this.#middleware.requestByPath(this.nextPath);\n  }\n\n  /**\n   * Get the previous page.\n   * Check the presence of `prevPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async prev(): Promise<MiddlewarePage<Item>> {\n    if (this.prevPath == null) throw new MiddlewarePageMissed(false);\n    return this.#middleware.requestByPath(this.prevPath);\n  }\n}\n"],"mappings":";;;;;AAAA;;AAEA,SAASA,SAAS,QAAQ,aAAa;AAQvC,OAAO,SAASC,mBAAmBA,CAACC,SAAkB,EAAkC;EACtF,MAAMC,QAAQ,GAAGD,SAA8B;EAC/C,OACEC,QAAQ,EAAEC,IAAI,IAAI,IAAI,IACtBC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACC,IAAI,CAAC,IAC5B,MAAM,IAAID,QAAQ,IAClB,MAAM,IAAIA,QAAQ;AAEtB;;AAEA;AACA;AACA;AACA,OAAO,MAAMI,oBAAoB,SAASP,SAAS,CAAC;EAClDQ,WAAWA,CAACC,MAAe,EAAE;IAC3B,KAAK,CAAC,eAAeA,MAAM,GAAG,MAAM,GAAG,UAAU,OAAO,CAAC;IACzD,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AAFA,IAAAC,WAAA,oBAAAC,OAAA;AAGA,OAAO,MAAMC,cAAc,CAAO;EAShCL,WAAWA,CAACM,OAAgC,EAAEC,UAAsB,EAAE;IAFtEC,0BAAA,OAASL,WAAW;IAGlB,IAAI,CAACP,IAAI,GAAGU,OAAO,CAACV,IAAI;IACxB,IAAI,CAACa,QAAQ,GAAGH,OAAO,CAACI,IAAI;IAC5B,IAAI,CAACC,QAAQ,GAAGL,OAAO,CAACM,IAAI;IAC5BC,qBAAA,CAAKV,WAAW,EAAhB,IAAI,EAAeI,UAAJ,CAAC;EAClB;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMG,IAAIA,CAAA,EAAkC;IAC1C,IAAI,IAAI,CAACD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIV,oBAAoB,CAAC,IAAI,CAAC;IAC/D,OAAOe,qBAAA,CAAKX,WAAW,EAAhB,IAAe,CAAC,CAACY,aAAa,CAAC,IAAI,CAACN,QAAQ,CAAC;EACtD;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMG,IAAIA,CAAA,EAAkC;IAC1C,IAAI,IAAI,CAACD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIZ,oBAAoB,CAAC,KAAK,CAAC;IAChE,OAAOe,qBAAA,CAAKX,WAAW,EAAhB,IAAe,CAAC,CAACY,aAAa,CAAC,IAAI,CAACJ,QAAQ,CAAC;EACtD;AACF","ignoreList":[]}