{"version":3,"file":"index.js","names":[],"sources":["../../../../src/apis/middleware/models/index.ts"],"sourcesContent":["import { MiddlewarePage } from \"../../../utils/MiddlewarePage.js\";\nimport * as coreClient from \"@azure/core-client\";\n\n/** Activity related to an account */\nexport interface Activity {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  blockTime: Date;\n  /** The block height */\n  height: number;\n  /** The event type */\n  type: ActivityType;\n  /** A mix of all activity types. */\n  payload: ActivityPayload;\n}\n\n/** A mix of all activity types. */\nexport interface ActivityPayload {\n  /** The micro block hash in which the transaction happened */\n  blockHash?: `mh_${string}`;\n  blockHeight?: number;\n  /** Encoded transaction */\n  encodedTx?: `tx_${string}`;\n  /** Transaction hash */\n  hash?: `th_${string}`;\n  /** The micro block index */\n  microIndex?: number;\n  microTime?: Date;\n  /** The signatures */\n  signatures?: string[];\n  /** The transaction */\n  tx?: Tx;\n  /** The amount of AE tokens */\n  amount?: bigint;\n  /** Contract address */\n  contractId?: `ct_${string}`;\n  logIdx?: number;\n  /** Account address */\n  recipientId?: `ak_${string}`;\n  /** Account address */\n  senderId?: `ak_${string}`;\n  /** Transaction hash */\n  txHash?: `th_${string}`;\n  /** Account address */\n  recipient?: `ak_${string}`;\n  /** Account address */\n  sender?: `ak_${string}`;\n  tokenId?: number;\n  /** The contract creation transaction hash */\n  contractTxHash?: `th_${string}`;\n  /** The contract call transaction hash */\n  callTxHash?: `th_${string}`;\n  /** The name of the function */\n  function?: string;\n  /** The transaction object */\n  internalTx?: Record<string, unknown>;\n  /** The height in which the internal call happened */\n  height?: number;\n  /** The kind of internal transfer */\n  kind?: ActivityPayloadKind;\n  /** The transaction hash of a transaction related to the internal transfer */\n  refTxHash?: `th_${string}`;\n}\n\n/** A mix of all transaction types. */\nexport interface Tx {\n  /** Base58Check encoded tagged pubkey */\n  recipientId?: string;\n  amount?: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  senderId?: string;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  payload?: string;\n  /** Base58Check encoded tagged pubkey */\n  initiatorId?: string;\n  initiatorAmount?: bigint;\n  /** Base58Check encoded tagged pubkey */\n  responderId?: string;\n  responderAmount?: bigint;\n  channelReserve?: bigint;\n  lockPeriod?: number;\n  /** Base58Check encoded tagged pubkey */\n  stateHash?: string;\n  delegateIds?: Delegates;\n  /** Base58Check encoded tagged pubkey */\n  channelId?: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId?: string;\n  round?: number;\n  /** Base58Check encoded tagged pubkey */\n  toId?: string;\n  update?: OffChainUpdate;\n  /** Base64Check encoded tagged byte array */\n  offchainTrees?: string;\n  initiatorAmountFinal?: number;\n  responderAmountFinal?: number;\n  /** Base64Check encoded tagged byte array */\n  poi?: string;\n  initiatorDelegateIds?: string[];\n  responderDelegateIds?: string[];\n  queryFormat?: string;\n  responseFormat?: string;\n  queryFee?: bigint;\n  oracleTtl?: RelativeTTL;\n  /** Base58Check encoded tagged pubkey */\n  accountId?: string;\n  abiVersion?: number;\n  /** Base58Check encoded tagged pubkey */\n  oracleId?: string;\n  query?: string;\n  queryTtl?: Ttl;\n  responseTtl?: RelativeTTL;\n  /** Base58Check encoded tagged value */\n  queryId?: string;\n  response?: string;\n  /** Base58Check encoded tagged value */\n  commitmentId?: string;\n  name?: string;\n  nameSalt?: number;\n  nameFee?: bigint;\n  /** Base58Check encoded tagged value */\n  nameId?: string;\n  nameTtl?: number;\n  pointers?: NamePointer[];\n  clientTtl?: number;\n  /** Base58Check encoded tagged pubkey */\n  ownerId?: string;\n  /** Base64Check encoded tagged byte array */\n  code?: string;\n  vmVersion?: number;\n  deposit?: bigint;\n  gas?: number;\n  gasPrice?: bigint;\n  /** Base64Check encoded tagged byte array */\n  callData?: string;\n  /** Base58Check encoded tagged pubkey */\n  callerId?: string;\n  /** Base58Check encoded tagged pubkey */\n  contractId?: string;\n  /** Contract authorization function hash (hex encoded) */\n  authFun?: string;\n  /** Base58Check encoded tagged pubkey */\n  gaId?: string;\n  /** Base64Check encoded tagged byte array */\n  authData?: string;\n  tx?: SignedTx;\n  /** Base58Check encoded tagged pubkey */\n  payerId?: string;\n  version: number;\n  type: TxType;\n}\n\nexport interface Delegates {\n  initiator?: string[];\n  responder?: string[];\n}\n\nexport interface OffChainUpdate {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  op: \"OffChainUpdate\";\n}\n\nexport interface RelativeTTL {\n  type: \"delta\";\n  value: number;\n}\n\nexport interface Ttl {\n  type: TTLType;\n  value: number;\n}\n\nexport interface NamePointer {\n  key: string;\n  /** Base58Check encoded tagged value */\n  encodedKey?: string;\n  /** Base58Check encoded tagged pubkey */\n  id: string;\n}\n\nexport interface SignedTx {\n  /** A mix of all transaction types. */\n  tx: Tx;\n  blockHeight?: number;\n  /** Base58Check encoded tagged hash */\n  blockHash?: string;\n  /** Base58Check encoded tagged hash */\n  hash?: string;\n  /** Base64Check encoded tagged byte array */\n  encodedTx?: string;\n  /** At least one signature is required unless for Generalized Account Meta transactions */\n  signatures?: string[];\n}\n\n/** Error response from the API */\nexport interface ErrorResponse {\n  /** The message of the error raised */\n  error: string;\n}\n\n/** Response Schema for owners of AEX-141 tokens */\nexport interface Aex141TokenResponse {\n  /** NFT contract id */\n  contractId: `ct_${string}`;\n  /** Account address */\n  ownerId?: `ak_${string}`;\n  /** Non-fungible token id */\n  tokenId: number;\n}\n\n/** Response Schema for AEX9 balance responses */\nexport interface Aex9BalanceResponse {\n  /** Amount of AEX9 token */\n  amount: bigint;\n  /** Block hash, indicating a state of a balance for that block */\n  blockHash: number;\n  /** Contract id of AEX9 token */\n  contractId: `ct_${string}`;\n  /** Number of decimals of AEX9 token */\n  decimals: number;\n  /** Block height, indicating a state of a balance for that block height */\n  height: number;\n  /** Name of AEX9 token */\n  tokenName: string;\n  /** Symbol of AEX9 token */\n  tokenSymbol: string;\n  /** Transaction hash, indicating a state of a balance for that block height */\n  txHash: `th_${string}`;\n  /** Transaction index, indicating a state of a balance for that block height */\n  txIndex: number;\n  /** Transaction type, indicating a state of a balance for that block height */\n  txType: string;\n}\n\n/** DEX swap */\nexport interface DexSwap {\n  amounts: DexSwapAmounts;\n  action: DexSwapAction;\n  /** Account address */\n  caller: `ak_${string}`;\n  fromToken: string;\n  toToken: string;\n  logIdx: number;\n  /** Account address */\n  toAccount: `ak_${string}`;\n  /** Transaction hash */\n  txHash: `th_${string}`;\n  /** Contract address */\n  fromContract: `ct_${string}`;\n  /** Contract address */\n  toContract: `ct_${string}`;\n  fromAmount: bigint;\n  toAmount: bigint;\n  fromDecimals: number;\n  toDecimals: number;\n  microTime: Date;\n  height: number;\n}\n\nexport interface DexSwapAmounts {\n  amount0In: bigint;\n  amount1In: bigint;\n  amount0Out: bigint;\n  amount1Out: bigint;\n}\n\n/** Name Claim */\nexport interface NameClaim {\n  activeFrom: number;\n  /** Transaction hash */\n  sourceTxHash: `th_${string}`;\n  sourceTxType: string;\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  height: number;\n  tx: NameClaimTx;\n  internalSource?: boolean;\n}\n\nexport interface NameClaimTx {\n  name: string;\n  nameSalt: number;\n  nameFee?: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n}\n\n/** Resource not found on the API */\nexport interface NotFoundResponse {\n  /** The message of the error raised */\n  error: string;\n}\n\n/** Pointee */\nexport interface Pointee {\n  active: boolean;\n  /** AENS name */\n  name: `${string}.chain`;\n  key: string;\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  tx: NameUpdateTx;\n  sourceTxType: string;\n  /** Transaction hash */\n  sourceTxHash: `th_${string}`;\n  blockHeight: number;\n  blockTime: Date;\n}\n\nexport interface NameUpdateTx {\n  /** Base58Check encoded tagged value */\n  nameId: string;\n  nameTtl: number;\n  pointers: NamePointer[];\n  clientTtl: number;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n}\n\nexport interface PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema {\n  /** The contract create transactions count */\n  contractCreateTx?: Get200ApplicationJsonProperties;\n  /** The contract call transactions count */\n  contractCallTx?: PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx;\n  /** The ga attach transactions count */\n  gaAttachTx?: Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx;\n  /** The ga meta transactions count */\n  gaMetaTx?: Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx;\n  /** The channel close mutual transactions count */\n  channelCloseMutualTx?: PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx;\n  /** The channel close solo transactions count */\n  channelCloseSoloTx?: Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx;\n  /** The channel create transactions count */\n  channelCreateTx?: PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx;\n  /** The channel deposit transactions count */\n  channelDepositTx?: Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx;\n  /** The channel force progress transactions count */\n  channelForceProgressTx?: Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx;\n  /** The channel set delegates transactions count */\n  channelSetDelegatesTx?: PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx;\n  /** The channel settle transactions count */\n  channelSettleTx?: PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx;\n  /** The channel slash transactions count */\n  channelSlashTx?: PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx;\n  /** The channel snapshot solo transactions count */\n  channelSnapshotSoloTx?: Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx;\n  /** The channel withdraw transactions count */\n  channelWithdrawTx?: Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx;\n  /** The name claim transactions count */\n  nameClaimTx?: PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx;\n  /** The name preclaim transactions count */\n  namePreclaimTx?: Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx;\n  /** The name revoke transactions count */\n  nameRevokeTx?: PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx;\n  /** The name transfer transactions count */\n  nameTransferTx?: PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx;\n  /** The name update transactions count */\n  nameUpdateTx?: PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx;\n  /** The oracle extend transactions count */\n  oracleExtendTx?: Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx;\n  /** The oracle query transactions count */\n  oracleQueryTx?: Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx;\n  /** The oracle register transactions count */\n  oracleRegisterTx?: PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx;\n  /** The oracle response transactions count */\n  oracleResponseTx?: Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx;\n  /** The paying for transactions count */\n  payingForTx?: Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx;\n  /** The spend transactions count */\n  spendTx?: Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx;\n  /** The channel offchain transactions count */\n  channelOffchainTx?: Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx;\n  /** The total transactions count */\n  total: number;\n}\n\n/** The contract create transactions count */\nexport interface Get200ApplicationJsonProperties {\n  /** The number of times the account was owner id in contract create transaction */\n  ownerId?: number;\n}\n\n/** The contract call transactions count */\nexport interface PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx {\n  /** The number of times the account was contract id in contract call transaction */\n  contractId?: number;\n  /** The number of times the account was caller id in contract call transaction */\n  callerId?: number;\n}\n\n/** The ga attach transactions count */\nexport interface Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx {\n  /** The number of times the account was owner id in ga attach transaction */\n  ownerId?: number;\n}\n\n/** The ga meta transactions count */\nexport interface Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx {\n  /** The number of times the account was ga id in ga meta transaction */\n  gaId?: number;\n}\n\n/** The channel close mutual transactions count */\nexport interface PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx {\n  /** The number of times the account was channel id in channel close mutual transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel close mutual transaction */\n  fromId?: number;\n}\n\n/** The channel close solo transactions count */\nexport interface Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx {\n  /** The number of times the account was channel id in channel close solo transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel close solo transaction */\n  fromId?: number;\n}\n\n/** The channel create transactions count */\nexport interface PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx {\n  /** The number of times the account was initiator id in channel create transaction */\n  initiatorId?: number;\n  /** The number of times the account was responder id in channel create transaction */\n  responderId?: number;\n}\n\n/** The channel deposit transactions count */\nexport interface Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx {\n  /** The number of times the account was channel id in channel deposit transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel deposit transaction */\n  fromId?: number;\n}\n\n/** The channel force progress transactions count */\nexport interface Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx {\n  /** The number of times the account was channel id in channel force progress transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel force progress transaction */\n  fromId?: number;\n}\n\n/** The channel set delegates transactions count */\nexport interface PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx {\n  /** The number of times the account was channel id in channel set delegates transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel set delegates transaction */\n  fromId?: number;\n}\n\n/** The channel settle transactions count */\nexport interface PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx {\n  /** The number of times the account was channel id in channel settle transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel settle transaction */\n  fromId?: number;\n}\n\n/** The channel slash transactions count */\nexport interface PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx {\n  /** The number of times the account was channel id in channel slash transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel slash transaction */\n  fromId?: number;\n}\n\n/** The channel snapshot solo transactions count */\nexport interface Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx {\n  /** The number of times the account was channel id in channel snapshot solo transaction */\n  channelId?: number;\n  /** The number of times the account was from id in channel snapshot solo transaction */\n  fromId?: number;\n}\n\n/** The channel withdraw transactions count */\nexport interface Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx {\n  /** The number of times the account was channel id in channel withdraw transaction */\n  channelId?: number;\n  /** The number of times the account was to id in channel withdraw transaction */\n  toId?: number;\n}\n\n/** The name claim transactions count */\nexport interface PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx {\n  /** The number of times the account was account id in name claim transaction */\n  accountId?: number;\n}\n\n/** The name preclaim transactions count */\nexport interface Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx {\n  /** The number of times the account was account id in name preclaim transaction */\n  accountId?: number;\n  /** The number of times the account was commitment id in name preclaim transaction */\n  commitmentId?: number;\n}\n\n/** The name revoke transactions count */\nexport interface PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx {\n  /** The number of times the account was account id in name revoke transaction */\n  accountId?: number;\n  /** The number of times the account was name id in name revoke transaction */\n  nameId?: number;\n}\n\n/** The name transfer transactions count */\nexport interface PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx {\n  /** The number of times the account was recipient id in name transfer transaction */\n  recipientId?: number;\n  /** The number of times the account was account id in name transfer transaction */\n  accountId?: number;\n  /** The number of times the account was name id in name transfer transaction */\n  nameId?: number;\n}\n\n/** The name update transactions count */\nexport interface PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx {\n  /** The number of times the account was account id in name update transaction */\n  accountId?: number;\n  /** The number of times the account was name id in name update transaction */\n  nameId?: number;\n}\n\n/** The oracle extend transactions count */\nexport interface Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx {\n  /** The number of times the account was oracle id in oracle extend transaction */\n  oracleId?: number;\n}\n\n/** The oracle query transactions count */\nexport interface Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx {\n  /** The number of times the account was sender id in oracle query transaction */\n  senderId?: number;\n  /** The number of times the account was oracle id in oracle query transaction */\n  oracleId?: number;\n}\n\n/** The oracle register transactions count */\nexport interface PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx {\n  /** The number of times the account was account id in oracle register transaction */\n  accountId?: number;\n}\n\n/** The oracle response transactions count */\nexport interface Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx {\n  /** The number of times the account was oracle id in oracle response transaction */\n  oracleId?: number;\n}\n\n/** The paying for transactions count */\nexport interface Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx {\n  /** The number of times the account was payer id in paying for transaction */\n  payerId?: number;\n}\n\n/** The spend transactions count */\nexport interface Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx {\n  /** The number of times the account was sender id in spend transaction */\n  senderId?: number;\n  /** The number of times the account was recipient id in spend transaction */\n  recipientId?: number;\n}\n\n/** The channel offchain transactions count */\nexport interface Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx {\n  /** The number of times the account was channel id in channel offchain transaction */\n  channelId?: number;\n}\n\n/** Response Schema for AEX141 contract */\nexport interface Aex141Response {\n  /** Metadata base url */\n  baseUrl: string;\n  /** NFT contract id */\n  contractId: `ct_${string}`;\n  /** Transaction hash of the contract creation */\n  contractTxHash: `th_${string}`;\n  /** Extensions implemented by the contract */\n  extensions: string[];\n  /** Limit for amount of tokens or templates */\n  limits: Record<string, unknown>;\n  /** True if the contract is invalid */\n  invalid: boolean;\n  creationTime: Date;\n  /** Block height of the contract creation */\n  blockHeight: number;\n}\n\n/** Response Schema for templates of a AEX-141 contract */\nexport interface Aex141TemplatesResponse {\n  /** NFT contract id */\n  contractId: `ct_${string}`;\n  /** Template edition details */\n  edition?: Record<string, unknown>;\n  /** Log index of the TemplateCreation */\n  logIdx: number;\n  /** Template id of AEX-141 tokens */\n  templateId: number;\n  /** Transaction hash of the TemplateCreation */\n  txHash: `th_${string}`;\n}\n\n/** Response Schema for template tokens of a AEX-141 contract */\nexport interface Aex141TemplateTokensResponse {\n  /** Owner wallet address */\n  ownerId: `ak_${string}`;\n  /** Mint event index */\n  logIdx: number;\n  /** NFT id */\n  tokenId: number;\n  /** Mint transaction hash */\n  txHash: `th_${string}`;\n}\n\n/** Response schema for AEX-141 token detail */\nexport interface Aex141TokenDetailResponse {\n  /** NFT contract id */\n  contractId: `ct_${string}`;\n  /** Account address */\n  ownerId: `ak_${string}`;\n  /** Non-fungible token id */\n  tokenId: number;\n  /** The metadata associated to this NFT */\n  metadata: Record<string, unknown>;\n}\n\n/** AEx141 Transfer */\nexport interface Aex141TransferEvent {\n  blockHeight: number;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  logIdx: number;\n  microIndex: number;\n  microTime: Date;\n  /** Account address */\n  recipient: `ak_${string}`;\n  /** Account address */\n  sender: `ak_${string}`;\n  tokenId: number;\n  /** Transaction hash */\n  txHash: `th_${string}`;\n}\n\n/** Response Schema for AEX9 contract */\nexport interface Aex9Response {\n  /** Id of the contract of the AEX9 tokens */\n  contractId: `ct_${string}`;\n  /** Transaction hash of the contract creation */\n  contractTxHash: `th_${string}`;\n  /** Token supply right after contract's creation */\n  initialSupply: bigint;\n  /** Token supply updated on event basis (Mint, Burn, Swap) */\n  eventSupply: bigint;\n  /** The number of decimals for AEX9 token */\n  decimals: number;\n  /** Extensions implemented by the contract */\n  extensions?: string[];\n  /** Count of accounts having balance (nil when contract is not complaint) */\n  holders: number;\n  /** Name of AEX9 token */\n  name: string;\n  /** Symbol of AEX9 token */\n  symbol: string;\n  /** True if the contract is invalid */\n  invalid: boolean;\n}\n\nexport interface Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema {\n  data: number;\n}\n\n/** Response Schema for AEX9 contract balances responses */\nexport interface Aex9ContractBalanceResponse {\n  /** The wallet pubkey */\n  accountId: `ak_${string}`;\n  /** The balance amount */\n  amount: bigint;\n  /** The block hash, indicating a state of a balance for that block */\n  blockHash: number;\n  /** The contract id of given token */\n  contractId: number;\n  /** The block height, indicating a state of a balance for that block height */\n  height: number;\n  /** The hash of the last transaction that changed the balance */\n  lastTxHash: `th_${string}`;\n  /** The index of the event log that changed the balance */\n  lastLogIdx: number;\n}\n\nexport interface PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema {\n  /** The account present on a AEX9 */\n  account: `ak_${string}`;\n  /** The amount of AEX9 token */\n  amount: bigint;\n  /** The contract id of given token */\n  contract: `ct_${string}`;\n}\n\nexport interface Get200ApplicationJsonAllOfPropertiesItemsItem {\n  /** The account present on a AEX9 */\n  account: `ak_${string}`;\n  /** The amount of AEX9 token */\n  amount: bigint;\n  /** The contract id of given token */\n  contract: `ct_${string}`;\n  /** The block height, indicating a state of a balance for that block height */\n  height: number;\n}\n\nexport interface Channel {\n  /** Channel is active */\n  active: boolean;\n  /** Balance currently left in the channel */\n  amount: bigint;\n  /** Channel ID */\n  channel: `ch_${string}`;\n  /** Minimum amount for sufficient funds */\n  channelReserve: bigint;\n  /** Pubkeys of delegated accounts */\n  delegateIds: Record<string, unknown>;\n  /** Channel initiator pubkey */\n  initiator: `ak_${string}`;\n  /** Amount owned by initiator */\n  initiatorAmount: bigint;\n  /** The last height in which the channel was updated on chain */\n  lastUpdatedHeight: number;\n  /** The transaction type of the last transaction that updated the channel */\n  lastUpdatedTxType: string;\n  lastUpdatedTime: Date;\n  /** The hash of the last transaction that updated the channel */\n  lastUpdatedTxHash: `th_${string}`;\n  /** Amount of heights locked after a solo closing */\n  lockPeriod: number;\n  /** Non-inclusive height until which the channel is locked */\n  lockedUntil: number;\n  /** The channel responder pubkey */\n  responder: `ak_${string}`;\n  /** Amount owned by responder */\n  responderAmount: bigint;\n  /** Round after last transaction */\n  round: number;\n  /** Round of last solo transaction */\n  soloRound: number;\n  /** The hash of the current channel state */\n  stateHash: `st_${string}`;\n  /** The amount of times the channel's been updated by any of the channel transactions */\n  updatesCount: number;\n}\n\n/** ContractCall */\nexport interface ContractCall {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  /** Transaction hash */\n  callTxHash: `th_${string}`;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  /** Transaction hash */\n  contractTxHash: `th_${string}`;\n  function: string;\n  height: number;\n  /** Any object */\n  internalTx: Record<string, unknown>;\n  localIdx: number;\n  microIndex: number;\n}\n\n/** ContractLog */\nexport interface ContractLog {\n  args: string[];\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  blockTime: Date;\n  /** Transaction hash */\n  callTxHash: `th_${string}`;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  /** Transaction hash */\n  contractTxHash: `th_${string}`;\n  data: string;\n  eventHash: string;\n  eventName: string | null;\n  /** Contract address */\n  extCallerContractId: `ct_${string}` | null;\n  /** Transaction hash */\n  extCallerContractTxHash: `th_${string}` | null;\n  height: number;\n  logIdx: number;\n  microIndex: number;\n  parentContractId: number | null;\n}\n\n/** Contract creation info */\nexport interface Contract {\n  aexnType: string | null;\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  /** Contract address */\n  contract: `ct_${string}`;\n  /** Transaction hash */\n  sourceTxHash: `th_${string}`;\n  sourceTxType: string;\n  createTx: ContractCreateTx;\n}\n\nexport interface ContractCreateTx {\n  /** Base58Check encoded tagged pubkey */\n  ownerId: string;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  code: string;\n  vmVersion: number;\n  abiVersion: number;\n  deposit: bigint;\n  amount: bigint;\n  gas: number;\n  gasPrice: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base64Check encoded tagged byte array */\n  callData: string;\n}\n\n/** Epoch information */\nexport interface EpochInfo {\n  epoch: number;\n  first: number;\n  last: number;\n  length: number;\n  seed: string;\n  lastPinHeight: number;\n  parentBlockHash: string;\n  lastLeader: string;\n  epochStartTime: number;\n  validators: EpochInfoValidatorsItem[];\n}\n\nexport interface EpochInfoValidatorsItem {\n  validator?: string;\n  stake?: number;\n}\n\n/** Schedule information */\nexport interface Schedule {\n  height: number;\n  leader: string;\n}\n\n/** Validator information */\nexport interface Validator {\n  epoch: number;\n  validator: string;\n  totalStakes: number;\n  delegates: number;\n  rewardsEarned: number;\n  /** Dictionary of <integer> */\n  pinningHistory: { [propertyName: string]: number };\n}\n\n/** Delegate information */\nexport interface Delegate {\n  epoch: number;\n  delegate: string;\n  stake: number;\n  validator: string;\n}\n\nexport interface KeyBlock {\n  /** Base58Check encoded tagged hash */\n  hash: string;\n  height: number;\n  /** Base58Check encoded tagged hash */\n  prevHash: string;\n  /** Base58Check encoded tagged hash */\n  prevKeyHash: string;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  /** Base58Check encoded tagged pubkey */\n  miner: string;\n  /** Base58Check encoded tagged pubkey */\n  beneficiary: string;\n  target: number;\n  pow?: number[];\n  nonce?: number;\n  time: Date;\n  version: number;\n  /** Base64Check encoded tagged byte array */\n  info: string;\n}\n\nexport interface MicroBlockHeader {\n  /** Base58Check encoded tagged hash */\n  hash: string;\n  height: number;\n  /** Base58Check encoded tagged hash */\n  pofHash: string;\n  /** Base58Check encoded tagged hash */\n  prevHash: string;\n  /** Base58Check encoded tagged hash */\n  prevKeyHash: string;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  /** Base58Check encoded tagged hash */\n  txsHash: string;\n  /** Base58Check encoded tagged value */\n  signature: string;\n  time: Date;\n  version: number;\n}\n\n/** Transaction */\nexport interface Transaction {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  /** The block height */\n  blockHeight: number;\n  /** Encoded transaction */\n  encodedTx: `tx_${string}`;\n  /** Transaction hash */\n  hash: `th_${string}`;\n  /** The micro block index */\n  microIndex: number;\n  microTime: Date;\n  /** The signatures */\n  signatures: string[];\n  /** The transaction */\n  tx: Tx;\n}\n\n/** Name */\nexport interface Name {\n  active: boolean;\n  /** AENS name hash */\n  hash: `nm_${string}`;\n  activeFrom: number;\n  approximateActivationTime: Date;\n  approximateExpireTime: Date;\n  expireHeight: number;\n  pointers: NamePointer[];\n  /** Auction */\n  auction: Auction | null;\n  auctionTimeout: number;\n  ownership: NameOwnership;\n  /** AENS name */\n  name: `${string}.chain`;\n  nameFee: bigint;\n  revoke: NameTx | null;\n  claimsCount?: number;\n}\n\n/** Auction */\nexport interface Auction {\n  auctionEnd: number;\n  activationTime: Date;\n  approximateExpireTime: Date;\n  lastBid: AuctionLastBid;\n  /** AENS name */\n  name: `${string}.chain`;\n  nameFee: bigint;\n  claimsCount: number;\n}\n\nexport interface AuctionLastBid {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  blockHeight: number;\n  /** Encoded transaction */\n  encodedTx: `tx_${string}`;\n  /** Transaction hash */\n  hash: `th_${string}`;\n  microIndex: number;\n  microTime: Date;\n  signatures: string[];\n  tx: AuctionLastBidTx;\n}\n\nexport interface Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1 {\n  /** AENS name hash */\n  nameId: `nm_${string}`;\n  type: string;\n  version: number;\n}\n\nexport interface NameOwnership {\n  /** Account address */\n  current?: `ak_${string}`;\n  /** Account address */\n  original?: `ak_${string}`;\n}\n\nexport interface NameTx {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  blockHeight: number;\n  /** Transaction hash */\n  hash: `th_${string}`;\n  microIndex: number;\n  microTime: Date;\n  signatures: string[];\n  tx: NameTxTx;\n}\n\nexport interface NameRevokeTx {\n  /** Base58Check encoded tagged value */\n  nameId: string;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n}\n\nexport interface Components171VsjiSchemasNametxPropertiesTxAllof1 {\n  type: string;\n  version: number;\n}\n\nexport interface PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema {\n  data: NameClaim[];\n}\n\n/** Name Transfer */\nexport interface NameTransfer {\n  activeFrom: number;\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  height: number;\n  /** Transaction hash */\n  sourceTxHash: `th_${string}`;\n  sourceTxType: string;\n  tx: NameTransferTx;\n  internalSource?: boolean;\n}\n\nexport interface NameTransferTx {\n  /** Base58Check encoded tagged value */\n  nameId: string;\n  /** Base58Check encoded tagged pubkey */\n  recipientId: string;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n}\n\n/** Name Update */\nexport interface NameUpdate {\n  activeFrom: number;\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  height: number;\n  /** Transaction hash */\n  sourceTxHash: `th_${string}`;\n  sourceTxType: string;\n  tx: NameUpdateTx;\n  internalSource?: boolean;\n}\n\nexport interface Oracle {\n  /** The oracle active status */\n  active: boolean;\n  /** The block height when the oracle became active */\n  activeFrom: number;\n  approximateExpireTime: Date;\n  /** The block height when the oracle expires */\n  expireHeight: number;\n  registerTime: Date;\n  /** The transaction hash in which the oracle was registered, use `register.hash` instead */\n  registerTxHash: `th_${string}`;\n  /** The oracle's query and response formats */\n  format: OracleFormat;\n  /** Oracle address */\n  oracle: `ok_${string}`;\n  /** The query fee */\n  queryFee: bigint;\n  register: OracleTx;\n}\n\n/** The oracle's query and response formats */\nexport interface OracleFormat {\n  /** The query format */\n  query: string;\n  /** The response format */\n  response: string;\n}\n\nexport interface OracleTx {\n  /** Micro block hash */\n  blockHash: `mh_${string}`;\n  blockHeight: number;\n  /** Transaction hash */\n  hash: `th_${string}`;\n  microIndex: number;\n  microTime: Date;\n  signatures: string[];\n  /** Encoded transaction */\n  encodedTx: `tx_${string}`;\n  tx: OracleTxTx;\n}\n\nexport interface OracleRegisterTx {\n  queryFormat: string;\n  responseFormat: string;\n  queryFee: bigint;\n  oracleTtl: Ttl;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n  fee: bigint;\n  ttl?: number;\n  abiVersion?: number;\n}\n\nexport interface Components1Viuqa3SchemasOracletxPropertiesTxAllof1 {\n  /** use `account_id` instead */\n  oracleId: `ok_${string}`;\n  type: string;\n  version: number;\n  /** use the outer `hash` instead */\n  txHash: `th_${string}`;\n}\n\nexport interface OracleExtend {\n  /** The hash of the block in which it occurred */\n  blockHash: `mh_${string}`;\n  /** The block height */\n  height: number;\n  /** The hash of the transaction in which the extend was done */\n  sourceTxHash: `th_${string}`;\n  /** The type of the transaction in which the extend was done, it can be either via a contract call or an extend transaction */\n  sourceTxType: string;\n  tx: OracleExtendTx;\n}\n\nexport interface OracleExtendTx {\n  fee: bigint;\n  oracleTtl: RelativeTTL;\n  /** Base58Check encoded tagged pubkey */\n  oracleId: string;\n  nonce?: number;\n  ttl?: number;\n}\n\nexport interface OracleQuery {\n  /** The hash of the block in which it occurred */\n  blockHash: `mh_${string}`;\n  blockTime: Date;\n  /** The block height */\n  height: number;\n  /** Oracle query ID */\n  queryId: `oq_${string}`;\n  response?: OracleResponse;\n  /** The hash of the transaction in which the query was created */\n  sourceTxHash: `th_${string}`;\n  /** The type of the transaction in which the query was created, it can be either via a contract call or a query transaction */\n  sourceTxType: string;\n  /** The transaction fee */\n  fee: bigint;\n  /** The nonce */\n  nonce: number;\n  /** The oracle ID of this query */\n  oracleId: `ok_${string}`;\n  /** Base64 encoding of the query */\n  query: string;\n  /** The query fee */\n  queryFee: bigint;\n  /** Expiration of the query */\n  queryTtl: Record<string, unknown>;\n  /** Expiration of the response */\n  responseTtl: Record<string, unknown>;\n  /** The creator of the query */\n  senderId: `ak_${string}`;\n  /** Transaction TTL */\n  ttl: number;\n}\n\nexport interface OracleResponse {\n  /** The hash of the block in which it occurred */\n  blockHash: `mh_${string}`;\n  blockTime: Date;\n  /** The block height */\n  height: number;\n  /** Oracle query ID */\n  queryId: `oq_${string}`;\n  query: OracleQuery;\n  /** The hash of the transaction in which the response was created */\n  sourceTxHash: `th_${string}`;\n  /** The type of the transaction in which the response was created, it can be either via a contract call or a respond transaction */\n  sourceTxType: string;\n  /** The transaction fee */\n  fee: bigint;\n  /** The nonce */\n  nonce: number;\n  /** The oracle ID of this response */\n  oracleId: `ok_${string}`;\n  /** Base64 encoding of the response */\n  response: string;\n  /** Expiration of the response */\n  responseTtl: Record<string, unknown>;\n  /** Transaction TTL */\n  ttl: number;\n}\n\n/** Stats */\nexport interface Stats {\n  /** The number of miners */\n  minersCount?: number;\n  /** The fees trend */\n  feesTrend?: number;\n  /** The last 24hs average transaction fees */\n  last24HsAverageTransactionFees?: number;\n  /** The last 24hs transactions */\n  last24HsTransactions?: number;\n  /** The max transactions per second */\n  maxTransactionsPerSecond?: number;\n  /** The max transactions per second block hash */\n  maxTransactionsPerSecondBlockHash?: `kh_${string}`;\n  /** The transactions trend */\n  transactionsTrend?: number;\n}\n\n/** Stat */\nexport interface Stat {\n  /** The statistic count */\n  count: number;\n  /** The statistic start date */\n  startDate: string;\n  /** The statistic end date (not taken into account) */\n  endDate: string;\n}\n\n/** DeltaStat */\nexport interface DeltaStat {\n  /** The generation */\n  height: number;\n  /** The number of auctions started */\n  auctionsStarted: number;\n  /** The block reward */\n  blockReward: bigint;\n  /** The amount burned in auctions */\n  burnedInAuctions: bigint;\n  /** The number of channels closed */\n  channelsClosed: number;\n  /** The number of channels opened */\n  channelsOpened: number;\n  /** The number of contracts created */\n  contractsCreated: number;\n  /** The dev reward */\n  devReward: bigint;\n  /** The number of names activated */\n  namesActivated: number;\n  /** The number of names expired */\n  namesExpired: number;\n  /** The number of names revoked */\n  namesRevoked: number;\n  /** The number of oracles expired */\n  oraclesExpired: number;\n  /** The number of oracles registered */\n  oraclesRegistered: number;\n  /** The last transaction hash for this height */\n  lastTxHash: `th_${string}`;\n  /** The amount locked in auctions */\n  lockedInAuctions: bigint;\n  /** The amount locked in channels */\n  lockedInChannels: bigint;\n}\n\n/** Miner */\nexport interface Miner {\n  /** The miner (beneficiary) address */\n  miner: `ak_${string}`;\n  /** The accumulated reward on the miner (beneficiary) address */\n  totalReward: bigint;\n}\n\n/** TotalStat */\nexport interface TotalStat {\n  /** The generation */\n  height: number;\n  /** The number of contracts */\n  contracts: number;\n  /** The amount locked in auctions */\n  lockedInAuctions: bigint;\n  /** The amount burned in auctions */\n  burnedInAuctions: bigint;\n  /** The amount locked in channels */\n  lockedInChannels: bigint;\n  /** The number of active auctions */\n  activeAuctions: number;\n  /** The number of active names */\n  activeNames: number;\n  /** The number of inactive names */\n  inactiveNames: number;\n  /** The number of active oracles */\n  activeOracles: number;\n  /** The number of inactive oracles */\n  inactiveOracles: number;\n  /** The number of open channels */\n  openChannels: number;\n  /** The sum of block rewards */\n  sumBlockReward: bigint;\n  /** The sum of dev rewards */\n  sumDevReward: bigint;\n  /** The total token supply */\n  totalTokenSupply: bigint;\n  /** The last transaction hash for this height */\n  lastTxHash: `th_${string}`;\n}\n\nexport interface Status {\n  mdwAsyncTasks: StatusMdwAsyncTasks;\n  /** The approximate number of generations synced per minute on middleware */\n  mdwGensPerMinute: number;\n  /** The top generation up to which the middleware was synced */\n  mdwHeight: number;\n  /** The last middleware migration ran */\n  mdwLastMigration: number;\n  /** The middleware's git revision of the latest commit applied */\n  mdwRevision: string;\n  /** true if middleware was synced up to the latest node block */\n  mdwSynced: boolean;\n  /** true if middleware is syncing (i.e. it didn't stop due to an error) */\n  mdwSyncing: boolean;\n  /** index of the latest synced transaction */\n  mdwTxIndex: number;\n  /** The middleware's version */\n  mdwVersion: string;\n  /** The node generation of the last block synced */\n  nodeHeight: number;\n  /** The percentage of generations synced on the node */\n  nodeProgress: number;\n  /** The node's git revision of the latest commit applied */\n  nodeRevision: string;\n  /** If true, the node is still processing additional blocks to reach the latest one */\n  nodeSyncing: boolean;\n  /** The node's version */\n  nodeVersion: string;\n}\n\nexport interface StatusMdwAsyncTasks {\n  longTasks: number;\n  producerBuffer: number;\n  totalPending: number;\n}\n\n/** Pending Transaction */\nexport interface PendingTransaction {\n  /** The block hash, but since it's pending it's always \"none\" */\n  blockHash: string;\n  /** The block height, but since it's pending it's always -1 */\n  blockHeight: number;\n  /** Encoded transaction */\n  encodedTx: `tx_${string}`;\n  /** The failures count */\n  failures: number;\n  /** Transaction hash */\n  hash: `th_${string}`;\n  /** The signatures */\n  signatures: string[];\n  /** The transaction */\n  tx: Tx;\n}\n\nexport interface Transfer {\n  /** Account address */\n  accountId: `ak_${string}`;\n  amount: bigint;\n  height: number;\n  kind: TransferKind;\n  /** Micro block hash */\n  refBlockHash: `mh_${string}` | null;\n  /** Transaction hash */\n  refTxHash: `th_${string}` | null;\n  refTxType: string | null;\n}\n\n/** AEx9 Transfer */\nexport interface Aex9TransferEvent {\n  amount: bigint;\n  blockHeight: number;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  logIdx: number;\n  microIndex: number;\n  microTime: Date;\n  /** Account address */\n  recipientId: `ak_${string}`;\n  /** Account address */\n  senderId: `ak_${string}`;\n  /** Transaction hash */\n  txHash: `th_${string}`;\n}\n\n/** Response Schema for AEX9 transfer responses */\nexport interface Aex9TransferResponse {\n  /** Transfer amount of AEX9 token */\n  amount: bigint;\n  /** The block height */\n  blockHeight: number;\n  /** AEX9 token transfer index */\n  callTxi: number;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  /** Log index */\n  logIdx: number;\n  microTime: Date;\n  /** Recipient of AEX9 transfer */\n  recipient: `ak_${string}`;\n  /** Sender of AEX9 transfer */\n  sender: `ak_${string}`;\n}\n\n/** Contract call made inside of a contract call or contract create transaction */\nexport interface InternalContractCallEvent {\n  /** The contract creation transaction hash */\n  contractTxHash: `th_${string}`;\n  /** Contract address */\n  contractId: `ct_${string}`;\n  /** The contract call transaction hash */\n  callTxHash?: `th_${string}`;\n  /** The name of the function */\n  function: string;\n  /** The transaction object */\n  internalTx: Record<string, unknown>;\n  /** The height in which the internal call happened */\n  height: number;\n  /** The micro block index */\n  microIndex: number;\n  /** The micro block hash in which the transaction happened */\n  blockHash: `mh_${string}`;\n}\n\n/** Internal transfer */\nexport interface InternalTransferEvent {\n  /** The amount of AE tokens */\n  amount: bigint;\n  /** The kind of internal transfer */\n  kind: InternalTransferEventKind;\n  /** The transaction hash of a transaction related to the internal transfer */\n  refTxHash: `th_${string}`;\n}\n\n/** Name claim */\nexport interface NameClaimEvent {\n  /** The hash of the transaction (either a name claim or a contract call transaction) */\n  txHash: `th_${string}`;\n  /** The claim transaction (internal or not) */\n  tx: Record<string, unknown>;\n}\n\nexport interface SpendTx {\n  /** Base58Check encoded tagged pubkey */\n  recipientId: string;\n  amount: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  senderId: string;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n}\n\nexport interface ChannelCreateTx {\n  /** Base58Check encoded tagged pubkey */\n  initiatorId: string;\n  initiatorAmount: bigint;\n  /** Base58Check encoded tagged pubkey */\n  responderId: string;\n  responderAmount: bigint;\n  channelReserve: bigint;\n  lockPeriod: number;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  delegateIds?: Delegates;\n}\n\nexport interface ChannelDepositTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  amount: bigint;\n  ttl?: number;\n  fee: bigint;\n  nonce: number;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  round: number;\n}\n\nexport interface ChannelWithdrawTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  toId: string;\n  amount: bigint;\n  ttl?: number;\n  fee: bigint;\n  nonce: number;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  round: number;\n}\n\nexport interface ChannelForceProgressTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n  round: number;\n  update: OffChainUpdate;\n  /** Base58Check encoded tagged hash */\n  stateHash: string;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  offchainTrees?: string;\n}\n\nexport interface ChannelCloseMutualTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  initiatorAmountFinal: number;\n  responderAmountFinal: number;\n  ttl?: number;\n  fee: bigint;\n  nonce: number;\n}\n\nexport interface ChannelCloseSoloTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  poi: string;\n}\n\nexport interface ChannelSlashTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  poi: string;\n}\n\nexport interface ChannelSettleTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  initiatorAmountFinal: number;\n  responderAmountFinal: number;\n  ttl?: number;\n  fee: bigint;\n  nonce: number;\n}\n\nexport interface ChannelSnapshotSoloTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n}\n\nexport interface ChannelSetDelegatesTx {\n  /** Base58Check encoded tagged pubkey */\n  channelId: string;\n  /** Base58Check encoded tagged pubkey */\n  fromId: string;\n  initiatorDelegateIds: string[];\n  responderDelegateIds: string[];\n  /** Base58Check encoded tagged pubkey */\n  stateHash: string;\n  round: number;\n  /** Base64Check encoded tagged byte array */\n  payload: string;\n  ttl?: number;\n  fee: bigint;\n  nonce?: number;\n}\n\nexport interface OracleQueryTx {\n  /** Base58Check encoded tagged pubkey */\n  oracleId: string;\n  query: string;\n  queryFee: bigint;\n  queryTtl: Ttl;\n  responseTtl: RelativeTTL;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  senderId: string;\n  nonce?: number;\n}\n\nexport interface OracleRespondTx {\n  /** Base58Check encoded tagged value */\n  queryId: string;\n  response: string;\n  responseTtl: RelativeTTL;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  oracleId: string;\n  nonce?: number;\n}\n\nexport interface NamePreclaimTx {\n  /** Base58Check encoded tagged value */\n  commitmentId: string;\n  fee: bigint;\n  ttl?: number;\n  /** Base58Check encoded tagged pubkey */\n  accountId: string;\n  nonce?: number;\n}\n\nexport interface ContractCallTx {\n  /** Base58Check encoded tagged pubkey */\n  callerId: string;\n  nonce?: number;\n  /** Base58Check encoded tagged pubkey */\n  contractId: string;\n  abiVersion: number;\n  fee: bigint;\n  ttl?: number;\n  amount: bigint;\n  gas: number;\n  gasPrice: bigint;\n  /** Base64Check encoded tagged byte array */\n  callData: string;\n}\n\nexport interface GAAttachTx {\n  /** Base58Check encoded tagged pubkey */\n  ownerId: string;\n  nonce?: number;\n  /** Base64Check encoded tagged byte array */\n  code: string;\n  vmVersion: number;\n  abiVersion: number;\n  gas: number;\n  gasPrice: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base64Check encoded tagged byte array */\n  callData: string;\n  /** Contract authorization function hash (hex encoded) */\n  authFun: string;\n}\n\nexport interface GAMetaTx {\n  /** Base58Check encoded tagged pubkey */\n  gaId: string;\n  abiVersion: number;\n  gas: number;\n  gasPrice: bigint;\n  fee: bigint;\n  ttl?: number;\n  /** Base64Check encoded tagged byte array */\n  authData: string;\n  tx: SignedTx;\n}\n\nexport interface PayingForTx {\n  /** Base58Check encoded tagged pubkey */\n  payerId: string;\n  fee: bigint;\n  nonce?: number;\n  tx: SignedTx;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport interface AuctionLastBidTx\n  extends NameClaimTx,\n    Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1 {}\n\n/** Key Block Extended */\nexport interface KeyBlockExtended extends KeyBlock {\n  /** The beneficiary reward */\n  beneficiaryReward: number;\n  /**  */\n  flags: `ba_${string}`;\n  /** The number of micro blocks */\n  microBlocksCount: number;\n  /** The number of transactions */\n  transactionsCount: number;\n}\n\n/** Micro Block Extended */\nexport interface MicroBlockExtended extends MicroBlockHeader {\n  /** The index of the micro-block on the micro-block height, starting from 0 */\n  microBlockIndex: number;\n  /** The number of transactions */\n  transactionsCount: number;\n  /** The gas used by the microblock */\n  gas: number;\n  /**  */\n  flags: `ba_${string}`;\n}\n\nexport interface NameTxTx\n  extends NameRevokeTx,\n    Components171VsjiSchemasNametxPropertiesTxAllof1 {}\n\nexport interface OracleTxTx\n  extends OracleRegisterTx,\n    Components1Viuqa3SchemasOracletxPropertiesTxAllof1 {}\n\n/** Defines values for Enum0. */\nexport type Enum0 =\n  | \"transactions\"\n  | \"aexn\"\n  | \"aex9\"\n  | \"aex141\"\n  | \"contract\"\n  | \"transfers\"\n  | \"claims\"\n  | \"swaps\";\n/** Defines values for Enum1. */\nexport type Enum1 = \"forward\" | \"backward\";\n/** Defines values for ActivityType. */\nexport type ActivityType =\n  | \"SpendTxEvent\"\n  | \"OracleRegisterTxEvent\"\n  | \"OracleExtendTxEvent\"\n  | \"OracleQueryTxEvent\"\n  | \"OracleResponseTxEvent\"\n  | \"NamePreclaimTxEvent\"\n  | \"NameClaimTxEvent\"\n  | \"NameTransferTxEvent\"\n  | \"NameUpdateTxEvent\"\n  | \"NameRevokeTxEvent\"\n  | \"ContractCreateTxEvent\"\n  | \"ContractCallTxEvent\"\n  | \"GaAttachTxEvent\"\n  | \"GaMetaTxEvent\"\n  | \"ChannelCreateTxEvent\"\n  | \"ChannelDepositTxEvent\"\n  | \"ChannelWithdrawTxEvent\"\n  | \"ChannelForceProgressTxEvent\"\n  | \"ChannelCloseMutualTxEvent\"\n  | \"ChannelCloseSoloTxEvent\"\n  | \"ChannelSlashTxEvent\"\n  | \"ChannelSettleTxEvent\"\n  | \"ChannelSnapshotSoloTxEvent\"\n  | \"ChannelSetDelegatesTxEvent\"\n  | \"ChannelOffchainTxEvent\"\n  | \"ChannelClientReconnectTxEvent\"\n  | \"PayingForTxEvent\";\n/** Defines values for TTLType. */\nexport type TTLType = \"delta\" | \"block\";\n/** Defines values for TxType. */\nexport type TxType =\n  | \"SpendTx\"\n  | \"ChannelCreateTx\"\n  | \"ChannelDepositTx\"\n  | \"ChannelWithdrawTx\"\n  | \"ChannelForceProgressTx\"\n  | \"ChannelCloseMutualTx\"\n  | \"ChannelCloseSoloTx\"\n  | \"ChannelSlashTx\"\n  | \"ChannelSettleTx\"\n  | \"ChannelSnapshotSoloTx\"\n  | \"ChannelSetDelegatesTx\"\n  | \"OracleRegisterTx\"\n  | \"OracleExtendTx\"\n  | \"OracleQueryTx\"\n  | \"OracleRespondTx\"\n  | \"NamePreclaimTx\"\n  | \"NameClaimTx\"\n  | \"NameUpdateTx\"\n  | \"NameTransferTx\"\n  | \"NameRevokeTx\"\n  | \"ContractCreateTx\"\n  | \"ContractCallTx\"\n  | \"GAAttachTx\"\n  | \"GAMetaTx\"\n  | \"PayingForTx\";\n/** Defines values for ActivityPayloadKind. */\nexport type ActivityPayloadKind =\n  | \"accounts_extra_lima\"\n  | \"accounts_fortuna\"\n  | \"accounts_genesis\"\n  | \"accounts_lima\"\n  | \"accounts_minerva\"\n  | \"contracts_lima\"\n  | \"reward_dev\"\n  | \"reward_block\"\n  | \"fee_refund_oracle\"\n  | \"fee_lock_name\"\n  | \"fee_refund_name\"\n  | \"fee_spend_name\"\n  | \"reward_oracle\";\n/** Defines values for Enum6. */\nexport type Enum6 = \"forward\" | \"backward\";\n/** Defines values for Enum7. */\nexport type Enum7 = \"forward\" | \"backward\";\n/** Defines values for DexSwapAction. */\nexport type DexSwapAction = \"SWAP\" | \"BUY\" | \"SELL\";\n/** Defines values for Enum9. */\nexport type Enum9 = \"forward\" | \"backward\";\n/** Defines values for Enum10. */\nexport type Enum10 = \"forward\" | \"backward\";\n/** Defines values for Enum11. */\nexport type Enum11 = \"creation\" | \"name\" | \"symbol\";\n/** Defines values for Enum12. */\nexport type Enum12 = \"forward\" | \"backward\";\n/** Defines values for Enum13. */\nexport type Enum13 = \"forward\" | \"backward\";\n/** Defines values for Enum14. */\nexport type Enum14 = \"forward\" | \"backward\";\n/** Defines values for Enum15. */\nexport type Enum15 = \"forward\" | \"backward\";\n/** Defines values for Enum16. */\nexport type Enum16 = \"forward\" | \"backward\";\n/** Defines values for Enum17. */\nexport type Enum17 = \"creation\" | \"name\" | \"symbol\";\n/** Defines values for Enum18. */\nexport type Enum18 = \"forward\" | \"backward\";\n/** Defines values for Enum19. */\nexport type Enum19 = \"forward\" | \"backward\";\n/** Defines values for Enum20. */\nexport type Enum20 = \"forward\" | \"backward\";\n/** Defines values for Enum21. */\nexport type Enum21 = \"active\" | \"inactive\";\n/** Defines values for Enum22. */\nexport type Enum22 = \"forward\" | \"backward\";\n/** Defines values for Enum23. */\nexport type Enum23 = \"forward\" | \"backward\";\n/** Defines values for Enum24. */\nexport type Enum24 = \"forward\" | \"backward\";\n/** Defines values for Enum25. */\nexport type Enum25 = \"forward\" | \"backward\";\n/** Defines values for Enum26. */\nexport type Enum26 = \"forward\" | \"backward\";\n/** Defines values for Enum27. */\nexport type Enum27 = \"forward\" | \"backward\";\n/** Defines values for Enum28. */\nexport type Enum28 = \"forward\" | \"backward\";\n/** Defines values for Enum29. */\nexport type Enum29 = \"forward\" | \"backward\";\n/** Defines values for Enum30. */\nexport type Enum30 = \"forward\" | \"backward\";\n/** Defines values for Enum31. */\nexport type Enum31 = \"forward\" | \"backward\";\n/** Defines values for Enum32. */\nexport type Enum32 = \"forward\" | \"backward\";\n/** Defines values for Enum33. */\nexport type Enum33 = \"forward\" | \"backward\";\n/** Defines values for Enum34. */\nexport type Enum34 = \"forward\" | \"backward\";\n/** Defines values for Enum35. */\nexport type Enum35 = \"forward\" | \"backward\";\n/** Defines values for Enum36. */\nexport type Enum36 = \"forward\" | \"backward\";\n/** Defines values for Enum37. */\nexport type Enum37 = \"forward\" | \"backward\";\n/** Defines values for Enum38. */\nexport type Enum38 = \"forward\" | \"backward\";\n/** Defines values for Enum39. */\nexport type Enum39 = \"forward\" | \"backward\";\n/** Defines values for Enum40. */\nexport type Enum40 = \"forward\" | \"backward\";\n/** Defines values for Enum41. */\nexport type Enum41 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum42. */\nexport type Enum42 = \"forward\" | \"backward\";\n/** Defines values for Enum43. */\nexport type Enum43 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum44. */\nexport type Enum44 = \"forward\" | \"backward\";\n/** Defines values for Enum45. */\nexport type Enum45 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum46. */\nexport type Enum46 = \"key\" | \"micro\";\n/** Defines values for Enum47. */\nexport type Enum47 = \"forward\" | \"backward\";\n/** Defines values for Enum48. */\nexport type Enum48 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum49. */\nexport type Enum49 = \"forward\" | \"backward\";\n/** Defines values for Enum50. */\nexport type Enum50 = \"forward\" | \"backward\";\n/** Defines values for Enum51. */\nexport type Enum51 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum52. */\nexport type Enum52 = \"forward\" | \"backward\";\n/** Defines values for Enum53. */\nexport type Enum53 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum54. */\nexport type Enum54 = \"forward\" | \"backward\";\n/** Defines values for Enum55. */\nexport type Enum55 = \"forward\" | \"backward\";\n/** Defines values for Enum56. */\nexport type Enum56 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum57. */\nexport type Enum57 = \"forward\" | \"backward\";\n/** Defines values for Enum58. */\nexport type Enum58 = \"forward\" | \"backward\";\n/** Defines values for Enum59. */\nexport type Enum59 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum60. */\nexport type Enum60 = \"forward\" | \"backward\";\n/** Defines values for Enum61. */\nexport type Enum61 = \"day\" | \"week\" | \"month\";\n/** Defines values for Enum62. */\nexport type Enum62 = \"forward\" | \"backward\";\n/** Defines values for Get0ItemsItem. */\nexport type Get0ItemsItem =\n  | \"channel_close_mutual\"\n  | \"channel_close_solo\"\n  | \"channel_create\"\n  | \"channel_deposit\"\n  | \"channel_force_progress\"\n  | \"channel_offchain\"\n  | \"channel_settle\"\n  | \"channel_slash\"\n  | \"channel_snapshot_solo\"\n  | \"channel_withdraw\"\n  | \"contract_call\"\n  | \"contract_create\"\n  | \"ga_attach\"\n  | \"ga_meta\"\n  | \"name_claim\"\n  | \"name_preclaim\"\n  | \"name_revoke\"\n  | \"name_transfer\"\n  | \"name_update\"\n  | \"oracle_extend\"\n  | \"oracle_query\"\n  | \"oracle_register\"\n  | \"oracle_response\"\n  | \"paying_for\"\n  | \"spend\";\n/** Defines values for Get1ItemsItem. */\nexport type Get1ItemsItem =\n  | \"channel\"\n  | \"contract\"\n  | \"ga\"\n  | \"name\"\n  | \"oracle\"\n  | \"paying_for\"\n  | \"spend\";\n/** Defines values for Enum65. */\nexport type Enum65 = \"forward\" | \"backward\";\n/** Defines values for Enum66. */\nexport type Enum66 = \"forward\" | \"backward\";\n/** Defines values for Enum67. */\nexport type Enum67 = \"forward\" | \"backward\";\n/** Defines values for TransferKind. */\nexport type TransferKind = \"reward_dev\" | \"reward_block\";\n/** Defines values for InternalTransferEventKind. */\nexport type InternalTransferEventKind =\n  | \"accounts_extra_lima\"\n  | \"accounts_fortuna\"\n  | \"accounts_genesis\"\n  | \"accounts_lima\"\n  | \"accounts_minerva\"\n  | \"contracts_lima\"\n  | \"reward_dev\"\n  | \"reward_block\"\n  | \"fee_refund_oracle\"\n  | \"fee_lock_name\"\n  | \"fee_refund_name\"\n  | \"fee_spend_name\"\n  | \"reward_oracle\";\n/** Defines values for Enum70. */\nexport type Enum70 = \"forward\" | \"backward\";\n\n/** Optional parameters. */\nexport interface GetAccountActivitiesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Indicate to filter only activities initiated by the account */\n  ownedOnly?: boolean;\n  /**\n   * Filter by activity type. Supported values:\n   *  * `transactions` - Transactions containing the account in any of the transaction fields\n   *  * `aexn` - AExN (aex9 and aex141) activities\n   *  * `aex9` - AEx9 activities\n   *  * `aex141` - AEx141 activities\n   *  * `contract` - Internal and external contract calls\n   *  * `transfers` - Internal (both gen-based and tx-based) transfers\n   *  * `claims` - Name claims related to the name hash\n   *  * `swaps` - Dex swaps related to the name hash\n   *\n   */\n  type?: Enum0;\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum1;\n}\n\n/** Contains response data for the getAccountActivities operation. */\nexport type GetAccountActivitiesResponse =\n  MiddlewarePage<Activity>;\n\n/** Optional parameters. */\nexport interface GetAex141OwnedTokensOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum6;\n  /** Collection contract pubkey Contract address */\n  contract?: `ct_${string}`;\n}\n\n/** Contains response data for the getAex141OwnedTokens operation. */\nexport type GetAex141OwnedTokensResponse =\n  MiddlewarePage<Aex141TokenResponse>;\n\n/** Optional parameters. */\nexport interface GetAex9AccountBalancesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAex9AccountBalances operation. */\nexport type GetAex9AccountBalancesResponse =\n  MiddlewarePage<Aex9BalanceResponse>;\n\n/** Optional parameters. */\nexport interface GetAccountDexSwapsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum7;\n}\n\n/** Contains response data for the getAccountDexSwaps operation. */\nexport type GetAccountDexSwapsResponse =\n  MiddlewarePage<DexSwap>;\n\n/** Optional parameters. */\nexport interface GetAccountNameClaimsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum9;\n}\n\n/** Contains response data for the getAccountNameClaims operation. */\nexport type GetAccountNameClaimsResponse =\n  MiddlewarePage<NameClaim>;\n\n/** Optional parameters. */\nexport interface GetAccountPointeesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAccountPointees operation. */\nexport type GetAccountPointeesResponse =\n  MiddlewarePage<Pointee>;\n\n/** Optional parameters. */\nexport interface GetAccountTransactionsCountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAccountTransactionsCount operation. */\nexport type GetAccountTransactionsCountResponse =\n  PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema;\n\n/** Optional parameters. */\nexport interface GetSortedAex141ContractsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum10;\n  /** meta info field used on sorting */\n  by?: Enum11;\n  /** Sorts by name or symbol prefix, this is decided by the 'by' field. If it's name, it will sort by name prefix, if it's symbol, it will sort by symbol prefix. */\n  prefix?: string;\n  /** Gets AEX141 contracts with exact name or symbol, this is decided by the 'by' field. If it's name, it will get contracts with exact name, if it's symbol, it will get contracts with exact symbol. */\n  exact?: string;\n}\n\n/** Contains response data for the getSortedAex141Contracts operation. */\nexport type GetSortedAex141ContractsResponse =\n  MiddlewarePage<Aex141Response>;\n\n/** Optional parameters. */\nexport interface GetAex141ContractTemplatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum12;\n}\n\n/** Contains response data for the getAex141ContractTemplates operation. */\nexport type GetAex141ContractTemplatesResponse =\n  MiddlewarePage<Aex141TemplatesResponse>;\n\n/** Optional parameters. */\nexport interface GetAex141TemplateTokensOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum13;\n}\n\n/** Contains response data for the getAex141TemplateTokens operation. */\nexport type GetAex141TemplateTokensResponse =\n  MiddlewarePage<Aex141TemplateTokensResponse>;\n\n/** Optional parameters. */\nexport interface GetAex141ContractTokensOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum14;\n}\n\n/** Contains response data for the getAex141ContractTokens operation. */\nexport type GetAex141ContractTokensResponse =\n  MiddlewarePage<Aex141TokenResponse>;\n\n/** Optional parameters. */\nexport interface GetAex141TokenOwnerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAex141TokenOwner operation. */\nexport type GetAex141TokenOwnerResponse = Aex141TokenDetailResponse;\n\n/** Optional parameters. */\nexport interface GetAex141ContractTransfersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum15;\n  /** From account Account address */\n  from?: `ak_${string}`;\n  /** To account Account address */\n  to?: `ak_${string}`;\n}\n\n/** Contains response data for the getAex141ContractTransfers operation. */\nexport type GetAex141ContractTransfersResponse =\n  MiddlewarePage<Aex141TransferEvent>;\n\n/** Optional parameters. */\nexport interface GetAex141ByContractOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAex141ByContract operation. */\nexport type GetAex141ByContractResponse = Aex141Response;\n\n/** Optional parameters. */\nexport interface GetSortedAex9TokensOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts by name or symbol prefix, this is decided by the 'by' field. If it's name, it will sort by name prefix, if it's symbol, it will sort by symbol prefix. */\n  prefix?: string;\n  /** Gets AEX9 tokens with exact name or symbol, this is decided by the 'by' field. If it's name, it will get tokens with exact name, if it's symbol, it will get tokens with exact symbol. */\n  exact?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum16;\n  /** meta info field used on sorting */\n  by?: Enum17;\n}\n\n/** Contains response data for the getSortedAex9Tokens operation. */\nexport type GetSortedAex9TokensResponse =\n  MiddlewarePage<Aex9Response>;\n\n/** Optional parameters. */\nexport interface GetAex9TokensCountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAex9TokensCount operation. */\nexport type GetAex9TokensCountResponse =\n  Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema;\n\n/** Optional parameters. */\nexport interface GetAex9ContractBalancesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum18;\n  /** Order by */\n  by?: string;\n  /** Block hash Micro block hash */\n  blockHash?: `mh_${string}`;\n}\n\n/** Contains response data for the getAex9ContractBalances operation. */\nexport type GetAex9ContractBalancesResponse =\n  MiddlewarePage<Aex9ContractBalanceResponse>;\n\n/** Optional parameters. */\nexport interface GetAex9ContractAccountBalanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Block hash Micro block hash */\n  hash?: `mh_${string}`;\n}\n\n/** Contains response data for the getAex9ContractAccountBalance operation. */\nexport type GetAex9ContractAccountBalanceResponse =\n  PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema;\n\n/** Optional parameters. */\nexport interface GetAex9ContractAccountBalanceHistoryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum19;\n}\n\n/** Contains response data for the getAex9ContractAccountBalanceHistory operation. */\nexport type GetAex9ContractAccountBalanceHistoryResponse =\n  MiddlewarePage<Get200ApplicationJsonAllOfPropertiesItemsItem>;\n\n/** Optional parameters. */\nexport interface GetAex9ByContractOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getAex9ByContract operation. */\nexport type GetAex9ByContractResponse = Aex9Response;\n\n/** Optional parameters. */\nexport interface GetChannelsOptionalParams extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum20;\n  /** Exclusively filter by active/inactive channels. */\n  state?: Enum21;\n}\n\n/** Contains response data for the getChannels operation. */\nexport type GetChannelsResponse =\n  MiddlewarePage<Channel>;\n\n/** Optional parameters. */\nexport interface GetChannelOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getChannel operation. */\nexport type GetChannelResponse = Channel;\n\n/** Optional parameters. */\nexport interface GetContractCallsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum22;\n}\n\n/** Contains response data for the getContractCalls operation. */\nexport type GetContractCallsResponse =\n  MiddlewarePage<ContractCall>;\n\n/** Optional parameters. */\nexport interface GetContractLogsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Contract that emitted the logs Contract address */\n  contractId?: `ct_${string}`;\n  /** Name of the event */\n  event?: string;\n  /** Prefix of the contract called function */\n  function?: string;\n  /** Prefix of the contract called function */\n  functionPrefix?: string;\n  /** Data prefix from the contract call */\n  data?: string;\n  /** Indicates to format args when event is AEX-N */\n  aexnArgs?: boolean;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum23;\n}\n\n/** Contains response data for the getContractLogs operation. */\nexport type GetContractLogsResponse =\n  MiddlewarePage<ContractLog>;\n\n/** Optional parameters. */\nexport interface GetContractOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getContract operation. */\nexport type GetContractResponse = Contract;\n\n/** Optional parameters. */\nexport interface GetDexSwapsOptionalParams extends coreClient.OperationOptions {\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum24;\n}\n\n/** Contains response data for the getDexSwaps operation. */\nexport type GetDexSwapsResponse =\n  MiddlewarePage<DexSwap>;\n\n/** Optional parameters. */\nexport interface GetDexSwapsByContractIdOptionalParams\n  extends coreClient.OperationOptions {\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum25;\n}\n\n/** Contains response data for the getDexSwapsByContractId operation. */\nexport type GetDexSwapsByContractIdResponse =\n  MiddlewarePage<DexSwap>;\n\n/** Optional parameters. */\nexport interface GetEpochsOptionalParams extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum26;\n  /** Scopes results in a hyperchain epoch range */\n  scope?: string;\n}\n\n/** Contains response data for the getEpochs operation. */\nexport type GetEpochsResponse =\n  MiddlewarePage<EpochInfo>;\n\n/** Optional parameters. */\nexport interface GetEpochTopOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getEpochTop operation. */\nexport type GetEpochTopResponse = EpochInfo;\n\n/** Optional parameters. */\nexport interface GetSchedulesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a hyperchain epoch range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum27;\n}\n\n/** Contains response data for the getSchedules operation. */\nexport type GetSchedulesResponse =\n  MiddlewarePage<Schedule>;\n\n/** Optional parameters. */\nexport interface GetScheduleOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSchedule operation. */\nexport type GetScheduleResponse = Schedule;\n\n/** Optional parameters. */\nexport interface GetValidatorsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a hyperchain epoch range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum28;\n}\n\n/** Contains response data for the getValidators operation. */\nexport type GetValidatorsResponse =\n  MiddlewarePage<Validator>;\n\n/** Optional parameters. */\nexport interface GetValidatorOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getValidator operation. */\nexport type GetValidatorResponse = Validator;\n\n/** Optional parameters. */\nexport interface GetValidatorDelegatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a hyperchain epoch range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum29;\n}\n\n/** Contains response data for the getValidatorDelegates operation. */\nexport type GetValidatorDelegatesResponse =\n  MiddlewarePage<Delegate>;\n\n/** Optional parameters. */\nexport interface GetTopValidatorDelegatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a hyperchain epoch range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum30;\n}\n\n/** Contains response data for the getTopValidatorDelegates operation. */\nexport type GetTopValidatorDelegatesResponse =\n  MiddlewarePage<Delegate>;\n\n/** Optional parameters. */\nexport interface GetKeyBlocksOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum31;\n}\n\n/** Contains response data for the getKeyBlocks operation. */\nexport type GetKeyBlocksResponse =\n  MiddlewarePage<KeyBlockExtended>;\n\n/** Optional parameters. */\nexport interface GetKeyBlockOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getKeyBlock operation. */\nexport type GetKeyBlockResponse = KeyBlockExtended;\n\n/** Optional parameters. */\nexport interface GetKeyBlockMicroBlocksOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum32;\n}\n\n/** Contains response data for the getKeyBlockMicroBlocks operation. */\nexport type GetKeyBlockMicroBlocksResponse =\n  MiddlewarePage<MicroBlockExtended>;\n\n/** Optional parameters. */\nexport interface GetMicroBlockOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getMicroBlock operation. */\nexport type GetMicroBlockResponse = MicroBlockExtended;\n\n/** Optional parameters. */\nexport interface GetMicroBlockTransactionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getMicroBlockTransactions operation. */\nexport type GetMicroBlockTransactionsResponse =\n  MiddlewarePage<Transaction>;\n\n/** Optional parameters. */\nexport interface GetNamesOptionalParams extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Name prefix filter (case insensitive). Requires by=name parameter */\n  prefix?: string;\n  /** Sorting by deactivation, activation or name */\n  by?: string;\n  /** Account that owns the name Account address */\n  ownedBy?: `ak_${string}`;\n  /** Activation state of the name (active or inactive) */\n  state?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum33;\n}\n\n/** Contains response data for the getNames operation. */\nexport type GetNamesResponse =\n  MiddlewarePage<Name>;\n\n/** Optional parameters. */\nexport interface GetNamesAuctionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum34;\n}\n\n/** Contains response data for the getNamesAuctions operation. */\nexport type GetNamesAuctionsResponse =\n  MiddlewarePage<Auction>;\n\n/** Optional parameters. */\nexport interface GetNameAuctionOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum35;\n}\n\n/** Contains response data for the getNameAuction operation. */\nexport type GetNameAuctionResponse = Auction;\n\n/** Optional parameters. */\nexport interface GetNameAuctionClaimsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum36;\n}\n\n/** Contains response data for the getNameAuctionClaims operation. */\nexport type GetNameAuctionClaimsResponse =\n  PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema;\n\n/** Optional parameters. */\nexport interface GetNamesCountOptionalParams\n  extends coreClient.OperationOptions {\n  /** Account that owns the name Account address */\n  ownedBy?: `ak_${string}`;\n}\n\n/** Contains response data for the getNamesCount operation. */\nexport type GetNamesCountResponse = {\n  /** The parsed response body. */\n  body: number;\n};\n\n/** Optional parameters. */\nexport interface GetNameOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getName operation. */\nexport type GetNameResponse = Name;\n\n/** Optional parameters. */\nexport interface GetNameClaimsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum37;\n}\n\n/** Contains response data for the getNameClaims operation. */\nexport type GetNameClaimsResponse =\n  MiddlewarePage<NameClaim>;\n\n/** Optional parameters. */\nexport interface GetNameTransfersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum38;\n}\n\n/** Contains response data for the getNameTransfers operation. */\nexport type GetNameTransfersResponse =\n  MiddlewarePage<NameTransfer>;\n\n/** Optional parameters. */\nexport interface GetNameUpdatesOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum39;\n}\n\n/** Contains response data for the getNameUpdates operation. */\nexport type GetNameUpdatesResponse =\n  MiddlewarePage<NameUpdate>;\n\n/** Optional parameters. */\nexport interface GetOraclesOptionalParams extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** oracle state (active or inactive) */\n  state?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum40;\n}\n\n/** Contains response data for the getOracles operation. */\nexport type GetOraclesResponse =\n  MiddlewarePage<Oracle>;\n\n/** Optional parameters. */\nexport interface GetOracleOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOracle operation. */\nexport type GetOracleResponse = Oracle;\n\n/** Optional parameters. */\nexport interface GetOracleExtendsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOracleExtends operation. */\nexport type GetOracleExtendsResponse =\n  MiddlewarePage<OracleExtend>;\n\n/** Optional parameters. */\nexport interface GetOracleQueriesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOracleQueries operation. */\nexport type GetOracleQueriesResponse =\n  MiddlewarePage<OracleQuery>;\n\n/** Optional parameters. */\nexport interface GetOracleResponsesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getOracleResponses operation. */\nexport type GetOracleResponsesResponse =\n  MiddlewarePage<OracleResponse>;\n\n/** Optional parameters. */\nexport interface GetStatsOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getStats operation. */\nexport type GetStatsResponse = Stats;\n\n/** Optional parameters. */\nexport interface GetActiveAccountsStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum41;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum42;\n}\n\n/** Contains response data for the getActiveAccountsStats operation. */\nexport type GetActiveAccountsStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetAex9TransfersStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum43;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum44;\n}\n\n/** Contains response data for the getAex9TransfersStats operation. */\nexport type GetAex9TransfersStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetBlocksStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum45;\n  /** The type of block. */\n  type?: Enum46;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum47;\n}\n\n/** Contains response data for the getBlocksStats operation. */\nexport type GetBlocksStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetContractsStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum48;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum49;\n}\n\n/** Contains response data for the getContractsStats operation. */\nexport type GetContractsStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetDeltaStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum50;\n}\n\n/** Contains response data for the getDeltaStats operation. */\nexport type GetDeltaStatsResponse =\n  MiddlewarePage<DeltaStat>;\n\n/** Optional parameters. */\nexport interface GetDifficultyStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum51;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum52;\n}\n\n/** Contains response data for the getDifficultyStats operation. */\nexport type GetDifficultyStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetHashrateStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum53;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum54;\n}\n\n/** Contains response data for the getHashrateStats operation. */\nexport type GetHashrateStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetMinerStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum55;\n}\n\n/** Contains response data for the getMinerStats operation. */\nexport type GetMinerStatsResponse =\n  MiddlewarePage<Miner>;\n\n/** Optional parameters. */\nexport interface GetNamesStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum56;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum57;\n}\n\n/** Contains response data for the getNamesStats operation. */\nexport type GetNamesStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetTotalStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum58;\n}\n\n/** Contains response data for the getTotalStats operation. */\nexport type GetTotalStatsResponse =\n  MiddlewarePage<TotalStat>;\n\n/** Optional parameters. */\nexport interface GetTotalAccountsStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum59;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum60;\n}\n\n/** Contains response data for the getTotalAccountsStats operation. */\nexport type GetTotalAccountsStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetTransactionsStatsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The minimum start date in YYYY-MM-DD format. */\n  minStartDate?: string;\n  /** The maximum start date in YYYY-MM-DD format. */\n  maxStartDate?: string;\n  /** The interval in which to return the stats. */\n  intervalBy?: Enum61;\n  /** The type of the transactions */\n  txType?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum62;\n}\n\n/** Contains response data for the getTransactionsStats operation. */\nexport type GetTransactionsStatsResponse =\n  MiddlewarePage<Stat>;\n\n/** Optional parameters. */\nexport interface GetStatusOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getStatus operation. */\nexport type GetStatusResponse = Status;\n\n/** Optional parameters. */\nexport interface GetTransactionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** The contract ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) Contract address */\n  contract?: `ct_${string}`;\n  /** The transaction type. The query allows providing of multiple type parameters. [More info](https://github.com/aeternity/ae_mdw#types) */\n  type?: Get0ItemsItem[];\n  /** The type group. The query allows providing of multiple type group parameters. [More info](https://github.com/aeternity/ae_mdw#types) */\n  typeGroup?: Get1ItemsItem[];\n  /** The account ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) Account address */\n  account?: `ak_${string}`;\n  /** The channel ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) Channel ID */\n  channel?: `ch_${string}`;\n  /** The oracle ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) Oracle address */\n  oracle?: `ok_${string}`;\n  /** The sender ID Account address */\n  senderId?: `ak_${string}`;\n  /** The recipient ID Account address */\n  recipientId?: `ak_${string}`;\n  /** Entrypoint of a contract call */\n  entrypoint?: string;\n  /** Scopes results in a generation or time(unix timestamp) range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum65;\n}\n\n/** Contains response data for the getTransactions operation. */\nexport type GetTransactionsResponse =\n  MiddlewarePage<Transaction>;\n\n/** Optional parameters. */\nexport interface GetTransactionsCountOptionalParams\n  extends coreClient.OperationOptions {\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Type of a transaction */\n  txType?: string;\n  /** The ID of the address/name/oracle/etc Account address */\n  id?: `ak_${string}`;\n}\n\n/** Contains response data for the getTransactionsCount operation. */\nexport type GetTransactionsCountResponse = {\n  /** The parsed response body. */\n  body: number;\n};\n\n/** Optional parameters. */\nexport interface GetPendingTransactionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum66;\n}\n\n/** Contains response data for the getPendingTransactions operation. */\nexport type GetPendingTransactionsResponse =\n  MiddlewarePage<PendingTransaction>;\n\n/** Optional parameters. */\nexport interface GetPendingTransactionsCountOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getPendingTransactionsCount operation. */\nexport type GetPendingTransactionsCountResponse = {\n  /** The parsed response body. */\n  body: number;\n};\n\n/** Optional parameters. */\nexport interface GetTransactionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getTransaction operation. */\nexport type GetTransactionResponse = Transaction;\n\n/** Optional parameters. */\nexport interface GetTransfersOptionalParams\n  extends coreClient.OperationOptions {\n  /** Limit paginated resources (max 100) */\n  limit?: number;\n  /** Scopes results in a generation range */\n  scope?: string;\n  /** Sorts results in forwards or backwards direction */\n  direction?: Enum67;\n}\n\n/** Contains response data for the getTransfers operation. */\nexport type GetTransfersResponse =\n  MiddlewarePage<Transfer>;\n\n/** Optional parameters. */\nexport interface MiddlewareOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"],"mappings":"","ignoreList":[]}