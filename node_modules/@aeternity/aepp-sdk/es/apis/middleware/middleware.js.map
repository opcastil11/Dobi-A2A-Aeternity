{"version":3,"file":"middleware.js","names":["createSerializer","coreClient","Parameters","Mappers","Middleware","ServiceClient","constructor","$host","options","_ref","_options$endpoint","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","getAccountActivities","accountId","sendOperationRequest","getAccountActivitiesOperationSpec","getAex141OwnedTokens","getAex141OwnedTokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAccountDexSwaps","getAccountDexSwapsOperationSpec","getAccountNameClaims","getAccountNameClaimsOperationSpec","getAccountPointees","getAccountPointeesOperationSpec","getAccountTransactionsCount","getAccountTransactionsCountOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141ContractTemplates","contractId","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","templateId","getAex141TemplateTokensOperationSpec","getAex141ContractTokens","getAex141ContractTokensOperationSpec","getAex141TokenOwner","tokenId","getAex141TokenOwnerOperationSpec","getAex141ContractTransfers","getAex141ContractTransfersOperationSpec","getAex141ByContract","id","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractCalls","getContractCallsOperationSpec","getContractLogs","getContractLogsOperationSpec","getContract","getContractOperationSpec","getDexSwaps","getDexSwapsOperationSpec","getDexSwapsByContractId","getDexSwapsByContractIdOperationSpec","getEpochs","getEpochsOperationSpec","getEpochTop","getEpochTopOperationSpec","getSchedules","getSchedulesOperationSpec","getSchedule","height","getScheduleOperationSpec","getValidators","getValidatorsOperationSpec","getValidator","validator","getValidatorOperationSpec","getValidatorDelegates","getValidatorDelegatesOperationSpec","getTopValidatorDelegates","getTopValidatorDelegatesOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlock","hashOrKbi","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","hash","getMicroBlockOperationSpec","getMicroBlockTransactions","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameAuctionClaims","getNameAuctionClaimsOperationSpec","getNamesCount","getNamesCountOperationSpec","getName","getNameOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracles","getOraclesOperationSpec","getOracle","getOracleOperationSpec","getOracleExtends","getOracleExtendsOperationSpec","getOracleQueries","getOracleQueriesOperationSpec","getOracleResponses","getOracleResponsesOperationSpec","getStats","getStatsOperationSpec","getActiveAccountsStats","getActiveAccountsStatsOperationSpec","getAex9TransfersStats","getAex9TransfersStatsOperationSpec","getBlocksStats","getBlocksStatsOperationSpec","getContractsStats","getContractsStatsOperationSpec","getDeltaStats","getDeltaStatsOperationSpec","getDifficultyStats","getDifficultyStatsOperationSpec","getHashrateStats","getHashrateStatsOperationSpec","getMinerStats","getMinerStatsOperationSpec","getNamesStats","getNamesStatsOperationSpec","getTotalStats","getTotalStatsOperationSpec","getTotalAccountsStats","getTotalAccountsStatsOperationSpec","getTransactionsStats","getTransactionsStatsOperationSpec","getStatus","getStatusOperationSpec","getTransactions","getTransactionsOperationSpec","getTransactionsCount","getTransactionsCountOperationSpec","getPendingTransactions","getPendingTransactionsOperationSpec","getPendingTransactionsCount","getPendingTransactionsCountOperationSpec","getTransaction","getTransactionOperationSpec","getTransfers","getTransfersOperationSpec","serializer","path","httpMethod","responses","bodyMapper","Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema","ErrorResponse","isError","queryParameters","ownedOnly","typeParam","limit","scope","direction","urlParameters","headerParameters","accept","Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema","direction1","contract","PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema","PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema","direction2","Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema","NotFoundResponse","direction3","Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema","PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema","Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema","direction4","by","prefix","exact","Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","direction5","Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","direction6","PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema","direction7","Aex141TokenDetailResponse","Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema","direction8","fromParam","to","Aex141Response","Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema","direction9","by1","Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema","Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","direction10","by2","blockHash","PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","direction11","Aex9Response","Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema","direction12","state","Channel","id1","Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema","direction13","Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema","contractId1","event","functionParam","functionPrefix","data","aexnArgs","direction14","Contract","Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema","direction15","PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema","direction16","contractId2","Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema","direction17","scope1","EpochInfo","Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema","direction18","Schedule","Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema","direction19","Validator","Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema","direction20","Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema","direction21","Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema","direction22","KeyBlockExtended","Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","direction23","MicroBlockExtended","hash1","Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema","Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema","ownedBy","state1","direction24","PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema","direction25","Auction","direction26","id2","PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema","direction27","type","name","Name","Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema","direction28","Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema","direction29","Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema","direction30","Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema","direction31","Oracle","id3","Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema","Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema","PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema","Stats","PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema","intervalBy","direction32","Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema","intervalBy1","minStartDate","maxStartDate","direction33","Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema","intervalBy2","typeParam1","direction34","PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema","intervalBy3","direction35","Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema","direction36","Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema","intervalBy4","direction37","PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema","intervalBy5","direction38","PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema","direction39","PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema","intervalBy6","direction40","PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema","direction41","Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema","intervalBy7","direction42","Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema","intervalBy8","txType","direction43","Status","Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema","typeParam2","typeGroup","account","channel","oracle","senderId","recipientId","entrypoint","scope2","direction44","id4","PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema","direction45","Transaction","hash2","PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema","direction46","operationSpecs"],"sources":["../../../src/apis/middleware/middleware.ts"],"sourcesContent":["import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  MiddlewareOptionalParams,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAccountDexSwapsOptionalParams,\n  GetAccountDexSwapsResponse,\n  GetAccountNameClaimsOptionalParams,\n  GetAccountNameClaimsResponse,\n  GetAccountPointeesOptionalParams,\n  GetAccountPointeesResponse,\n  GetAccountTransactionsCountOptionalParams,\n  GetAccountTransactionsCountResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ContractTokensOptionalParams,\n  GetAex141ContractTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractTransfersOptionalParams,\n  GetAex141ContractTransfersResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractCallsOptionalParams,\n  GetContractCallsResponse,\n  GetContractLogsOptionalParams,\n  GetContractLogsResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetDexSwapsOptionalParams,\n  GetDexSwapsResponse,\n  GetDexSwapsByContractIdOptionalParams,\n  GetDexSwapsByContractIdResponse,\n  GetEpochsOptionalParams,\n  GetEpochsResponse,\n  GetEpochTopOptionalParams,\n  GetEpochTopResponse,\n  GetSchedulesOptionalParams,\n  GetSchedulesResponse,\n  GetScheduleOptionalParams,\n  GetScheduleResponse,\n  GetValidatorsOptionalParams,\n  GetValidatorsResponse,\n  GetValidatorOptionalParams,\n  GetValidatorResponse,\n  GetValidatorDelegatesOptionalParams,\n  GetValidatorDelegatesResponse,\n  GetTopValidatorDelegatesOptionalParams,\n  GetTopValidatorDelegatesResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameAuctionClaimsOptionalParams,\n  GetNameAuctionClaimsResponse,\n  GetNamesCountOptionalParams,\n  GetNamesCountResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOracleExtendsOptionalParams,\n  GetOracleExtendsResponse,\n  GetOracleQueriesOptionalParams,\n  GetOracleQueriesResponse,\n  GetOracleResponsesOptionalParams,\n  GetOracleResponsesResponse,\n  GetStatsOptionalParams,\n  GetStatsResponse,\n  GetActiveAccountsStatsOptionalParams,\n  GetActiveAccountsStatsResponse,\n  GetAex9TransfersStatsOptionalParams,\n  GetAex9TransfersStatsResponse,\n  GetBlocksStatsOptionalParams,\n  GetBlocksStatsResponse,\n  GetContractsStatsOptionalParams,\n  GetContractsStatsResponse,\n  GetDeltaStatsOptionalParams,\n  GetDeltaStatsResponse,\n  GetDifficultyStatsOptionalParams,\n  GetDifficultyStatsResponse,\n  GetHashrateStatsOptionalParams,\n  GetHashrateStatsResponse,\n  GetMinerStatsOptionalParams,\n  GetMinerStatsResponse,\n  GetNamesStatsOptionalParams,\n  GetNamesStatsResponse,\n  GetTotalStatsOptionalParams,\n  GetTotalStatsResponse,\n  GetTotalAccountsStatsOptionalParams,\n  GetTotalAccountsStatsResponse,\n  GetTransactionsStatsOptionalParams,\n  GetTransactionsStatsResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTransactionsOptionalParams,\n  GetTransactionsResponse,\n  GetTransactionsCountOptionalParams,\n  GetTransactionsCountResponse,\n  GetPendingTransactionsOptionalParams,\n  GetPendingTransactionsResponse,\n  GetPendingTransactionsCountOptionalParams,\n  GetPendingTransactionsCountResponse,\n  GetTransactionOptionalParams,\n  GetTransactionResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n} from \"./models/index.js\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account activities.\n   * @param accountId The account address Account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    accountId: `ak_${string}`,\n    options?: GetAccountActivitiesOptionalParams,\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountActivitiesOperationSpec,\n    );\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: `ak_${string}`,\n    options?: GetAex141OwnedTokensOptionalParams,\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: `ak_${string}`,\n    options?: GetAex9AccountBalancesOptionalParams,\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAccountDexSwaps(\n    accountId: `ak_${string}`,\n    options?: GetAccountDexSwapsOptionalParams,\n  ): Promise<GetAccountDexSwapsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountDexSwapsOperationSpec,\n    );\n  }\n\n  /**\n   * Get all name claims of an account\n   * @param accountId The account that made the claims Account address\n   * @param options The options parameters.\n   */\n  getAccountNameClaims(\n    accountId: `ak_${string}`,\n    options?: GetAccountNameClaimsOptionalParams,\n  ): Promise<GetAccountNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get account pointees\n   * @param accountId The account that names point to Account address\n   * @param options The options parameters.\n   */\n  getAccountPointees(\n    accountId: `ak_${string}`,\n    options?: GetAccountPointeesOptionalParams,\n  ): Promise<GetAccountPointeesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountPointeesOperationSpec,\n    );\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param accountId The ID of the address/name/oracle/etc Account address\n   * @param options The options parameters.\n   */\n  getAccountTransactionsCount(\n    accountId: `ak_${string}`,\n    options?: GetAccountTransactionsCountOptionalParams,\n  ): Promise<GetAccountTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams,\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec,\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTemplatesOptionalParams,\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id Contract address\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: `ct_${string}`,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams,\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTokens(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTokensOptionalParams,\n  ): Promise<GetAex141ContractTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id Contract address\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: `ct_${string}`,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams,\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 transfers on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTransfers(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTransfersOptionalParams,\n  ): Promise<GetAex141ContractTransfersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: `ct_${string}`,\n    options?: GetAex141ByContractOptionalParams,\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams,\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams,\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: `ct_${string}`,\n    options?: GetAex9ContractBalancesOptionalParams,\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: `ct_${string}`,\n    options?: GetAex9ByContractOptionalParams,\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams,\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel Channel ID\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: `ch_${string}`,\n    options?: GetChannelOptionalParams,\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractCalls(\n    options?: GetContractCallsOptionalParams,\n  ): Promise<GetContractCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractCallsOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractLogs(\n    options?: GetContractLogsOptionalParams,\n  ): Promise<GetContractLogsResponse> {\n    return this.sendOperationRequest({ options }, getContractLogsOperationSpec);\n  }\n\n  /**\n   * Gets contract creation info.\n   * @param id Contract that emitted the logs Contract address\n   * @param options The options parameters.\n   */\n  getContract(\n    id: `ct_${string}`,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest({ id, options }, getContractOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param options The options parameters.\n   */\n  getDexSwaps(\n    options?: GetDexSwapsOptionalParams,\n  ): Promise<GetDexSwapsResponse> {\n    return this.sendOperationRequest({ options }, getDexSwapsOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getDexSwapsByContractId(\n    contractId: `ct_${string}`,\n    options?: GetDexSwapsByContractIdOptionalParams,\n  ): Promise<GetDexSwapsByContractIdResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getDexSwapsByContractIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get Epoch information\n   * @param options The options parameters.\n   */\n  getEpochs(options?: GetEpochsOptionalParams): Promise<GetEpochsResponse> {\n    return this.sendOperationRequest({ options }, getEpochsOperationSpec);\n  }\n\n  /**\n   * Get Top Epoch information\n   * @param options The options parameters.\n   */\n  getEpochTop(\n    options?: GetEpochTopOptionalParams,\n  ): Promise<GetEpochTopResponse> {\n    return this.sendOperationRequest({ options }, getEpochTopOperationSpec);\n  }\n\n  /**\n   * Get Schedule information\n   * @param options The options parameters.\n   */\n  getSchedules(\n    options?: GetSchedulesOptionalParams,\n  ): Promise<GetSchedulesResponse> {\n    return this.sendOperationRequest({ options }, getSchedulesOperationSpec);\n  }\n\n  /**\n   * Get Schedule information\n   * @param height Schedule height\n   * @param options The options parameters.\n   */\n  getSchedule(\n    height: number,\n    options?: GetScheduleOptionalParams,\n  ): Promise<GetScheduleResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getScheduleOperationSpec,\n    );\n  }\n\n  /**\n   * Get Validators information\n   * @param options The options parameters.\n   */\n  getValidators(\n    options?: GetValidatorsOptionalParams,\n  ): Promise<GetValidatorsResponse> {\n    return this.sendOperationRequest({ options }, getValidatorsOperationSpec);\n  }\n\n  /**\n   * Get Validator information\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getValidator(\n    validator: `ak_${string}`,\n    options?: GetValidatorOptionalParams,\n  ): Promise<GetValidatorResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getValidatorOperationSpec,\n    );\n  }\n\n  /**\n   * Get Delegates information for validator\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getValidatorDelegates(\n    validator: `ak_${string}`,\n    options?: GetValidatorDelegatesOptionalParams,\n  ): Promise<GetValidatorDelegatesResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getValidatorDelegatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get top Delegates information for validator\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getTopValidatorDelegates(\n    validator: `ak_${string}`,\n    options?: GetTopValidatorDelegatesOptionalParams,\n  ): Promise<GetTopValidatorDelegatesResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getTopValidatorDelegatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams,\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockOptionalParams,\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockMicroBlocksOptionalParams,\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockOptionalParams,\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockTransactionsOptionalParams,\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams,\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionOptionalParams,\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction claims\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuctionClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionClaimsOptionalParams,\n  ): Promise<GetNameAuctionClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the total number of active names.\n   * @param options The options parameters.\n   */\n  getNamesCount(\n    options?: GetNamesCountOptionalParams,\n  ): Promise<GetNamesCountResponse> {\n    return this.sendOperationRequest({ options }, getNamesCountOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getName(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameOptionalParams,\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameClaimsOptionalParams,\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameTransfersOptionalParams,\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameUpdatesOptionalParams,\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: `ok_${string}`,\n    options?: GetOracleOptionalParams,\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get an oracle's extensions.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleExtends(\n    id: `ok_${string}`,\n    options?: GetOracleExtendsOptionalParams,\n  ): Promise<GetOracleExtendsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleExtendsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's queries.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleQueries(\n    id: `ok_${string}`,\n    options?: GetOracleQueriesOptionalParams,\n  ): Promise<GetOracleQueriesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleQueriesOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's responses.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleResponses(\n    id: `ok_${string}`,\n    options?: GetOracleResponsesOptionalParams,\n  ): Promise<GetOracleResponsesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleResponsesOperationSpec,\n    );\n  }\n\n  /**\n   * Get stats.\n   * @param options The options parameters.\n   */\n  getStats(options?: GetStatsOptionalParams): Promise<GetStatsResponse> {\n    return this.sendOperationRequest({ options }, getStatsOperationSpec);\n  }\n\n  /**\n   * Get active accounts stats.\n   * @param options The options parameters.\n   */\n  getActiveAccountsStats(\n    options?: GetActiveAccountsStatsOptionalParams,\n  ): Promise<GetActiveAccountsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getActiveAccountsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total AEx9 token transfers.\n   * @param options The options parameters.\n   */\n  getAex9TransfersStats(\n    options?: GetAex9TransfersStatsOptionalParams,\n  ): Promise<GetAex9TransfersStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TransfersStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total blocks count stats.\n   * @param options The options parameters.\n   */\n  getBlocksStats(\n    options?: GetBlocksStatsOptionalParams,\n  ): Promise<GetBlocksStatsResponse> {\n    return this.sendOperationRequest({ options }, getBlocksStatsOperationSpec);\n  }\n\n  /**\n   * Get the created contracts count per interval.\n   * @param options The options parameters.\n   */\n  getContractsStats(\n    options?: GetContractsStatsOptionalParams,\n  ): Promise<GetContractsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltaStats(\n    options?: GetDeltaStatsOptionalParams,\n  ): Promise<GetDeltaStatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltaStatsOperationSpec);\n  }\n\n  /**\n   * Get total blocks difficulty stats.\n   * @param options The options parameters.\n   */\n  getDifficultyStats(\n    options?: GetDifficultyStatsOptionalParams,\n  ): Promise<GetDifficultyStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getDifficultyStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total blocks hashrate stats.\n   * @param options The options parameters.\n   */\n  getHashrateStats(\n    options?: GetHashrateStatsOptionalParams,\n  ): Promise<GetHashrateStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getHashrateStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get miners list with total rewards obtained through mining.\n   * @param options The options parameters.\n   */\n  getMinerStats(\n    options?: GetMinerStatsOptionalParams,\n  ): Promise<GetMinerStatsResponse> {\n    return this.sendOperationRequest({ options }, getMinerStatsOperationSpec);\n  }\n\n  /**\n   * Get total names count stats.\n   * @param options The options parameters.\n   */\n  getNamesStats(\n    options?: GetNamesStatsOptionalParams,\n  ): Promise<GetNamesStatsResponse> {\n    return this.sendOperationRequest({ options }, getNamesStatsOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalStats(\n    options?: GetTotalStatsOptionalParams,\n  ): Promise<GetTotalStatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalStatsOperationSpec);\n  }\n\n  /**\n   * Get total accounts created per interval stats.\n   * @param options The options parameters.\n   */\n  getTotalAccountsStats(\n    options?: GetTotalAccountsStatsOptionalParams,\n  ): Promise<GetTotalAccountsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTotalAccountsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total transactions count stats.\n   * @param options The options parameters.\n   */\n  getTransactionsStats(\n    options?: GetTransactionsStatsOptionalParams,\n  ): Promise<GetTransactionsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTransactions(\n    options?: GetTransactionsOptionalParams,\n  ): Promise<GetTransactionsResponse> {\n    return this.sendOperationRequest({ options }, getTransactionsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTransactionsCount(\n    options?: GetTransactionsCountOptionalParams,\n  ): Promise<GetTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get pending transactions.\n   * @param options The options parameters.\n   */\n  getPendingTransactions(\n    options?: GetPendingTransactionsOptionalParams,\n  ): Promise<GetPendingTransactionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get count of pending transactions.\n   * @param options The options parameters.\n   */\n  getPendingTransactionsCount(\n    options?: GetPendingTransactionsCountOptionalParams,\n  ): Promise<GetPendingTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hash The transaction encoded hash Transaction hash\n   * @param options The options parameters.\n   */\n  getTransaction(\n    hash: `th_${string}`,\n    options?: GetTransactionOptionalParams,\n  ): Promise<GetTransactionResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams,\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.ownedOnly,\n    Parameters.typeParam,\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex141/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction1,\n    Parameters.contract,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex9/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction2],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/names/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction3],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountPointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/names/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction4,\n    Parameters.by,\n    Parameters.prefix,\n    Parameters.exact,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction5],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction6],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction7],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141TokenDetailResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction8,\n    Parameters.fromParam,\n    Parameters.to,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.exact,\n    Parameters.direction9,\n    Parameters.by1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction10,\n    Parameters.by2,\n    Parameters.blockHash,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/aex9/{contractId}/balances/{accountId}/history\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper:\n          Mappers.Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorResponse,\n        isError: true,\n      },\n    },\n    queryParameters: [\n      Parameters.limit,\n      Parameters.scope,\n      Parameters.direction11,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.accountId,\n      Parameters.contractId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction12,\n    Parameters.state,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction13],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionParam,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs,\n    Parameters.direction14,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Contract,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction15],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsByContractIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/{contract_id}/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction16],\n  urlParameters: [Parameters.$host, Parameters.contractId2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getEpochsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/epochs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction17,\n    Parameters.scope1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getEpochTopOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/epochs/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EpochInfo,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSchedulesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/schedule\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction18,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getScheduleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/schedule/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Schedule,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction19,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Validator,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorDelegatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}/delegates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction20,\n  ],\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTopValidatorDelegatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}/delegates/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction21,\n  ],\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction22],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlockExtended,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction23],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockExtended,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.by2,\n    Parameters.ownedBy,\n    Parameters.state1,\n    Parameters.direction24,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction25],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction26],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction27],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.ownedBy],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction28],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction29],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction30],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.state1,\n    Parameters.direction31,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleExtendsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/extends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleResponsesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/responses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Stats,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getActiveAccountsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/active-accounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy,\n    Parameters.direction32,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TransfersStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/aex9-transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy1,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.direction33,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBlocksStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy2,\n    Parameters.typeParam1,\n    Parameters.direction34,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/contracts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy3,\n    Parameters.direction35,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeltaStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/delta\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction36],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDifficultyStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/difficulty\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy4,\n    Parameters.direction37,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHashrateStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/hashrate\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy5,\n    Parameters.direction38,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMinerStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/miners\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction39],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy6,\n    Parameters.direction40,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/total\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction41],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalAccountsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/total-accounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy7,\n    Parameters.direction42,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy8,\n    Parameters.txType,\n    Parameters.direction43,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.contract,\n    Parameters.typeParam2,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint,\n    Parameters.scope2,\n    Parameters.direction44,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id4],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction45],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/pending/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transaction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction46],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\nexport const operationSpecs = [\n  getAccountActivitiesOperationSpec,\n  getAex141OwnedTokensOperationSpec,\n  getAex9AccountBalancesOperationSpec,\n  getAccountDexSwapsOperationSpec,\n  getAccountNameClaimsOperationSpec,\n  getAccountPointeesOperationSpec,\n  getAccountTransactionsCountOperationSpec,\n  getSortedAex141ContractsOperationSpec,\n  getAex141ContractTemplatesOperationSpec,\n  getAex141TemplateTokensOperationSpec,\n  getAex141ContractTokensOperationSpec,\n  getAex141TokenOwnerOperationSpec,\n  getAex141ContractTransfersOperationSpec,\n  getAex141ByContractOperationSpec,\n  getSortedAex9TokensOperationSpec,\n  getAex9TokensCountOperationSpec,\n  getAex9ContractBalancesOperationSpec,\n  getAex9ContractAccountBalanceOperationSpec,\n  getAex9ByContractOperationSpec,\n  getChannelsOperationSpec,\n  getChannelOperationSpec,\n  getContractCallsOperationSpec,\n  getContractLogsOperationSpec,\n  getContractOperationSpec,\n  getDexSwapsOperationSpec,\n  getDexSwapsByContractIdOperationSpec,\n  getEpochsOperationSpec,\n  getEpochTopOperationSpec,\n  getSchedulesOperationSpec,\n  getScheduleOperationSpec,\n  getValidatorsOperationSpec,\n  getValidatorOperationSpec,\n  getValidatorDelegatesOperationSpec,\n  getTopValidatorDelegatesOperationSpec,\n  getKeyBlocksOperationSpec,\n  getKeyBlockOperationSpec,\n  getKeyBlockMicroBlocksOperationSpec,\n  getMicroBlockOperationSpec,\n  getMicroBlockTransactionsOperationSpec,\n  getNamesOperationSpec,\n  getNamesAuctionsOperationSpec,\n  getNameAuctionOperationSpec,\n  getNameAuctionClaimsOperationSpec,\n  getNamesCountOperationSpec,\n  getNameOperationSpec,\n  getNameClaimsOperationSpec,\n  getNameTransfersOperationSpec,\n  getNameUpdatesOperationSpec,\n  getOraclesOperationSpec,\n  getOracleOperationSpec,\n  getOracleExtendsOperationSpec,\n  getOracleQueriesOperationSpec,\n  getOracleResponsesOperationSpec,\n  getStatsOperationSpec,\n  getActiveAccountsStatsOperationSpec,\n  getAex9TransfersStatsOperationSpec,\n  getBlocksStatsOperationSpec,\n  getContractsStatsOperationSpec,\n  getDeltaStatsOperationSpec,\n  getDifficultyStatsOperationSpec,\n  getHashrateStatsOperationSpec,\n  getMinerStatsOperationSpec,\n  getNamesStatsOperationSpec,\n  getTotalStatsOperationSpec,\n  getTotalAccountsStatsOperationSpec,\n  getTransactionsStatsOperationSpec,\n  getStatusOperationSpec,\n  getTransactionsOperationSpec,\n  getTransactionsCountOperationSpec,\n  getPendingTransactionsOperationSpec,\n  getPendingTransactionsCountOperationSpec,\n  getTransactionOperationSpec,\n  getTransfersOperationSpec,\n] as const;\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAO,KAAKC,UAAU,MAAM,oBAAoB;AAChD,OAAO,KAAKC,UAAU,MAAM,wBAAwB;AACpD,OAAO,KAAKC,OAAO,MAAM,qBAAqB;AAyJ9C,OAAO,MAAMC,UAAU,SAASH,UAAU,CAACI,aAAa,CAAC;EAGvD;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,KAAa,EAAEC,OAAkC,EAAE;IAAA,IAAAC,IAAA,EAAAC,iBAAA;IAC7D,IAAIH,KAAK,KAAKI,SAAS,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACJ,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAMK,QAAkC,GAAG;MACzCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,kCAAkC;IACzD,MAAMC,eAAe,GACnBR,OAAO,CAACS,gBAAgB,IAAIT,OAAO,CAACS,gBAAgB,CAACD,eAAe,GAChE,GAAGR,OAAO,CAACS,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAGL,OAAO;MACVS,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAV,IAAA,IAAAC,iBAAA,GAAEF,OAAO,CAACW,QAAQ,cAAAT,iBAAA,cAAAA,iBAAA,GAAIF,OAAO,CAACY,OAAO,cAAAX,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAACS,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACX,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACEc,oBAAoBA,CAClBC,SAAyB,EACzBd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtBgB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBH,SAAyB,EACzBd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtBkB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBL,SAAyB,EACzBd,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtBoB,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBP,SAAyB,EACzBd,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtBsB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBT,SAAyB,EACzBd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtBwB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBX,SAAyB,EACzBd,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtB0B,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,2BAA2BA,CACzBb,SAAyB,EACzBd,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,SAAS;MAAEd;IAAQ,CAAC,EACtB4B,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtB7B,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX8B,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxBC,UAA0B,EAC1BhC,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEhC;IAAQ,CAAC,EACvBiC,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBF,UAA0B,EAC1BG,UAAkB,EAClBnC,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEG,UAAU;MAAEnC;IAAQ,CAAC,EACnCoC,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBL,UAA0B,EAC1BhC,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEhC;IAAQ,CAAC,EACvBsC,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,mBAAmBA,CACjBP,UAA0B,EAC1BQ,OAAe,EACfxC,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEQ,OAAO;MAAExC;IAAQ,CAAC,EAChCyC,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxBV,UAA0B,EAC1BhC,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEhC;IAAQ,CAAC,EACvB2C,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CACjBC,EAAkB,EAClB7C,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACf8C,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,mBAAmBA,CACjB/C,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXgD,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBjD,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXkD,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBnB,UAA0B,EAC1BhC,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEhC;IAAQ,CAAC,EACvBoD,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,6BAA6BA,CAC3BrB,UAA0B,EAC1BlB,SAAyB,EACzBd,OAAqD,EACL;IAChD,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAElB,SAAS;MAAEd;IAAQ,CAAC,EAClCsD,0CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oCAAoCA,CAClCvB,UAA0B,EAC1BlB,SAAyB,EACzBd,OAA4D,EACL;IACvD,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAElB,SAAS;MAAEd;IAAQ,CAAC,EAClCwD,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CACfZ,EAAkB,EAClB7C,OAAyC,EACL;IACpC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACf0D,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACT3D,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE4D,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAUA,CACRhB,EAAkB,EAClB7C,OAAkC,EACL;IAC7B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EAAE8D,uBAAuB,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACd/D,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXgE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,eAAeA,CACbjE,OAAuC,EACL;IAClC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEkE,4BAA4B,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CACTtB,EAAkB,EAClB7C,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EAAEoE,wBAAwB,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTrE,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEsE,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBvC,UAA0B,EAC1BhC,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiB,UAAU;MAAEhC;IAAQ,CAAC,EACvBwE,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAACzE,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0E,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACT3E,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE4E,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV7E,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE8E,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CACTC,MAAc,EACdhF,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEiE,MAAM;MAAEhF;IAAQ,CAAC,EACnBiF,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXlF,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEmF,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,YAAYA,CACVC,SAAyB,EACzBrF,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEsE,SAAS;MAAErF;IAAQ,CAAC,EACtBsF,yBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qBAAqBA,CACnBF,SAAyB,EACzBrF,OAA6C,EACL;IACxC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEsE,SAAS;MAAErF;IAAQ,CAAC,EACtBwF,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBJ,SAAyB,EACzBrF,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEsE,SAAS;MAAErF;IAAQ,CAAC,EACtB0F,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV3F,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE4F,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CACTC,SAAkC,EAClC9F,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE+E,SAAS;MAAE9F;IAAQ,CAAC,EACtB+F,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBF,SAAkC,EAClC9F,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE+E,SAAS;MAAE9F;IAAQ,CAAC,EACtBiG,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXC,IAAoB,EACpBnG,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEoF,IAAI;MAAEnG;IAAQ,CAAC,EACjBoG,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,yBAAyBA,CACvBF,IAAoB,EACpBnG,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEoF,IAAI;MAAEnG;IAAQ,CAAC,EACjBsG,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACvG,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEwG,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACdzG,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX0G,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ9D,EAAsC,EACtC7C,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACf4G,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBhE,EAAsC,EACtC7C,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACf8G,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX/G,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEgH,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,OAAOA,CACLpE,EAAsC,EACtC7C,OAA+B,EACL;IAC1B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EAAEkH,oBAAoB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXtE,EAAsC,EACtC7C,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACfoH,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdxE,EAAsC,EACtC7C,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACfsH,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ1E,EAAsC,EACtC7C,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACfwH,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAACzH,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0H,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CACP9E,EAAkB,EAClB7C,OAAiC,EACL;IAC5B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EAAE4H,sBAAsB,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdhF,EAAkB,EAClB7C,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACf8H,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdlF,EAAkB,EAClB7C,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACfgI,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBpF,EAAkB,EAClB7C,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE8B,EAAE;MAAE7C;IAAQ,CAAC,EACfkI,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACnI,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEoI,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBrI,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXsI,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,qBAAqBA,CACnBvI,OAA6C,EACL;IACxC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXwI,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,cAAcA,CACZzI,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0I,2BAA2B,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,iBAAiBA,CACf3I,OAAyC,EACL;IACpC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX4I,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX7I,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE8I,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChB/I,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXgJ,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACdjJ,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXkJ,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXnJ,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEoJ,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXrJ,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEsJ,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXvJ,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEwJ,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,qBAAqBA,CACnBzJ,OAA6C,EACL;IACxC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX0J,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,oBAAoBA,CAClB3J,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX4J,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAAC7J,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE8J,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,eAAeA,CACb/J,OAAuC,EACL;IAClC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEgK,4BAA4B,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;EACEC,oBAAoBA,CAClBjK,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXkK,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBnK,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXoK,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,2BAA2BA,CACzBrK,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXsK,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZpE,IAAoB,EACpBnG,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEoF,IAAI;MAAEnG;IAAQ,CAAC,EACjBwK,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVzK,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0K,yBAAyB,CAAC;EAC1E;AACF;AACA;AACA,MAAMC,UAAU,GAAGnL,gBAAgB,CAACG,OAAO,EAAE,WAAY,KAAK,CAAC;AAE/D,MAAMqB,iCAA2D,GAAG;EAClE4J,IAAI,EAAE,qCAAqC;EAC3CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACqL;IACZ,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC0L,SAAS,EACpB1L,UAAU,CAAC2L,SAAS,EACpB3L,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC6L,KAAK,EAChB7L,UAAU,CAAC8L,SAAS,CACrB;EACDC,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzJ,iCAA2D,GAAG;EAClE0J,IAAI,EAAE,wCAAwC;EAC9CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACiM;IACZ,CAAC;IACD,GAAG,EAAE;MACHb,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACmM,UAAU,EACrBnM,UAAU,CAACoM,QAAQ,CACpB;EACDL,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvJ,mCAA6D,GAAG;EACpEwJ,IAAI,EAAE,wCAAwC;EAC9CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACoM;IACZ,CAAC;IACD,GAAG,EAAE;MACHhB,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrJ,+BAAyD,GAAG;EAChEsJ,IAAI,EAAE,oCAAoC;EAC1CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACqM;IACZ,CAAC;IACD,GAAG,EAAE;MACHjB,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAACuM,UAAU,CAAC;EACxCR,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnJ,iCAA2D,GAAG;EAClEoJ,IAAI,EAAE,uCAAuC;EAC7CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACuM;IACZ,CAAC;IACD,GAAG,EAAE;MACHnB,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC0M,UAAU,CAAC;EAC5EX,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjJ,+BAAyD,GAAG;EAChEkJ,IAAI,EAAE,yCAAyC;EAC/CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC0M;IACZ,CAAC;IACD,GAAG,EAAE;MACHtB,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/I,wCAAkE,GAAG;EACzEgJ,IAAI,EAAE,6CAA6C;EACnDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC2M;IACZ,CAAC;IACD,GAAG,EAAE;MACHvB,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,SAAS,CAAC;EACvD4K,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7I,qCAA+D,GAAG;EACtE8I,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC4M;IACZ,CAAC;IACD,GAAG,EAAE;MACHxB,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC8M,UAAU,EACrB9M,UAAU,CAAC+M,EAAE,EACb/M,UAAU,CAACgN,MAAM,EACjBhN,UAAU,CAACiN,KAAK,CACjB;EACDlB,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM1I,uCAAiE,GAAG;EACxE2I,IAAI,EAAE,mCAAmC;EACzCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACiN;IACZ,CAAC;IACD,GAAG,EAAE;MACH7B,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAACmN,UAAU,CAAC;EAC1DpB,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsC,UAAU,CAAC;EACxD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvI,oCAA8D,GAAG;EACrEwI,IAAI,EAAE,uDAAuD;EAC7DC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACmN;IACZ,CAAC;IACD,GAAG,EAAE;MACH/B,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAACqN,UAAU,CAAC;EAC1DtB,aAAa,EAAE,CACb/L,UAAU,CAACK,KAAK,EAChBL,UAAU,CAACsC,UAAU,EACrBtC,UAAU,CAACyC,UAAU,CACtB;EACDuJ,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrI,oCAA8D,GAAG;EACrEsI,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACqN;IACZ,CAAC;IACD,GAAG,EAAE;MACHjC,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAACuN,UAAU,CAAC;EAC1DxB,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsC,UAAU,CAAC;EACxD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMlI,gCAA0D,GAAG;EACjEmI,IAAI,EAAE,0CAA0C;EAChDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACuN;IACtB,CAAC;IACD,GAAG,EAAE;MACHnC,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsC,UAAU,EAAEtC,UAAU,CAAC8C,OAAO,CAAC;EAC5EkJ,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMhI,uCAAiE,GAAG;EACxEiI,IAAI,EAAE,mCAAmC;EACzCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACwN;IACZ,CAAC;IACD,GAAG,EAAE;MACHpC,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC0N,UAAU,EACrB1N,UAAU,CAAC2N,SAAS,EACpB3N,UAAU,CAAC4N,EAAE,CACd;EACD7B,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsC,UAAU,CAAC;EACxD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7H,gCAA0D,GAAG;EACjE8H,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC4N;IACtB,CAAC;IACD,GAAG,EAAE;MACHxC,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmD,EAAE,CAAC;EAChD6I,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM3H,gCAA0D,GAAG;EACjE4H,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC6N;IACZ,CAAC;IACD,GAAG,EAAE;MACHzC,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACgN,MAAM,EACjBhN,UAAU,CAACiN,KAAK,EAChBjN,UAAU,CAAC+N,UAAU,EACrB/N,UAAU,CAACgO,GAAG,CACf;EACDjC,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzH,+BAAyD,GAAG;EAChE0H,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACgO;IACZ;EACF,CAAC;EACDlC,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvH,oCAA8D,GAAG;EACrEwH,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACiO;IACZ,CAAC;IACD,GAAG,EAAE;MACH7C,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACmO,WAAW,EACtBnO,UAAU,CAACoO,GAAG,EACdpO,UAAU,CAACqO,SAAS,CACrB;EACDtC,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsC,UAAU,CAAC;EACxD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrH,0CAAoE,GAAG;EAC3EsH,IAAI,EAAE,4CAA4C;EAClDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACqO;IACZ,CAAC;IACD,GAAG,EAAE;MACHjD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAACyG,IAAI,CAAC;EAClCsF,aAAa,EAAE,CACb/L,UAAU,CAACK,KAAK,EAChBL,UAAU,CAACoB,SAAS,EACpBpB,UAAU,CAACsC,UAAU,CACtB;EACD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnH,iDAA2E,GAC/E;EACEoH,IAAI,EAAE,oDAAoD;EAC1DC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACsO;IACZ,CAAC;IACD,GAAG,EAAE;MACHlD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC6L,KAAK,EAChB7L,UAAU,CAACwO,WAAW,CACvB;EACDzC,aAAa,EAAE,CACb/L,UAAU,CAACK,KAAK,EAChBL,UAAU,CAACoB,SAAS,EACpBpB,UAAU,CAACsC,UAAU,CACtB;EACD0J,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACH,MAAMjH,8BAAwD,GAAG;EAC/DkH,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACwO;IACtB,CAAC;IACD,GAAG,EAAE;MACHpD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmD,EAAE,CAAC;EAChD6I,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/G,wBAAkD,GAAG;EACzDgH,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACyO;IACZ,CAAC;IACD,GAAG,EAAE;MACHrD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC6L,KAAK,EAChB7L,UAAU,CAAC2O,WAAW,EACtB3O,UAAU,CAAC4O,KAAK,CACjB;EACD7C,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7G,uBAAiD,GAAG;EACxD8G,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC4O;IACtB,CAAC;IACD,GAAG,EAAE;MACHxD,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC8O,GAAG,CAAC;EACjD9C,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM3G,6BAAuD,GAAG;EAC9D4G,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC8O;IACZ,CAAC;IACD,GAAG,EAAE;MACH1D,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACgP,WAAW,CAAC;EAC7EjD,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzG,4BAAsD,GAAG;EAC7D0G,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACgP;IACZ,CAAC;IACD,GAAG,EAAE;MACH5D,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC6L,KAAK,EAChB7L,UAAU,CAACkP,WAAW,EACtBlP,UAAU,CAACmP,KAAK,EAChBnP,UAAU,CAACoP,aAAa,EACxBpP,UAAU,CAACqP,cAAc,EACzBrP,UAAU,CAACsP,IAAI,EACftP,UAAU,CAACuP,QAAQ,EACnBvP,UAAU,CAACwP,WAAW,CACvB;EACDzD,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvG,wBAAkD,GAAG;EACzDwG,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACwP;IACtB,CAAC;IACD,GAAG,EAAE;MACHpE,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmD,EAAE,CAAC;EAChD6I,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrG,wBAAkD,GAAG;EACzDsG,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACyP;IACZ,CAAC;IACD,GAAG,EAAE;MACHrE,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC2P,WAAW,CAAC;EACzC5D,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnG,oCAA8D,GAAG;EACrEoG,IAAI,EAAE,6BAA6B;EACnCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC2P;IACZ,CAAC;IACD,GAAG,EAAE;MACHvE,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC6P,WAAW,CAAC;EACzC9D,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC8P,WAAW,CAAC;EACzD9D,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjG,sBAAgD,GAAG;EACvDkG,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC8P;IACZ,CAAC;IACD,GAAG,EAAE;MACH1E,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACgQ,WAAW,EACtBhQ,UAAU,CAACiQ,MAAM,CAClB;EACDlE,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/F,wBAAkD,GAAG;EACzDgG,IAAI,EAAE,2BAA2B;EACjCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACiQ;IACtB,CAAC;IACD,GAAG,EAAE;MACH7E,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7F,yBAAmD,GAAG;EAC1D8F,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACkQ;IACZ,CAAC;IACD,GAAG,EAAE;MACH9E,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACiQ,MAAM,EACjBjQ,UAAU,CAACoQ,WAAW,CACvB;EACDrE,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM1F,wBAAkD,GAAG;EACzD2F,IAAI,EAAE,yCAAyC;EAC/CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACoQ;IACtB,CAAC;IACD,GAAG,EAAE;MACHhF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsF,MAAM,CAAC;EACpD0G,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMxF,0BAAoD,GAAG;EAC3DyF,IAAI,EAAE,2BAA2B;EACjCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACqQ;IACZ,CAAC;IACD,GAAG,EAAE;MACHjF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACiQ,MAAM,EACjBjQ,UAAU,CAACuQ,WAAW,CACvB;EACDxE,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrF,yBAAmD,GAAG;EAC1DsF,IAAI,EAAE,uCAAuC;EAC7CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACuQ;IACtB,CAAC;IACD,GAAG,EAAE;MACHnF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC2F,SAAS,CAAC;EACvDqG,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnF,kCAA4D,GAAG;EACnEoF,IAAI,EAAE,iDAAiD;EACvDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACwQ;IACZ,CAAC;IACD,GAAG,EAAE;MACHpF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACiQ,MAAM,EACjBjQ,UAAU,CAAC0Q,WAAW,CACvB;EACD3E,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC2F,SAAS,CAAC;EACvDqG,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjF,qCAA+D,GAAG;EACtEkF,IAAI,EAAE,qDAAqD;EAC3DC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC0Q;IACZ,CAAC;IACD,GAAG,EAAE;MACHtF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACiQ,MAAM,EACjBjQ,UAAU,CAAC4Q,WAAW,CACvB;EACD7E,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC2F,SAAS,CAAC;EACvDqG,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/E,yBAAmD,GAAG;EAC1DgF,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC4Q;IACZ,CAAC;IACD,GAAG,EAAE;MACHxF,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC8Q,WAAW,CAAC;EAC7E/E,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM5E,wBAAkD,GAAG;EACzD6E,IAAI,EAAE,8BAA8B;EACpCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC8Q;IACtB,CAAC;IACD,GAAG,EAAE;MACH1F,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoG,SAAS,CAAC;EACvD4F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM1E,mCAA6D,GAAG;EACpE2E,IAAI,EAAE,2CAA2C;EACjDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC+Q;IACZ,CAAC;IACD,GAAG,EAAE;MACH3F,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACiR,WAAW,CAAC;EAC7ElF,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoG,SAAS,CAAC;EACvD4F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvE,0BAAoD,GAAG;EAC3DwE,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACiR;IACtB,CAAC;IACD,GAAG,EAAE;MACH7F,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmR,KAAK,CAAC;EACnDnF,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrE,sCAAgE,GAAG;EACvEsE,IAAI,EAAE,sCAAsC;EAC5CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACmR;IACZ,CAAC;IACD,GAAG,EAAE;MACH/F,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmR,KAAK,CAAC;EACnDnF,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnE,qBAA+C,GAAG;EACtDoE,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACoR;IACZ,CAAC;IACD,GAAG,EAAE;MACHhG,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACgN,MAAM,EACjBhN,UAAU,CAACoO,GAAG,EACdpO,UAAU,CAACsR,OAAO,EAClBtR,UAAU,CAACuR,MAAM,EACjBvR,UAAU,CAACwR,WAAW,CACvB;EACDzF,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjE,6BAAuD,GAAG;EAC9DkE,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACwR;IACZ,CAAC;IACD,GAAG,EAAE;MACHpG,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC0R,WAAW,CAAC;EAC7E3F,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/D,2BAAqD,GAAG;EAC5DgE,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC0R;IACtB,CAAC;IACD,GAAG,EAAE;MACHtG,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC4R,WAAW,CAAC;EAC7E7F,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7D,iCAA2D,GAAG;EAClE8D,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC6R;IACZ,CAAC;IACD,GAAG,EAAE;MACHzG,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC+R,WAAW,CAAC;EAC7EhG,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM3D,0BAAoD,GAAG;EAC3D4D,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE2G,IAAI,EAAE;UAAEC,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACH5G,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAACsR,OAAO,CAAC;EACrCvF,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzD,oBAA8C,GAAG;EACrD0D,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACiS;IACtB,CAAC;IACD,GAAG,EAAE;MACH7G,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvD,0BAAoD,GAAG;EAC3DwD,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACkS;IACZ,CAAC;IACD,GAAG,EAAE;MACH9G,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACoS,WAAW,CAAC;EAC7ErG,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrD,6BAAuD,GAAG;EAC9DsD,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACoS;IACZ,CAAC;IACD,GAAG,EAAE;MACHhH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACsS,WAAW,CAAC;EAC7EvG,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnD,2BAAqD,GAAG;EAC5DoD,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACsS;IACZ,CAAC;IACD,GAAG,EAAE;MACHlH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACwS,WAAW,CAAC;EAC7EzG,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6R,GAAG,CAAC;EACjD7F,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjD,uBAAiD,GAAG;EACxDkD,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACwS;IACZ,CAAC;IACD,GAAG,EAAE;MACHpH,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAAC6L,KAAK,EAChB7L,UAAU,CAACuR,MAAM,EACjBvR,UAAU,CAAC0S,WAAW,CACvB;EACD3G,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/C,sBAAgD,GAAG;EACvDgD,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC0S;IACtB,CAAC;IACD,GAAG,EAAE;MACHtH,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC4S,GAAG,CAAC;EACjD5G,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7C,6BAAuD,GAAG;EAC9D8C,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC4S;IACZ,CAAC;IACD,GAAG,EAAE;MACHxH,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC4S,GAAG,CAAC;EACjD5G,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM3C,6BAAuD,GAAG;EAC9D4C,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC6S;IACZ,CAAC;IACD,GAAG,EAAE;MACHzH,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC4S,GAAG,CAAC;EACjD5G,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzC,+BAAyD,GAAG;EAChE0C,IAAI,EAAE,4BAA4B;EAClCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC8S;IACZ,CAAC;IACD,GAAG,EAAE;MACH1H,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC4S,GAAG,CAAC;EACjD5G,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvC,qBAA+C,GAAG;EACtDwC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAAC+S;IACtB,CAAC;IACD,GAAG,EAAE;MACH3H,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrC,mCAA6D,GAAG;EACpEsC,IAAI,EAAE,2BAA2B;EACjCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACgT;IACZ,CAAC;IACD,GAAG,EAAE;MACH5H,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACkT,UAAU,EACrBlT,UAAU,CAACmT,WAAW,CACvB;EACDpH,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnC,kCAA4D,GAAG;EACnEoC,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACmT;IACZ,CAAC;IACD,GAAG,EAAE;MACH/H,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACqT,WAAW,EACtBrT,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAACwT,WAAW,CACvB;EACDzH,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjC,2BAAqD,GAAG;EAC5DkC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACwT;IACZ,CAAC;IACD,GAAG,EAAE;MACHpI,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAAC0T,WAAW,EACtB1T,UAAU,CAAC2T,UAAU,EACrB3T,UAAU,CAAC4T,WAAW,CACvB;EACD7H,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM/B,8BAAwD,GAAG;EAC/DgC,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC4T;IACZ,CAAC;IACD,GAAG,EAAE;MACHxI,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAAC8T,WAAW,EACtB9T,UAAU,CAAC+T,WAAW,CACvB;EACDhI,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM7B,0BAAoD,GAAG;EAC3D8B,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC+T;IACZ,CAAC;IACD,GAAG,EAAE;MACH3I,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACiU,WAAW,CAAC;EAC7ElI,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAM3B,+BAAyD,GAAG;EAChE4B,IAAI,EAAE,sBAAsB;EAC5BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACiU;IACZ,CAAC;IACD,GAAG,EAAE;MACH7I,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAACmU,WAAW,EACtBnU,UAAU,CAACoU,WAAW,CACvB;EACDrI,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMzB,6BAAuD,GAAG;EAC9D0B,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACoU;IACZ,CAAC;IACD,GAAG,EAAE;MACHhJ,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAACsU,WAAW,EACtBtU,UAAU,CAACuU,WAAW,CACvB;EACDxI,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMvB,0BAAoD,GAAG;EAC3DwB,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACuU;IACZ,CAAC;IACD,GAAG,EAAE;MACHnJ,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAACyU,WAAW,CAAC;EAC3D1I,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMrB,0BAAoD,GAAG;EAC3DsB,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACyU;IACZ,CAAC;IACD,GAAG,EAAE;MACHrJ,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAAC2U,WAAW,EACtB3U,UAAU,CAAC4U,WAAW,CACvB;EACD7I,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMnB,0BAAoD,GAAG;EAC3DoB,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC4U;IACZ,CAAC;IACD,GAAG,EAAE;MACHxJ,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAAC8U,WAAW,CAAC;EAC7E/I,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMjB,kCAA4D,GAAG;EACnEkB,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAAC8U;IACZ,CAAC;IACD,GAAG,EAAE;MACH1J,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACgV,WAAW,EACtBhV,UAAU,CAACiV,WAAW,CACvB;EACDlJ,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMf,iCAA2D,GAAG;EAClEgB,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACiV;IACZ,CAAC;IACD,GAAG,EAAE;MACH7J,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACsT,YAAY,EACvBtT,UAAU,CAACuT,YAAY,EACvBvT,UAAU,CAACmV,WAAW,EACtBnV,UAAU,CAACoV,MAAM,EACjBpV,UAAU,CAACqV,WAAW,CACvB;EACDtJ,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMb,sBAAgD,GAAG;EACvDc,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACqV;IACtB;EACF,CAAC;EACDvJ,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMX,4BAAsD,GAAG;EAC7DY,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACsV;IACZ,CAAC;IACD,GAAG,EAAE;MACHlK,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACfzL,UAAU,CAAC4L,KAAK,EAChB5L,UAAU,CAACoM,QAAQ,EACnBpM,UAAU,CAACwV,UAAU,EACrBxV,UAAU,CAACyV,SAAS,EACpBzV,UAAU,CAAC0V,OAAO,EAClB1V,UAAU,CAAC2V,OAAO,EAClB3V,UAAU,CAAC4V,MAAM,EACjB5V,UAAU,CAAC6V,QAAQ,EACnB7V,UAAU,CAAC8V,WAAW,EACtB9V,UAAU,CAAC+V,UAAU,EACrB/V,UAAU,CAACgW,MAAM,EACjBhW,UAAU,CAACiW,WAAW,CACvB;EACDlK,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMT,iCAA2D,GAAG;EAClEU,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE2G,IAAI,EAAE;UAAEC,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDxG,eAAe,EAAE,CAACzL,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACoV,MAAM,EAAEpV,UAAU,CAACkW,GAAG,CAAC;EACtEnK,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMP,mCAA6D,GAAG;EACpEQ,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACkW;IACZ,CAAC;IACD,GAAG,EAAE;MACH9K,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAACoW,WAAW,CAAC;EAC3DrK,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAML,wCAAkE,GAAG;EACzEM,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE2G,IAAI,EAAE;UAAEC,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACH5G,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMH,2BAAqD,GAAG;EAC5DI,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEpL,OAAO,CAACoW;IACtB,CAAC;IACD,GAAG,EAAE;MACHhL,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAEpL,OAAO,CAACwM,gBAAgB;MACpCjB,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACsW,KAAK,CAAC;EACnDtK,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AACD,MAAMD,yBAAmD,GAAG;EAC1DE,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRpL,OAAO,CAACsW;IACZ,CAAC;IACD,GAAG,EAAE;MACHlL,UAAU,EAAEpL,OAAO,CAACsL,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACzL,UAAU,CAAC4L,KAAK,EAAE5L,UAAU,CAAC6L,KAAK,EAAE7L,UAAU,CAACwW,WAAW,CAAC;EAC7EzK,aAAa,EAAE,CAAC/L,UAAU,CAACK,KAAK,CAAC;EACjC2L,gBAAgB,EAAE,CAAChM,UAAU,CAACiM,MAAM,CAAC;EACrChB;AACF,CAAC;AAED,OAAO,MAAMwL,cAAc,GAAG,CAC5BnV,iCAAiC,EACjCE,iCAAiC,EACjCE,mCAAmC,EACnCE,+BAA+B,EAC/BE,iCAAiC,EACjCE,+BAA+B,EAC/BE,wCAAwC,EACxCE,qCAAqC,EACrCG,uCAAuC,EACvCG,oCAAoC,EACpCE,oCAAoC,EACpCG,gCAAgC,EAChCE,uCAAuC,EACvCG,gCAAgC,EAChCE,gCAAgC,EAChCE,+BAA+B,EAC/BE,oCAAoC,EACpCE,0CAA0C,EAC1CI,8BAA8B,EAC9BE,wBAAwB,EACxBE,uBAAuB,EACvBE,6BAA6B,EAC7BE,4BAA4B,EAC5BE,wBAAwB,EACxBE,wBAAwB,EACxBE,oCAAoC,EACpCE,sBAAsB,EACtBE,wBAAwB,EACxBE,yBAAyB,EACzBG,wBAAwB,EACxBE,0BAA0B,EAC1BG,yBAAyB,EACzBE,kCAAkC,EAClCE,qCAAqC,EACrCE,yBAAyB,EACzBG,wBAAwB,EACxBE,mCAAmC,EACnCG,0BAA0B,EAC1BE,sCAAsC,EACtCE,qBAAqB,EACrBE,6BAA6B,EAC7BE,2BAA2B,EAC3BE,iCAAiC,EACjCE,0BAA0B,EAC1BE,oBAAoB,EACpBE,0BAA0B,EAC1BE,6BAA6B,EAC7BE,2BAA2B,EAC3BE,uBAAuB,EACvBE,sBAAsB,EACtBE,6BAA6B,EAC7BE,6BAA6B,EAC7BE,+BAA+B,EAC/BE,qBAAqB,EACrBE,mCAAmC,EACnCE,kCAAkC,EAClCE,2BAA2B,EAC3BE,8BAA8B,EAC9BE,0BAA0B,EAC1BE,+BAA+B,EAC/BE,6BAA6B,EAC7BE,0BAA0B,EAC1BE,0BAA0B,EAC1BE,0BAA0B,EAC1BE,kCAAkC,EAClCE,iCAAiC,EACjCE,sBAAsB,EACtBE,4BAA4B,EAC5BE,iCAAiC,EACjCE,mCAAmC,EACnCE,wCAAwC,EACxCE,2BAA2B,EAC3BE,yBAAyB,CACjB","ignoreList":[]}