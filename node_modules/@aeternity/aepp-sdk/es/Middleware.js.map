{"version":3,"file":"Middleware.js","names":["userAgentPolicyName","setClientRequestIdPolicyName","genRequestQueuesPolicy","genCombineGetRequestsPolicy","genErrorFormatterPolicy","parseBigIntPolicy","genVersionCheckPolicy","genRetryOnFailurePolicy","Middleware","MiddlewareApi","operationSpecs","IllegalArgumentError","InternalError","MiddlewarePage","isMiddlewareRawPage","constructor","url","ignoreVersion","retryCount","retryOverallDelay","options","version","getVersion","opts","getStatus","mdwVersion","allowInsecureConnection","additionalPolicies","body","error","pipeline","addPolicy","phase","removePolicy","name","requestByPath","pathWithQuery","queryPos","indexOf","path","slice","length","query","operationSpec","find","os","p","groups","replace","split","part","shift","startsWith","sendOperationRequest","urlParameters","filter","parameterPath","queryParameters","Array","from","URLSearchParams","map","key","value","mapper","defaultValue","toString","serializedName","type","operationArguments","response"],"sources":["../src/Middleware.ts"],"sourcesContent":["import { OperationArguments, OperationOptions, OperationSpec } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport {\n  Middleware as MiddlewareApi,\n  MiddlewareOptionalParams,\n  ErrorResponse,\n} from './apis/middleware/index.js';\nimport { operationSpecs } from './apis/middleware/middleware.js';\nimport { IllegalArgumentError, InternalError } from './utils/errors.js';\nimport { MiddlewarePage, isMiddlewareRawPage } from './utils/MiddlewarePage.js';\n\n/**\n * @category middleware\n */\nexport default class Middleware extends MiddlewareApi {\n  /**\n   * @param url - Url for middleware API\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if middleware\n   * is not supported, use with caution\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: MiddlewareOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.getStatus(opts)).mdwVersion;\n      return version;\n    };\n\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genVersionCheckPolicy('middleware', getVersion, '1.81.0', '2.0.0', ignoreVersion),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorResponse) => ` ${body.error}`),\n      ],\n      ...options,\n    });\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  /**\n   * Get a middleware response by path instead of a method name and arguments.\n   * @param pathWithQuery - a path to request starting with `/v3/`\n   */\n  async requestByPath<Response = unknown>(pathWithQuery: string): Promise<Response> {\n    const queryPos = pathWithQuery.indexOf('?');\n    const path = pathWithQuery.slice(0, queryPos === -1 ? pathWithQuery.length : queryPos);\n    const query = pathWithQuery.slice(queryPos === -1 ? pathWithQuery.length : queryPos + 1);\n\n    const operationSpec = operationSpecs.find((os) => {\n      let p = path;\n      if (os.path == null) return false;\n      const groups = os.path.replace(/{\\w+}/g, '{param}').split('{param}');\n      while (groups.length > 0) {\n        const part = groups.shift();\n        if (part == null) throw new InternalError(`Unexpected operation spec path: ${os.path}`);\n        if (!p.startsWith(part)) return false;\n        p = p.replace(part, '');\n        if (groups.length > 0) p = p.replace(/^[\\w.]+/, '');\n      }\n      return p === '';\n    });\n    if (operationSpec == null) {\n      throw new IllegalArgumentError(`Can't find operation spec corresponding to ${path}`);\n    }\n\n    return this.sendOperationRequest(\n      {},\n      {\n        ...operationSpec,\n        path,\n        urlParameters: operationSpec.urlParameters?.filter(\n          ({ parameterPath }) => parameterPath === '$host',\n        ),\n        queryParameters: Array.from(new URLSearchParams(query)).map(([key, value]) => ({\n          parameterPath: ['options', key],\n          mapper: {\n            defaultValue: value.toString(),\n            serializedName: key,\n            type: {\n              name: 'String',\n            },\n          },\n        })),\n      },\n    );\n  }\n\n  override async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const response = await super.sendOperationRequest(operationArguments, operationSpec);\n    if (!isMiddlewareRawPage(response)) return response as T;\n    return new MiddlewarePage(response, this) as T;\n  }\n}\n"],"mappings":"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","ignoreList":[]}