import { Network } from './rpc/types.js';
import Node from '../Node.js';
import BrowserConnection from './connection/Browser.js';
import WalletConnectorFrameBase from './WalletConnectorFrameBase.js';
interface EventsWithNode {
    nodeChange: (node: Node) => void;
}
/**
 * Connect to wallet as iframe/web-extension, asks wallet to provide node url
 * In comparison with WalletConnectorFrame, this would work better for decentralized applications
 * @category aepp wallet communication
 */
export default class WalletConnectorFrameWithNode extends WalletConnectorFrameBase<EventsWithNode> {
    #private;
    /**
     * The node instance provided by wallet
     */
    get node(): Node;
    protected _updateNetwork(params: Network): void;
    /**
     * Connect to wallet
     * @param name - Aepp name
     * @param connection - Wallet connection object
     */
    static connect(name: string, connection: BrowserConnection): Promise<WalletConnectorFrameWithNode>;
}
export {};
