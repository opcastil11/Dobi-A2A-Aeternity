{"version":3,"file":"wallet-detector.js","names":["BrowserWindowMessageConnection","MESSAGE_DIRECTION","METHODS","UnsupportedPlatformError","connection","onDetected","window","wallets","connect","method","params","origin","source","readyToConnect","id","wallet","info","getConnection","target","type","sendDirection","to_waellet","receiveDirection","to_aepp","newWallet","disconnect"],"sources":["../../src/aepp-wallet-communication/wallet-detector.ts"],"sourcesContent":["import BrowserConnection from './connection/Browser.js';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage.js';\nimport { MESSAGE_DIRECTION, METHODS } from './schema.js';\nimport { WalletInfo } from './rpc/types.js';\nimport { UnsupportedPlatformError } from '../utils/errors.js';\n\ninterface Wallet {\n  info: WalletInfo;\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets {\n  [key: string]: Wallet;\n}\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet: Wallet }) => void,\n): (() => void) => {\n  if (window == null)\n    throw new UnsupportedPlatformError(\n      'Window object not found, you can run wallet detector only in browser',\n    );\n  const wallets: Wallets = {};\n\n  connection.connect(\n    (\n      { method, params }: { method: string; params: WalletInfo },\n      origin: string,\n      source: Window,\n    ) => {\n      if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n      const wallet = {\n        info: params,\n        getConnection() {\n          return new BrowserWindowMessageConnection({\n            target: source,\n            ...(params.type === 'extension'\n              ? {\n                  sendDirection: MESSAGE_DIRECTION.to_waellet,\n                  receiveDirection: MESSAGE_DIRECTION.to_aepp,\n                  ...(window.origin !== 'null' && { origin: window.origin }),\n                }\n              : {\n                  origin: params.origin,\n                }),\n          });\n        },\n      };\n      wallets[wallet.info.id] = wallet;\n      onDetected({ wallets, newWallet: wallet });\n    },\n    () => {},\n  );\n\n  return () => connection.disconnect();\n};\n"],"mappings":"AACA,OAAOA,8BAA8B,MAAM,sCAAsC;AACjF,SAASC,iBAAiB,EAAEC,OAAO,QAAQ,aAAa;AAExD,SAASC,wBAAwB,QAAQ,oBAAoB;AAU7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,CACbC,UAA6B,EAC7BC,UAAqF,KACpE;EACjB,IAAIC,MAAM,IAAI,IAAI,EAChB,MAAM,IAAIH,wBAAwB,CAChC,sEACF,CAAC;EACH,MAAMI,OAAgB,GAAG,CAAC,CAAC;EAE3BH,UAAU,CAACI,OAAO,CAChB,CACE;IAAEC,MAAM;IAAEC;EAA+C,CAAC,EAC1DC,MAAc,EACdC,MAAc,KACX;IACH,IAAIH,MAAM,KAAKP,OAAO,CAACW,cAAc,IAAIN,OAAO,CAACG,MAAM,CAACI,EAAE,CAAC,IAAI,IAAI,EAAE;IAErE,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAEN,MAAM;MACZO,aAAaA,CAAA,EAAG;QACd,OAAO,IAAIjB,8BAA8B,CAAC;UACxCkB,MAAM,EAAEN,MAAM;UACd,IAAIF,MAAM,CAACS,IAAI,KAAK,WAAW,GAC3B;YACEC,aAAa,EAAEnB,iBAAiB,CAACoB,UAAU;YAC3CC,gBAAgB,EAAErB,iBAAiB,CAACsB,OAAO;YAC3C,IAAIjB,MAAM,CAACK,MAAM,KAAK,MAAM,IAAI;cAAEA,MAAM,EAAEL,MAAM,CAACK;YAAO,CAAC;UAC3D,CAAC,GACD;YACEA,MAAM,EAAED,MAAM,CAACC;UACjB,CAAC;QACP,CAAC,CAAC;MACJ;IACF,CAAC;IACDJ,OAAO,CAACQ,MAAM,CAACC,IAAI,CAACF,EAAE,CAAC,GAAGC,MAAM;IAChCV,UAAU,CAAC;MAAEE,OAAO;MAAEiB,SAAS,EAAET;IAAO,CAAC,CAAC;EAC5C,CAAC,EACD,MAAM,CAAC,CACT,CAAC;EAED,OAAO,MAAMX,UAAU,CAACqB,UAAU,CAAC,CAAC;AACtC,CAAC","ignoreList":[]}