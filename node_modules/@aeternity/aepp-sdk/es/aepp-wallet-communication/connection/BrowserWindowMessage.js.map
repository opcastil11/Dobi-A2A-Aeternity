{"version":3,"file":"BrowserWindowMessage.js","names":["BrowserConnection","MESSAGE_DIRECTION","InternalError","RpcConnectionError","_onDisconnect","WeakMap","_target","_self","BrowserWindowMessageConnection","constructor","target","self","window","origin","sendDirection","receiveDirection","to_aepp","options","_classPrivateFieldInitSpec","_classPrivateFieldSet","isConnected","listener","connect","onMessage","onDisconnect","message","_message$data$jsonrpc","data","jsonrpc","_classPrivateFieldGet","source","receiveMessage","type","addEventListener","disconnect","removeEventListener","call","undefined","sendMessage","msg","_this$origin","postMessage"],"sources":["../../../src/aepp-wallet-communication/connection/BrowserWindowMessage.ts"],"sourcesContent":["import BrowserConnection from './Browser.js';\nimport { MESSAGE_DIRECTION } from '../schema.js';\nimport { InternalError, RpcConnectionError } from '../../utils/errors.js';\n\nexport type ImplPostMessage = Pick<\n  Window,\n  'addEventListener' | 'removeEventListener' | 'postMessage'\n>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  readonly #target?: ImplPostMessage;\n\n  readonly #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object' ||\n        (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      )\n        return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  override sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError(\"Can't send messages without target\");\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n"],"mappings":"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","ignoreList":[]}