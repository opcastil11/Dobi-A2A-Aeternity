{"version":3,"file":"BrowserRuntime.js","names":["BrowserConnection","UnexpectedTsError","_listeners","WeakMap","BrowserRuntimeConnection","constructor","port","options","_classPrivateFieldInitSpec","disconnect","_classPrivateFieldGet","onMessage","removeListener","onDisconnect","_classPrivateFieldSet","undefined","connect","message","_port$sender$url","receiveMessage","sender","url","addListener","sendMessage","postMessage","isConnected"],"sources":["../../../src/aepp-wallet-communication/connection/BrowserRuntime.ts"],"sourcesContent":["import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser.js';\nimport { UnexpectedTsError } from '../../utils/errors.js';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  /**\n   * @param options - Options\n   */\n  constructor({ port, ...options }: { port: Runtime.Port; debug?: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n"],"mappings":";;;;;AACA,OAAOA,iBAAiB,MAAM,cAAc;AAC5C,SAASC,iBAAiB,QAAQ,uBAAuB;;AAEzD;AACA;AACA;AACA;AACA;AAJA,IAAAC,UAAA,oBAAAC,OAAA;AAKA,eAAe,MAAMC,wBAAwB,SAASJ,iBAAiB,CAAC;EAKtE;AACF;AACA;EACEK,WAAWA,CAAC;IAAEC,IAAI;IAAE,GAAGC;EAAiD,CAAC,EAAE;IACzE,KAAK,CAACA,OAAO,CAAC;IANhBC,0BAAA,OAAAN,UAAU;IAOR,IAAI,CAACI,IAAI,GAAGA,IAAI;EAClB;EAESG,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,CAACH,IAAI,CAACG,UAAU,CAAC,CAAC;IACtB,IAAIC,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAACK,IAAI,CAACK,SAAS,CAACC,cAAc,CAACF,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,CAACI,IAAI,CAACO,YAAY,CAACD,cAAc,CAACF,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACzDY,qBAAA,CAAKZ,UAAU,EAAf,IAAI,EAAca,SAAJ,CAAC;EACjB;EAESC,OAAOA,CACdL,SAAuE,EACvEE,YAAwB,EAClB;IACN,KAAK,CAACG,OAAO,CAACL,SAAS,EAAEE,YAAY,CAAC;IACtCC,qBAAA,CAAKZ,UAAU,EAAf,IAAI,EAAc,CAChB,CAACe,OAAO,EAAEX,IAAI,KAAK;MAAA,IAAAY,gBAAA;MACjB,IAAI,CAACC,cAAc,CAACF,OAAO,CAAC;MAC5B;MACAN,SAAS,CAACM,OAAO,GAAAC,gBAAA,GAAEZ,IAAI,CAACc,MAAM,EAAEC,GAAG,cAAAH,gBAAA,cAAAA,gBAAA,GAAI,EAAE,EAAEZ,IAAI,CAAC;IAClD,CAAC,EACDO,YAAY,CANA,CAAC;IAQf,IAAI,CAACP,IAAI,CAACK,SAAS,CAACW,WAAW,CAACZ,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,CAACI,IAAI,CAACO,YAAY,CAACS,WAAW,CAACZ,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD;EAESqB,WAAWA,CAACN,OAAY,EAAQ;IACvC,KAAK,CAACM,WAAW,CAACN,OAAO,CAAC;IAC1B,IAAI,CAACX,IAAI,CAACkB,WAAW,CAACP,OAAO,CAAC;EAChC;EAEAQ,WAAWA,CAAA,EAAY;IACrB,OAAOf,qBAAA,CAAKR,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI;EAChC;AACF","ignoreList":[]}