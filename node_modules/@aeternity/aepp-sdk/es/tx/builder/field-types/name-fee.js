import BigNumber from 'bignumber.js';
import { getMinimumNameFee } from '../helpers.js';
import { InsufficientNameFeeError } from '../../../utils/errors.js';
import coinAmount from './coin-amount.js';
export default {
  ...coinAmount,
  serializeAettos(_value, txFields) {
    const minNameFee = getMinimumNameFee(txFields.name);
    const value = new BigNumber(_value !== null && _value !== void 0 ? _value : minNameFee);
    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);
    return value.toFixed();
  },
  /**
   * @param value - AENS name fee
   * @param txFields - Transaction fields
   * @param txFields.name - AENS Name in transaction
   */
  serialize(value, txFields, parameters) {
    return coinAmount.serialize.call(this, value, txFields, parameters);
  }
};
//# sourceMappingURL=name-fee.js.map