import { Buffer as _Buffer } from "buffer";
import { decode, encode } from '../../../utils/encoder.js';
import { ArgumentError } from '../../../utils/errors.js';
export default function genEncodedField(encoding, optional) {
  return {
    serialize(encodedData) {
      if (encodedData == null) {
        if (optional === true) return _Buffer.from([]);
        throw new ArgumentError('Encoded data', 'provided', encodedData);
      }
      return decode(encodedData);
    },
    deserialize(buffer) {
      return encode(buffer, encoding);
    }
  };
}
//# sourceMappingURL=encoded.js.map