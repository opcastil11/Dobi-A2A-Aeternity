{"version":3,"file":"Http.js","names":["RestError","userAgentPolicyName","setClientRequestIdPolicyName","Compiler","CompilerApi","genErrorFormatterPolicy","genVersionCheckPolicy","CompilerBase","CompilerError","NotImplementedError","CompilerHttp","constructor","compilerUrl","ignoreVersion","version","getVersion","opts","api","apiVersion","allowInsecureConnection","additionalPolicies","body","message","reason","parameter","info","JSON","stringify","Array","isArray","map","e","type","pos","line","col","context","join","pipeline","removePolicy","name","compileBySourceCode","sourceCode","fileSystem","cmpOut","compileContract","code","options","warnings","warning","res","error","statusCode","compile","path","generateAciBySourceCode","generateACI","generateAci","validateBySourceCode","bytecode","validateByteCode","source","validate"],"sources":["../../../src/contract/compiler/Http.ts"],"sourcesContent":["import {\n  RestError,\n  userAgentPolicyName,\n  setClientRequestIdPolicyName,\n} from '@azure/core-rest-pipeline';\nimport { OperationOptions } from '@azure/core-client';\nimport {\n  Compiler as CompilerApi,\n  ErrorModel,\n  CompilerError as CompilerErrorApi,\n} from '../../apis/compiler/index.js';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../../utils/autorest.js';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, NotImplementedError } from '../../utils/errors.js';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler over HTTP\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example CompilerHttp('COMPILER_URL')\n */\nexport default class CompilerHttp extends CompilerBase {\n  readonly api: CompilerApi;\n\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if compiler version\n   * is not supported, use with caution\n   */\n  constructor(compilerUrl: string, { ignoreVersion = false }: { ignoreVersion?: boolean } = {}) {\n    super();\n\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.api.apiVersion(opts)).apiVersion;\n      return version;\n    };\n\n    this.api = new CompilerApi(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genVersionCheckPolicy('compiler', getVersion, '8.0.0', '9.0.0', ignoreVersion),\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerErrorApi[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason}${\n              body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map(\n                (e) =>\n                  `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? ` (${e.context})` : ''}`,\n              )\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    this.api.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.api.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    try {\n      const cmpOut = await this.api.compileContract({ code: sourceCode, options: { fileSystem } });\n      const warnings = cmpOut.warnings.map(({ type, ...warning }) => warning);\n      const res = { ...cmpOut, warnings };\n      // TODO: should be fixed when the compiledAci interface gets updated\n      return res as Awaited<CompileResult>;\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async compile(path: string): CompileResult {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    try {\n      return await this.api.generateACI({ code: sourceCode, options: { fileSystem } });\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async generateAci(path: string): Promise<Aci> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    try {\n      await this.api.validateByteCode({ bytecode, source: sourceCode, options: { fileSystem } });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async version(): Promise<string> {\n    return (await this.api.version()).version;\n  }\n}\n"],"mappings":"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","ignoreList":[]}