{"version":3,"file":"Cli.js","names":["execFile","tmpdir","resolve","dirname","basename","mkdir","writeFile","rm","fileURLToPath","CompilerBase","CompilerError","InternalError","UnsupportedVersionError","semverSatisfies","ensureError","getPackagePath","path","import","meta","url","_path","WeakMap","_ensureCompatibleVersion","_CompilerCli_brand","WeakSet","CompilerCli","constructor","compilerPath","ignoreVersion","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","version","then","versions","error","console","warn","message","compile","_classPrivateFieldGet","compileRes","aci","Promise","all","_assertClassBrand","_runWithStderr","call","generateAci","bytecode","stdout","trimEnd","warnings","stderr","split","slice","map","warning","reg","match","pos","file","line","col","compileBySourceCode","sourceCode","fileSystem","tmp","_saveContractToTmpDir","recursive","JSON","parse","_run","generateAciBySourceCode","validate","includes","validateBySourceCode","verMessage","ver","parameters","pResolve","pReject","randomName","Math","random","toString","sourceCodePath","Object","entries","name","src","p"],"sources":["../../../src/contract/compiler/Cli.ts"],"sourcesContent":["import { execFile } from 'child_process';\nimport { tmpdir } from 'os';\nimport { resolve, dirname, basename } from 'path';\nimport { mkdir, writeFile, rm } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, InternalError, UnsupportedVersionError } from '../../utils/errors.js';\nimport semverSatisfies from '../../utils/semver-satisfies.js';\nimport { ensureError } from '../../utils/other.js';\n\nexport const getPackagePath = (): string => {\n  const path = dirname(fileURLToPath(import.meta.url));\n  if (basename(path) === 'dist') return resolve(path, '..');\n  if (basename(path) === 'compiler') return resolve(path, '../../..');\n  throw new InternalError(\"Can't get package path\");\n};\n\n/**\n * A wrapper around aesophia_cli, available only in Node.js.\n * Requires Erlang installed, assumes that `escript` is available in PATH.\n * @category contract\n */\nexport default class CompilerCli extends CompilerBase {\n  readonly #path: string;\n\n  readonly #ensureCompatibleVersion;\n\n  /**\n   * @param compilerPath - A path to aesophia_cli binary, by default uses the integrated one\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if compiler version\n   * is not supported, use with caution\n   */\n  constructor(\n    compilerPath = resolve(getPackagePath(), './bin/aesophia_cli'),\n    { ignoreVersion = false }: { ignoreVersion?: boolean } = {},\n  ) {\n    super();\n    this.#path = compilerPath;\n    this.#ensureCompatibleVersion = this.version().then((version) => {\n      const versions = [version, '8.0.0', '9.0.0'] as const;\n      if (!semverSatisfies(...versions)) {\n        const error = new UnsupportedVersionError('compiler', ...versions);\n        if (ignoreVersion) console.warn(error.message);\n        else throw error;\n      }\n    });\n  }\n\n  async #runWithStderr(...parameters: string[]): Promise<{ stderr: string; stdout: string }> {\n    return new Promise((pResolve, pReject) => {\n      execFile('escript', [this.#path, ...parameters], (error, stdout, stderr) => {\n        if (error != null) pReject(error);\n        else pResolve({ stdout, stderr });\n      });\n    });\n  }\n\n  async #run(...parameters: string[]): Promise<string> {\n    const { stderr, stdout } = await this.#runWithStderr(...parameters);\n    if (stderr !== '') throw new CompilerError(stderr);\n    return stdout;\n  }\n\n  static async #saveContractToTmpDir(\n    sourceCode: string,\n    fileSystem: Record<string, string> = {},\n  ): Promise<string> {\n    const randomName = (): string => Math.random().toString(36).slice(2);\n    const path = resolve(tmpdir(), `aepp-sdk-js-${randomName()}`);\n    await mkdir(path);\n    const sourceCodePath = resolve(path, `${randomName()}.aes`);\n    await writeFile(sourceCodePath, sourceCode);\n    await Promise.all(\n      Object.entries(fileSystem).map(async ([name, src]) => {\n        const p = resolve(path, name);\n        await mkdir(dirname(p), { recursive: true });\n        return writeFile(p, src);\n      }),\n    );\n    return sourceCodePath;\n  }\n\n  async compile(path: string): CompileResult {\n    await this.#ensureCompatibleVersion;\n    try {\n      const [compileRes, aci] = await Promise.all([\n        this.#runWithStderr(path),\n        this.generateAci(path),\n      ]);\n      return {\n        bytecode: compileRes.stdout.trimEnd() as Encoded.ContractBytearray,\n        aci,\n        warnings: compileRes.stderr\n          .split('Warning in ')\n          .slice(1)\n          .map((warning) => {\n            const reg = /^'(.+)' at line (\\d+), col (\\d+):\\n(.+)$/s;\n            const match = warning.match(reg);\n            if (match == null) throw new InternalError(`Can't parse compiler output: \"${warning}\"`);\n            return {\n              message: match[4].trimEnd(),\n              pos: {\n                ...(match[1] !== path && { file: match[1] }),\n                line: +match[2],\n                col: +match[3],\n              },\n            };\n          }),\n      };\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.compile(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async generateAci(path: string): Promise<Aci> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return JSON.parse(await this.#run('--no_code', '--create_json_aci', path));\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.generateAci(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return (await this.#run(path, '--validate', bytecode)).includes('Validation successful.');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.validate(bytecode, tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async version(): Promise<string> {\n    const verMessage = await this.#run('--version');\n    const ver = verMessage.match(/Sophia compiler version ([\\d.]+.*)\\n/)?.[1];\n    if (ver == null) throw new CompilerError(\"Can't get compiler version\");\n    return ver;\n  }\n}\n"],"mappings":";;;;;;AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,MAAM,QAAQ,IAAI;AAC3B,SAASC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,MAAM;AACjD,SAASC,KAAK,EAAEC,SAAS,EAAEC,EAAE,QAAQ,aAAa;AAClD,SAASC,aAAa,QAAQ,KAAK;AACnC,OAAOC,YAAY,MAA8B,WAAW;AAE5D,SAASC,aAAa,EAAEC,aAAa,EAAEC,uBAAuB,QAAQ,uBAAuB;AAC7F,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,SAASC,WAAW,QAAQ,sBAAsB;AAElD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAc;EAC1C,MAAMC,IAAI,GAAGb,OAAO,CAACK,aAAa,CAACS,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC;EACpD,IAAIf,QAAQ,CAACY,IAAI,CAAC,KAAK,MAAM,EAAE,OAAOd,OAAO,CAACc,IAAI,EAAE,IAAI,CAAC;EACzD,IAAIZ,QAAQ,CAACY,IAAI,CAAC,KAAK,UAAU,EAAE,OAAOd,OAAO,CAACc,IAAI,EAAE,UAAU,CAAC;EACnE,MAAM,IAAIL,aAAa,CAAC,wBAAwB,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,IAAAS,KAAA,oBAAAC,OAAA;AAAA,IAAAC,wBAAA,oBAAAD,OAAA;AAAA,IAAAE,kBAAA,oBAAAC,OAAA;AAKA,eAAe,MAAMC,WAAW,SAAShB,YAAY,CAAC;EAKpD;AACF;AACA;AACA;AACA;AACA;EACEiB,WAAWA,CACTC,YAAY,GAAGzB,OAAO,CAACa,cAAc,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAC9D;IAAEa,aAAa,GAAG;EAAmC,CAAC,GAAG,CAAC,CAAC,EAC3D;IACA,KAAK,CAAC,CAAC;IAACC,2BAAA,OAAAN,kBAAA;IAdVO,0BAAA,OAASV,KAAK;IAEdU,0BAAA,OAASR,wBAAwB;IAa/BS,qBAAA,CAAKX,KAAK,EAAV,IAAI,EAASO,YAAJ,CAAC;IACVI,qBAAA,CAAKT,wBAAwB,EAA7B,IAAI,EAA4B,IAAI,CAACU,OAAO,CAAC,CAAC,CAACC,IAAI,CAAED,OAAO,IAAK;MAC/D,MAAME,QAAQ,GAAG,CAACF,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;MACrD,IAAI,CAACnB,eAAe,CAAC,GAAGqB,QAAQ,CAAC,EAAE;QACjC,MAAMC,KAAK,GAAG,IAAIvB,uBAAuB,CAAC,UAAU,EAAE,GAAGsB,QAAQ,CAAC;QAClE,IAAIN,aAAa,EAAEQ,OAAO,CAACC,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,CAAC,KAC1C,MAAMH,KAAK;MAClB;IACF,CAAC,CAP2B,CAAC;EAQ/B;EAoCA,MAAMI,OAAOA,CAACvB,IAAY,EAAiB;IACzC,MAAMwB,qBAAA,CAAKlB,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,MAAM,CAACmB,UAAU,EAAEC,GAAG,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC1CC,iBAAA,CAAAtB,kBAAA,MAAI,EAACuB,cAAa,CAAC,CAAAC,IAAA,CAAnB,IAAI,EAAgB/B,IAAI,GACxB,IAAI,CAACgC,WAAW,CAAChC,IAAI,CAAC,CACvB,CAAC;MACF,OAAO;QACLiC,QAAQ,EAAER,UAAU,CAACS,MAAM,CAACC,OAAO,CAAC,CAA8B;QAClET,GAAG;QACHU,QAAQ,EAAEX,UAAU,CAACY,MAAM,CACxBC,KAAK,CAAC,aAAa,CAAC,CACpBC,KAAK,CAAC,CAAC,CAAC,CACRC,GAAG,CAAEC,OAAO,IAAK;UAChB,MAAMC,GAAG,GAAG,2CAA2C;UACvD,MAAMC,KAAK,GAAGF,OAAO,CAACE,KAAK,CAACD,GAAG,CAAC;UAChC,IAAIC,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIhD,aAAa,CAAC,iCAAiC8C,OAAO,GAAG,CAAC;UACvF,OAAO;YACLnB,OAAO,EAAEqB,KAAK,CAAC,CAAC,CAAC,CAACR,OAAO,CAAC,CAAC;YAC3BS,GAAG,EAAE;cACH,IAAID,KAAK,CAAC,CAAC,CAAC,KAAK3C,IAAI,IAAI;gBAAE6C,IAAI,EAAEF,KAAK,CAAC,CAAC;cAAE,CAAC,CAAC;cAC5CG,IAAI,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC;cACfI,GAAG,EAAE,CAACJ,KAAK,CAAC,CAAC;YACf;UACF,CAAC;QACH,CAAC;MACL,CAAC;IACH,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdrB,WAAW,CAACqB,KAAK,CAAC;MAClB,MAAM,IAAIzB,aAAa,CAACyB,KAAK,CAACG,OAAO,CAAC;IACxC;EACF;EAEA,MAAM0B,mBAAmBA,CACvBC,UAAkB,EAClBC,UAAmC,EACpB;IACf,MAAMC,GAAG,GAAG,MAAMC,qBAAiC,CAAArB,IAAA,CAAjCtB,WAAW,EAAuBwC,UAAU,EAAEC,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAAC3B,OAAO,CAAC4B,GAAG,CAAC;IAChC,CAAC,SAAS;MACR,MAAM5D,EAAE,CAACJ,OAAO,CAACgE,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMrB,WAAWA,CAAChC,IAAY,EAAgB;IAC5C,MAAMwB,qBAAA,CAAKlB,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,OAAOgD,IAAI,CAACC,KAAK,CAAC,MAAM1B,iBAAA,CAAAtB,kBAAA,MAAI,EAACiD,IAAG,CAAC,CAAAzB,IAAA,CAAT,IAAI,EAAM,WAAW,EAAE,mBAAmB,EAAE/B,IAAI,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdrB,WAAW,CAACqB,KAAK,CAAC;MAClB,MAAM,IAAIzB,aAAa,CAACyB,KAAK,CAACG,OAAO,CAAC;IACxC;EACF;EAEA,MAAMmC,uBAAuBA,CAC3BR,UAAkB,EAClBC,UAAmC,EACrB;IACd,MAAMC,GAAG,GAAG,MAAMC,qBAAiC,CAAArB,IAAA,CAAjCtB,WAAW,EAAuBwC,UAAU,EAAEC,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAAClB,WAAW,CAACmB,GAAG,CAAC;IACpC,CAAC,SAAS;MACR,MAAM5D,EAAE,CAACJ,OAAO,CAACgE,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMK,QAAQA,CAACzB,QAAmC,EAAEjC,IAAY,EAAoB;IAClF,MAAMwB,qBAAA,CAAKlB,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,OAAO,CAAC,MAAMuB,iBAAA,CAAAtB,kBAAA,MAAI,EAACiD,IAAG,CAAC,CAAAzB,IAAA,CAAT,IAAI,EAAM/B,IAAI,EAAE,YAAY,EAAEiC,QAAQ,CAAC,EAAE0B,QAAQ,CAAC,wBAAwB,CAAC;IAC3F,CAAC,CAAC,OAAOxC,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;EAEA,MAAMyC,oBAAoBA,CACxB3B,QAAmC,EACnCgB,UAAkB,EAClBC,UAAmC,EACjB;IAClB,MAAMC,GAAG,GAAG,MAAMC,qBAAiC,CAAArB,IAAA,CAAjCtB,WAAW,EAAuBwC,UAAU,EAAEC,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACQ,QAAQ,CAACzB,QAAQ,EAAEkB,GAAG,CAAC;IAC3C,CAAC,SAAS;MACR,MAAM5D,EAAE,CAACJ,OAAO,CAACgE,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMrC,OAAOA,CAAA,EAAoB;IAC/B,MAAM6C,UAAU,GAAG,MAAMhC,iBAAA,CAAAtB,kBAAA,MAAI,EAACiD,IAAG,CAAC,CAAAzB,IAAA,CAAT,IAAI,EAAM,WAAW,CAAC;IAC/C,MAAM+B,GAAG,GAAGD,UAAU,CAAClB,KAAK,CAAC,sCAAsC,CAAC,GAAG,CAAC,CAAC;IACzE,IAAImB,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIpE,aAAa,CAAC,4BAA4B,CAAC;IACtE,OAAOoE,GAAG;EACZ;AACF;AAAC,eAAAhC,eAjIsB,GAAGiC,UAAoB,EAA+C;EACzF,OAAO,IAAIpC,OAAO,CAAC,CAACqC,QAAQ,EAAEC,OAAO,KAAK;IACxCjF,QAAQ,CAAC,SAAS,EAAE,CAACwC,qBAAA,CAAKpB,KAAK,EAAV,IAAS,CAAC,EAAE,GAAG2D,UAAU,CAAC,EAAE,CAAC5C,KAAK,EAAEe,MAAM,EAAEG,MAAM,KAAK;MAC1E,IAAIlB,KAAK,IAAI,IAAI,EAAE8C,OAAO,CAAC9C,KAAK,CAAC,CAAC,KAC7B6C,QAAQ,CAAC;QAAE9B,MAAM;QAAEG;MAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAAC,eAAAmB,KAEU,GAAGO,UAAoB,EAAmB;EACnD,MAAM;IAAE1B,MAAM;IAAEH;EAAO,CAAC,GAAG,MAAML,iBAAA,CAAAtB,kBAAA,MAAI,EAACuB,cAAa,CAAC,CAAAC,IAAA,CAAnB,IAAI,EAAgB,GAAGgC,UAAU,CAAC;EACnE,IAAI1B,MAAM,KAAK,EAAE,EAAE,MAAM,IAAI3C,aAAa,CAAC2C,MAAM,CAAC;EAClD,OAAOH,MAAM;AACf;AAAC,eAAAkB,sBAGCH,UAAkB,EAClBC,UAAkC,GAAG,CAAC,CAAC,EACtB;EACjB,MAAMgB,UAAU,GAAGA,CAAA,KAAcC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC9B,KAAK,CAAC,CAAC,CAAC;EACpE,MAAMvC,IAAI,GAAGd,OAAO,CAACD,MAAM,CAAC,CAAC,EAAE,eAAeiF,UAAU,CAAC,CAAC,EAAE,CAAC;EAC7D,MAAM7E,KAAK,CAACW,IAAI,CAAC;EACjB,MAAMsE,cAAc,GAAGpF,OAAO,CAACc,IAAI,EAAE,GAAGkE,UAAU,CAAC,CAAC,MAAM,CAAC;EAC3D,MAAM5E,SAAS,CAACgF,cAAc,EAAErB,UAAU,CAAC;EAC3C,MAAMtB,OAAO,CAACC,GAAG,CACf2C,MAAM,CAACC,OAAO,CAACtB,UAAU,CAAC,CAACV,GAAG,CAAC,OAAO,CAACiC,IAAI,EAAEC,GAAG,CAAC,KAAK;IACpD,MAAMC,CAAC,GAAGzF,OAAO,CAACc,IAAI,EAAEyE,IAAI,CAAC;IAC7B,MAAMpF,KAAK,CAACF,OAAO,CAACwF,CAAC,CAAC,EAAE;MAAEtB,SAAS,EAAE;IAAK,CAAC,CAAC;IAC5C,OAAO/D,SAAS,CAACqF,CAAC,EAAED,GAAG,CAAC;EAC1B,CAAC,CACH,CAAC;EACD,OAAOJ,cAAc;AACvB","ignoreList":[]}