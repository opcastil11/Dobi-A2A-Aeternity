{"version":3,"file":"aepp-sdk.cjs","mappings":"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BAAO,CAAC,IAA2B;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2FAA2F;AAC3F;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACvGa;AACb;AACA,oBAAoB,mBAAO,CAAC,IAA2C;;AAEvE;AACA;AACA;;;;;;;;;ACNa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA,cAAc,mBAAO,CAAC,IAAuC;AAC7D,uBAAuB,mBAAO,CAAC,IAA0C;AACzE;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG,EAAE,yBAAyB,SAAS,yBAAyB;AAChE;AACA,0BAA0B,yBAAyB,SAAS,yBAAyB;;;;;;;;ACXxE;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,0BAA0B,mBAAO,CAAC,IAAqC;AACvE,eAAe,mBAAO,CAAC,GAAwB;AAC/C,6BAA6B,mBAAO,CAAC,IAAuC;;AAE5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpCa;AACb,YAAY,mBAAO,CAAC,IAAoB;;AAExC;AACA;AACA,4BAA4B,aAAa;AACzC;AACA;AACA,CAAC;;;;;;;;;ACRY;AACb,kBAAkB,mBA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;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD,uBAAuB,yCAAyC,UAAU;AAC1E,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,oDAAoD,gDAAgD;AACpG,MAAM;AACN,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,+EAA+E,iCAAiC;AAChH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sFAAsF,cAAc;AACpG;AACA;AACA;;AAEA,IAAI,2FAA2F;AAC/F;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED,IAAI,oDAAoD;AACxD,2BAA2B,oBAAoB;AAC/C,2BAA2B;AAC3B,CAAC;;AAED,IAAI,0EAA0E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,IAAI,sDAAsD;AAC1D;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACtQa;AACb;;;;;;;;;ACDa;AACb,mBAAO,CAAC,IAA+B;AACvC,mBAAO,CAAC,IAAmC;AAC3C,mBAAO,CAAC,IAAyB;AACjC,mBAAO,CAAC,IAAwC;AAChD,mBAAO,CAAC,IAAqC;AAC7C,mBAAO,CAAC,IAAsC;AAC9C,mBAAO,CAAC,IAA8C;AACtD,mBAAO,CAAC,IAAkC;AAC1C,mBAAO,CAAC,IAA+B;AACvC,mBAAO,CAAC,IAAmC;AAC3C,mBAAO,CAAC,IAAiC;AACzC,mBAAO,CAAC,IAAgC;AACxC,mBAAO,CAAC,IAAiC;AACzC,mBAAO,CAAC,IAA+B;AACvC,mBAAO,CAAC,IAAsC;AAC9C,mBAAO,CAAC,IAAuC;AAC/C,mBAAO,CAAC,IAAqC;AAC7C,mBAAO,CAAC,IAAqC;AAC7C,mBAAO,CAAC,IAAqC;AAC7C,mBAAO,CAAC,IAAwC;AAChD,WAAW,mBAAO,CAAC,IAAsB;;AAEzC;;;;;;;;;ACvBa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,WAAW,mBAAO,CAAC,IAA4B;AAC/C,iCAAiC,mBAAO,CAAC,IAA4C;AACrF,+BAA+B,mBAAO,CAAC,IAAyC;AAChF,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,oBAAoB,mBAAO,CAAC,GAA8B;AAC1D,aAAa,mBAAO,CAAC,IAA+B;AACpD,qBAAqB,mBAAO,CAAC,IAA6B;;AAE1D;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;;;;;;;;;ACtBa;AACb,kBAAkB,mBAAO,CAAC,IAAmC;;AAE7D;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,yBAAyB,mBAAO,CAAC,IAAmC;;AAEpE;AACA;AACA,IAAI,8BAA8B;AAClC;AACA,CAAC;;;;;;;;;ACRY;AACb,4BAA4B,mBAAO,CAAC,IAAoC;AACxE,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;AACA;;AAEA;AACA,iDAAiD,mBAAmB;;AAEpE;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC7Ba;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,cAAc,mBAAO,CAAC,IAAuB;AAC7C,oBAAoB,mBAAO,CAAC,IAA6B;AACzD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;ACtBa;AACb,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;AACA;;;;;;;;;ACLa;AACb,aAAa,mBAAO,CAAC,GAAyB;;AAE9C;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,IAAU;AACjC,WAAW,mBAAO,CAAC,GAAQ;AAC3B,aAAa,kCAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B,SAAS,QAAQ;;AAEjB,kBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;ACtIa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,aAAa,mBAAO,CAAC,IAAiB;AACtC,mBAAO,CAAC,IAA4C;;AAEpD;;;;;;;;;ACJA;;;;;;;ACAA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,GAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtkBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC5Wa;AACb,wBAAwB,mBAAO,CAAC,IAAmC;;AAEnE;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,qBAAqB,mBAAO,CAAC,IAA6B;AAC1D,8BAA8B,mBAAO,CAAC,IAAsC;AAC5E,eAAe,mBAAO,CAAC,IAAwB;AAC/C,oBAAoB,mBAAO,CAAC,GAA8B;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;AACA;AACA;;;;;;;;;AC3Ca;AACb,oBAAoB,mBAAO,CAAC,IAA2C;;AAEvE;AACA;;;;;;;;;ACJa;AACb,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,wBAAwB,mBAAO,CAAC,GAAmC;;AAEnE,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,gBAAgB;AACjC;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjCa;AACb,yBAAyB,mBAAO,CAAC,IAAmC;AACpE,kBAAkB,mBAAO,CAAC,GAA4B;;AAEtD;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;ACXa;AACb;AACA,mBAAO,CAAC,IAAkC;AAC1C,mBAAO,CAAC,IAA0B;AAClC,mBAAO,CAAC,GAA8B;AACtC,mBAAO,CAAC,IAA8B;AACtC,mBAAO,CAAC,IAA+C;;;;;;;;;ACN1C;AACb,0CAAsD;;;;;;;;;ACDtD;;;;;;;;ACAa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;ACTa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;ACLA,cAAc,sCAAiC;AAC/C,kBAAkB,mBAAO,CAAC,IAAkB;AAC5C;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB,SAAS,yBAAyB;;;;;;;;ACN9E;AACb,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,4BAA4B,mBAAO,CAAC,GAAuC;AAC3E,qBAAqB,mBAAO,CAAC,IAAgC;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACXa;AACb,4BAA4B,mBAAO,CAAC,IAAoC;AACxE,qBAAqB,6BAAgD;AACrE,kCAAkC,mBAAO,CAAC,IAA6C;AACvF,aAAa,mBAAO,CAAC,IAA+B;AACpD,eAAe,mBAAO,CAAC,IAA+B;AACtD,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,gCAAgC;AAC9E;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBa;AACb,0BAA0B,mBAAO,CAAC,IAAqC;;AAEvE;AACA;;AAEA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;;;;;;;;;ACZa;AACb,4BAA4B,mBAAO,CAAC,IAAoC;AACxE,cAAc,mBAAO,CAAC,IAAsB;;AAE5C;AACA;AACA,2CAA2C;AAC3C;AACA;;;;;;;;;ACRa;AACb,sBAAsB,mBAAO,CAAC,GAAuC;AACrE,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,kCAAkC,mBAAO,CAAC,IAA6C;AACvF,aAAa,mBAAO,CAAC,IAA+B;AACpD,aAAa,mBAAO,CAAC,IAA2B;AAChD,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;AACA;AACA;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACtEa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,aAAa,mBAAO,CAAC,IAAqC;;AAE1D;;;;;;;;ACHA;;;;;;;;;ACAa;AACb,YAAY,mBAAO,CAAC,IAAoB;AACxC,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,aAAa,mBAAO,CAAC,IAA4B;AACjD,qBAAqB,mBAAO,CAAC,IAAsC;AACnE,oBAAoB,mBAAO,CAAC,IAA8B;AAC1D,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,cAAc,mBAAO,CAAC,IAAsB;;AAE5C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;AChDA;;;;;;;ACAA;;;;;;;;;ACAa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,oBAAoB,mBAAO,CAAC,IAA2C;AACvE,YAAY,mBAAO,CAAC,IAAoB;AACxC,kCAAkC,mBAAO,CAAC,IAA8C;AACxF,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;AACA,mDAAmD,mCAAmC;;AAEtF;AACA;AACA,IAAI,8CAA8C;AAClD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AClBY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;AACA,cAAc,mBAAO,CAAC,IAA0B;AAChD,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,2BAA2B,6BAAuD;AAClF,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;;;;;;;;ACvBa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,YAAY,mBAAO,CAAC,IAAoB;AACxC,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,cAAc,mBAAO,CAAC,IAAsB;AAC5C,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,oBAAoB,mBAAO,CAAC,IAA6B;;AAEzD,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA,CAAC;;;;;;;;;ACnDY;AACb,YAAY,mBAAO,CAAC,IAAyB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,2BAA2B,mBAAO,CAAC,IAAqC;AACxE,+BAA+B,mBAAO,CAAC,IAAyC;;AAEhF;AACA;AACA;AACA;;;;;;;;;ACRa;AACb,WAAW,mBAAO,CAAC,IAAmB;AACtC,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACZa;AACb,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,oBAAoB,mBAAO,CAAC,IAAqC;AACjE,wBAAwB,mBAAO,CAAC,IAAgC;;AAEhE;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;ACba;AACb,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBa;AACb,aAAa,mBAAO,CAAC,EAAkC;;AAEvD;;;;;;;;;ACHa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;;AAE9D,6BAA6B;AAC7B;;AAEA;AACA;AACA;;;;;;;;;ACRa;AACb,YAAY,mBAAO,CAAC,IAA2B;;AAE/C;AACA,gDAAgD;AAChD;;;;;;;;;ACLa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;;;;;;;;;ACflB;AACb,aAAa,mBAAO,CAAC,IAA+B;AACpD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,+BAA+B,mBAAO,CAAC,IAAuC;;AAE9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;ACrBA;;;;;;;;ACAa;AACb,kBAAkB,mBAAO,CAAC,IAAmC;;AAE7D;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;ACVY;AACb,WAAW,mBAAO,CAAC,IAA4B;AAC/C,eAAe,mBAAO,CAAC,IAAwB;AAC/C,eAAe,mBAAO,CAAC,IAAwB;AAC/C,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,0BAA0B,mBAAO,CAAC,GAAoC;AACtE,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACzBa;AACb,aAAa,mBAAO,CAAC,IAAqC;;AAE1D;;;;;;;;;ACHa;AACb,cAAc,mBAAO,CAAC,IAAsB;AAC5C,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,2BAA2B,mBAAO,CAAC,IAAqC;;AAExE;AACA,kFAAkF;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACdD;;;;;;;;ACAa;AACb,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,aAAa,mBAAO,CAAC,IAAqB;AAC1C,aAAa,mBAAO,CAAC,IAA+B;AACpD,UAAU,mBAAO,CAAC,IAAkB;AACpC,oBAAoB,mBAAO,CAAC,IAA2C;AACvE,wBAAwB,mBAAO,CAAC,IAAgC;;AAEhE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;;;;;;;;AClBa;AACb,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;AACA;;;;;;;;;ACLa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;;AAE9D;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACTA;;;;;;;;ACAa;AACb,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACVa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,cAAc,mBAAO,CAAC,IAAuB;AAC7C,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,cAAc,mBAAO,CAAC,IAA0B;AAChD,eAAe,mBAAO,CAAC,GAAwB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,eAAe;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AC1Ba;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,qBAAqB,6BAAgD;;AAErE;AACA;AACA;AACA,IAAI,oGAAoG;AACxG;AACA,CAAC;;;;;;;;;ACVY;AACb,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;;AAEA;;;;;;;;;ACNa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,aAAa,mBAAO,CAAC,IAA+B;;AAEpD;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,aAAa;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACjBa;AACb;AACA,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACNa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,YAAY,mBAAO,CAAC,IAAoB;AACxC,cAAc,mBAAO,CAAC,IAA0B;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,EAAE;;;;;;;;;ACfW;AACb,8BAA8B,mBAAO,CAAC,IAAwC;;AAE9E;AACA;AACA;AACA;AACA;;;;;;;;ACPA,0BAA0B,mBAAO,CAAC,IAA8C;AAChF,cAAc,sCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB,SAAS,yBAAyB;;;;;;;;ACZzF;;;;;;;;ACAa;AACb,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,qBAAqB,mBAAO,CAAC,IAAgC;;AAE7D;AACA;AACA;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,IAA0B;AAC/C,mBAAO,CAAC,IAA4C;;AAEpD;;;;;;;;;ACJa;AACb,aAAa,kCAA+C;AAC5D,eAAe,mBAAO,CAAC,GAAwB;AAC/C,0BAA0B,mBAAO,CAAC,IAA6B;AAC/D,qBAAqB,mBAAO,CAAC,GAA8B;AAC3D,6BAA6B,mBAAO,CAAC,IAAwC;;AAE7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AC9BY;AACb;AACA;AACA;AACA;AACA;;;;;;;;;ACLa;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb;AACA,SAAS;;;;;;;;;ACFI;AACb,YAAY,mBAAO,CAAC,IAAoB;AACxC,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,iBAAiB,mBAAO,CAAC,GAAqC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,GAAG;AACH;;;;;;;;;ACnBa;AACb,wBAAwB,6CAAwD;AAChF,aAAa,mBAAO,CAAC,IAA4B;AACjD,+BAA+B,mBAAO,CAAC,IAAyC;AAChF,qBAAqB,mBAAO,CAAC,IAAgC;AAC7D,gBAAgB,mBAAO,CAAC,IAAwB;;AAEhD,+BAA+B;;AAE/B;AACA;AACA,8DAA8D,yDAAyD;AACvH;AACA;AACA;AACA;;;;;;;;;ACfA;;;;;;;;ACAa;AACb,aAAa,mBAAO,CAAC,IAAqB;;AAE1C,mBAAO,CAAC,GAAwC;AAChD,mBAAO,CAAC,IAA2C;AACnD,mBAAO,CAAC,IAAqC;AAC7C,mBAAO,CAAC,IAAsC;;AAE9C;;;;;;;;;ACRa;AACb;AACA,oBAAoB,mBAAO,CAAC,IAA6B;AACzD,6BAA6B,mBAAO,CAAC,IAAuC;;AAE5E;AACA;AACA;;;;;;;;;ACPa;AACb;;;;;;;;;ACDa;AACb,YAAY,mBAAO,CAAC,IAAoB;;AAExC;AACA,iBAAiB;AACjB;AACA;AACA;AACA,CAAC;;;;;;;;;ACRY;AACb,YAAY,mBAAO,CAAC,IAAoB;AACxC,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;ACtBa;AACb;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;;;;;;;;;ACPa;AACb,kCAAkC,mBAAO,CAAC,IAA6C;;AAEvF;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;AACb;AACA,eAAe,mBAAO,CAAC,IAAwB;AAC/C,6BAA6B,mBAAO,CAAC,IAAuC;AAC5E,kBAAkB,mBAAO,CAAC,GAA4B;AACtD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,WAAW,mBAAO,CAAC,IAAmB;AACtC,4BAA4B,mBAAO,CAAC,IAAsC;AAC1E,gBAAgB,mBAAO,CAAC,IAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;ACpFa;AACb,0CAA0D;;;;;;;;ACD1D;;;;;;;;;ACAa;AACb,aAAa,mBAAO,CAAC,IAAiC;;AAEtD;;;;;;;;;ACHa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;;AAE9D,+BAA+B;;;;;;;;;ACHlB;AACb,kBAAkB,mBAAO,CAAC,IAA2C;AACrE,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,kBAAkB,mBAAO,CAAC,IAAmC;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACbA;;;;;;;;ACAa;AACb;;;;;;;;ACDA;;;;;;;;;ACAa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,YAAY,mBAAO,CAAC,IAAoB;AACxC,cAAc,mBAAO,CAAC,IAAuB;AAC7C,eAAe,mBAAO,CAAC,IAAwB;AAC/C,eAAe,mBAAO,CAAC,IAAwB;AAC/C,wBAAwB,mBAAO,CAAC,GAAmC;AACnE,+BAA+B,mBAAO,CAAC,IAA2C;AAClF,qBAAqB,mBAAO,CAAC,IAA8B;AAC3D,yBAAyB,mBAAO,CAAC,IAAmC;AACpE,mCAAmC,mBAAO,CAAC,IAA+C;AAC1F,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,iBAAiB,mBAAO,CAAC,GAAqC;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI,wDAAwD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,YAAY;AACxD;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACzDY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,YAAY,mBAAO,CAAC,IAAoB;;AAExC;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;ACZY;AACb,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACLa;AACb,mBAAO,CAAC,IAA+B;AACvC,qBAAqB,mBAAO,CAAC,GAAkC;;AAE/D;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;ACPA;;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;ACAa;AACb;AACA,0BAA0B,mBAAO,CAAC,IAA6C;AAC/E,eAAe,mBAAO,CAAC,IAAwB;AAC/C,6BAA6B,mBAAO,CAAC,IAAuC;AAC5E,yBAAyB,mBAAO,CAAC,EAAmC;;AAEpE;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;AC5BY;AACb,aAAa,mBAAO,CAAC,IAAqB;AAC1C,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,eAAe,mBAAO,CAAC,IAAwB;AAC/C,sBAAsB,mBAAO,CAAC,IAAgC;;AAE9D;AACA;AACA;AACA;AACA;;AAEA,gGAAgG,sBAAsB;AACtH;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,gBAAgB;AACjH;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;;;;;;;;;AClCa;AACb,qBAAqB,mBAAO,CAAC,IAAqC;;AAElE;AACA;AACA;;;;;;;;;ACLa;AACb,aAAa,mBAAO,CAAC,IAAkC;;AAEvD;;;;;;;;;ACHa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCa;AACb,6BAA6B,mBAAO,CAAC,IAAuC;;AAE5E;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACTa;AACb,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,uBAAuB,mBAAO,CAAC,IAAiC;AAChE,gBAAgB,mBAAO,CAAC,IAAwB;AAChD,0BAA0B,mBAAO,CAAC,IAA6B;AAC/D,qBAAqB,6BAAgD;AACrE,qBAAqB,mBAAO,CAAC,GAA8B;AAC3D,6BAA6B,mBAAO,CAAC,IAAwC;AAC7E,cAAc,mBAAO,CAAC,IAAsB;AAC5C,kBAAkB,mBAAO,CAAC,IAA0B;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,iBAAiB;AACpD,EAAE,gBAAgB;;;;;;;;;AC7DL;AACb,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,wBAAwB,mBAAO,CAAC,IAAmC;;AAEnE;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACTa;AACb,YAAY,mBAAO,CAAC,IAAoB;;AAExC;AACA;AACA;AACA,iCAAiC,OAAO,mBAAmB,aAAa;AACxE,CAAC;;;;;;;;;ACPY;AACb;AACA;AACA;AACA,WAAW;AACX;;;;;;;;;ACLa;AACb,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACVa;AACb;AACA,4BAA4B,mBAAO,CAAC,GAAuC;;AAE3E;AACA;AACA;;;;;;;;;ACNa;AACb,aAAa,mBAAO,CAAC,IAA8B;;AAEnD;;;;;;;;;ACHa;AACb,QAAQ,mBAAO,CAAC,IAAqB;AACrC,iBAAiB,mBAAO,CAAC,IAA2B;AACpD,YAAY,mBAAO,CAAC,IAA6B;AACjD,WAAW,mBAAO,CAAC,IAA4B;AAC/C,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,YAAY,mBAAO,CAAC,IAAoB;AACxC,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,eAAe,mBAAO,CAAC,IAAwB;AAC/C,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,0BAA0B,mBAAO,CAAC,IAAyC;AAC3E,oBAAoB,mBAAO,CAAC,IAA2C;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,SAAS;AACxC;AACA,yCAAyC;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA,MAAM,8FAA8F;AACpG;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;ACxEa;AACb,kBAAkB,mBAAO,CAAC,IAAoC;AAC9D,eAAe,mBAAO,CAAC,IAAwB;;AAE/C,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACXa;AACb;AACA,iBAAiB,mBAAO,CAAC,GAAqC;AAC9D,YAAY,mBAAO,CAAC,IAAoB;AACxC,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;UClBD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACO,MAAMC,WAAW,GAAIC,MAA4C,IAAc;EACpF,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE,OAAO,IAAI;EAC3C,OACE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC,OAAOD,MAAM,CAAC;EACtD;EACC,CAACE,KAAK,CAACF,MAAgB,CAAC,IAAIG,MAAM,CAACC,SAAS,CAACJ,MAAM,CAAC,IAAIF,2CAAqB,CAACE,MAAM,CAAC,CAAC;AAE3F,CAAC;;AAED;AACA;AACA;AACO,MAAMK,IAAI,GAAIC,SAAoB,IACvCA,SAAS,CAACC,YAAY,CAACT,4CAAoB,CAAC;;ACtB9C;;AAKA;AACA;AACA;AACA;AACO,MAAeW,SAAS,SAASC,KAAK,CAAC;EAC5CC,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMC,YAAY,SAASL,SAAS,CAAC;EAC1CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;AACF;;AAEA;AACA;AACA;AACO,MAAME,SAAS,SAASN,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMG,SAAS,SAASP,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMI,YAAY,SAASR,SAAS,CAAC;EAC1CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,cAAc;EAC5B;AACF;;AAEA;AACA;AACA;AACO,MAAMK,aAAa,SAAST,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMM,aAAa,SAASV,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMO,iBAAiB,SAASX,SAAS,CAAC;EAC/CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMQ,SAAS,SAASZ,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAMS,gBAAgB,SAASb,SAAS,CAAC;EAC9CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kBAAkB;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAMU,WAAW,SAASd,SAAS,CAAC;EACzCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMW,aAAa,SAASf,SAAS,CAAC;EAC3CE,WAAWA,CAACc,YAAoB,EAAEC,WAAoB,EAAEC,aAAsB,EAAE;IAC9E,KAAK,CAAC,GAAGF,YAAY,cAAcC,WAAW,SAASC,aAAa,UAAU,CAAC;IAC/E,IAAI,CAACd,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMe,oBAAoB,SAASR,iBAAiB,CAAC;EAC1DT,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMgB,0BAA0B,SAASpB,SAAS,CAAC;EACxDE,WAAWA,CAACmB,YAAoB,EAAEC,aAAqB,EAAEC,aAAqB,EAAE;IAC9E,KAAK,CAAC,GAAGF,YAAY,YAAYC,aAAa,mBAAmBC,aAAa,UAAU,CAAC;IACzF,IAAI,CAACnB,IAAI,GAAG,4BAA4B;EAC1C;AACF;;AAEA;AACA;AACA;AACO,MAAMoB,wBAAwB,SAASxB,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMqB,iBAAiB,SAASzB,SAAS,CAAC;EAC/CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMsB,sBAAsB,SAAS1B,SAAS,CAAC;EACpDE,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kCAAkC,CAAC;IACzC,IAAI,CAACE,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMuB,oBAAoB,SAAS3B,SAAS,CAAC;EAClDE,WAAWA,CAAC0B,MAAc,EAAE;IAC1B,KAAK,CAAC,uBAAuBA,MAAM,EAAE,CAAC;IACtC,IAAI,CAACxB,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMyB,eAAe,SAAS7B,SAAS,CAAC;EAC7CE,WAAWA,CAAC4B,MAAc,EAAEC,EAAkB,EAAE;IAC9C,KAAK,CAAC,mBAAmBD,MAAM,oCAAoCC,EAAE,EAAE,CAAC;IACxE,IAAI,CAAC3B,IAAI,GAAG,iBAAiB;EAC/B;AACF;;AAEA;AACA;AACA;AACO,MAAM4B,gBAAS,SAAShC,SAAS,CAAC;EACvCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,WAAW;EACzB;AACF;;AAEA;AACA;AACA;AACO,MAAM6B,wBAAwB,SAASjC,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM8B,wBAAwB,SAASlC,SAAS,CAAC;EACtDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM+B,mBAAmB,SAASnC,SAAS,CAAC;EACjDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAMgC,uBAAuB,SAASpC,SAAS,CAAC;EACrDE,WAAWA,CAACmC,UAAkB,EAAEC,OAAe,EAAEC,SAAiB,EAAEC,SAAkB,EAAE;IACtF,KAAK,CACH,eAAeH,UAAU,YAAYC,OAAO,mBAAmBC,SAAS,EAAE,IACvEC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,MAAMA,SAAS,EAAE,CAC/C,CAAC;IACD,IAAI,CAACpC,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAMqC,UAAU,SAASzC,SAAS,CAAC;EACxCE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,YAAY;EAC1B;AACF;;AAEA;AACA;AACA;AACO,MAAMsC,aAAa,SAAS1C,SAAS,CAAC;EAC3CE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,eAAe;EAC7B;AACF;;AAEA;AACA;AACA;AACO,MAAMuC,iBAAiB,SAASD,aAAa,CAAC;EACnDxC,WAAWA,CAACC,OAAO,GAAG,yCAAyC,EAAE;IAC/D,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMwC,uBAAuB,SAASvC,YAAY,CAAC;EACxDH,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,eAAeA,OAAO,gBAAgB,CAAC;IAC7C,IAAI,CAACzC,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM0C,uBAAuB,SAASxC,SAAS,CAAC;EACrDJ,WAAWA,CAAC6C,QAAiC,EAAEC,MAAc,EAAE;IAC7D,KAAK,CAAC,QAAQD,QAAQ,4BAA4BC,MAAM,EAAE,CAAC;IAC3D,IAAI,CAAC5C,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM6C,wBAAwB,SAAS3C,SAAS,CAAC;EACtDJ,WAAWA,CAACgD,OAAkB,EAAEC,UAAqB,EAAE;IACrD,KAAK,CACH,oBAAoBD,OAAO,CAACE,QAAQ,CAAC,CAAC,kDAAkDD,UAAU,CAACC,QAAQ,CAAC,CAAC,EAC/G,CAAC;IACD,IAAI,CAAChD,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMiD,oBAAoB,SAAS/C,SAAS,CAAC;EAClDJ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMkD,sBAAsB,SAAS/C,SAAS,CAAC;EACpDL,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAAC,6BAA6BA,OAAO,EAAE,CAAC;IAC7C,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMmD,oBAAoB,SAAShD,SAAS,CAAC;EAClDL,WAAWA,CAACsD,EAAU,EAAE;IACtB,KAAK,CAAC,0CAA0CA,EAAE,EAAE,CAAC;IACrD,IAAI,CAACpD,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMqD,wBAAwB,SAASlD,SAAS,CAAC;EACtDL,WAAWA,CAACwD,SAAiC,EAAE;IAC7C,KAAK,CAAC,qCAAqCA,SAAS,EAAE,CAAC;IACvD,IAAI,CAACtD,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMuD,qBAAqB,SAASpD,SAAS,CAAC;EACnDL,WAAWA,CAACsD,EAAU,EAAE;IACtB,KAAK,CAAC,qBAAqBA,EAAE,eAAe,CAAC;IAC7C,IAAI,CAACpD,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMwD,wBAAwB,SAASrD,SAAS,CAAC;EACtDL,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wCAAwC,CAAC;IAC/C,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMyD,gBAAgB,SAASrD,YAAY,CAAC;EACjDN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,kBAAkB;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAM0D,sBAAsB,SAAStD,YAAY,CAAC;EACvDN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM2D,wBAAwB,SAASvD,YAAY,CAAC;EACzDN,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,uBAAuB,CAAC;IAC9B,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM4D,6BAA6B,SAASxD,YAAY,CAAC;EAC9DN,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,+BAA+B;EAC7C;AACF;;AAEA;AACA;AACA;AACO,MAAM6D,2BAA2B,SAASzD,YAAY,CAAC;EAK5DN,WAAWA,CAACgE,YAAmB,EAAEC,eAAuC,EAAE;IACxE,KAAK,CAACD,YAAY,CAAC/D,OAAO,CAAC;IAC3B,IAAI,CAAC+D,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAC/D,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAMgE,wBAAwB,SAAS5D,YAAY,CAAC;EACzDN,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,0CAA0C,CAAC;IACjD,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAMiE,oBAAoB,SAAS5D,aAAa,CAAC;EACtDP,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAMkE,qBAAqB,SAAS5D,aAAa,CAAC;EACvDR,WAAWA,CAACqE,MAA0C,EAAEC,OAAe,GAAG,EAAE,EAAE;IAC5E,KAAK,CAAC,YAAYD,MAAM,0DAA0D,GAAGC,OAAO,CAAC;IAC7F,IAAI,CAACpE,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMqE,sBAAsB,SAAS/D,aAAa,CAAC;EACxDR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,2BAA2B,CAAC;IAClC,IAAI,CAACE,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMsE,qBAAqB,SAAShE,aAAa,CAAC;EACvDR,WAAWA,CAACyE,eAAwC,EAAE;IACpD,KAAK,CAAC,yBAAyBA,eAAe,aAAa,CAAC;IAC5D,IAAI,CAACvE,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMwE,4BAA4B,SAASlE,aAAa,CAAC;EAC9DR,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,8BAA8B;EAC5C;AACF;;AAEA;AACA;AACA;AACO,MAAMyE,2BAA2B,SAASnE,aAAa,CAAC;EAC7DR,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAM0E,uBAAuB,SAASpE,aAAa,CAAC;EACzDR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wDAAwD,CAAC;IAC/D,IAAI,CAACE,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAM2E,wBAAwB,SAASrE,aAAa,CAAC;EAC1DR,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,2BAA2B,CAAC;IAClC,IAAI,CAACE,IAAI,GAAG,0BAA0B;EACxC;AACF;;AAEA;AACA;AACA;AACO,MAAM4E,mBAAmB,SAAStE,aAAa,CAAC;EAGrDR,WAAWA,CAACC,OAAe,EAAE8E,WAAiC,EAAE;IAC9D,KAAK,CAAC,oBAAoB9E,OAAO,IAAI,IAAI,GAAG,EAAE,GAAG,MAAMA,OAAO,GAAG,EAAE,CAAC;IACpE,IAAI,CAACC,IAAI,GAAG,qBAAqB;IACjC,IAAI,CAAC6E,WAAW,GAAGA,WAAW;EAChC;AACF;;AAEA;AACA;AACA;AACO,MAAMC,2BAA2B,SAASxE,aAAa,CAAC;EAC7DR,WAAWA,CAACE,IAAY,EAAE;IACxB,KAAK,CAAC,YAAYA,IAAI,4BAA4B,CAAC;IACnD,IAAI,CAACA,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAM+E,uBAAuB,SAASzE,aAAa,CAAC;EACzDR,WAAWA,CAACkF,MAAW,EAAEC,EAAU,EAAE;IACnC,KAAK,CACH,mBAAmBD,MAAM,kBAAkBC,EAAE,0BAA0B,GACrE,wCACJ,CAAC;IACD,IAAI,CAACjF,IAAI,GAAG,yBAAyB;EACvC;AACF;;AAEA;AACA;AACA;AACO,MAAMkF,2BAA2B,SAAS5E,aAAa,CAAC;EAC7DR,WAAWA,CAACqF,aAAqB,EAAEC,YAAqC,EAAE;IACxE,KAAK,CACH,4BAA4BD,aAAa,qBAAqBC,YAAY,EAAE,GAC1E,sDACJ,CAAC;IACD,IAAI,CAACpF,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAMqF,6BAA6B,SAAS/E,aAAa,CAAC;EAC/DR,WAAWA,CAACsF,YAAqC,EAAEE,aAAsC,EAAE;IACzF,KAAK,CACH,kCAAkCA,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,yCAAyC,GAC5F,IAAIF,YAAY,OAAOE,aAAa,CAACC,GAAG,CAAC,CAAC,CAACvF,IAAI,CAAC,KAAK,IAAIA,IAAI,GAAG,CAAC,CAACwF,IAAI,CAAC,IAAI,CAAC,YAAY,GACxF,uFACJ,CAAC;IACD,IAAI,CAACxF,IAAI,GAAG,+BAA+B;EAC7C;AACF;;AAEA;AACA;AACA;AACO,MAAMyF,oBAAoB,SAASlF,iBAAiB,CAAC;EAC1DT,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kBAAkB,CAAC;IACzB,IAAI,CAACE,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AACO,MAAM0F,2BAA2B,SAASnF,iBAAiB,CAAC;EACjET,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,wCAAwC,CAAC;IAC/C,IAAI,CAACE,IAAI,GAAG,6BAA6B;EAC3C;AACF;;AAEA;AACA;AACA;AACO,MAAM2F,sBAAsB,SAASpF,iBAAiB,CAAC;EAC5DT,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM4F,sBAAsB,SAASrF,iBAAiB,CAAC;EAC5DT,WAAWA,CAAC+F,UAAkB,EAAE;IAC9B,KAAK,CAAC,wBAAwBA,UAAU,EAAE,CAAC;IAC3C,IAAI,CAAC7F,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAM8F,sBAAsB,SAASvF,iBAAiB,CAAC;EAC5DT,WAAWA,CAACiG,MAAc,EAAE;IAC1B,KAAK,CAAC,wBAAwBA,MAAM,EAAE,CAAC;IACvC,IAAI,CAAC/F,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMgG,kBAAkB,SAASxF,SAAS,CAAC;EAChDV,WAAWA,CAACE,IAAY,EAAE;IACxB,KAAK,CAAC,kBAAkBA,IAAI,gBAAgB,CAAC;IAC7C,IAAI,CAACA,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMiG,iBAAiB,SAASzF,SAAS,CAAC;EAC/CV,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAMkG,WAAW,SAASzF,gBAAgB,CAAC;EAChDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMmG,kBAAkB,SAAS1F,gBAAgB,CAAC;EACvDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMoG,WAAW,SAAS3F,gBAAgB,CAAC;EAChDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAMqG,kBAAkB,SAAS5F,gBAAgB,CAAC;EACvDX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AAEA;AACA;AACA;AACO,MAAMsG,qBAAqB,SAAS7F,gBAAgB,CAAC;EAC1DX,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAMuG,mBAAmB,SAAS9F,gBAAgB,CAAC;EACxDX,WAAWA,CAAC0G,GAAW,EAAE;IACvB,KAAK,CAAC,qBAAqBA,GAAG,aAAa,CAAC;IAC5C,IAAI,CAACxG,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAMyG,mBAAmB,SAAShG,gBAAgB,CAAC;EACxDX,WAAWA,CAAC4G,GAAW,EAAExE,OAAe,EAAE;IACxC,KAAK,CAAC,8CAA8CwE,GAAG,YAAYxE,OAAO,EAAE,CAAC;IAC7E,IAAI,CAAClC,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACO,MAAM2G,gBAAgB,SAASlG,gBAAgB,CAAC;EACrDX,WAAWA,CAAC8C,MAAc,EAAE;IAC1B,KAAK,CAAC,qBAAqBA,MAAM,aAAa,CAAC;IAC/C,IAAI,CAAC5C,IAAI,GAAG,aAAa;EAC3B;AACF;;AAEA;AACA;AACA;AACO,MAAM4G,iBAAiB,SAASnG,gBAAgB,CAAC;EACtDX,WAAWA,CAAC+G,MAAsB,EAAE;IAClC,KAAK,CAAC,eAAeA,MAAM,wBAAwB,CAAC;IACpD,IAAI,CAAC7G,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AACO,MAAM8G,qBAAqB,SAASpG,WAAW,CAAC;EACrDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,uBAAuB;EACrC;AACF;;AAEA;AACA;AACA;AACO,MAAM+G,sBAAsB,SAASrG,WAAW,CAAC;EACtDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,wBAAwB;EACtC;AACF;;AAEA;AACA;AACA;AACO,MAAMgH,kBAAkB,SAAStG,WAAW,CAAC;EAClDZ,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,oBAAoB;EAClC;AACF;;AChwBqC;AACQ;AACD;;AAE5C;AACA;AACA;AACA;AACO,IAAKiH,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAU7B;AACA;AACA;AACA,MAAMC,sBAAsB,GAAG;EAC7B,CAACD,iBAAiB,CAACE,EAAE,GAAG,CAAC;EACzB,CAACF,iBAAiB,CAACG,OAAO,GAAG,CAAC,CAAC;EAC/B,CAACH,iBAAiB,CAACI,QAAQ,GAAG,CAAC,CAAC;EAChC,CAACJ,iBAAiB,CAACK,OAAO,GAAG,CAAC,CAAC;EAC/B,CAACL,iBAAiB,CAACM,OAAO,GAAG,CAAC,EAAE;EAChC,CAACN,iBAAiB,CAACO,QAAQ,GAAG,CAAC,EAAE;EACjC,CAACP,iBAAiB,CAACQ,MAAM,GAAG,CAAC;AAC/B,CAAU;;AAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,YAAY,GAAGA,CAC1BC,KAA2C,EAC3C;EACEC,YAAY,GAAGX,iBAAiB,CAACQ,MAAM;EACvCI,kBAAkB,GAAGZ,iBAAiB,CAACQ;AACqC,CAAC,KACpE;EACX,IAAI,CAACvI,WAAW,CAACyI,KAAK,CAAC,EAAE,MAAM,IAAIhH,aAAa,CAAC,OAAO,EAAE,UAAU,EAAEgH,KAAK,CAAC;EAE5E,OAAO,IAAI1I,iCAAS,CAAC,OAAO0I,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAAC3E,QAAQ,CAAC,CAAC,GAAG2E,KAAK,CAAC,CACvEG,SAAS,CAACZ,sBAAsB,CAACU,YAAY,CAAC,GAAGV,sBAAsB,CAACW,kBAAkB,CAAC,CAAC,CAC5FE,OAAO,CAAC,CAAC;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,IAAI,GAAGA,CAClBL,KAAkC,EAClC;EAAEC,YAAY,GAAGX,iBAAiB,CAACQ;AAA6C,CAAC,GAAG,CAAC,CAAC,KAC3EC,YAAY,CAACC,KAAK,EAAE;EAAEC,YAAY;EAAEC,kBAAkB,EAAEZ,iBAAiB,CAACE;AAAG,CAAC,CAAC;;AAE5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMc,QAAQ,GAAGA,CACtBN,KAAkC,EAClC;EAAEC,YAAY,GAAGX,iBAAiB,CAACE;AAAyC,CAAC,GAAG,CAAC,CAAC,KACvEO,YAAY,CAACC,KAAK,EAAE;EAAEC;AAAa,CAAC,CAAC;AAOlD,MAAMM,QAAkB,GAAG,CACzB;EAAElI,IAAI,EAAE,KAAK;EAAEmI,SAAS,EAAE;AAAG,CAAC,EAC9B;EAAEnI,IAAI,EAAE,MAAM;EAAEmI,SAAS,EAAE;AAAE,CAAC,EAC9B;EAAEnI,IAAI,EAAE,EAAE;EAAEmI,SAAS,EAAE;AAAE,CAAC,EAC1B;EAAEnI,IAAI,EAAE,MAAM;EAAEmI,SAAS,EAAE,CAAC;AAAG,CAAC,CACjC;AAED,MAAMC,gBAAgB,GAAIC,QAAgB,IACxCH,QAAQ,CAACI,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KACnBC,IAAI,CAACC,GAAG,CAACF,CAAC,CAACL,SAAS,GAAGE,QAAQ,CAAC,GAAGI,IAAI,CAACC,GAAG,CAACH,CAAC,CAACJ,SAAS,GAAGE,QAAQ,CAAC,GAAGG,CAAC,GAAGD,CAC5E,CAAC;AAEH,MAAMI,mBAAmB,GAAIN,QAAgB;EAAA,IAAAO,cAAA;EAAA,QAAAA,cAAA,GAC3CV,QAAQ,CAACW,IAAI,CAAEN,CAAC,IAAKA,CAAC,CAACJ,SAAS,IAAIE,QAAQ,CAAC,cAAAO,cAAA,cAAAA,cAAA,GAAIV,QAAQ,CAACA,QAAQ,CAACY,MAAM,GAAG,CAAC,CAAC;AAAA;;AAEhF;AACA;AACA;AACA;AACO,MAAMC,cAAc,GAAIC,QAAqC,IAAa;EAAA,IAAAC,QAAA;EAC/E,MAAMtB,KAAgB,GAAG,IAAI1I,iCAAS,CAAC+J,QAAQ,CAAC;EAEhD,MAAME,GAAG,IAAAD,QAAA,GAAGtB,KAAK,CAACwB,CAAC,cAAAF,QAAA,cAAAA,QAAA,GAAI,CAAC;EACxB,MAAM;IAAEjJ,IAAI;IAAEmI;EAAU,CAAC,GAAG,CAACe,GAAG,GAAG,CAAC,GAAGd,gBAAgB,GAAGO,mBAAmB,EAAEO,GAAG,CAAC;EACnF,MAAME,CAAC,GAAGzB,KAAK,CACZG,SAAS,CAAC,CAACK,SAAS,CAAC,CACrBkB,SAAS,CAAC,CAAC,GAAGZ,IAAI,CAACa,GAAG,CAACJ,GAAG,GAAGf,SAAS,EAAE,CAAC,CAAC,CAAC,CAC3CJ,OAAO,CAAC,CAAC;EACZ,OAAO,GAAGqB,CAAC,GAAGpJ,IAAI,KAAK,EAAE,GAAG,GAAG,GAAG,EAAE,GAAGA,IAAI,EAAE;AAC/C,CAAC;;;;ACnHqD;AAE/C,MAAMwJ,KAAK,GAAG,MAAOC,QAAgB,IAC1C,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACvBC,UAAU,CAACD,OAAO,EAAEF,QAAQ,CAAC;AAC/B,CAAC,CAAC;AAEG,MAAMI,SAAS,GAAGA,CACvBC,MAA+B,EAC/B7E,EAI+B,KACF8E,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACH,MAAM,CAAC,CAACvE,GAAG,CAACN,EAAE,CAAC,CAAC;;AAEjF;AACA,MAAMiF,gBAAgB,GAAG,CAAC,MAAM;EAC9B,IAAI;IACFC,MAAM,CAACC,MAAM,CAAC,CAACC,UAAU,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,OAAO,KAAK;EACd,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO,IAAI;EACb;AACF,CAAC,EAAE,CAAC;AAEG,MAAMC,aAAa,GAAGN,gBAAgB,GACzC,CAACO,IAA2B,EAAEC,WAAoB,KAChDP,MAAM,CAACC,MAAM,CACXK,IAAI,CAAClF,GAAG,CAAEoF,EAAE,IAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC,CAAC,EACjCD,WACF,CAAC,GACHP,MAAM,CAACC,MAAM;;AAEjB;AACA;AACA;AACA;AACA;AACO,SAASQ,aAAaA,CAC3BlE,GAA6B,EAC7BoD,MAAS,EACO;EAChB,OAAOpD,GAAG,IAAIoD,MAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASe,aAAaA,CAAIC,IAAS,EAAEC,KAAmB,EAAa;EAC1E,OAAOA,KAAK,CAAC3L,QAAQ,CAAC0L,IAAI,CAAC;AAC7B;AAEO,SAASE,sBAAsBA,CAACT,KAAY,EAAW;EAC5D,OACEA,KAAK,YAAYhB,6BAAS,IAC1BgB,KAAK,CAACU,UAAU,KAAK,GAAG,IACxBV,KAAK,CAACxK,OAAO,CAACX,QAAQ,CAAC,mBAAmB,CAAC;AAE/C;;AAEA;;AAOA;;AAGO,SAAS8L,WAAWA,CAACX,KAAc,EAA0B;EAClE,IAAIA,KAAK,YAAY1K,KAAK,EAAE;EAC5B,MAAM0K,KAAK;AACb;;AC5E4C;AAErC,SAASY,aAAaA,CAC3BC,OAAoB,EACA;EACpB,OAAO,IAAIC,KAAK,CACd,CAAC,CAAC,EACFtB,MAAM,CAACC,WAAW,CAEd,CACE,OAAO,EACP,WAAW,EACX,gBAAgB,EAChB,gBAAgB,EAChB,0BAA0B,EAC1B,gBAAgB,EAChB,cAAc,EACd,SAAS,EACT,mBAAmB,EACnB,KAAK,EACL,gBAAgB,EAChB,KAAK,EACL,KAAK,CACN,CACDzE,GAAG,CAAEvF,IAAI,IAAK,CACdA,IAAI,EACJ,CAACsL,CAAK,EAAE,GAAGC,IAAe,KAAK;IAC7B,MAAMC,MAAM,GAAGJ,OAAO,CAAC,CAAC;IACxB,IAAII,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI7K,aAAa,CAAC,eAAe,EAAE,SAAS,EAAE6K,MAAM,CAAC;IAC/E,IAAIxL,IAAI,KAAK,KAAK,IAAIuL,IAAI,CAAC,CAAC,CAAC,KAAK,eAAe,EAAE,OAAOC,MAAM;IAChE,MAAMC,GAAG,GAAIC,OAAO,CAAC1L,IAAI,CAAC,CAASwL,MAAM,EAAE,GAAGD,IAAI,CAAC;IACnD,OAAO,OAAOE,GAAG,KAAK,UAAU,IAAIzL,IAAI,KAAK,KAAK,GAAGyL,GAAG,CAACE,IAAI,CAACH,MAAM,CAAC,GAAGC,GAAG;EAC7E,CAAC,CACF,CACH,CACF,CAAC;AACH;AAEO,SAASG,WAAWA,CAAuBjE,KAAY,EAAS;EAAA,IAAAkE,aAAA;EACrE,QAAAA,aAAA,GAAQlE,KAAK,CAA+BkE,aAAa,cAAAA,aAAA,cAAAA,aAAA,GAAIlE,KAAK;AACpE;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACO,IAAKmE,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;;;;;;;;ACLI;AACxB;AACA;AACsC;AAC6D;AACzC;AACZ;AACA;AAEjB;;AAE7B;AACA;AACA;AACA;AACA;AACO,SAASI,UAAUA,CAACC,KAA0B,EAAU;EAC7D,OAAO,IAAIH,kBAAM,CAAC,CAAC,CAACI,MAAM,CAACD,KAAK,CAAC,CAACE,MAAM,CAAC,CAAC;AAC5C;;AAEA;AACA;AACA;AACA,MAAMC,WAAW,GAAG,CAClBR,QAAQ,CAACS,iBAAiB,EAC1BT,QAAQ,CAACU,gBAAgB,EACzBV,QAAQ,CAACW,kBAAkB,EAC3BX,QAAQ,CAACY,WAAW,EACpBZ,QAAQ,CAACa,WAAW,EACpBb,QAAQ,CAACc,cAAc,EACvBd,QAAQ,CAACe,KAAK,EACdf,QAAQ,CAACgB,GAAG,EACZhB,QAAQ,CAACiB,UAAU,EACnBjB,QAAQ,CAACkB,aAAa,EACtBlB,QAAQ,CAACmB,SAAS,CACV;AACV,MAAMC,WAAW,GAAG,CAClBpB,QAAQ,CAACqB,YAAY,EACrBrB,QAAQ,CAACsB,cAAc,EACvBtB,QAAQ,CAACuB,YAAY,EACrBvB,QAAQ,CAACwB,WAAW,EACpBxB,QAAQ,CAACyB,cAAc,EACvBzB,QAAQ,CAAC0B,OAAO,EAChB1B,QAAQ,CAAC2B,eAAe,EACxB3B,QAAQ,CAAC4B,MAAM,EACf5B,QAAQ,CAAC6B,aAAa,EACtB7B,QAAQ,CAAC8B,aAAa,EACtB9B,QAAQ,CAAC+B,cAAc,EACvB/B,QAAQ,CAACgC,gBAAgB,EACzBhC,QAAQ,CAACiC,SAAS,EAClBjC,QAAQ,CAACkC,UAAU,EACnBlC,QAAQ,CAACmC,UAAU,EACnBnC,QAAQ,CAACoC,IAAI,CACL;;AAEV;AACA;AACA;AACA,MAAMC,eAAe,GAAG;EACtB,CAACrC,QAAQ,CAACqB,YAAY,GAAG,EAAE;EAC3B,CAACrB,QAAQ,CAACsB,cAAc,GAAG,EAAE;EAC7B,CAACtB,QAAQ,CAACuB,YAAY,GAAG,EAAE;EAC3B,CAACvB,QAAQ,CAACwB,WAAW,GAAG,EAAE;EAC1B,CAACxB,QAAQ,CAACyB,cAAc,GAAG,EAAE;EAC7B,CAACzB,QAAQ,CAAC0B,OAAO,GAAG,EAAE;EACtB,CAAC1B,QAAQ,CAAC2B,eAAe,GAAG,EAAE;EAC9B,CAAC3B,QAAQ,CAAC4B,MAAM,GAAG,EAAE;EACrB,CAAC5B,QAAQ,CAAC6B,aAAa,GAAG,EAAE;EAC5B,CAAC7B,QAAQ,CAAC8B,aAAa,GAAG,EAAE;EAC5B,CAAC9B,QAAQ,CAAC+B,cAAc,GAAG,EAAE;EAC7B,CAAC/B,QAAQ,CAACgC,gBAAgB,GAAG,EAAE;EAC/B,CAAChC,QAAQ,CAACiC,SAAS,GAAG,EAAE;EACxB,CAACjC,QAAQ,CAACkC,UAAU,GAAG,EAAE;EACzB,CAAClC,QAAQ,CAACmC,UAAU,GAAG,EAAE;EACzB,CAACnC,QAAQ,CAACe,KAAK,GAAG;AACpB,CAAU;AAEV,SAASuB,iBAAiBA,CAACC,IAAgB,EAAEC,IAAc,EAAQ;EACjE,IAAI,CAAC1D,aAAa,CAAC0D,IAAI,EAAEH,eAAe,CAAC,EAAE;EAC3C,MAAMI,MAAM,GAAGJ,eAAe,CAACG,IAAI,CAAC;EACpC,IAAIC,MAAM,IAAI,IAAI,IAAIF,IAAI,CAACvF,MAAM,KAAKyF,MAAM,EAAE;EAC9C,MAAM,IAAIpI,kBAAkB,CAAC,qBAAqBoI,MAAM,eAAeF,IAAI,CAACvF,MAAM,UAAU,CAAC;AAC/F;AAEA,MAAM0F,WAAW,GAAIC,OAAmB,IAAavC,UAAU,CAACA,UAAU,CAACuC,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;AAEhG,MAAMC,WAAW,GAAIF,OAAmB,IAAajE,aAAa,CAAC,CAACiE,OAAO,EAAED,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;AAEnG,SAASG,UAAUA,CAACC,MAAc,EAAU;EAC1C,MAAMJ,OAAO,GAAGI,MAAM,CAACH,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACnC,IAAI,CAACF,WAAW,CAACC,OAAO,CAAC,CAACK,MAAM,CAACD,MAAM,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,IAAIjJ,oBAAoB,CAAC,CAAC;EACpF,OAAOgJ,OAAO;AAChB;AAEA,MAAMM,MAAM,GAAG;EACbC,MAAM,EAAGH,MAAkB,IAAKF,WAAW,CAACE,MAAM,CAAC,CAAC7L,QAAQ,CAAC,QAAQ,CAAC;EACtEiM,MAAM,EAAGC,MAAc,IAAKN,UAAU,CAACzE,MAAM,CAACG,IAAI,CAAC4E,MAAM,EAAE,QAAQ,CAAC;AACtE,CAAC;AAED,MAAMC,MAAM,GAAG;EACbH,MAAM,EAAGH,MAAkB,IAAK9C,8BAAW,CAAC4C,WAAW,CAACE,MAAM,CAAC,CAAC;EAChEI,MAAM,EAAGC,MAAc,IAAKN,UAAU,CAACzE,MAAM,CAACG,IAAI,CAACyB,8BAAW,CAACmD,MAAM,CAAC,CAAC;AACzE,CAAC;AAED,MAAME,SAAS,GAAIC,SAAkB,IAAgC;EACnE,MAAMC,UAAU,GAAGhD,WAAW,CAACzD,IAAI,CAAEyC,CAAC,IAAKA,CAAC,KAAK+D,SAAS,CAAC;EAC3D,IAAIC,UAAU,IAAI,IAAI,EAAE,OAAO,CAACA,UAAU,EAAEP,MAAM,CAAC;EACnD,MAAMQ,UAAU,GAAGrC,WAAW,CAACrE,IAAI,CAAEyC,CAAC,IAAKA,CAAC,KAAK+D,SAAS,CAAC;EAC3D,IAAIE,UAAU,IAAI,IAAI,EAAE,OAAO,CAACA,UAAU,EAAEJ,MAAM,CAAC;EACnD,MAAM,IAAIxO,aAAa,CACrB,QAAQ,EACR,UAAU,CAAC,GAAGuM,WAAW,EAAE,GAAGZ,WAAW,CAAC,CAAC9G,IAAI,CAAC,IAAI,CAAC,EAAE,EACvD6J,SACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASJ,MAAMA,CAACZ,IAAiB,EAAU;EAChD,MAAM,CAACzL,MAAM,EAAE4M,cAAc,EAAEC,KAAK,CAAC,GAAGpB,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC;EACvD,IAAIF,cAAc,IAAI,IAAI,EAAE,MAAM,IAAItJ,WAAW,CAAC,mCAAmCmI,IAAI,EAAE,CAAC;EAC5F,IAAIoB,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIvJ,WAAW,CAAC,oCAAoCmI,IAAI,EAAE,CAAC;EACpF,MAAM,CAACC,IAAI,EAAEqB,OAAO,CAAC,GAAGP,SAAS,CAACxM,MAAM,CAAC;EACzC,MAAM6L,OAAO,GAAGkB,OAAO,CAACV,MAAM,CAACO,cAAc,CAAC;EAC9CpB,iBAAiB,CAACK,OAAO,EAAEH,IAAI,CAAC;EAChC,OAAOG,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASO,MAAMA,CAAwBX,IAAgB,EAAEC,IAAU,EAAyB;EACjG,MAAM,GAAGqB,OAAO,CAAC,GAAGP,SAAS,CAACd,IAAI,CAAC;EACnCF,iBAAiB,CAACC,IAAI,EAAEC,IAAI,CAAC;EAC7B,OAAO,GAAGA,IAAI,IAAIqB,OAAO,CAACX,MAAM,CAACX,IAAI,CAAC,EAAE;AAC1C;;AChJ6B;AAC7B;AACA;AAC6C;AAEa;AACD;AACb;;AAE5C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASyB,cAAcA,CAACC,YAAoB,EAAE,GAAGC,SAAqB,EAAW;EACtF,IAAIA,SAAS,CAAClH,MAAM,KAAK,CAAC,EAAEkH,SAAS,GAAG,CAAClE,QAAQ,CAAC+B,cAAc,CAAC;EACjE,IAAI;IACFoB,MAAM,CAACc,YAA2B,CAAC;IACnC,MAAME,QAAQ,GAAGF,YAAY,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,CAAC7E,aAAa,CAACoF,QAAQ,EAAED,SAAS,CAAC,EAAE;MACvC,MAAM,IAAIrP,aAAa,CACrB,qBAAqB,EACrBqP,SAAS,CAAClH,MAAM,GAAG,CAAC,GAAG,UAAUkH,SAAS,CAACxK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAGwK,SAAS,CAAC,CAAC,CAAC,EACtEC,QACF,CAAC;IACH;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAO1F,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKO,SAAS2F,aAAaA,CAACH,YAAoB,EAAE,GAAGC,SAAqB,EAAQ;EAClFf,MAAM,CAACc,YAA2B,CAAC;EACnC,IAAIC,SAAS,CAAClH,MAAM,KAAK,CAAC,EAAE;EAC5B,MAAMmH,QAAQ,GAAGF,YAAY,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAI7E,aAAa,CAACoF,QAAQ,EAAED,SAAS,CAAC,EAAE;EACxC,MAAM,IAAIrP,aAAa,CACrB,qBAAqB,EACrBqP,SAAS,CAAClH,MAAM,GAAG,CAAC,GAAG,UAAUkH,SAAS,CAACxK,IAAI,CAAC,IAAI,CAAC,EAAE,GAAGwK,SAAS,CAAC,CAAC,CAAC,EACtEC,QACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKO,SAASE,SAASA,CAACJ,YAAoB,EAAE,GAAGC,SAAqB,EAAW;EACjF,IAAI;IACFE,aAAa,CAACH,YAAY,EAAE,GAAGC,SAAS,CAAC;IACzC,OAAO,IAAI;EACb,CAAC,CAAC,OAAOzF,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAAS6F,OAAOA,CAAA,EAAW;EAChC,MAAM,CAACC,MAAM,CAAC,GAAG,IAAIC,cAAc,CAACV,wCAAgB,CAAC,CAAC,CAAC,CAACf,MAAM,CAAC;EAC/D,OAAOvP,MAAM,CAAC+Q,MAAM,GAAGG,MAAM,CAAClR,MAAM,CAACmR,gBAAgB,CAAC,CAAC;AACzD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,cAAcA,CAAC/I,KAAa,EAAU;EACpD,MAAMgJ,MAAM,GAAGxG,MAAM,CAACyG,WAAW,CAAC,CAAC,CAAC;EACpCD,MAAM,CAACE,aAAa,CAAClJ,KAAK,CAAC;EAC3B,OAAOgJ,MAAM,CAACG,QAAQ,CAACH,MAAM,CAACI,SAAS,CAAEC,CAAC,IAAKA,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,IAAIA,CAAC9E,KAA0B,EAAU;EACvD,OAAOhC,MAAM,CAACG,IAAI,CAACuF,mBAAO,CAAC1D,KAAK,EAAE+E,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAC7B9C,IAAgB,EAChB+C,SAAqB,EACrB3O,OAA+B,EACtB;EACT,OAAOmN,iCAAS,CAAC0B,QAAQ,CAACC,MAAM,CAAClD,IAAI,EAAE+C,SAAS,EAAEnC,MAAM,CAACxM,OAAO,CAAC,CAAC;AACpE;AAEO,SAAS+O,aAAaA,CAAC7J,KAAa,EAAU;EACnD,IAAIA,KAAK,GAAG,IAAI,EAAE;IAChB,OAAOwC,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,CAAC,CAAC;EAC7B;EACA,IAAIA,KAAK,IAAI,MAAM,EAAE;IACnB,OAAO6C,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAEH,MAAM,CAACG,IAAI,CAAC,IAAImH,WAAW,CAAC,CAAC9J,KAAK,CAAC,CAAC,CAACkH,MAAM,CAAC,CAAC,CAAC;EAC3F;EACA,IAAIlH,KAAK,IAAI,UAAU,EAAE;IACvB,OAAO6C,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAEH,MAAM,CAACG,IAAI,CAAC,IAAIoH,WAAW,CAAC,CAAC/J,KAAK,CAAC,CAAC,CAACkH,MAAM,CAAC,CAAC,CAAC;EAC3F;EACA,OAAOrE,aAAa,CAAC,CACnBL,MAAM,CAACG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EACnBH,MAAM,CAACG,IAAI,CAAC,IAAIgG,cAAc,CAAC,CAACE,MAAM,CAAC7I,KAAK,CAAC,CAAC,CAAC,CAACkH,MAAM,CAAC,CACxD,CAAC;AACJ;AAEA,MAAM8C,aAAa,GAAGxH,MAAM,CAACG,IAAI,CAAC,6BAA6B,EAAE,MAAM,CAAC;AACjE,MAAMsH,mBAAmB,GAAGJ,aAAa,CAACG,aAAa,CAAC7I,MAAM,CAAC;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACO,SAAS+I,WAAWA,CAAC9R,OAAe,EAAU;EACnD,MAAM+R,GAAG,GAAG3H,MAAM,CAACG,IAAI,CAACvK,OAAO,EAAE,MAAM,CAAC;EACxC,OAAOkR,IAAI,CAACzG,aAAa,CAAC,CAACoH,mBAAmB,EAAED,aAAa,EAAEH,aAAa,CAACM,GAAG,CAAChJ,MAAM,CAAC,EAAEgJ,GAAG,CAAC,CAAC,CAAC;AAClG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CACpChS,OAAe,EACfqR,SAAqB,EACrB3O,OAA+B,EACtB;EACT,OAAO0O,eAAe,CAACU,WAAW,CAAC9R,OAAO,CAAC,EAAEqR,SAAS,EAAE3O,OAAO,CAAC;AAClE;;AC9LqC;AAC2B;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuP,OAAOA,CAACC,GAAwC,EAAEC,GAAG,GAAG,KAAK,EAAU;EACrF;EACA;EACA;;EAEA,IAAID,GAAG,IAAI,IAAI,EAAE,OAAO9H,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC;EACvC,IAAIhL,MAAM,CAACC,SAAS,CAAC0S,GAAG,CAAC,IAAIhT,2CAAqB,CAACgT,GAAG,CAAC,IAAIC,GAAG,EAAE;IAC9D,IAAI,CAACjT,2CAAqB,CAACgT,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAIhT,iCAAS,CAACgT,GAAG,CAAC;IACzD,IAAI,CAACA,GAAG,CAAC1S,SAAS,CAAC,CAAC,EAAE,MAAM,IAAIqC,gBAAS,CAAC,iCAAiCqQ,GAAG,CAAClK,OAAO,CAAC,CAAC,EAAE,CAAC;IAC3F,IAAIoK,SAAS,GAAGF,GAAG,CAACjP,QAAQ,CAAC,EAAE,CAAC;IAChC,IAAImP,SAAS,CAACrJ,MAAM,GAAG,CAAC,KAAK,CAAC,EAAEqJ,SAAS,GAAG,IAAIA,SAAS,EAAE;IAC3D,OAAOhI,MAAM,CAACG,IAAI,CAAC6H,SAAS,EAAE,KAAK,CAAC;EACtC;EACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;IAC3B,OAAO9H,MAAM,CAACG,IAAI,CAAC2H,GAAG,CAAC;EACzB;EACA,MAAM,IAAI3Q,sBAAsB,CAAC,CAAC;AACpC;;AC7BqC;AACY;;AAEjD;AACA;AACA;AACO,MAAM8Q,eAAe,GAAG;EAC7BC,GAAG,EAAE,2CAA2C;EAChDrN,MAAM,EAAE;AACV,CAAU;;AAEV;AACA;AACA;AACA;AACO,MAAMsN,gBAAgB,GAAG,KAAK;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACO,MAAMC,aAAa,GAAG,GAAG,CAAC,CAAC;AAClC;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACO,MAAMC,sBAAsB,GAAG,IAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,uBAAuB,GAAG,GAAG;AAC1C;AACA;AACA;AACA;AACA;AACO,MAAMC,mBAAmB,GAAG,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,eAAe,GAAG/I,SAAS,CACtC;EACE,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,CAAC;EACL,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,EAAE;EACN,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,GAAG;EACP,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,IAAI;EACR,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,EAAE,EAAE,KAAK;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,MAAM;EACT,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,OAAO;EACV,CAAC,EAAE,OAAO;EACV,CAAC,EAAE;AACL,CAAC,EACD,CAAC,CAACnD,GAAG,EAAEiB,KAAK,CAAC,KAAK,CAACjB,GAAG,EAAE,IAAIzH,iCAAS,CAAC0I,KAAK,CAAC,CAACkL,KAAK,CAACL,mBAAmB,CAAC,CACzE,CAAC;;AAED;AACA;AACA;AACO,IAAKM,wBAAwB,0BAAxBA,wBAAwB;EAAxBA,wBAAwB,CAAxBA,wBAAwB;EAAA,OAAxBA,wBAAwB;AAAA;;AAIpC;AACA;AACA;AACA;AACO,IAAKC,SAAS,0BAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA;;AAWrB;AACA;AACA;AACA;AACO,IAAKC,UAAU,0BAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAVA,UAAU,CAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;;AAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAKC,GAAG,0BAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAAHA,GAAG,CAAHA,GAAG;EAKb;AACF;AACA;EAPYA,GAAG,CAAHA,GAAG;EASbvIsB;AACiB;AACqB;AAC5B;AACM;AAM7B;AACwB;AAC0B;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,eAAeA,CAC7BC,KAA6B,EAC7BC,KAAyB,EACA;EACzB,MAAMC,eAAe,GAAGlJ,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG2E,MAAM,CAACkE,KAAK,CAAC,EAAE,GAAGnB,OAAO,CAACoB,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAME,OAAO,GAAGrC,IAAI,CAACoC,eAAe,CAAC;EACrC,OAAOrE,MAAM,CAACsE,OAAO,EAAExH,QAAQ,CAAC2B,eAAe,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS8F,aAAaA,CAC3BC,QAAgC,EAChCJ,KAAkC,EAClCK,QAA+B,EACR;EACvB,SAASC,MAAMA,CAACzB,GAAgC,EAAU;IACxD,MAAM0B,OAAO,GAAG3B,OAAO,CAACC,GAAG,EAAE,IAAI,CAAC;IAClC,OAAOzH,aAAa,CAAC,CAACL,MAAM,CAACyJ,KAAK,CAAC,EAAE,GAAGD,OAAO,CAAC7K,MAAM,CAAC,EAAE6K,OAAO,CAAC,CAAC;EACpE;EAEA,MAAML,OAAO,GAAGrC,IAAI,CAAC9G,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG2E,MAAM,CAACuE,QAAQ,CAAC,EAAE,GAAGE,MAAM,CAACN,KAAK,CAAC,EAAE,GAAGnE,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/F,OAAOzE,MAAM,CAACsE,OAAO,EAAExH,QAAQ,CAAC8B,aAAa,CAAC;AAChD;AAEA,MAAMiG,WAAW,GAAG,QAAQ;AAErB,SAASC,cAAcA,CAACC,SAAiB,EAAY;EAC1D,MAAM,CAAC/T,IAAI,EAAEgU,MAAM,EAAE,GAAGC,KAAK,CAAC,GAAGF,SAAS,CAACrE,KAAK,CAAC,GAAG,CAAC;EACrD,IAAIuE,KAAK,CAACnL,MAAM,KAAK,CAAC,EAAE,MAAM,IAAInI,aAAa,CAAC,WAAW,EAAE,wBAAwB,EAAEoT,SAAS,CAAC;EACjG,IAAIC,MAAM,KAAKH,WAAW,CAACnF,KAAK,CAAC,CAAC,CAAC,EAAE;IACnC,MAAM,IAAI/N,aAAa,CAAC,WAAW,EAAE,iBAAiBkT,WAAW,EAAE,EAAEE,SAAS,CAAC;EACjF;EACA,IAAI,yBAAyB,CAACG,IAAI,CAAClU,IAAI,CAAC,EAAE;IACxC,MAAM,IAAIW,aAAa,CAAC,WAAW,EAAE,sBAAsB,EAAEoT,SAAS,CAAC;EACzE;EACA,IAAI/T,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACtC,MAAM,IAAIW,aAAa,CACrB,WAAW,EACX,yDAAyD,EACzDoT,SACF,CAAC;EACH;EACA,IAAI/T,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACnB,MAAM,IAAIW,aAAa,CAAC,WAAW,EAAE,2BAA2B,EAAEoT,SAAS,CAAC;EAC9E;EACA,IAAI/T,IAAI,CAACmU,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvB,MAAM,IAAIxT,aAAa,CAAC,WAAW,EAAE,yBAAyB,EAAEoT,SAAS,CAAC;EAC5E;EACA,IAAIK,QAAQ;EACZ,IAAI;IACF,MAAMC,CAAC,GAAG,IAAIC,GAAG,CAAC,UAAUtU,IAAI,IAAIgU,MAAM,EAAE,CAAC;IAC7C,IAAIK,CAAC,CAACE,QAAQ,GAAGF,CAAC,CAACG,QAAQ,GAAGH,CAAC,CAACI,IAAI,GAAGJ,CAAC,CAACK,MAAM,GAAGL,CAAC,CAACpD,IAAI,KAAK,EAAE,IAAIoD,CAAC,CAACM,QAAQ,KAAK,GAAG,EAAE;MACrF,MAAM,IAAIhU,aAAa,CAAC,WAAW,EAAE,OAAO,EAAEoT,SAAS,CAAC;IAC1D;IACAK,QAAQ,GAAGC,CAAC,CAACO,IAAI;EACnB,CAAC,CAAC,OAAOrK,KAAK,EAAE;IACd,IAAIA,KAAK,YAAY3I,SAAS,IAAI2I,KAAK,CAACxK,OAAO,CAACX,QAAQ,CAAC,aAAa,CAAC,EAAE;MACvE,MAAM,IAAIuB,aAAa,CAAC,WAAW,EAAE,OAAO,EAAEoT,SAAS,CAAC;IAC1D;IACA,MAAMxJ,KAAK;EACb;EACA,IAAI,CAAC,gBAAgB,CAAC2J,IAAI,CAACE,QAAQ,CAAC,EAAE;IACpC,MAAM,IAAIzT,aAAa,CAAC,WAAW,EAAE,uBAAuB,EAAEoT,SAAS,CAAC;EAC1E;EACA,IAAIK,QAAQ,CAACtL,MAAM,GAAG,EAAE,GAAG+K,WAAW,CAAC/K,MAAM,EAAE;IAC7C,MAAM,IAAInI,aAAa,CAAC,WAAW,EAAE,cAAc,EAAEoT,SAAS,CAAC;EACjE;EACA,OAAOK,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,aAAaA,CAAC7U,IAAc,EAAgB;EAC1D,OAAOgP,MAAM,CAACiC,IAAI,CAAC6C,cAAc,CAAC9T,IAAI,CAAC,CAAC,EAAE8L,QAAQ,CAACoC,IAAI,CAAC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4G,cAAcA,CAAC9U,IAAc,EAAE+U,IAAY,GAAG3E,OAAO,CAAC,CAAC,EAAsB;EAC3F,OAAOpB,MAAM,CACXiC,IAAI,CACFzG,aAAa,CAAC,CACZL,MAAM,CAACG,IAAI,CAACwJ,cAAc,CAAC9T,IAAI,CAAC,CAAC,EACjCmK,MAAM,CAACG,IAAI,CAACyK,IAAI,CAAC/R,QAAQ,CAAC,EAAE,CAAC,CAACgS,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CACxD,CACH,CAAC,EACDlJ,QAAQ,CAACkC,UACX,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASiH,OAAOA,CAACpG,MAAkB,GAAG1E,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC,EAAU;EACpE,OAAOkG,MAAM,CAAC,IAAI,GAAGrG,MAAM,CAACG,IAAI,CAACuE,MAAM,CAAC,CAAC7L,QAAQ,CAAC,KAAK,CAAC,CAAC,CAACA,QAAQ,CAAC,CAAC;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASkS,UAAUA,CAACnB,SAAiB,EAAiC;EAC3ED,cAAc,CAACC,SAAS,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASoB,MAAMA,CAACpB,SAAiB,EAAyB;EAC/D,IAAI;IACFmB,UAAU,CAACnB,SAAS,CAAC;IACrB,OAAO,IAAI;EACb,CAAC,CAAC,OAAOxJ,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;AAEA,MAAM6K,oBAAoB,GAAG,CAC3B,CAACtJ,QAAQ,CAAC+B,cAAc,EAAE,gBAAgB,CAAC,EAC3C,CAAC/B,QAAQ,CAAC6B,aAAa,EAAE,eAAe,CAAC,EACzC,CAAC7B,QAAQ,CAAC2B,eAAe,EAAE,iBAAiB,CAAC,EAC7C,CAAC3B,QAAQ,CAAC0B,OAAO,EAAE,SAAS,CAAC,CACrB;;AAEV;AACA;AACA;AACA;AACA;AACO,SAAS6H,oBAAoBA,CAClCC,UAAqE,EAC3B;EAC1CrG,MAAM,CAACqG,UAAU,CAAC;EAClB,MAAMrF,QAAQ,GAAGqF,UAAU,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3C,MAAMC,MAAM,GAAGJ,oBAAoB,CAACvM,IAAI,CAAC,CAAC,CAACM,CAAC,CAAC,KAAKA,CAAC,KAAK8G,QAAQ,CAAC,GAAG,CAAC,CAAC;EACtE,IAAIuF,MAAM,IAAI,IAAI,EAAE,OAAOA,MAAM;EACjC,MAAM,IAAI7U,aAAa,CACrB,YAAY,EACZ,wBAAwByU,oBAAoB,CAAC7P,GAAG,CAAC,CAAC,CAAC4D,CAAC,CAAC,KAAK,GAAGA,CAAC,GAAG,CAAC,CAAC3D,IAAI,CAAC,IAAI,CAAC,EAAE,EAC/E8P,UACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,iBAAiBA,CAACzV,IAAc,EAAa;EAC3D,MAAM0V,UAAU,GAAG5B,cAAc,CAAC9T,IAAI,CAAC,CAAC8I,MAAM,GAAG+K,WAAW,CAAC/K,MAAM;EACnE,OAAO8J,eAAe,CAACnK,IAAI,CAACa,GAAG,CAACoM,UAAU,EAAE/C,mBAAmB,CAAC,CAAC;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASgD,aAAaA,CAC3B3V,IAAc,EACd;EACE4V,QAAQ;EACRC,SAAS,GAAGpD,sBAAsBA;AAC4B,CAAC,GAAG,CAAC,CAAC,EAC3D;EACX,IAAI,EAAEnT,MAAM,CAACuW,SAAS,CAAC,KAAKA,SAAS,IAAIA,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,EAC3D,MAAM,IAAIxP,kBAAkB,CAAC,8CAA8CwP,SAAS,EAAE,CAAC;EACzF,IAAIA,SAAS,GAAGpD,sBAAsB,EACpC,MAAM,IAAIpM,kBAAkB,CAAC,mCAAmCoM,sBAAsB,EAAE,CAAC;EAC3F;EACA,OAAOjT,IAAI,CACT,IAAIP,iCAAS,CAAC2W,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIH,iBAAiB,CAACzV,IAAI,CAAC,CAAC,CAAC6S,KAAK,CACtD,IAAI5T,iCAAS,CAACwT,sBAAsB,CAAC,CAACqD,IAAI,CAAC,CAAC,CAC9C,CACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,sBAAsBA,CAAC/V,IAAc,EAAEgW,WAAmB,EAAU;EAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,KAAA;EAClF,MAAMrN,MAAM,GAAGgL,cAAc,CAAC9T,IAAI,CAAC,CAAC8I,MAAM,GAAG+K,WAAW,CAAC/K,MAAM;EAC/D,MAAMsN,CAAC,IAAAH,IAAA,IAAAC,KAAA,IAAAC,KAAA,GACJrN,MAAM,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,cAAAqN,KAAA,cAAAA,KAAA,GAAMrN,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,cAAAoN,KAAA,cAAAA,KAAA,GAAMpN,MAAM,IAAI,EAAE,GAAG,GAAG,GAAG,IAAI,cAAAmN,IAAA,cAAAA,IAAA,GAAK,CAAC;EAC/F,OAAOG,CAAC,GAAGJ,WAAW;AACxB;;AAEA;AACA;AACA;AACA;AACO,SAASK,aAAaA,CAACrW,IAAc,EAAW;EACrD,OAAO8T,cAAc,CAAC9T,IAAI,CAAC,CAAC8I,MAAM,GAAG,EAAE,GAAG+K,WAAW,CAAC/K,MAAM;AAC9D;;ACpQ8E;AACb;AACb;AACY;AACM;AAQ3C;AAG4C;AAEvE,eAAewN,gBAAgBA,CAC7BhI,IAAiC,EACjC;EACEiI,iBAAiB;EACjBC,gBAAgB;EAChBC;AACuE,CAAC,EACzD;EACjB,IAAIF,iBAAiB,IAAI,IAAI,IAAIjI,IAAI,KAAK,WAAW,EAAE,OAAOiI,iBAAiB;EAC/E,IAAIC,gBAAgB,IAAI,IAAI,IAAIlI,IAAI,KAAK,aAAa,EAAE,OAAOkI,gBAAgB;EAE/E,MAAME,SAAS,GAAG,MAAMD,MAAM,CAACE,YAAY,CAAC,CAAC;EAC7C,IAAID,SAAS,KAAK,QAAQ,EAAE,OAAO,CAAC;EACpC,IAAI,CAAC,CAAC,YAAY,EAAE,QAAQ,CAAC,CAACtX,QAAQ,CAACsX,SAAS,CAAC,KAAK,MAAMD,MAAM,CAACG,aAAa,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI;EAEhG,IAAItI,IAAI,KAAK,WAAW,EAAE,OAAO,MAAM,CAAC,KACnC,OAAO,IAAI;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACO,eAAeuI,gBAAgBA,CACpCvI,IAA4C,EAC5CwI,OAA+C,EAC9B;EACjB,OAAOrO,IAAI,CAACsO,KAAK,CAAC,CAAC,MAAMT,gBAAgB,CAAChI,IAAI,EAAEwI,OAAO,CAAC,IAAI,CAAC,CAAC;AAChE;AAEA,MAAME,WAA4D,GAAG,IAAIC,OAAO,CAAC,CAAC;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,SAASA,CAAC;EAC9BC,MAAM,GAAG,KAAK;EACd,GAAGL;AAIoC,CAAC,EAAmB;EAC3D,MAAML,MAAM,GAAG7K,WAAW,CAACkL,OAAO,CAACL,MAAM,CAAC;EAC1C,IAAIU,MAAM,EAAE;IACV,MAAMC,KAAK,GAAGJ,WAAW,CAACK,GAAG,CAACZ,MAAM,CAAC;IACrC,IAAIW,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACE,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAI,MAAMX,gBAAgB,CAAC,WAAW,EAAEC,OAAO,CAAC,CAAC,EAAE;MAC7F,OAAOM,KAAK,CAAC5V,MAAM;IACrB;EACF;EACA,MAAM;IAAEA;EAAO,CAAC,GAAG,MAAMiV,MAAM,CAACgB,wBAAwB,CAAC,CAAC;EAC1DT,WAAW,CAACU,GAAG,CAACjB,MAAM,EAAE;IAAEjV,MAAM;IAAE8V,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CAAC;EACrD,OAAOhW,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemW,IAAIA,CACxBhW,EAAkB,EAClB;EACED,MAAM,GAAG,CAAC;EACVkW,QAAQ;EACR,GAAGd;AAC0F,CAAC,EACtD;EAC1Cc,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAARA,QAAQ,GAAK,MAAMf,gBAAgB,CAAC,aAAa,EAAEC,OAAO,CAAC;EAC3D,IAAIe,GAAG;EACP,GAAG;IACD,MAAMC,EAAE,GAAG,MAAMhB,OAAO,CAACL,MAAM,CAACsB,oBAAoB,CAACpW,EAAE,CAAC;IACxD,IAAImW,EAAE,CAACE,WAAW,KAAK,CAAC,CAAC,EAAE,OAAOF,EAAE;IACpC,IAAID,GAAG,IAAI,IAAI,EAAE;MACfA,GAAG,GAAGC,EAAE,CAACA,EAAE,CAACG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAMf,SAAS,CAAC;QAAE,GAAGJ,OAAO;QAAEK,MAAM,EAAE;MAAK,CAAC,CAAC,IAAIzV,MAAM;IACvF;IACA,MAAM8H,KAAK,CAACoO,QAAQ,CAAC;EACvB,CAAC,QAAQC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,MAAMX,SAAS,CAAC;IAAE,GAAGJ,OAAO;IAAEK,MAAM,EAAE;EAAK,CAAC,CAAC,IAAIU,GAAG;EAClF,MAAM,IAAIpW,eAAe,CAACC,MAAM,EAAEC,EAAE,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeuW,WAAWA,CAC/B1W,MAAc,EACd;EACEoW,QAAQ;EACR,GAAGd;AACyE,CAAC,EAC9D;EACjBc,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAARA,QAAQ,GAAKnP,IAAI,CAACa,GAAG,CAAC,MAAMuN,gBAAgB,CAAC,WAAW,EAAEC,OAAO,CAAC,EAAE,IAAI,CAAC;EACzE,IAAIqB,aAAa;EACjB,GAAG;IACD,IAAIA,aAAa,IAAI,IAAI,EAAE,MAAM3O,KAAK,CAACoO,QAAQ,CAAC;IAChDO,aAAa,GAAG,MAAMjB,SAAS,CAACJ,OAAO,CAAC;EAC1C,CAAC,QAAQqB,aAAa,GAAG3W,MAAM;EAC/B,OAAO2W,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,gBAAgBA,CACpCvR,MAAsB,EACtB;EACEwR,OAAO,GAAG,CAAC;EACX5B,MAAM;EACN,GAAGK;AACmE,CAAC,EACxD;EACjB,MAAM;IAAEkB;EAAY,CAAC,GAAG,MAAMvB,MAAM,CAACsB,oBAAoB,CAAClR,MAAM,CAAC;EACjE,MAAMrF,MAAM,GAAG,MAAM0W,WAAW,CAACF,WAAW,GAAGK,OAAO,EAAE;IAAE5B,MAAM;IAAE,GAAGK;EAAQ,CAAC,CAAC;EAC/E,MAAM;IAAEkB,WAAW,EAAEM;EAAe,CAAC,GAAG,MAAM7B,MAAM,CAACsB,oBAAoB,CAAClR,MAAM,CAAC;EACjF,QAAQyR,cAAc;IACpB,KAAK,CAAC,CAAC;MACL,MAAM,IAAI1R,iBAAiB,CAACC,MAAM,CAAC;IACrC,KAAKmR,WAAW;MACd,OAAOxW,MAAM;IACf;MACE,OAAO4W,gBAAgB,CAACvR,MAAM,EAAE;QAAE4P,MAAM;QAAE4B,OAAO;QAAE,GAAGvB;MAAQ,CAAC,CAAC;EACpE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeyB,UAAUA,CAC9B9V,OAAyD,EACzD;EACEjB,MAAM;EACNyP,IAAI;EACJwF;AACuF,CAAC,EAClD;EACxC,IAAIjV,MAAM,IAAI,IAAI,EAAE,OAAOiV,MAAM,CAAC+B,2BAA2B,CAAC/V,OAAO,EAAEjB,MAAM,CAAC;EAC9E,IAAIyP,IAAI,IAAI,IAAI,EAAE,OAAOwF,MAAM,CAACgC,yBAAyB,CAAChW,OAAO,EAAEwO,IAAI,CAAC;EACxE,OAAOwF,MAAM,CAACiC,kBAAkB,CAACjW,OAAO,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAekW,UAAUA,CAC9BlW,OAAiF,EACjF;EACE;AACJ;AACA;EACImW,MAAM,GAAG3R,iBAAiB,CAACQ,MAAM;EACjC,GAAGqP;AAC8D,CAAC,EACnD;EACjB,MAAM+B,IAAI,GAAGpW,OAAO,CAACqW,UAAU,CAAC,KAAK,CAAC,GAClC9J,MAAM,CAACC,MAAM,CAACxM,OAAO,CAAC,EAAEqJ,QAAQ,CAAC+B,cAAc,CAAC,GAC/CpL,OAA4D;EAEjE,MAAM;IAAEsW;EAAQ,CAAC,GAAG,MAAMR,UAAU,CAACM,IAAI,EAAE/B,OAAO,CAAC,CAACkC,KAAK,CAAEzO,KAAK,IAAK;IACnE,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO;MAAEwO,OAAO,EAAE;IAAG,CAAC;EACxB,CAAC,CAAC;EAEF,OAAOrR,YAAY,CAACqR,OAAO,EAAE;IAAElR,kBAAkB,EAAE+Q;EAAO,CAAC,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeK,oBAAoBA,CAAC;EACzCxC;AAGF,CAAC,EAA4C;EAC3C,OAAOA,MAAM,CAACwC,oBAAoB,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,aAAaA,CACjCC,YAA2C,EAC3C;EAAE1C;AAAyB,CAAC,EACa;EACzC,IAAI,OAAO0C,YAAY,KAAK,QAAQ,EAAE,OAAO1C,MAAM,CAAC2C,qBAAqB,CAACD,YAAY,CAAC;EACvF,OAAO1C,MAAM,CAAC4C,mBAAmB,CAACF,YAAY,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,yBAAyBA,CAC7CrI,IAA4B,EAC5B;EAAEwF;AAAyB,CAAC,EACP;EACrB,OAAO,CAAC,MAAMA,MAAM,CAAC8C,+BAA+B,CAACtI,IAAI,CAAC,EAAEuI,YAAY;AAC1E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,WAAWA,CAC/BN,YAA2C,EAC3C;EAAE1C;AAAyB,CAAC,EACW;EACvC,IAAI,OAAO0C,YAAY,KAAK,QAAQ,EAAE,OAAO1C,MAAM,CAACiD,mBAAmB,CAACP,YAAY,CAAC;EACrF,OAAO1C,MAAM,CAACkD,iBAAiB,CAACR,YAAY,CAAC;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeS,mBAAmBA,CACvC3I,IAA4B,EAC5B;EAAEwF;AAAyB,CAAC,EACmB;EAC/C,OAAOA,MAAM,CAACoD,yBAAyB,CAAC5I,IAAI,CAAC;AAC/C;AAUA,MAAM6I,gBAAiF,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEnG,eAAeC,eAAeA,CAACtT,GAAW,EAAE+P,MAAY,EAAiB;EACvE,MAAMwD,EAAE,GAAGH,gBAAgB,CAACzC,GAAG,CAAC3Q,GAAG,CAAC;EACpCoT,gBAAgB,CAACI,MAAM,CAACxT,GAAG,CAAC;EAC5B,IAAIuT,EAAE,IAAI,IAAI,EAAE,MAAM,IAAI3X,aAAa,CAAC,2BAA2B,CAAC;EAEpE,IAAI6X,SAAS;EACb,IAAI;IACF,MAAMC,GAAG,GACP,OAAOH,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG,KAAK,QAAQ,GACzB,CAAC,MAAM3D,MAAM,CAACiD,mBAAmB,CAACO,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG,CAAC,EAAEnJ,IAAI,GAClDgJ,EAAE,CAAC,CAAC,CAAC,CAACG,GAAG;IACfD,SAAS,GAAG,MAAM1D,MAAM,CAAC4D,kBAAkB,CAAC;MAC1CD,GAAG;MACHE,QAAQ,EAAEL,EAAE,CAAC,CAAC,CAAC,CAACK,QAAQ;MACxBC,GAAG,EAAEN,EAAE,CAAC1U,GAAG,CAAEiV,GAAG,KAAM;QAAE1C,EAAE,EAAE0C,GAAG,CAAC1C;MAAG,CAAC,CAAC,CAAC;MACtC2C,QAAQ,EAAEC,KAAK,CAACpQ,IAAI,CAAC,IAAIqQ,GAAG,CAACV,EAAE,CAAC1U,GAAG,CAAEiV,GAAG,IAAKA,GAAG,CAACI,cAAc,CAAC,CAAC,CAAC,CAACrV,GAAG,CAAEsV,MAAM,KAAM;QAClFA,MAAM;QACN7V,MAAM,EAAEoN,eAAe,CAACpN;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOuF,KAAK,EAAE;IACd0P,EAAE,CAACa,OAAO,CAAC,CAAC;MAAEC;IAAO,CAAC,KAAKA,MAAM,CAACxQ,KAAK,CAAC,CAAC;IACzC;EACF;EAEA,MAAM;IAAEyQ,OAAO;IAAEV;EAAS,CAAC,GAAGH,SAAS;EACvCa,OAAO,CAACF,OAAO,CAAC,CAAC;IAAEtF,MAAM;IAAEyF,MAAM;IAAE,GAAGC;EAAc,CAAC,EAAEC,GAAG,KAAK;IAC7D,MAAM;MAAExR,OAAO;MAAEoR,MAAM;MAAEjD,EAAE;MAAE8C;IAAe,CAAC,GAAGX,EAAE,CAACkB,GAAG,CAAC;IACvD,IAAI3F,MAAM,KAAK,IAAI,EAAE7L,OAAO,CAAC;MAAE,GAAGuR,aAAa;MAAEZ;IAAS,CAAC,CAAC,CAAC,KACxDS,MAAM,CAAChR,MAAM,CAACqR,MAAM,CAAC,IAAIhV,WAAW,CAAC6U,MAAgB,CAAC,EAAE;MAAEnD,EAAE;MAAE8C;IAAe,CAAC,CAAC,CAAC;EACvF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeS,QAAQA,CAC5BvD,EAAuB,EACvB8C,cAAsC,EACtC;EACER,GAAG;EACHE,QAAQ;EACRgB,OAAO;EACP7E;AACuF,CAAC,EACxB;EAAA,IAAA8E,qBAAA;EAClE,MAAM7U,GAAG,GAAG4U,OAAO,KAAK,IAAI,GAAG,CAAClB,GAAG,EAAEE,QAAQ,CAAC,CAAC9U,IAAI,CAAC,CAAC,GAAG,WAAW;EACnE,MAAMgW,QAAQ,IAAAD,qBAAA,GAAGzB,gBAAgB,CAACzC,GAAG,CAAC3Q,GAAG,CAAC,cAAA6U,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EAChDzB,gBAAgB,CAACpC,GAAG,CAAChR,GAAG,EAAE8U,QAAQ,CAAC;EACnC,OAAO,IAAI9R,OAAO,CAAC,CAACC,OAAO,EAAEoR,MAAM,KAAK;IAAA,IAAAU,iBAAA;IACtCD,QAAQ,CAACE,IAAI,CAAC;MACZ5D,EAAE;MACF8C,cAAc;MACdR,GAAG;MACHE,QAAQ;MACR3Q,OAAO;MACPoR;IACF,CAAC,CAAC;IACF,IAAIO,OAAO,KAAK,IAAI,EAAE;MACpB,KAAKtB,eAAe,CAACtT,GAAG,EAAE+P,MAAM,CAAC;MACjC;IACF;IACA,CAAAgF,iBAAA,GAAAD,QAAQ,CAACG,OAAO,cAAAF,iBAAA,cAAAA,iBAAA,GAAhBD,QAAQ,CAACG,OAAO,GAAK/R,UAAU,CAAC,MAAM;MACpC,KAAKoQ,eAAe,CAACtT,GAAG,EAAE+P,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemF,mBAAmBA,CACvCC,UAAmC,EACnC;EAAEpF;AAAyB,CAAC,EACS;EACrC,OAAOA,MAAM,CAACqF,eAAe,CAACD,UAAU,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeE,WAAWA,CAC/BF,UAAmC,EACnC;EAAEpF;AAAyB,CAAC,EACK;EACjC,OAAOA,MAAM,CAACsF,WAAW,CAACF,UAAU,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeG,OAAOA,CAC3Bhc,IAAc,EACd;EAAEyW;AAAyB,CAAC,EACY;EACxC,OAAOA,MAAM,CAACwF,kBAAkB,CAACjc,IAAI,CAAC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAekc,WAAWA,CAC/BvZ,QAA0C,EAC1C+D,GAAW,EACX;EACE6K,MAAM,GAAG,IAAI;EACb4K,aAAa,GAAG,KAAK;EACrB1F;AAC2D,CAAC,EACd;EAChD,IAAItB,MAAM,CAACxS,QAAQ,CAAC,EAAE;IACpB,IAAI4O,MAAM,IAAI4K,aAAa,EAAE;MAC3B,MAAMnc,IAAI,GAAG,MAAMyW,MAAM,CAACwF,kBAAkB,CAACtZ,QAAQ,CAAC;MACtD,MAAMyZ,OAAO,GAAGpc,IAAI,CAACqc,QAAQ,CAACxT,IAAI,CAAEN,CAAC,IAAKA,CAAC,CAAC7B,GAAG,KAAKA,GAAG,CAAC;MACxD,IAAI0V,OAAO,IAAI,IAAI,EAAE,MAAM,IAAI1Z,uBAAuB,CAACC,QAAQ,EAAE+D,GAAG,CAAC;MACrE,IAAIyV,aAAa,EAAE,OAAOC,OAAO,CAAChZ,EAAE;IACtC;IACA,OAAOyR,aAAa,CAAClS,QAAQ,CAAC;EAChC;EACA,IAAI;IACFsM,MAAM,CAACtM,QAAQ,CAAC;IAChB,OAAOA,QAAQ;EACjB,CAAC,CAAC,OAAO4H,KAAK,EAAE;IACd,MAAM,IAAItH,oBAAoB,CAAC,4BAA4BN,QAAQ,EAAE,CAAC;EACxE;AACF;;ACrdkF;AAGlF;AACA;AACA;AACA;AACO,MAAM2Z,eAAe,GAAG;EAC7B,CAACxJ,wBAAwB,CAACyJ,KAAK,GAAG;IAChC,iBAAiB,EAAE;MACjBC,SAAS,EAAE,CAACzJ,SAAS,CAAC0J,KAAK,CAAC;MAC5BC,UAAU,EAAE,CAAC1J,UAAU,CAAC2J,IAAI;IAC9B,CAAC;IACD,eAAe,EAAE;MACfH,SAAS,EAAE,EAAE;MACbE,UAAU,EAAE,CAAC1J,UAAU,CAAC2J,IAAI;IAC9B,CAAC;IACD,aAAa,EAAE;MACbH,SAAS,EAAE,EAAE;MACbE,UAAU,EAAE,CAAC1J,UAAU,CAAC4J,KAAK,EAAE5J,UAAU,CAAC2J,IAAI;IAChD;EACF;AACF,CAAU;AAOH,SAASE,kBAAkBA,CAChCC,eAAyC,EACzCxO,IAAyD,EAC9C;EAAA,IAAAyO,oBAAA;EACX,MAAMC,QAAQ,GAAGV,eAAe,CAACQ,eAAe,CAAC,CAACxO,IAAI,CAAC;EACvD,OAAO;IACLkO,SAAS,GAAAO,oBAAA,GAAEC,QAAQ,CAACR,SAAS,CAAC,CAAC,CAAC,cAAAO,oBAAA,cAAAA,oBAAA,GAAIhK,SAAS,CAACkK,KAAK;IACnDP,UAAU,EAAEM,QAAQ,CAACN,UAAU,CAAC,CAAC;EACnC,CAAC;AACH;AAEA,iDAAe;EACbQ,SAASA,CACPvV,KAA4B,EAC5BwV,MAAU,EACV;IACEC,wBAAwB,GAAGtK,wBAAwB,CAACyJ;EACG,CAAC,EAClD;IACR5U,KAAK,aAALA,KAAK,cAALA,KAAK,GAALA,KAAK,GAAKkV,kBAAkB,CAACO,wBAAwB,EAAE,iBAAiB,CAAC;IAEzE,OAAOjT,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,CAAC6U,SAAS,EAAE,CAAC,EAAE7U,KAAK,CAAC+U,UAAU,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMW,OAAOA,CACX1V,KAA4B,EAC5BwV,MAAU;EACV;EACArG,OAA+E,EAC/C;IAChC,IAAInP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAImP,OAAO,CAACsG,wBAAwB,IAAI,IAAI,EAAE,OAAOlM,SAAS;IAC9D,IAAInH,MAAM,CAACuT,IAAI,CAACxK,wBAAwB,CAAC,CAAChK,MAAM,KAAK,CAAC,EAAE,OAAOoI,SAAS;IACxE,IAAI4F,OAAO,CAACL,MAAM,IAAI,IAAI,EAAE;MAC1B,OAAOoG,kBAAkB,CACvB,CAAC,MAAM/F,OAAO,CAACL,MAAM,CAAC8G,WAAW,CAAC,CAAC,EAAEH,wBAAwB,EAC7D,iBACF,CAAC;IACH;IACA,OAAOlM,SAAS;EAClB,CAAC;EAEDsM,WAAWA,CAAC3O,MAAc,EAAa;IACrC,MAAM,CAAC4O,EAAE,GAAIC,GAAG,CAAC,GAAG7O,MAAM;IAC1B,OAAO;MAAE2N,SAAS,EAAE,CAACiB,EAAE;MAAEf,UAAU,EAAE,CAACgB;IAAI,CAAC;EAC7C;AACF,CAAC;;AC3E2E;AACvB;AAGrD,kDAAe;EACbC,mBAAmBA,CAACC,CAA2B,EAAEpX,GAAQ,EAAc;IACrE,MAAMqX,IAAI,GACR5K,GAAG,CAAC6K,cAAc,KAAKtX,GAAG,IAAIyM,GAAG,CAAC8K,QAAQ,KAAKvX,GAAG,GAAG,eAAe,GAAG,aAAa;IACtF,OAAOqW,kBAAkB,CAACe,CAAC,EAAEC,IAAI,CAAC,CAACnB,UAAU;EAC/C,CAAC;EAEDQ,SAASA,CACPvV,KAA6B,EAC7B;IAAEnB;EAAkB,CAAC,EACrB;IACE4W,wBAAwB,GAAGtK,wBAAwB,CAACyJ;EACG,CAAC,EAClD;IACR,MAAM/G,MAAM,GAAG7N,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,IAAI,CAACgW,mBAAmB,CAACP,wBAAwB,EAAE5W,GAAG,CAAC;IAE/E,OAAO2D,MAAM,CAACG,IAAI,CAAC,CAACkL,MAAM,CAAC,CAAC;EAC9B,CAAC;EAED,MAAM6H,OAAOA,CACX1V,KAA6B,EAC7B;IAAEnB;EAAkB,CAAC;EACrB;EACAsQ,OAA+E,EAC9C;IACjC,IAAInP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAImP,OAAO,CAACsG,wBAAwB,IAAI,IAAI,EAAE,OAAOlM,SAAS;IAC9D,IAAInH,MAAM,CAACuT,IAAI,CAACxK,wBAAwB,CAAC,CAAChK,MAAM,KAAK,CAAC,EAAE,OAAOoI,SAAS;IACxE,IAAI4F,OAAO,CAACL,MAAM,IAAI,IAAI,EAAE;MAC1B,OAAO,IAAI,CAACkH,mBAAmB,CAC7B,CAAC,MAAM7G,OAAO,CAACL,MAAM,CAAC8G,WAAW,CAAC,CAAC,EAAEH,wBAAwB,EAC7D5W,GACF,CAAC;IACH;IACA,OAAO0K,SAAS;EAClB,CAAC;EAEDsM,WAAWA,CAAC3O,MAAc,EAAc;IACtC,OAAOA,MAAM,CAAC,CAAC,CAAC;EAClB;AACF,CAAC;;AC5C+F;AAC9C;AAC4B;AACtB;;AAExD;AACA;AACA;AACA;AACA;AACA;AACO,MAAMmP,eAAe,GAAG,CAC7BlS,QAAQ,CAAC+B,cAAc,EACvB/B,QAAQ,CAACoC,IAAI,EACbpC,QAAQ,CAACkC,UAAU,EACnBlC,QAAQ,CAAC6B,aAAa,EACtB7B,QAAQ,CAAC2B,eAAe,EACxB3B,QAAQ,CAAC0B,OAAO,CACR;AAIK,SAASyQ,eAAeA,CACrC,GAAGjO,SAAqB,EAIxB;EACA,OAAO;IACL;AACJ;AACA;AACA;AACA;IACIkN,SAASA,CAACgB,MAAM,EAAE;MAChB,MAAMC,GAAG,GAAGD,MAAM,CAACxP,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9B,IAAI,CAAC7D,aAAa,CAACsT,GAAG,EAAEH,eAAe,CAAC,EAAE,MAAM,IAAIrX,gBAAgB,CAACwX,GAAG,CAAC;MACzE,IAAI,CAACtT,aAAa,CAACsT,GAAG,EAAEnO,SAAS,CAAC,EAAE;QAClC,MAAM,IAAIrP,aAAa,CAAC,kBAAkB,EAAEqP,SAAS,CAACxK,IAAI,CAAC,IAAI,CAAC,EAAE2Y,GAAG,CAAC;MACxE;MACA,MAAMC,KAAK,GAAGJ,eAAe,CAACK,OAAO,CAACF,GAAG,CAAC,GAAG,CAAC;MAC9C,OAAOhU,MAAM,CAACG,IAAI,CAAC,CAAC,GAAG0H,OAAO,CAACoM,KAAK,CAAC,EAAE,GAAGnP,MAAM,CAACiP,MAAM,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIV,WAAWA,CAACc,GAAG,EAAE;MACf,MAAMF,KAAK,GAAGjU,MAAM,CAACG,IAAI,CAACgU,GAAG,CAAC,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC;MAC/C,MAAMJ,GAAG,GAAGH,eAAe,CAACI,KAAK,GAAG,CAAC,CAAC;MACtC,IAAID,GAAG,IAAI,IAAI,EAAE,MAAM,IAAI5X,mBAAmB,CAAC6X,KAAK,CAAC;MACrD,IAAI,CAACvT,aAAa,CAACsT,GAAG,EAAEnO,SAAS,CAAC,EAAE;QAClC,MAAM,IAAIrP,aAAa,CAAC,kBAAkB,EAAEqP,SAAS,CAACxK,IAAI,CAAC,IAAI,CAAC,EAAE2Y,GAAG,CAAC;MACxE;MACA,OAAOnP,MAAM,CAACsP,GAAG,CAACxN,QAAQ,CAAC,CAAC,CAAC,EAAEqN,GAAG,CAAC;IACrC;EACF,CAAC;AACH;;AC3De,SAASK,aAAaA,CAAwBC,WAG5D,EAGC;EACA,OAAO;IACLvB,SAASA,CAACwB,KAAK,EAAEvB,MAAM,EAAE;MACvB,OAAOuB,KAAK,CAACnZ,GAAG,CAAEuF,IAAI,IAAK2T,WAAW,CAACvB,SAAS,CAACpS,IAAI,EAAEqS,MAAM,CAAC,CAAC;IACjE,CAAC;IAEDK,WAAWA,CAACmB,OAAO,EAAExB,MAAM,EAAE;MAC3B,OAAOwB,OAAO,CAACpZ,GAAG,CAAEsJ,MAAM,IAAK4P,WAAW,CAACjB,WAAW,CAAC3O,MAAM,EAAEsO,MAAM,CAAC,CAAC;IACzE;EACF,CAAC;AACH;;AChBwC;AAEiB;AACP;AAElD,4CAAe;EACbD,SAASA,CAACvV,KAAU,EAAU;IAC5B,IAAIrI,MAAM,CAACqI,KAAK,CAAC,GAAG,CAAC,EAAE,MAAM,IAAIhH,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAEgH,KAAK,CAAC;IACvF,OAAOqK,OAAO,CAACrK,KAAK,EAAE,IAAI,CAAC;EAC7B,CAAC;EAED6V,WAAWA,CAAC7V,KAAa,EAAU;IACjC,OAAOsN,OAAO,CAACtN,KAAK,CAAC;EACvB;AACF,CAAC;;ACd6B;AAEuD;AAErF,kDAAe;EACb,GAAGiX,KAAI;EAEP;EACAC,eAAeA,CAAClX,KAAyB,EAAEwV,MAAU,EAAErG,OAAW,EAAU;IAC1E,OAAOnP,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,GAAG;EACrB,CAAC;EAEDuV,SAASA,CACPvV,KAAsB,EACtBwV,MAAU,EACV;IAAEvV,YAAY,GAAGX,iBAAiB,CAACQ,MAAM;IAAE,GAAGqP;EAA8C,CAAC,EACrF;IACR,OAAO8H,KAAI,CAAC1B,SAAS,CACnB,IAAI,CAAC2B,eAAe,CAClBlX,KAAK,IAAI,IAAI,GAAGD,YAAY,CAACC,KAAK,EAAE;MAAEC;IAAa,CAAC,CAAC,GAAGD,KAAK,EAC7DwV,MAAM,EACNrG,OACF,CACF,CAAC;EACH;AACF,CAAC;;ACzB6E;AACrB;AAE1C,SAASgI,eAAeA,CACrC7O,QAAW,EACX8O,QAAmB,EAMnB;EACA,OAAO;IACL7B,SAASA,CAAC8B,WAAgC,EAAE;MAC1C,IAAIA,WAAW,IAAI,IAAI,EAAE;QACvB,IAAID,QAAQ,KAAK,IAAI,EAAE,OAAO5U,MAAM,CAACG,IAAI,CAAC,EAAE,CAAC;QAC7C,MAAM,IAAI3J,aAAa,CAAC,cAAc,EAAE,UAAU,EAAEqe,WAAW,CAAC;MAClE;MACA,OAAO/P,MAAM,CAAC+P,WAAW,CAAC;IAC5B,CAAC;IAEDxB,WAAWA,CAAC3O,MAAM,EAAE;MAClB,OAAOG,MAAM,CAACH,MAAM,EAAEoB,QAAQ,CAAC;IACjC;EACF,CAAC;AACH;;ACzB8E;AAI/D,SAASgP,aAAaA,CACnCzY,GAAO,EAcP;EACA,OAAO;IACL0W,SAASA,CAACgC,QAAQ,EAAE;MAAEC;IAAU,CAAC,EAAE;MACjC,IAAIC,WAAW,CAACC,MAAM,CAACH,QAAQ,CAAC,EAAE,OAAO/U,MAAM,CAACG,IAAI,CAAC4U,QAAe,CAAC;MACrE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACpG,UAAU,CAAC,KAAK,CAAC,EAAE;QAC9D,OAAO7J,MAAM,CAACiQ,QAA+B,CAAC;MAChD;MACA,OAAOjQ,MAAM,CAACkQ,SAAS,CAAC;QAAE,GAAGD,QAAQ;QAAE,IAAI1Y,GAAG,IAAI,IAAI,IAAI;UAAEA;QAAI,CAAC;MAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAEDgX,WAAWA,CAACc,GAAG,EAAE;MAAEgB;IAAY,CAAC,EAAE;MAChC,OAAOA,WAAW,CAACtQ,MAAM,CAACsP,GAAG,EAAExS,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC;IAC1D;EACF,CAAC;AACH;;ACjCyD;AACD;AAEzC,SAAS+Y,mBAAmBA,CACzCC,GAAS,EAIT;EACA,MAAMC,MAAM,GAAG1V,MAAM,CAAC0V,MAAM,CAACD,GAAG,CAAC,CAACE,MAAM,CAAEtW,CAAC,IAAK,OAAOA,CAAC,KAAK,QAAQ,CAAC;EACtE,OAAO;IACL8T,SAASA,CAACvV,KAAK,EAAE;MACf,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,MAAM,IAAIhH,aAAa,CAAC,OAAO,EAAE,gBAAgB,EAAEgH,KAAK,CAAC;MACxF,IAAIA,KAAK,GAAG,IAAI,EAAE,MAAM,IAAIhH,aAAa,CAAC,OAAO,EAAE,qBAAqB,EAAEgH,KAAK,CAAC;MAChF,IAAI,CAACkD,aAAa,CAAClD,KAAK,EAAE8X,MAAM,CAAC,EAAE;QACjC,MAAM,IAAI9e,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAEgH,KAAK,CAAC;MAClE;MACA,OAAOwC,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,CAAC,CAAC;IAC7B,CAAC;IAED6V,WAAWA,CAAC3O,MAAM,EAAE;MAClB,IAAIA,MAAM,CAAC/F,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM,IAAInI,aAAa,CAAC,QAAQ,EAAE,wBAAwB,EAAEkO,MAAM,CAAC/F,MAAM,CAAC;MAC5E;MACA,MAAMnB,KAAK,GAAGkH,MAAM,CAAC,CAAC,CAAC;MACvB,IAAI,CAAChE,aAAa,CAAClD,KAAK,EAAE8X,MAAM,CAAC,EAAE;QACjC,MAAM,IAAI9e,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAEgH,KAAK,CAAC;MAClE;MACA,OAAOA,KAAK;IACd;EACF,CAAC;AACH;;AC/BqC;AACK;AACqC;AAC1B;AAEgC;AAErF,MAAMiY,aAAgE,GAAG,IAAI3I,OAAO,CAAC,CAAC;AAE/E,eAAe4I,0BAA0BA,CAACC,IAAU,EAAmB;EAC5E,MAAM1I,KAAK,GAAGwI,aAAa,CAACvI,GAAG,CAACyI,IAAI,CAAC;EACrC,IAAI1I,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACE,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;IACxD,OAAOJ,KAAK,CAAC2I,QAAQ;EACvB;EAEA,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAG,CAAC,MAAMH,IAAI,CAACI,kBAAkB,CAAC,CAAC,EAAE,CAAC,CAAC;EACzE,IAAIH,QAAQ,GACVE,WAAW,GAAG,EAAE,GACZ,EAAE,GACFzP,MAAM,CAAC,IAAIvR,iCAAS,CAAC+gB,WAAW,CAAChd,QAAQ,CAAC,CAAC,CAAC,CAAC6P,KAAK,CAAC,IAAI,CAAC,CAACnT,YAAY,CAAC,CAAC,CAACqI,OAAO,CAAC,CAAC,CAAC;EAExF,MAAMoY,eAAe,GAAG3P,MAAM,CAAC+B,aAAa,CAAC,GAAG,OAAO,CAAC,CAAC;EACzD,IAAIwN,QAAQ,GAAGI,eAAe,EAAE;IAC9BC,OAAO,CAACC,IAAI,CACV,uBAAuBN,QAAQ,qDAAqD,GAClF,0BAA0BI,eAAe,GAAG,GAC5C,oEACJ,CAAC;IACDJ,QAAQ,GAAGI,eAAe;EAC5B;EAEAP,aAAa,CAAClI,GAAG,CAACoI,IAAI,EAAE;IAAEC,QAAQ;IAAEzI,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;EAAE,CAAC,CAAC;EACvD,OAAOuI,QAAQ;AACjB;;AAEA;AACA,gDAAe;EACb,GAAGJ,WAAU;EAEb,MAAMtC,OAAOA,CACX1V,KAAsB,EACtBwV,MAAU,EACV;IACE1G,MAAM;IACN7O;EAOF,CAAC,EACyB;IAC1B,IAAID,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAI8O,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAI9V,aAAa,CAAC,QAAQ,EAAE,0CAA0C,EAAE8V,MAAM,CAAC;IACvF;IACA,MAAMsJ,QAAQ,GAAG,MAAMF,0BAA0B,CAACpJ,MAAM,CAAC;IACzD,IAAIsJ,QAAQ,KAAK,EAAE,EAAE,OAAO7O,SAAS;IACrC,OAAOxJ,YAAY,CAACqY,QAAQ,EAAE;MAAElY,kBAAkB,EAAED;IAAa,CAAC,CAAC;EACrE,CAAC;EAEDiX,eAAeA,CAAClX,KAAyB,GAAG4K,aAAa,CAACvP,QAAQ,CAAC,CAAC,EAAU;IAC5E,IAAI,CAAC2E,KAAK,GAAG4K,aAAa,EAAE;MAC1B,MAAM,IAAIxR,oBAAoB,CAC5B,aAAa4G,KAAK,CAAC3E,QAAQ,CAAC,CAAC,wBAAwBuP,aAAa,EACpE,CAAC;IACH;IACA,OAAO5K,KAAK;EACd;AACF,CAAC;;ACtEoC;AAC0C;AACrB;AAC5B;AACY;AACkB;AACJ;AACI;AAI5D,MAAM2Y,QAAQ,GAAG,KAAK;AACtB,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,kBAAkB,GAAG,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,GAAIC,MAAW,IAAa;EAAA,IAAAC,WAAA;EAC3C,MAAMC,UAAU,GAAG;IACjB,CAAC3N,GAAG,CAAC4N,sBAAsB,GAAG,EAAE;IAChC,CAAC5N,GAAG,CAAC6N,iBAAiB,GAAG,CAAC;IAC1B,CAAC7N,GAAG,CAAC8N,gBAAgB,GAAG,CAAC;IACzB,CAAC9N,GAAG,CAAC6K,cAAc,GAAG,EAAE;IACxB,CAAC7K,GAAG,CAAC+N,UAAU,GAAG,CAAC;IACnB,CAAC/N,GAAG,CAAC8K,QAAQ,GAAG,CAAC;IACjB,CAAC9K,GAAG,CAACgO,WAAW,GAAG,CAAC,GAAG;EACzB,CAAU;EACV,MAAMC,MAAM,IAAAP,WAAA,GAAGC,UAAU,CAACF,MAAM,CAA4B,cAAAC,WAAA,cAAAA,WAAA,GAAI,CAAC;EACjE,OAAOO,MAAM,GAAGZ,QAAQ;AAC1B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMa,YAAY,GAAGA,CACnBT,MAAW,EACXU,MAAc,EACd;EAAEC,WAAW;EAAEC;AAA0D,CAAC,KAC/D;EACX,QAAQZ,MAAM;IACZ,KAAKzN,GAAG,CAACsO,gBAAgB;IACzB,KAAKtO,GAAG,CAACuO,cAAc;IACvB,KAAKvO,GAAG,CAACwO,aAAa;IACtB,KAAKxO,GAAG,CAACyO,eAAe;MACtB,OACEN,MAAM,GAAGb,YAAY,GACrB9X,IAAI,CAACjJ,IAAI,CAAE,KAAK,GAAG6hB,WAAW,GAAI5Y,IAAI,CAACsO,KAAK,CAAE,EAAE,GAAG,EAAE,GAAG,GAAG,GAAIyJ,kBAAkB,CAAC,CAAC;IAEvF,KAAKvN,GAAG,CAAC8K,QAAQ;IACjB,KAAK9K,GAAG,CAACgO,WAAW;MAClB,OAAO,CAACG,MAAM,GAAGE,WAAW,IAAIf,YAAY;IAC9C;MACE,OAAOa,MAAM,GAAGb,YAAY;EAChC;AACF,CAAC;AAED,SAASoB,oBAAoBA,CAACxE,MAAW,EAAU;EACjD,MAAMyE,OAAO,GAAG;IACd,CAAC3O,GAAG,CAACsO,gBAAgB,GAAG,gBAAgB;IACxC,CAACtO,GAAG,CAACuO,cAAc,GAAG,gBAAgB;IACtC,CAACvO,GAAG,CAACwO,aAAa,GAAG,eAAe;IACpC,CAACxO,GAAG,CAACyO,eAAe,GAAG;EACzB,CAAU;EAEV,MAAM;IAAElb;EAAI,CAAC,GAAG2W,MAAM;EACtB,IAAI,CAACvS,aAAa,CAACpE,GAAG,EAAEob,OAAO,CAAC,EAAE,OAAO,CAAC;EAC1C,OAAOzE,MAAM,CAACyE,OAAO,CAACpb,GAAG,CAAC,CAAC;AAC7B;;AAEA;AACA;AACA;AACO,SAASqb,QAAQA,CACtBC,OAA4B,EAC5BC,QAA6B,EAC7BC,OAA2B,EACnB;EACR,MAAM;IAAElZ;EAAO,CAAC,GAAGmG,MAAM,CAAC6S,OAAO,CAAC;EAClC,MAAMG,QAAQ,GAAGF,QAAQ,CAACD,OAAO,CAAC;EAElC,IAAIR,WAAW,GAAG,CAAC;EACnB,IAAIW,QAAQ,CAACzb,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,IAAIkE,QAAQ,CAACzb,GAAG,KAAKyM,GAAG,CAACgO,WAAW,EAAE;IACrEK,WAAW,GAAGrS,MAAM,CAAC+S,OAAO,CAACC,QAAQ,CAACnK,EAAE,CAACoK,SAAS,CAAC,CAAC,CAACpZ,MAAM;EAC7D;EAEA,OACE2X,WAAW,CAACwB,QAAQ,CAACzb,GAAG,CAAC,GACzB2a,YAAY,CAACc,QAAQ,CAACzb,GAAG,EAAEsC,MAAM,EAAE;IACjCuY,WAAW,EAAEM,oBAAoB,CAACM,QAAQ,CAAC;IAC3CX;EACF,CAAC,CAAC;AAEN;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASa,eAAeA,CACtBC,SAAoD,EACpDL,QAA6B,EAC7BC,OAA2B,EAChB;EACX,IAAIK,GAAG,GAAG,IAAIpjB,iCAAS,CAAC,CAAC,CAAC;EAC1B,IAAIqjB,WAAW;EACf,GAAG;IACDA,WAAW,GAAGD,GAAG;IACjBA,GAAG,GAAG,IAAIpjB,iCAAS,CAACsT,aAAa,CAAC,CAACM,KAAK,CAACgP,QAAQ,CAACO,SAAS,CAACC,GAAG,CAAC,EAAEN,QAAQ,EAAEC,OAAO,CAAC,CAAC;EACvF,CAAC,QAAQ,CAACK,GAAG,CAACE,EAAE,CAACD,WAAW,CAAC;EAC7B,OAAOD,GAAG;AACZ;;AAEA;AACA;AACA;AACA,MAAMG,cAAc,GAAG,aAAa;AASpC,0CAAe;EACb,GAAG7C,WAAU;EAEb,MAAMtC,OAAOA,CACX1V,KAAsB,EACtBwV,MAAU,EACV;IAAE1G;EAA0B,CAAC,EACH;IAC1B,IAAI9O,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,IAAI8O,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,IAAI9V,aAAa,CAAC,QAAQ,EAAE,qCAAqC,EAAE8V,MAAM,CAAC;IAClF;IACA,MAAMsJ,QAAQ,GAAG,MAAMF,0BAA0B,CAACpJ,MAAM,CAAC;IACzD,IAAIsJ,QAAQ,KAAK,EAAE,EAAE,OAAO7O,SAAS;IACrC,OAAOsR,cAAc,GAAGzC,QAAQ;EAClC,CAAC;EAEDlB,eAAeA,CACb4D,MAA0B,EAC1B;IAAEL,SAAS;IAAEL,QAAQ;IAAEC,OAAO;IAAEU;EAAwC,CAAC,EACzE;IAAEC;EAA+C,CAAC,EAC1C;IACR,IAAID,gBAAgB,IAAI,IAAI,EAAE,OAAOA,gBAAgB,CAAC3a,OAAO,CAAC,CAAC;IAC/D,MAAM6a,MAAM,GAAGT,eAAe,CAC3BE,GAAG,IAAKD,SAAS,CAAC;MAAEM,gBAAgB,EAAEL;IAAI,CAAC,CAAC,EAC7CN,QAAQ,EACRC,OACF,CAAC;IACD,MAAMra,KAAK,GACT8a,MAAM,EAAE3J,UAAU,CAAC0J,cAAc,CAAC,KAAK,IAAI,GACvCI,MAAM,CAACC,SAAS,CAACtQ,aAAa,CAAC,CAACM,KAAK,CAAC4P,MAAM,CAACK,OAAO,CAACN,cAAc,EAAE,EAAE,CAAC,CAAC,GACzE,IAAIvjB,iCAAS,CAACwjB,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIG,MAAM,CAAC;IACrC,IAAIA,MAAM,CAACG,EAAE,CAACpb,KAAK,CAAC,EAAE;MACpB,IAAIgb,eAAe,KAAK,IAAI,EAAE,OAAOC,MAAM,CAAC7a,OAAO,CAAC,CAAC;MACrD,MAAM,IAAIhH,oBAAoB,CAAC,OAAO4G,KAAK,CAAC3E,QAAQ,CAAC,CAAC,wBAAwB4f,MAAM,EAAE,CAAC;IACzF;IACA,OAAOjb,KAAK,CAACI,OAAO,CAAC,CAAC;EACxB,CAAC;EAEDmV,SAASA,CACPvV,KAAiD,EACjDwV,MAA0E,EAC1ErG,OAAmF,EAC3E;IACR,IAAI,OAAOnP,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACmR,UAAU,CAAC0J,cAAc,CAAC,EAAE;MACjE,OAAO5D,KAAI,CAAC1B,SAAS,CAAC,IAAI,CAAC2B,eAAe,CAAClX,KAAK,EAAEwV,MAAM,EAAErG,OAAO,CAAC,CAAC;IACrE;IACA,OAAO6I,WAAU,CAACzC,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAErb,KAAK,EAAEwV,MAAM,EAAErG,OAAO,CAAC;EAChE;AACF,CAAC;;AClM6B;AAE9B,kDAAe;EACboG,SAASA,CAACvV,KAAa,EAAU;IAC/B,OAAOiX,KAAI,CAAC1B,SAAS,CAACvV,KAAK,CAAC;EAC9B,CAAC;EAED6V,WAAWA,CAAC7V,KAAa,EAAU;IACjC,OAAO,CAACiX,KAAI,CAACpB,WAAW,CAAC7V,KAAK,CAAC;EACjC;AACF,CAAC;;ACV+D;AACR;AACf;AACL;AAGpC,SAASub,oBAAoBA,CAC3BC,MAAc,EACdf,SAAiC,EACjCL,QAA6B,EAC7BC,OAA2B,EACnB;EACR,OAAOmB,MAAM,GAAG,CAACtB,QAAQ,CAACO,SAAS,CAACe,MAAM,CAAC,EAAEpB,QAAQ,EAAEC,OAAO,CAAC;AACjE;AAEA,gDAAe;EACb,GAAGiB,WAAS;EAEZ/F,SAASA,CACPuF,MAA0B,EAC1B;IACEjc,GAAG;IACH4b,SAAS;IACTL,QAAQ;IACRC,OAAO;IACPoB;EAOF,CAAC,EACD;IAAED,MAAM,GAAG;EAAyB,CAAC,EAC7B;IACR,IAAIC,kBAAkB,IAAI,IAAI,EAAE,OAAOH,WAAS,CAAC/F,SAAS,CAACkG,kBAAkB,CAAC;IAE9E,MAAMC,WAAW,GACf7c,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,GAChBzL,gBAAgB,GAChB4Q,oBAAoB,CAClBC,MAAM,EACLG,QAAQ,IAAKlB,SAAS,CAAC;MAAEgB,kBAAkB,EAAEE,QAAQ;MAAEX,eAAe,EAAE;IAAK,CAAC,CAAC,EAChFZ,QAAQ,EACRC,OACF,CAAC;IACP,MAAMra,KAAK,GAAG8a,MAAM,aAANA,MAAM,cAANA,MAAM,GAAIY,WAAW;IACnC,IAAI1b,KAAK,GAAG0b,WAAW,EAAE;MACvB,MAAM,IAAItiB,oBAAoB,CAAC,aAAa4G,KAAK,6BAA6B0b,WAAW,EAAE,CAAC;IAC9F;IACA,OAAOJ,WAAS,CAAC/F,SAAS,CAACvV,KAAK,CAAC;EACnC;AACF,CAAC;;ACpDD,4CAAe;EACbuV,SAASA,CAACvV,KAAa,EAAU;IAC/B,OAAOwC,MAAM,CAACG,IAAI,CAAC3C,KAAK,CAAC;EAC3B,CAAC;EAED6V,WAAWA,CAAC7V,KAAa,EAAU;IACjC,OAAOA,KAAK,CAAC3E,QAAQ,CAAC,CAAC;EACzB;AACF,CAAC;;ACR8B;AAG/B,uDAAe;EACb;AACF;AACA;EACEka,SAASA,CAACvV,KAAe,EAAU;IACjC,OAAO4b,KAAK,CAACrG,SAAS,CAACvV,KAAK,CAAC;EAC/B,CAAC;EAED;AACF;AACA;EACE6V,WAAWA,CAAC7V,KAAa,EAAY;IACnC,OAAO4b,KAAK,CAAC/F,WAAW,CAAC7V,KAAK,CAAC;EACjC;AACF,CAAC;;ACjBoC;AACa;AACkB;AAC1B;AAG1C,+CAAe;EACb,GAAGgY,WAAU;EAEbd,eAAeA,CAAC4D,MAA0B,EAAEe,QAA4B,EAAU;IAChF,MAAMzgB,UAAU,GAAG0S,iBAAiB,CAAC+N,QAAQ,CAACxjB,IAAI,CAAC;IACnD,MAAM2H,KAAK,GAAG,IAAI1I,iCAAS,CAACwjB,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI1f,UAAU,CAAC;IACjD,IAAIA,UAAU,CAACggB,EAAE,CAACpb,KAAK,CAAC,EAAE,MAAM,IAAI9E,wBAAwB,CAAC8E,KAAK,EAAE5E,UAAU,CAAC;IAC/E,OAAO4E,KAAK,CAACI,OAAO,CAAC,CAAC;EACxB,CAAC;EAED;AACF;AACA;AACA;AACA;EACEmV,SAASA,CACPvV,KAAsB,EACtB6b,QAA8E,EAC9EC,UAA2D,EACnD;IACR,OAAO9D,WAAU,CAACzC,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAErb,KAAK,EAAE6b,QAAQ,EAAEC,UAAU,CAAC;EACrE;AACF,CAAC;;AC3BqD;AACnB;AAC2B;AAE9D,MAAMC,WAAW,GAAGjhB,eAAO,CAACqJ,QAAQ,CAACoC,IAAI,CAAC;AAE1C,8CAAe;EACb,GAAGwV,WAAW;EAEd;AACF;AACA;EACExG,SAASA,CAACvV,KAA8B,EAAU;IAChD,OAAO+b,WAAW,CAACxG,SAAS,CAAC/H,MAAM,CAACxN,KAAK,CAAC,GAAGkN,aAAa,CAAClN,KAAK,CAAC,GAAGA,KAAK,CAAC;EAC5E;AACF,CAAC;;AChBgE;AACxB;AAEgB;AAEnB;AAEvB,SAASgc,aAAaA,CACnCC,SAAoB,EAgBpB;EACA,OAAO;IACL,GAAGX,WAAS;IAEZ/F,SAASA,CAACvV,KAAa,EAAE;MAAEnB;IAAI,CAAC,EAAU;MACxC,IAAIyM,GAAG,CAAC+N,UAAU,KAAKxa,GAAG,IAAImB,KAAK,KAAK,CAAC,EAAE;QACzC,MAAM,IAAIhH,aAAa,CAAC,OAAO,EAAE,uBAAuB,EAAEgH,KAAK,CAAC;MAClE;MACA,OAAOsb,WAAS,CAAC/F,SAAS,CAACvV,KAAK,CAAC;IACnC,CAAC;IAED,MAAM0V,OAAOA,CAAC1V,KAAK,EAAEwV,MAAM,EAAErG,OAAO,EAAE;MACpC,IAAInP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;MAC/B;MACA;MACA,MAAM;QAAE8O,MAAM;QAAEoN;MAAS,CAAC,GAAG/M,OAAO;MACpC,MAAMtD,QAAQ,GAAGsD,OAAO,CAAC8M,SAAS,CAAC;MACnC,MAAM/iB,WAAW,GAAG,uCAAuC;MAC3D,IAAI4V,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI9V,aAAa,CAAC,QAAQ,EAAEE,WAAW,EAAE4V,MAAM,CAAC;MAC1E,IAAIjD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI7S,aAAa,CAAC,UAAU,EAAEE,WAAW,EAAE2S,QAAQ,CAAC;MAChF,OAAO,CACL,MAAMiD,MAAM,CACTqN,mBAAmB,CAACtQ,QAAQ,CAACsP,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE;QAAEe;MAAS,CAAC,CAAC,CAClE7K,KAAK,CAAEzO,KAAK,IAAK;QAChB,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;QAC/C,OAAO;UAAEwZ,SAAS,EAAE;QAAE,CAAC;MACzB,CAAC,CAAC,EACJA,SAAS;IACb,CAAC;IAEDH;EACF,CAAC;AACH;;ACvDkD;AAC4B;AACzB;AACuC;AAClB;AAE1E,MAAMI,MAAM,GAAG7Z,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,MAAM2Z,QAAQ,GAAG9Z,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM4Z,eAAe,GAAG,IAAI;AAC5B,MAAMC,UAAU,GAAG1hB,eAAO,CAAC,GAAGub,eAAe,CAAC;;AAE9C;;AAQA,+CACEoG,QAAkB,KAMd;EACJ;AACF;AACA;AACA;AACA;AACA;EACElH,SAASA,CAACb,QAAQ,EAAE;IAClB,IAAIA,QAAQ,CAACvT,MAAM,GAAG,EAAE,EAAE;MACxB,MAAM,IAAI/H,oBAAoB,CAC5B,qCAAqCsb,QAAQ,CAACvT,MAAM,UACtD,CAAC;IACH;IACA,OAAOuT,QAAQ,CAAC9W,GAAG,CAAC,CAAC;MAAEmB,GAAG;MAAEtD;IAAG,CAAC,KAAK;MACnC,IAAIqL,OAAO;MACX,IAAI0B,SAAS,CAAC/M,EAAE,EAAE,GAAG4a,eAAe,CAAC,EAAE;QACrCvP,OAAO,GAAG,CAAC,IAAI2V,QAAQ,GAAG,CAACJ,MAAM,CAAC,GAAG,EAAE,CAAC,EAAEG,UAAU,CAACjH,SAAS,CAAC9Z,EAAE,CAAC,CAAC;MACrE;MACA,IAAI+M,SAAS,CAAC/M,EAAE,EAAE0I,QAAQ,CAACmB,SAAS,CAAC,EAAE;QACrC,MAAMoB,IAAI,GAAGY,MAAM,CAAC7L,EAAE,CAAC;QACvB,IAAIiL,IAAI,CAACvF,MAAM,GAAGob,eAAe,EAAE;UACjC,MAAM,IAAIvjB,aAAa,CACrB,aAAa,EACb,gBAAgBujB,eAAe,GAAG,CAAC,QAAQ,EAC3C,GAAG7V,IAAI,CAACvF,MAAM,QAChB,CAAC;QACH;QACA2F,OAAO,GAAG,CAACwV,QAAQ,EAAE5V,IAAI,CAAC;MAC5B;MACA,IAAII,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIvI,WAAW,CAAC,+BAA+B9C,EAAE,EAAE,CAAC;MAC/E,OAAO,CAAC4O,OAAO,CAACtL,GAAG,CAAC,EAAEyD,MAAM,CAACC,MAAM,CAACqE,OAAO,CAAC,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EAED;AACF;AACA;AACA;AACA;EACE+O,WAAWA,CAACnB,QAAQ,EAAE;IACpB,OAAOA,QAAQ,CAAC9W,GAAG,CAAC,CAAC,CAAC8e,IAAI,EAAEC,GAAG,CAAC,KAAK;MACnC,IAAI,CAACF,QAAQ,EAAE,OAAO;QAAE1d,GAAG,EAAE2d,IAAI,CAACrhB,QAAQ,CAAC,CAAC;QAAEI,EAAE,EAAE+gB,UAAU,CAAC3G,WAAW,CAAC8G,GAAG;MAAE,CAAC;MAC/E,MAAM9d,GAAG,GAAG8d,GAAG,CAACxT,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9B,MAAMrC,OAAO,GAAG6V,GAAG,CAACxT,QAAQ,CAAC,CAAC,CAAC;MAC/B,IAAI1N,EAAE;MACN,IAAIoD,GAAG,CAACsI,MAAM,CAACkV,MAAM,CAAC,EAAE5gB,EAAE,GAAG+gB,UAAU,CAAC3G,WAAW,CAAC/O,OAAO,CAAC;MAC5D;MACA,IAAIjI,GAAG,CAACsI,MAAM,CAACmV,QAAQ,CAAC,EAAE7gB,EAAE,GAAG4L,MAAM,CAACP,OAAO,EAAE3C,QAAQ,CAACmB,SAAS,CAA2B;MAC5F,IAAI7J,EAAE,IAAI,IAAI,EAAE,MAAM,IAAI8C,WAAW,CAAC,6BAA6BM,GAAG,EAAE,CAAC;MACzE,OAAO;QAAEE,GAAG,EAAE2d,IAAI,CAACrhB,QAAQ,CAAC,CAAC;QAAEI;MAAG,CAAC;IACrC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AC/EwC;AAIe;;AAEzD;AACA;AACA;AACA,gDAAe;EACb,GAAGuc,WAAU;EAEb,MAAMtC,OAAOA,CACX1V,KAAsB,EACtBwV,MAAU,EACVrG,OAA4D,EAC5D;IACA,IAAInP,KAAK,IAAI,IAAI,EAAE,OAAOA,KAAK;IAC/B,MAAM;MAAE8O,MAAM;MAAEhD;IAAS,CAAC,GAAGqD,OAAO;IACpC,MAAMjW,WAAW,GAAG,0CAA0C;IAC9D,IAAI4V,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI9V,aAAa,CAAC,QAAQ,EAAEE,WAAW,EAAE4V,MAAM,CAAC;IAC1E,IAAIhD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI9S,aAAa,CAAC,UAAU,EAAEE,WAAW,EAAE4S,QAAQ,CAAC;IAChF,OAAO,CAAC,MAAMgD,MAAM,CAAC8N,iBAAiB,CAAC9Q,QAAQ,CAAC,EAAE+Q,QAAQ,CAACxhB,QAAQ,CAAC,CAAC;EACvE;AACF,CAAC;;ACxBD,0CAAe;EACbka,SAASA,CAACrO,MAAkB,EAAU;IACpC,OAAO1E,MAAM,CAACG,IAAI,CAACuE,MAAM,CAAC;EAC5B,CAAC;EAED2O,WAAWA,CAAC3O,MAAc,EAAU;IAClC,OAAOA,MAAM;EACf;AACF,CAAC;;ACRwD;AAChB;AAE1B,SAAS4V,sBAAsBA,CAI5CC,UAAiB,EACjB3F,QAAmB,EAMnB;EACA,OAAO;IACL7B,SAASA,CAACvV,KAAa,EAAE;MACvB,IAAI,CAACoX,QAAQ,KAAK,IAAI,IAAIpX,KAAK,IAAI,IAAI,KAAKA,KAAK,KAAK+c,UAAU,EAAE;QAChE,MAAM,IAAI/jB,aAAa,CAAC,gBAAgB,EAAE+jB,UAAU,EAAE/c,KAAK,CAAC;MAC9D;MACA,OAAOsb,WAAS,CAAC/F,SAAS,CAACwH,UAAU,CAAC;IACxC,CAAC;IAEDlH,WAAWA,CAACc,GAAG,EAAE;MACf,MAAM3W,KAAK,GAAGsb,WAAS,CAACzF,WAAW,CAACc,GAAG,CAAC;MACxC,IAAI3W,KAAK,KAAK+c,UAAU,EAAE,MAAM,IAAI/jB,aAAa,CAAC,gBAAgB,EAAE+jB,UAAU,EAAE/c,KAAK,CAAC;MACtF,OAAO+c,UAAU;IACnB,CAAC;IAEDA,UAAU;IAEVC,kBAAkB,EAAE5F,QAAQ,KAAK;EACnC,CAAC;AACH;;ACjCkD;AAElD,6CAAe;EACb7B,SAASA,CAAChO,MAAc,EAAU;IAChC,OAAO8C,OAAO,CAAC9C,MAAM,CAAC;EACxB,CAAC;EAEDsO,WAAWA,CAAC3O,MAAc,EAAU;IAClC,OAAOA,MAAM,CAAC7L,QAAQ,CAAC,CAAC;EAC1B;AACF,CAAC;;ACV6E;AAI/D,SAAS4hB,mBAAmBA,CACzCpe,GAAO,EAcP;EACA,OAAO;IACL0W,SAASA,CAACgC,QAAQ,EAAE;MAAE8C;IAAQ,CAAC,EAAE;MAC/B,IAAI5C,WAAW,CAACC,MAAM,CAACH,QAAQ,CAAC,EAAE,OAAO/U,MAAM,CAACG,IAAI,CAAC4U,QAAe,CAAC;MACrE,IAAI,OAAOA,QAAQ,KAAK,QAAQ,IAAIA,QAAQ,CAACpG,UAAU,CAAC,KAAK,CAAC,EAAE;QAC9D,OAAO7J,MAAM,CAACiQ,QAA+B,CAAC;MAChD;MACA,OAAOjQ,MAAM,CAAC+S,OAAO,CAAC;QAAE,GAAG9C,QAAQ;QAAE,IAAI1Y,GAAG,IAAI,IAAI,IAAI;UAAEA;QAAI,CAAC;MAAE,CAAC,CAAC,CAAC;IACtE,CAAC;IAEDgX,WAAWA,CAACc,GAAG,EAAE;MAAEyD;IAAS,CAAC,EAAE;MAC7B,OAAOA,QAAQ,CAAC/S,MAAM,CAACsP,GAAG,EAAExS,QAAQ,CAACY,WAAW,CAAC,EAAElG,GAAG,CAAC;IACzD;EACF,CAAC;AACH;;ACjCyC;AAEgB;AACO;;AAEhE;AACA;AACA;AACA,0CAAe;EACb,GAAGyc,WAAS;EAEZ/F,SAASA,CAACvV,KAAyB,EAAU;IAC3C,OAAOsb,WAAS,CAAC/F,SAAS,CAACvV,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,CAAC;EACxC,CAAC;EAED,MAAM0V,OAAOA,CACX1V,KAAyB,EACzBwV,MAAU;EACV;EACA;IACE1G,MAAM;IACNoO,WAAW;IACXC,gBAAgB;IAChB,GAAGhO;EAKoD,CAAC,EAC1D;IACA,IAAI+N,WAAW,KAAK,IAAI,IAAIld,KAAK,KAAK,CAAC,KAAKA,KAAK,IAAI,IAAI,IAAImd,gBAAgB,KAAK,IAAI,CAAC,EAAE;MACvF,IAAIrO,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI9V,aAAa,CAAC,QAAQ,EAAE,UAAU,EAAE8V,MAAM,CAAC;MACzE9O,KAAK,GAAG,CAACA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,CAAC,KAAK,MAAMuP,SAAS,CAAC;QAAE,GAAGJ,OAAO;QAAEL,MAAM;QAAEU,MAAM,EAAE;MAAK,CAAC,CAAC,CAAC;IAChF;IACA,OAAOxP,KAAK;EACd;AACF,CAAC;;ACpCc,SAASod,WAAWA,CACjCC,YAAmB,EACnBzB,KAGC,EAID;EACA,OAAO;IACL,GAAGA,KAAK;IAERrG,SAASA,CAACvV,KAAK,EAAEwV,MAAM,EAAE;MACvB,OAAOoG,KAAK,CAACrG,SAAS,CAACvV,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIqd,YAAY,EAAE7H,MAAM,CAAC;IACvD;EACF,CAAC;AACH;;ACjBe,SAAS8H,cAAcA,CACpCrM,MAAuC,EACvC2K,KAGC,EAID;EACA,OAAO;IACL,GAAGA,KAAK;IAERrG,SAASA,CAACvV,KAAK,EAAEwV,MAAM,EAAErG,OAAO,EAAE;MAChC,OAAOyM,KAAK,CAACrG,SAAS,CAACtE,MAAM,CAACjR,KAAK,CAAC,EAAEwV,MAAM,EAAErG,OAAO,CAAC;IACxD;EACF,CAAC;AACH;;ACjBA;AACA;AACA;AACO,IAAKoO,cAAc,0BAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAdA,cAAc,CAAdA,cAAc;EAAA,OAAdA,cAAc;AAAA;;AAM1B;AACA;AACA;AACO,IAAKC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAGlB;EAHUA,QAAQ,CAARA,QAAQ;EAKlB;EACA;EANUA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAclB;EAdUA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAiBlB;EAjBUA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EA2BlB;EA3BUA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA;;ACZpB;AACA;AACA;AACA;AACA;;AAEqC;AAEiB;AACc;AACzB;AACW;AACF;AACL;AACJ;AACY;AAChB;AACW;AACA;AACT;AACO;AACF;AACH;AACM;AACC;AACX;AACc;AACW;AACnB;AACU;AAChB;AACG;AACc;AACM;AACH;AACL;AACN;AAGhD;AACA;AACA;AACO,IAAKQ,gBAAgB,0BAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAA,OAAhBA,gBAAgB;AAAA;;AAK5B;;AAOA,MAAMC,cAAc,GAAG/gB,mBAAW,CAAC,CAA8B;AAUjE,MAAMghB,mBAAmB,GAAGhhB,mBAAW,CAACoO,GAAG,CAAC6S,QAAQ,CAAmC;AAUvF,MAAMC,aAAa,GAAGT,aAAK,CAACH,QAAQ,CAACa,QAAQ,CAA6B;AAE1E,MAAMC,SAAS,GAAGlB,WAAW,CAAC,EAAE,GAAG,EAAE,EAAE9B,WAAS,CAAC;AACjD;AACA;AACA;AACA;AACA,MAAMiD,OAAO,GAAGjB,cAAc,CAAEtd,KAAK,IAAK;EACxC,MAAMwe,QAAQ,GAAG,MAAM;EACvBxe,KAAK,aAALA,KAAK,cAALA,KAAK,GAALA,KAAK,GAAKwe,QAAQ;EAClB,IAAIxe,KAAK,IAAI,CAAC,IAAIA,KAAK,IAAIwe,QAAQ,EAAE,OAAOxe,KAAK;EACjD,MAAM,IAAIhH,aAAa,CAAC,SAAS,EAAE,0BAA0BwlB,QAAQ,SAAS,EAAExe,KAAK,CAAC;AACxF,CAAC,EAAEsb,WAAS,CAAC;;AAEb;AACA;AACA;AACO,MAAMmD,QAAQ,GAAG,CACtB;EACE5f,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC6S,QAAQ,CAAC;EACjC5jB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCW,UAAU,EAAEtb,aAAK,CAAC0a,GAAG,CAAC;EAAE;EACxBvD,SAAS,EAAE0D;AACb,CAAC,EACD;EACEpf,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACqT,OAAO,CAAC;EAChCpkB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChClS,QAAQ,EAAE/Q,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1C;EACA0Y,WAAW,EAAE9jB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,EAAE/B,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EACtFlJ,MAAM,EAAE2a,WAAU;EAClB0C,GAAG;EACHpK,GAAG;EACH7E,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB3E,OAAO,EAAE4W,eAAO,CAACvZ,QAAQ,CAACmB,SAAS,EAAE,IAAI;AAC3C,CAAC,EACD;EACEzG,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACuT,cAAc,CAAC;EACvCtkB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBsT,YAAY,EAAEjkB,eAAO,CAACqJ,QAAQ,CAACkC,UAAU,CAAC;EAC1CqU,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC0T,WAAW,CAAC;EACpCzkB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBpT,IAAI;EACJ4mB,QAAQ,EAAE7B,WAAW,CAAC,CAAC,EAAEnG,KAAI,CAAC;EAC9B9b,OAAO;EACPuf,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC4T,YAAY,CAAC;EACrC3kB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBoS,MAAM;EACNU,OAAO;EACP7J,QAAQ,EAAEA,QAAQ,CAAC,KAAK,CAAC;EACzB4J,SAAS;EACT5D,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC4T,YAAY,CAAC;EACrC3kB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,CAAC;EAC1Be,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBoS,MAAM;EACNU,OAAO;EACP7J,QAAQ,EAAEA,QAAQ,CAAC,IAAI,CAAC;EACxB4J,SAAS;EACT5D,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC6T,cAAc,CAAC;EACvC5kB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBoS,MAAM;EACN;EACAe,WAAW,EAAE9jB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,EAAE/B,QAAQ,CAACoC,IAAI,CAAC;EAC5DmU,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC8T,YAAY,CAAC;EACrC7kB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBoS,MAAM;EACNnD,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC8N,gBAAgB,CAAC;EACzC7e,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCsB,OAAO,EAAEvkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCuF,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvB6T,IAAI,EAAE5B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EACzC6Y,SAAS;EACT/C,GAAG;EACHpK,GAAG;EACHiP,OAAO,EAAEjC,cAAc,CAAC,CAACtd,KAAK,GAAG,CAAC,KAAK;IACrC,IAAI,CAACA,KAAK,KAAK,CAAC,EAAE,OAAOA,KAAK;IAC9B,MAAM,IAAIhH,aAAa,CAAC,SAAS,EAAE,qCAAqC,EAAEgH,KAAK,CAAC;EAClF,CAAC,EAAEgY,WAAU,CAAC;EACd3a,MAAM,EAAE2a,WAAU;EAClB2D,QAAQ;EACRvD,QAAQ;EACRoH,QAAQ,EAAE9B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC6K,cAAc,CAAC;EACvC5b,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC0B,QAAQ,EAAE3kB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1CuF,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB;EACAyI,UAAU,EAAEpZ,eAAO,CAACqJ,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EAC5DwO,UAAU;EACV2F,GAAG;EACHpK,GAAG;EACHjT,MAAM,EAAE2a,WAAU;EAClB2D,QAAQ;EACRvD,QAAQ;EACRoH,QAAQ,EAAE9B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACsO,gBAAgB,CAAC;EACzCrf,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CuF,KAAK,EAAEA,aAAK,CAAC,WAAW,CAAC;EACzBiU,WAAW,EAAEnY,MAAM;EACnBoY,cAAc,EAAEpY,MAAM;EACtBsV,QAAQ,EAAE7E,WAAU;EACpB4H,aAAa,EAAExC,WAAW,CAACY,gBAAgB,CAAC6B,KAAK,EAAEjC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACjF8B,cAAc,EAAE1C,WAAW,CAAC,GAAG,EAAE9B,WAAS,CAAC;EAC3CZ,GAAG;EACHpK,GAAG;EACHyE,UAAUA,EAAAA,WAAAA;AACZ,CAAC,EACD;EACElW,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACuO,cAAc,CAAC;EACvCtf,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC;EACAjS,QAAQ,EAAEhR,eAAO,CAACqJ,QAAQ,CAAC6B,aAAa,EAAE7B,QAAQ,CAACoC,IAAI,CAAC;EACxDkF,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxBmU,aAAa,EAAExC,WAAW,CAACY,gBAAgB,CAAC6B,KAAK,EAAEjC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACjF8B,cAAc,EAAE1C,WAAW,CAAC,GAAG,EAAE9B,WAAS,CAAC;EAC3CZ,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACwO,aAAa,CAAC;EACtCvf,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChClS,QAAQ,EAAE/Q,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1CuF,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB;EACAK,QAAQ,EAAEhR,eAAO,CAACqJ,QAAQ,CAAC6B,aAAa,EAAE7B,QAAQ,CAACoC,IAAI,CAAC;EACxDwZ,KAAK,EAAExY,MAAM;EACbsV,QAAQ;EACRmD,YAAY,EAAE5C,WAAW,CAACY,gBAAgB,CAAC6B,KAAK,EAAEjC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EAChFiC,aAAa,EAAE7C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EACzC4E,eAAe,EAAE9C,WAAW,CAACY,gBAAgB,CAAC6B,KAAK,EAAEjC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACnFmC,gBAAgB,EAAE/C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EAC5CZ,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACyO,eAAe,CAAC;EACxCxf,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjS,QAAQ,EAAEhR,eAAO,CAACqJ,QAAQ,CAAC6B,aAAa,CAAC;EACzCyF,KAAK,EAAEA,aAAK,CAAC,UAAU,CAAC;EACxB2U,OAAO,EAAE1C,eAAO,CAACvZ,QAAQ,CAAC8B,aAAa,CAAC;EACxCoa,QAAQ,EAAE9Y,MAAM;EAChB2Y,eAAe,EAAE9C,WAAW,CAACY,gBAAgB,CAAC6B,KAAK,EAAEjC,mBAAW,CAACI,gBAAgB,CAAC,CAAC;EACnFmC,gBAAgB,EAAE/C,WAAW,CAAC,EAAE,EAAE9B,WAAS,CAAC;EAC5CZ,GAAG;EACHpK,GAAGA,EAAAA,GAAAA;AACL,CAAC,EACD;EACEzR,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACgV,eAAe,CAAC;EACxC/lB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCwC,SAAS,EAAEzlB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Csa,eAAe,EAAEvJ,KAAI;EACrBwJ,SAAS,EAAE3lB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Cwa,eAAe,EAAEzJ,KAAI;EACrB0J,cAAc,EAAE1J,KAAI;EACpB2J,UAAU,EAAE3J,KAAI;EAChB3G,GAAG;EACHoK,GAAG;EACHmG,oBAAoB,EAAEzd,aAAK,CAACtI,eAAO,CAAC,GAAGub,eAAe,CAAC,CAAC;EACxDyK,oBAAoB,EAAE1d,aAAK,CAACtI,eAAO,CAAC,GAAGub,eAAe,CAAC,CAAC;EACxD0K,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK,CAAC;EAClCuG,KAAK,EAAEA,aAAK,CAAC,WAAW;AAC1B,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC0V,oBAAoB,CAAC;EAC7CzmB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCib,oBAAoB,EAAElK,KAAI;EAC1BmK,oBAAoB,EAAEnK,KAAI;EAC1B3G,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC+V,kBAAkB,CAAC;EAC3C9mB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE4W,eAAO,CAACvZ,QAAQ,CAACY,WAAW,CAAC;EACtCuc,GAAG,EAAElD,aAAa;EAClB9N,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACiW,cAAc,CAAC;EACvChnB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE4W,eAAO,CAACvZ,QAAQ,CAACY,WAAW,CAAC;EACtCuc,GAAG,EAAElD,aAAa;EAClB9N,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACkW,gBAAgB,CAAC;EACzCjnB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxC7I,MAAM,EAAE4Z,KAAI;EACZ3G,GAAG;EACHoK,GAAG;EACHqG,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK,CAAC;EAClCuc,KAAK,EAAEnG,WAAS;EAChB7P,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACoW,iBAAiB,CAAC;EAC1CnnB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpC8b,IAAI,EAAE7mB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE4Z,KAAI;EACZ3G,GAAG;EACHoK,GAAG;EACHqG,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK,CAAC;EAClCuc,KAAK,EAAEnG,WAAS;EAChB7P,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACsW,eAAe,CAAC;EACxCrnB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCib,oBAAoB,EAAElK,KAAI;EAC1BmK,oBAAoB,EAAEnK,KAAI;EAC1B3G,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC4N,sBAAsB,CAAC;EAC/C3e,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE4W,eAAO,CAACvZ,QAAQ,CAACY,WAAW,CAAC;EACtC0c,KAAK,EAAEnG,WAAS;EAChB7W,MAAM,EAAEiZ,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EAC3Cmc,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK,CAAC;EAClC2c,aAAa,EAAEnE,eAAO,CAACvZ,QAAQ,CAACiB,UAAU,CAAC;EAC3CkL,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC6N,iBAAiB,CAAC;EAC1C5e,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpC4b,KAAK,EAAEnG,WAAS;EAChByF,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK;AACnC,CAAC,EACD;EACErG,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACwW,qBAAqB,CAAC;EAC9CvnB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCkD,SAAS,EAAEnmB,eAAO,CAACqJ,QAAQ,CAAC0B,OAAO,CAAC;EACpCqb,MAAM,EAAEpmB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxCY,OAAO,EAAE4W,eAAO,CAACvZ,QAAQ,CAACY,WAAW,CAAC;EACtCuL,GAAG;EACHoK,GAAG;EACHjP,KAAK,EAAEA,aAAK,CAAC,QAAQ;AACvB,CAAC,EACD;EACE5M,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC+N,UAAU,CAAC;EACnC9e,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCsB,OAAO,EAAEvkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCuF,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvB6T,IAAI,EAAE5B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EACzCmd,OAAO,EAAEjE,GAAG;EACZL,SAAS;EACT/C,GAAG;EACHpK,GAAG;EACHqL,QAAQ;EACRvD,QAAQ;EACRoH,QAAQ,EAAE9B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAAC8K,QAAQ,CAAC;EACjC7b,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCiE,IAAI,EAAElnB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC+b,QAAQ,EAAEvE,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EAC7CmQ,UAAU;EACV2F,GAAG;EACHiB,QAAQ;EACRvD,QAAQ;EACRjI,EAAE,EAAE+N;AACN,CAAC,EACD;EACErf,GAAG,EAAEkf,sBAAc,CAACzS,GAAG,CAACgO,WAAW,CAAC;EACpC/e,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCmE,OAAO,EAAEpnB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACzCuF,KAAK,EAAEA,aAAK,CAAC,SAAS,CAAC;EACvBiP,GAAG;EACHvK,EAAE,EAAE+N;AACN,CAAC,CACO;;;;ACxZqD;AAOhC;AAC4C;AAOpE,SAASmE,SAASA,CACvBC,OAAgB,EAChBhX,GAA8B,EAC9BzM,GAAW,EACXtE,OAA2B,EACH;EACxB,MAAMgoB,UAAU,GAAGD,OAAO,CAACvK,MAAM,CAAEyK,CAAC,IAAKA,CAAC,CAAC3jB,GAAG,CAACke,UAAU,KAAKle,GAAG,CAAC;EAClE,IAAI0jB,UAAU,CAACphB,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIrC,mBAAmB,CAAC,GAAGwM,GAAG,CAACzM,GAAG,CAAC,KAAKA,GAAG,GAAG,EAAE,CAAC,CAAC;EACrF,IAAItE,OAAO,IAAI,IAAI,EAAE;IACnB,MAAMkoB,aAAa,GAAGF,UAAU,CAACrhB,IAAI,CAAEwhB,MAAM,IAAKA,MAAM,CAACnoB,OAAO,CAACyiB,kBAAkB,CAAC;IACpF,IAAIyF,aAAa,IAAI,IAAI,EACvB,MAAM,IAAI9nB,aAAa,CAAC,gCAAgC2Q,GAAG,CAACzM,GAAG,CAAC,KAAKA,GAAG,GAAG,CAAC;IAC9EtE,OAAO,GAAGkoB,aAAa,CAACloB,OAAO,CAACwiB,UAAU;EAC5C;EACA,MAAM2F,MAAM,GAAGH,UAAU,CAACrhB,IAAI,CAAEshB,CAAC,IAAKA,CAAC,CAACjoB,OAAO,CAACwiB,UAAU,KAAKxiB,OAAO,CAAC;EACvE,IAAImoB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI5jB,mBAAmB,CAAC,GAAGwM,GAAG,CAACzM,GAAG,CAAC,KAAKA,GAAG,GAAG,EAAEtE,OAAO,CAAC;EAClF,OAAO6H,MAAM,CAACE,OAAO,CAACogB,MAAM,CAAC;AAC/B;AAEO,SAASC,UAAUA,CACxBL,OAAgB,EAChBhX,GAA8B,EAC9BkK,MAIC,EACDoN,WAAqC,EACrCta,QAAW,EACS;EACpB,MAAMoa,MAAM,GAAGL,SAAS,CAACC,OAAO,EAAEhX,GAAG,EAAEkK,MAAM,CAAC3W,GAAG,EAAE2W,MAAM,CAACjb,OAAO,CAAC;EAClE,MAAMyO,MAAM,GAAG0Z,MAAM,CAAC9kB,GAAG,CAAC,CAAC,CAACmB,GAAG,EAAE6c,KAAK,CAAC,KACrCA,KAAK,CAACrG,SAAS,CAACC,MAAM,CAACzW,GAAG,CAAC,EAAE;IAAE,GAAGyW,MAAM;IAAE,GAAGoN;EAAY,CAAC,EAAEpN,MAAM,CACpE,CAAC;EACD,OAAOnO,MAAM,CAAC+a,wBAAS,CAACpZ,MAAM,CAAC,EAAEV,QAAQ,CAAC;AAC5C;AAEO,SAASua,YAAYA,CAC1BP,OAAgB,EAChBhX,GAA8B,EAC9BwX,aAA0B,EAC1BC,WAA+B,EAC/BH,WAAqC,EAC5B;EACT,MAAM5Z,MAAM,GAAGmZ,wBAAS,CAAC7a,MAAM,CAACwb,aAAa,CAAC,CAAC;EAC/C,IAAI,CAACrL,WAAW,CAACC,MAAM,CAAC1O,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAACyO,WAAW,CAACC,MAAM,CAAC1O,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IACpE,MAAM,IAAIzK,WAAW,CAAC,4CAA4C,CAAC;EACrE;EACA,MAAMM,GAAG,GAAG2D,MAAM,CAACG,IAAI,CAACqG,MAAM,CAAC,CAAC,CAAC,CAAC,CAACga,UAAU,CAAC,CAAC,EAAEha,MAAM,CAAC,CAAC,CAAC,CAAC7H,MAAM,CAAC;EAClE,MAAM5G,OAAO,GAAGiI,MAAM,CAACG,IAAI,CAACqG,MAAM,CAAC,CAAC,CAAC,CAAC,CAACga,UAAU,CAAC,CAAC,EAAEha,MAAM,CAAC,CAAC,CAAC,CAAC7H,MAAM,CAAC;EACtE,MAAMuhB,MAAM,GAAGL,SAAS,CAACC,OAAO,EAAEhX,GAAG,EAAEzM,GAAG,EAAEtE,OAAO,CAAC;EACpD,IAAIwoB,WAAW,IAAI,IAAI,IAAIA,WAAW,KAAKlkB,GAAG,EAAE;IAC9C,MAAM,IAAIN,WAAW,CAAC,YAAY+M,GAAG,CAACyX,WAAW,CAAC,aAAazX,GAAG,CAACzM,GAAG,CAAC,UAAU,CAAC;EACpF;EACA,IAAImK,MAAM,CAAC7H,MAAM,KAAKuhB,MAAM,CAACvhB,MAAM,EAAE;IACnC,MAAM,IAAInI,aAAa,CAAC,YAAY,EAAE0pB,MAAM,CAACvhB,MAAM,EAAE6H,MAAM,CAAC7H,MAAM,CAAC;EACrE;EACA,OAAOiB,MAAM,CAACC,WAAW,CACvBqgB,MAAM,CAAC9kB,GAAG,CAAC,CAAC,CAACvF,IAAI,EAAEujB,KAAK,CAAC,EAAEqH,KAAK,KAAK,CACnC5qB,IAAI,EACJujB,KAAK,CAAC/F,WAAW,CAAC7M,MAAM,CAACia,KAAK,CAAC,EAAgBL,WAAW,CAAC,CAC5D,CACH,CAAC;AACH;;AC9EA,0DAAe;EACbrN,SAASA,CAACvV,KAAc,EAAU;IAChC,OAAOwC,MAAM,CAACG,IAAI,CAAC,CAAC3C,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACrC,CAAC;EAED6V,WAAWA,CAAC3O,MAAc,EAAW;IACnC,OAAOA,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;EACxB;AACF,CAAC;;ACRgD;AAC6B;AAG/D,SAASgc,WAAWA,CACjC5a,QAAW,EACXzJ,GAAM,EAeN;EACA,OAAO;IACL0W,SAASA,CAACpT,MAAM,EAAE;MAAEqV;IAAU,CAAC,EAAE;MAC/B,OAAOlQ,MAAM,CACXkQ,SAAS,CAAC;QACR3Y,GAAG,EAAE2e,QAAQ,CAAC2F,KAAK;QACnBrL,MAAM,EAAE1V,MAAM,CAACE,OAAO,CAACH,MAAM,CAAC,CAACvE,GAAG,CAChC,CAAC,CAACmB,GAAG,EAAEiB,KAAK,CAAC,MACV;UACCnB,GAAG,EAAE2e,QAAQ,CAAC4F,UAAU;UACxBrkB,GAAG,EAAEuI,MAAM,CAACvI,GAAyB,CAAC;UACtCiB,KAAK,EAAEsH,MAAM,CAACkQ,SAAS,CAAC;YAAE,GAAIxX,KAAa;YAAEnB;UAAI,CAAC,CAAC;QACrD,CAAC,CACL;MACF,CAAC,CACH,CAAC;IACH,CAAC;IAEDgX,WAAWA,CAAC3O,MAAM,EAAE;MAAEyQ;IAAY,CAAC,EAAE;MACnC,MAAM;QAAEG;MAAO,CAAC,GAAGH,WAAW,CAACtQ,MAAM,CAACH,MAAM,EAAE/C,QAAQ,CAACmB,SAAS,CAAC,EAAEkY,QAAQ,CAAC2F,KAAK,CAAC;MAClF,OAAO/gB,MAAM,CAACC,WAAW,CACvByV;MACE;MAAA,CACCC,MAAM,CAAC,CAAC;QAAEhZ;MAAI,CAAC,KAAKuJ,QAAQ,KAAKnE,QAAQ,CAAC2B,eAAe,IAAI/G,GAAG,CAACoC,MAAM,KAAK,EAAE,CAAC,CAC/EvD,GAAG,CAAC,CAAC;QAAEmB,GAAG;QAAEiB;MAAM,CAAC,KAAK,CACvBqH,MAAM,CAACtI,GAAG,EAAEuJ,QAAQ,CAAC,EACrBqP,WAAW,CAACtQ,MAAM,CAACrH,KAAK,EAAEmE,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC,CACpD,CACL,CAAC;IACH,CAAC;IAEDwkB,aAAa,EAAE;EACjB,CAAC;AACH;;;;;;;;;ACtDiD;AAED;AAQd;AAC4C;AAAA,IAIzEC,QAAQ,0BAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAARA,QAAQ,CAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA,EAARA,QAAQ;AAAA,IAAAC,SAAA,oBAAAjU,OAAA;AAAA,IAAAkU,WAAA,oBAAAlU,OAAA;AAAA,IAAAmU,MAAA,oBAAAnU,OAAA;AAAA,IAAAoU,SAAA,oBAAApU,OAAA;AAAA,IAAAqU,IAAA,oBAAArU,OAAA;AAAA,IAAAsU,YAAA,oBAAAtU,OAAA;AAAA,IAAAuU,aAAA,oBAAAC,OAAA;AAQb,MAAMC,MAAM,CAAyC;EAKnD,IAAIC,UAAUA,CAAA,EAAY;IACxB,OAAOC,qBAAA,CAAKT,WAAW,EAAhB,IAAe,CAAC;EACzB;EAcA;AACF;AACA;AACA;AACA;AACA;AACA;EACErrB,WAAWA,CAAC6Q,MAAoB,EAAEV,QAAW,EAAEzJ,GAAM,EAAEqlB,MAA0B,EAAE;IAiFnF;AACF;AACA;AACA;AACA;IAJEC,2BAAA,OAAAN,aAAA;IA5GAO,0BAAA,OAASb,SAAS;IAElBa,0BAAA,OAAAZ,WAAW,EAAG,IAAI;IAMlBY,0BAAA,OAASX,MAAM;IAEfW,0BAAA,OAASV,SAAS;IAElBU,0BAAA,OAAST,IAAI;IAEbS,0BAAA,OAASR,YAAY;IAcnBS,qBAAA,CAAKX,SAAS,EAAd,IAAI,EAAapb,QAAJ,CAAC;IACd+b,qBAAA,CAAKV,IAAI,EAAT,IAAI,EAAQ9kB,GAAJ,CAAC;IACTwlB,qBAAA,CAAKT,YAAY,EAAjB,IAAI,EAAgBM,MAAJ,CAAC;IACjBG,qBAAA,CAAKd,SAAS,EAAd,IAAI,EAAava,MAAM,CAAC,CAAC,CAAC,CAAC3N,QAAQ,CAAC,KAAK,CAA5B,CAAC;IACdgpB,qBAAA,CAAKZ,MAAM,EAAX,IAAI,EAAUrhB,MAAM,CAACC,WAAW,CAAC2G,MAAM,CAAC,CAAC,CAAC,CAACpL,GAAG,CAAEua,IAAI,IAAK,CAACA,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC,EAAE8c,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAlF,CAAC;IAEX,IAAI8L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAACQ,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,CAAC,IAAI,IAAI,EAAE;MACvC,IAAInhB,MAAM,CAACuT,IAAI,CAACsO,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAACtiB,MAAM,KAAK,CAAC,EAAE;QACzC,MAAM,IAAInD,sBAAsB,CAAC,gCAAgC,CAAC;MACpE;MACAqmB,qBAAA,CAAKb,WAAW,EAAhB,IAAI,EAAe,KAAJ,CAAC;MAChB;IACF;IACAphB,MAAM,CAACE,OAAO,CAAC2hB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAACtQ,OAAO,CAAC,CAAC,CAACpU,GAAG,EAAEoZ,IAAI,CAAC,KAAK;MACnD,IAAImM,SAAgB,CAAAjJ,IAAA,CAAhB0I,MAAM,EAAW5L,IAAI,MAAMpZ,GAAG,EAAE,MAAM,IAAIhB,2BAA2B,CAAC,CAAC;MAC3E,MAAM;QAAE4I;MAAK,CAAC,GAAG4d,UAAiB,CAAAlJ,IAAA,CAAjB0I,MAAM,EAAY5L,IAAI,CAAC;MACxC,QAAQxR,IAAI;QACV,KAAK2c,QAAQ,CAACkB,MAAM;UAClBrM,IAAI,CACDpR,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZgR,MAAM,CAAElX,CAAC,IAAKA,CAAC,CAACM,MAAM,CAAC,CACvBgS,OAAO,CAAEtS,CAAC,IAAK;YACd;YACA;YACA;YACA;YACA,IAAIojB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC5iB,CAAC,CAACxF,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAEgpB,qBAAA,CAAKb,WAAW,EAAhB,IAAI,EAAe,KAAJ,CAAC;UAC9D,CAAC,CAAC;UACJ;QACF,KAAKF,QAAQ,CAACmB,SAAS;UACrB,IAAIR,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAACtL,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,EAAE;YAChD,MAAM,IAAI2C,sBAAsB,CAAC,6CAA6C,CAAC;UACjF;UACA;QACF,KAAKslB,QAAQ,CAACoB,IAAI;UAChB;QACF;UACE,MAAM,IAAI/pB,aAAa,CAAC,6BAA6BgM,IAAI,EAAE,CAAC;MAChE;IACF,CAAC,CAAC;EACJ;EAEAge,OAAOA,CAACC,IAAkB,EAAW;IACnC,OAAOX,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,KAAKU,qBAAA,CAAKV,SAAS,EAAdqB,IAAa,CAAC;EAC1C;EAyBA;AACF;AACA;AACA;EACErP,SAASA,CAAA,EAAiB;IACxB,OAAO,CACL/S,MAAM,CAACG,IAAI,CAACshB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,EAAE,KAAK,CAAC,EAClCnhB,MAAM,CAACE,OAAO,CAAC2hB,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC,CAAC7lB,GAAG,CAAC,CAAC,CAACinB,OAAO,EAAE7kB,KAAK,CAAC,KAAK,CAACwC,MAAM,CAACG,IAAI,CAACkiB,OAAO,EAAE,KAAK,CAAC,EAAE7kB,KAAK,CAAC,CAAC,CAC5F;EACH;EAsCA;AACF;AACA;AACA;AACA;EACE0P,GAAGA,CAAC3Q,GAAuB,EAA0C;IACnE,MAAM+lB,CAAC,GAAGC,iBAAA,CAAAlB,aAAA,MAAI,EAACmB,OAAM,CAAC,CAAA3J,IAAA,CAAZ,IAAI,EAAS/T,MAAM,CAACvI,GAAG,CAAC,CAAC1D,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnD,IAAIypB,CAAC,IAAI,IAAI,EAAE,OAAOA,CAAC;IACvB,OAAOb,qBAAA,CAAKL,YAAY,EAAjB,IAAgB,CAAC,CAAAvI,IAAA,CAAjB,IAAI,EAAchU,MAAM,CAACyd,CAAC,EAAE3gB,QAAQ,CAACmB,SAAS,CAAC,EAAE2e,qBAAA,CAAKN,IAAI,EAAT,IAAQ,CAAC;EACnE;EAmCAsB,QAAQA,CAAA,EAAyD;IAC/D,OAAO7iB,MAAM,CAACC,WAAW,CACvB0iB,iBAAA,CAAAlB,aAAA,MAAI,EAACqB,WAAU,CAAC,CAAA7J,IAAA,CAAhB,IAAI,EACF;IAAA,CACCtD,MAAM,CAAC,CAAC,CAACoN,CAAC,CAAC,KAAKlB,qBAAA,CAAKP,SAAS,EAAd,IAAa,CAAC,KAAKvf,QAAQ,CAAC2B,eAAe,IAAIqf,CAAC,CAAChkB,MAAM,KAAK,EAAE,CAAC,CAC/EvD,GAAG,CAAC,CAAC,CAACunB,CAAC,EAAE1jB,CAAC,CAAC,KAAK,CACf4F,MAAM,CAAC7E,MAAM,CAACG,IAAI,CAACwiB,CAAC,EAAE,KAAK,CAAC,EAAElB,qBAAA,CAAKP,SAAS,EAAd,IAAa,CAAC,CAAC,EAC7CO,qBAAA,CAAKL,YAAY,EAAjB,IAAgB,CAAC,CAAAvI,IAAA,CAAjB,IAAI,EAAchU,MAAM,CAAC5F,CAAC,EAAE0C,QAAQ,CAACmB,SAAS,CAAC,EAAE2e,qBAAA,CAAKN,IAAI,EAAT,IAAQ,CAAC,EAC3D,CACL,CAAC;EACH;AACF;AAACyB,OAAA,GAxMKrB,MAAM;AAAA,SAAAO,UAiBOnM,IAAW,EAAU;EACpC,OAAO3V,MAAM,CAACG,IAAI,CAAC2G,IAAI,CAAC8Y,wBAAS,CAACjK,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC;AAC3D;AAAC,SAAAkpB,WAwDiBpM,IAAc,EAAqD;EACnF,QAAQA,IAAI,CAAChX,MAAM;IACjB,KAAK,EAAE;MACL,OAAO;QACLwF,IAAI,EAAE2c,QAAQ,CAACkB,MAAM;QACrB,IAAIrM,IAAI,CAAC,EAAE,CAAC,CAAChX,MAAM,KAAK,CAAC,IAAI;UAAEnB,KAAK,EAAEmY,IAAI,CAAC,EAAE;QAAE,CAAC;MAClD,CAAC;IACH,KAAK,CAAC;MAAE;QACN,MAAM/Z,MAAM,GAAG+Z,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QAChC,IAAI/Z,MAAM,GAAG,CAAC,EAAE,MAAM,IAAID,sBAAsB,CAACC,MAAM,CAAC;QACxD,MAAMuI,IAAI,GAAGvI,MAAM,IAAI,CAAC,GAAGklB,QAAQ,CAACmB,SAAS,GAAGnB,QAAQ,CAACoB,IAAI;QAC7D,MAAM3d,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAACtP,QAAQ,CAAC2G,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;QAC7C,OAAO;UACLuI,IAAI;UACJ,IAAIA,IAAI,KAAK2c,QAAQ,CAACoB,IAAI,IAAI;YAAE1kB,KAAK,EAAEmY,IAAI,CAAC,CAAC;UAAE,CAAC,CAAC;UACjDkN,IAAI,EAAElN,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC,CAAC0L,KAAK,CAACA,KAAK;QAC3C,CAAC;MACH;IACA;MACE,MAAM,IAAI9I,sBAAsB,CAACka,IAAI,CAAChX,MAAM,CAAC;EACjD;AACF;AAAC,SAAA6jB,QAkBOM,IAAY,EAAsB;EACxC,IAAIC,UAAU,GAAGtB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC;EAC/B,IAAIxkB,GAAG,GAAGumB,IAAI;EACd,OAAO,IAAI,EAAE;IACX;IACA,MAAMnN,IAAI,GAAG8L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC8B,UAAU,CAAC;IACpC,IAAIpN,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAAC6L,UAAU,EAAE,OAAOza,SAAS;MACtC,MAAM,IAAI5O,aAAa,CAAC,kCAAkC,CAAC;IAC7D;IACA,MAAM;MAAEgM,IAAI;MAAE3G,KAAK;MAAEqlB;IAAK,CAAC,GAAGd,UAAiB,CAAAlJ,IAAA,CAAjB0I,OAAM,EAAY5L,IAAI,CAAC;IACrD,QAAQxR,IAAI;MACV,KAAK2c,QAAQ,CAACkB,MAAM;QAClB,IAAIzlB,GAAG,CAACoC,MAAM,KAAK,CAAC,EAAE,OAAOnB,KAAK;QAClCulB,UAAU,GAAGpN,IAAI,CAAC,CAAC,KAAKpZ,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC1D,QAAQ,CAAC,KAAK,CAAC;QACjD0D,GAAG,GAAGA,GAAG,CAAC6O,SAAS,CAAC,CAAC,CAAC;QACtB;MACF,KAAK0V,QAAQ,CAACmB,SAAS;QACrB,IAAI1lB,GAAG,CAAC6O,SAAS,CAAC,CAAC,EAAEyX,IAAI,EAAElkB,MAAM,CAAC,KAAKkkB,IAAI,EAAE,OAAO9b,SAAS;QAC7Dgc,UAAU,GAAGpN,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC;QACpC0D,GAAG,GAAGA,GAAG,CAAC6O,SAAS,CAACyX,IAAI,CAAClkB,MAAM,CAAC;QAChC;MACF,KAAKmiB,QAAQ,CAACoB,IAAI;QAChB,IAAIW,IAAI,KAAKtmB,GAAG,EAAE,OAAOwK,SAAS;QAClC,OAAOvJ,KAAK;MACd;QACE,MAAM,IAAIrF,aAAa,CAAC,6BAA6BgM,IAAI,EAAE,CAAC;IAChE;EACF;AACF;AAAC,SAAAue,YAAA,EAasC;EACrC,MAAM5iB,OAAgC,GAAG,EAAE;EAC3C,MAAMkjB,GAAG,GAAGA,CAACD,UAAkB,EAAExmB,GAAW,KAAW;IACrD,MAAMoZ,IAAI,GAAG8L,qBAAA,CAAKR,MAAM,EAAX,IAAU,CAAC,CAAC8B,UAAU,CAAC;IACpC,IAAIpN,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,CAAC,IAAI,CAAC6L,UAAU,EAAE;MACtB,MAAM,IAAIrpB,aAAa,CAAC,kCAAkC,CAAC;IAC7D;IACA,MAAM;MAAEgM,IAAI;MAAE3G,KAAK;MAAEqlB;IAAK,CAAC,GAAGd,UAAiB,CAAAlJ,IAAA,CAAjB0I,OAAM,EAAY5L,IAAI,CAAC;IACrD,QAAQxR,IAAI;MACV,KAAK2c,QAAQ,CAACkB,MAAM;QAClBrM,IAAI,CACDpR,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CACZnJ,GAAG,CAAC,CAAC+F,CAAC,EAAE6P,GAAG,KAAyB,CAAC7P,CAAC,EAAE6P,GAAG,CAAC,CAAC,CAC7CuE,MAAM,CAAC,CAAC,CAACpU,CAAC,CAAC,KAAKA,CAAC,CAACxC,MAAM,CAAC,CACzBgS,OAAO,CAAC,CAAC,CAACxP,CAAC,EAAE6P,GAAG,CAAC,KAAKgS,GAAG,CAAC7hB,CAAC,CAACtI,QAAQ,CAAC,KAAK,CAAC,EAAE0D,GAAG,GAAGyU,GAAG,CAACnY,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI2E,KAAK,IAAI,IAAI,EAAEsC,OAAO,CAACyR,IAAI,CAAC,CAAChV,GAAG,EAAEiB,KAAK,CAAC,CAAC;QAC7C;MACF,KAAKsjB,QAAQ,CAACmB,SAAS;QACrBe,GAAG,CAACrN,IAAI,CAAC,CAAC,CAAC,CAAC9c,QAAQ,CAAC,KAAK,CAAC,EAAE0D,GAAG,GAAGsmB,IAAI,CAAC;QACxC;MACF,KAAK/B,QAAQ,CAACoB,IAAI;QAChB,IAAI1kB,KAAK,IAAI,IAAI,EAAE,MAAM,IAAIpF,iBAAiB,CAAC,CAAC;QAChD0H,OAAO,CAACyR,IAAI,CAAC,CAAChV,GAAG,GAAGsmB,IAAI,EAAErlB,KAAK,CAAC,CAAC;QACjC;MACF;QACE,MAAM,IAAIrF,aAAa,CAAC,6BAA6BgM,IAAI,EAAE,CAAC;IAChE;EACF,CAAC;EACD6e,GAAG,CAACvB,qBAAA,CAAKV,SAAS,EAAd,IAAa,CAAC,EAAE,EAAE,CAAC;EACvB,OAAOjhB,OAAO;AAChB;AAea,SAASmjB,cAAcA,CACpCnd,QAAW,EACXzJ,GAAM,EAIN;EACA,OAAO;IACL0W,SAASA,CAACvV,KAAK,EAAE;MACf,OAAOA,KAAK,CAACuV,SAAS,CAAC,CAAC;IAC1B,CAAC;IAEDM,WAAWA,CAAC7V,KAAK,EAAE;MAAE2X;IAAY,CAAC,EAAE;MAClC,OAAO,IAAIoM,MAAM,CAAC/jB,KAAK,EAAEsI,QAAQ,EAAEzJ,GAAG,EAAE8Y,WAAW,CAAC;IACtD;EACF,CAAC;AACH;;AChPqE;AAWtD,SAAS+N,eAAeA,CACrC7mB,GAAM,EAeN;EACA,OAAO;IACL0W,SAASA,CAACzO,OAAO,EAAE;MAAE0Q;IAAU,CAAC,EAAE;MAChC,OAAOlQ,MAAM,CAACkQ,SAAS,CAAC;QAAE3Y,GAAG;QAAEiI;MAAQ,CAAC,CAAC,CAAC;IAC5C,CAAC;IAED+O,WAAWA,CAAC3O,MAAM,EAAE;MAAEyQ;IAAY,CAAC,EAAE;MACnC,OAAOA,WAAW,CAActQ,MAAM,CAACH,MAAM,EAAE/C,QAAQ,CAACmB,SAAS,CAAC,EAAEzG,GAAG,CAAC,CAACiI,OAAO;IAClF,CAAC;IAEDuc,aAAa,EAAE;EACjB,CAAC;AACH;;ACvCuD;AACc;AACzB;AACI;AACO;AACF;AACL;AACJ;AACY;AACL;AACA;AACX;AACM;AACI;AACV;AACc;AACW;AACnB;AACH;AACK;AACc;AACJ;AAU1D,MAAMyC,oBAAoB,GAAG1iB,aAAK,CAACua,aAAK,CAACH,QAAQ,CAAC4F,UAAU,CAAC,CAAoC;AAYjG,MAAM2C,YAAY,GAAGnoB,WAAG,CAACuG,QAAQ,CAAC2B,eAAe,EAAE0X,QAAQ,CAACwI,QAAQ,CAA4B;AAYhG,MAAMC,WAAW,GAAGroB,WAAG,CAACuG,QAAQ,CAAC+B,cAAc,EAAEsX,QAAQ,CAAC0I,OAAO,CAA2B;AAY5F,MAAMC,QAAQ,GAAGvoB,WAAG,CAACuG,QAAQ,CAACmB,SAAS,EAAEkY,QAAQ,CAAC4I,YAAY,CAAwB;AAQtF,MAAMC,WAAW,GAAGzoB,WAAG,CAACuG,QAAQ,CAAC0B,OAAO,EAAE2X,QAAQ,CAAC3X,OAAO,CAA2B;AAQrF,MAAMygB,QAAQ,GAAG1oB,WAAG,CAACuG,QAAQ,CAACoC,IAAI,EAAEiX,QAAQ,CAACjX,IAAI,CAAwB;AAUzE,MAAMggB,UAAU,GAAG3oB,WAAG,CAACuG,QAAQ,CAAC6B,aAAa,EAAEwX,QAAQ,CAACgJ,MAAM,CAA0B;;AAExF;AACA;AACA;AACO,MAAMlE,OAAO,GAAG,CACrB;EACEzjB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC0I,OAAO,CAAC;EACrC3rB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,CAAC;EAC1BtS,KAAK,EAAE6P,WAAS;EAChBlK,OAAO,EAAE6F,KAAIA;AACf,CAAC,EACD;EACEpY,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC0I,OAAO,CAAC;EACrC3rB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC0I,KAAK,EAAExP,KAAI;EACXxL,KAAK,EAAE6P,WAAS;EAChBlK,OAAO,EAAE6F,KAAI;EACbyP,UAAU,EAAE5rB,eAAO,CAACqJ,QAAQ,CAAC2B,eAAe,EAAE3B,QAAQ,CAACoC,IAAI,CAAC;EAC5DogB,SAAS,EAAEjJ,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AAC/C,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACjX,IAAI,CAAC;EAClChM,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CqY,OAAO,EAAEjD,WAAS;EAClBsL,MAAM,EAAE9I,GAAG;EACX;AACJ;AACA;EACIQ,SAAS,EAAEhD,WAAS;EACpB5G,QAAQA,EAAAA,QAAAA;AACV,CAAC,EACD;EACE7V,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACwI,QAAQ,CAAC;EACtCzrB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCvS,KAAK,EAAE1Q,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACvCuX,SAAS;EACT6B,IAAI,EAAE5B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EACzCiiB,GAAG,EAAEnJ,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EACxCkiB,MAAM,EAAEnB,mBAAO;EACfoB,QAAQ,EAAE3jB,aAAK,CAACtI,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC,CAAC;EACjDqZ,OAAO,EAAEvH,WAAUA;AACrB,CAAC,EACD;EACEnZ,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC4I,YAAY,CAAC;EAC1C7rB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC0B,QAAQ,EAAE3kB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC1C8gB,WAAW,EAAE1L,WAAS;EACtBzhB,MAAM,EAAEyhB,WAAS;EACjBpH,UAAU,EAAEpZ,eAAO,CAACqJ,QAAQ,CAAC2B,eAAe,CAAC;EAC7C;EACAsS,QAAQ,EAAEnB,KAAI;EACdgQ,OAAO,EAAE3L,WAAS;EAClB4L,WAAW,EAAExJ,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EAChDuiB,UAAU,EAAEvJ,mBAAW,CAACL,cAAc,CAAC;EACvC;EACA;EACAsJ,GAAG,EAAEzjB,aAAK,CAAC0a,GAAG;AAChB,CAAC,EACD;EACEjf,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACgJ,MAAM,CAAC;EACpCjsB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCe,SAAS,EAAEhkB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CwZ,WAAW,EAAEnY,MAAM;EACnBoY,cAAc,EAAEpY,MAAM;EACtBsV,QAAQ,EAAE7E,WAAU;EACpB8H,cAAc,EAAExE,WAAS;EACzBvG,UAAUA,EAAAA,WAAAA;AACZ,CAAC,EACD;EACElW,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC3X,OAAO,CAAC;EACrCtL,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCwC,SAAS,EAAEzlB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3Cua,SAAS,EAAE3lB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAC3CkhB,aAAa,EAAEnQ,KAAI;EACnBuJ,eAAe,EAAEvJ,KAAI;EACrByJ,eAAe,EAAEzJ,KAAI;EACrB0J,cAAc,EAAE1J,KAAI;EACpB4J,oBAAoB,EAAEzd,aAAK,CAACtI,eAAO,CAAC,GAAGub,eAAe,CAAC,CAAC;EACxDyK,oBAAoB,EAAE1d,aAAK,CAACtI,eAAO,CAAC,GAAGub,eAAe,CAAC,CAAC;EACxD0K,SAAS,EAAErD,eAAO,CAACvZ,QAAQ,CAACe,KAAK,CAAC;EAClCuc,KAAK,EAAEnG,WAAS;EAChB+L,SAAS,EAAEpQ,KAAI;EACf2J,UAAU,EAAE3J,KAAI;EAChBqQ,WAAW,EAAErQ,KAAI;EACjBsQ,aAAa,EAAE7J,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EAClD4iB,aAAa,EAAE9J,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AACnD,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACiK,6BAA6B,CAAC;EAC3DltB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCpb,IAAI,EAAE7H,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACtCwhB,EAAE,EAAE5sB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACpC7I,MAAM,EAAE4Z,KAAIA;AACd,CAAC,EACD;EACEpY,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACmK,4BAA4B,CAAC;EAC1DptB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCpb,IAAI,EAAE7H,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE4Z,KAAIA;AACd,CAAC,EACD;EACEpY,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACoK,6BAA6B,CAAC;EAC3DrtB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCpb,IAAI,EAAE7H,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACtC7I,MAAM,EAAE4Z,KAAIA;AACd,CAAC,EACD;EACEpY,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACqK,mCAAmC,CAAC;EACjEttB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCvS,KAAK,EAAE1Q,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACvCuX,SAAS;EACT6B,IAAI,EAAE5B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EACzC2a,OAAO,EAAEtI,KAAI;EACbuI,QAAQ,EAAE9B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB;AAC9C,CAAC,EACD;EACE/F,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACsK,iCAAiC,CAAC;EAC/DvtB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCgK,MAAM,EAAEjtB,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EACxC8hB,QAAQ,EAAEltB,eAAO,CAACqJ,QAAQ,CAAC2B,eAAe,CAAC;EAC3CiP,UAAU;EACV1X,MAAM,EAAE4Z,KAAI;EACZuI,QAAQ,EAAE9B,eAAO,CAACvZ,QAAQ,CAACS,iBAAiB,CAAC;EAC7CqjB,SAAS,EAAEnK,GAAG;EACd1F,QAAQ;EACRuD,QAAQA,EAAAA,SAAAA;AACV,CAAC,EACD;EACE9c,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACa,QAAQ,CAAC;EACtC9jB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC;EACAjL,QAAQ,EAAE1P,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC+B,cAAc,EAAEsX,QAAQ,CAAC0I,OAAO,CAAC,CAAC;EAClEgC,KAAK,EAAE9kB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAACmB,SAAS,EAAEkY,QAAQ,CAAC4I,YAAY,CAAC,CAAC;EAC/D+B,QAAQ,EAAE/kB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC0B,OAAO,EAAE2X,QAAQ,CAAC3X,OAAO,CAAC,CAAC;EAC3DuiB,SAAS,EAAEhlB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC2B,eAAe,EAAE0X,QAAQ,CAACwI,QAAQ,CAAC,CAAC;EACrEqC,EAAE,EAAEjlB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAACoC,IAAI,EAAEiX,QAAQ,CAACjX,IAAI,CAAC,CAAC;EAC/C+hB,OAAO,EAAEllB,aAAK,CAACwiB,cAAM,CAACzhB,QAAQ,CAAC6B,aAAa,EAAEwX,QAAQ,CAACgJ,MAAM,CAAC;AAChE,CAAC,EACD;EACE3nB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACpY,UAAU,CAAC;EACxC7K,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCqK,SAAS,EAAEvC,eAAO,CAACrI,QAAQ,CAAC+K,cAAc,CAA4B;EACtEL,KAAK,EAAErC,eAAO,CAACrI,QAAQ,CAACgL,UAAU,CAAwB;EAC1DL,QAAQ,EAAEtC,eAAO,CAACrI,QAAQ,CAACiL,aAAa,CAA2B;EACnEJ,EAAE,EAAExC,eAAO,CAACrI,QAAQ,CAACkL,gBAAgB,CAAwB;EAC7DJ,OAAO,EAAEzC,eAAO,CAACrI,QAAQ,CAACmL,YAAY,CAA0B;EAChE7V,QAAQ,EAAE+S,eAAO,CAACrI,QAAQ,CAACoL,aAAa;AAC1C,CAAC,EACD;EACE/pB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC2F,KAAK,CAAC;EACnC5oB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjG,MAAM,EAAEgO;AACV,CAAC,EACD;EACEjnB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC4F,UAAU,CAAC;EACxC7oB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChChf,GAAG,EAAE+e,GAAG;EACR9d,KAAK,EAAE8d,GAAGA;AACZ,CAAC,EACD;EACEjf,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAAC+K,cAAc,CAAC;EAC5ChuB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEif;AACX,CAAC,EACD;EACElnB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACgL,UAAU,CAAC;EACxCjuB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEqf;AACX,CAAC,EACD;EACEtnB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACiL,aAAa,CAAC;EAC3CluB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEuf;AACX,CAAC,EACD;EACExnB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACkL,gBAAgB,CAAC;EAC9CnuB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEwf;AACX,CAAC,EACD;EACEznB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACmL,YAAY,CAAC;EAC1CpuB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEyf;AACX,CAAC,EACD;EACE1nB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACoL,aAAa,CAAC;EAC3CruB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCjX,OAAO,EAAEmf;AACX,CAAC,EACD;EACEpnB,GAAG,EAAEkf,sBAAc,CAACP,QAAQ,CAACqL,gBAAgB,CAAC;EAC9CtuB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCrD,GAAG,EAAE1C,WAAU;EACfI,QAAQ;EACRlZ,MAAM,EAAEwe,eAAO,CAACvZ,QAAQ,CAAC4B,MAAM;AACjC,CAAC,CACO;;ACpSoD;AACN;AAClB;AACI;AAG1C,MAAM+iB,WAAW,GAAG,CAClB,CAACtL,QAAQ,CAACgL,UAAU,EAAErkB,QAAQ,CAACkB,aAAa,CAAC,EAC7C,CAACmY,QAAQ,CAACpY,UAAU,EAAEjB,QAAQ,CAACiB,UAAU,CAAC,EAC1C,CAACoY,QAAQ,CAACa,QAAQ,EAAEla,QAAQ,CAACgB,GAAG,CAAC,CACzB;;AAKV;AACA;AACA;AACA;AACA;AACA;;AAEO,SAASqS,SAASA,CAAChC,MAAiB,EAAe;EAAA,IAAAuT,kBAAA;EACxD,MAAMzgB,QAAQ,IAAAygB,kBAAA,GAAGD,WAAW,CAAC5nB,IAAI,CAAC,CAAC,CAACrC,GAAG,CAAC,KAAKA,GAAG,KAAK2W,MAAM,CAAC3W,GAAG,CAAC,GAAG,CAAC,CAAC,cAAAkqB,kBAAA,cAAAA,kBAAA,GAAI5kB,QAAQ,CAACmB,SAAS;EAC3F,OAAOqd,UAAU,CAACL,OAAO,EAAE9E,QAAQ,EAAEhI,MAAM,EAAE;IAAEgC;EAAU,CAAC,EAAElP,QAAQ,CAAC;AACvE;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKO,SAASqP,WAAWA,CAAC+F,OAAoB,EAAEqF,WAAsB,EAAe;EACrFA,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAXA,WAAW,GAAK+F,WAAW,CAAC5nB,IAAI,CAAC,CAAC,GAAGsV,GAAG,CAAC,KAAKkH,OAAO,CAACvM,UAAU,CAACqF,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3E,OAAOqM,YAAY,CAACP,OAAO,EAAE9E,QAAQ,EAAEE,OAAO,EAAEqF,WAAW,EAAE;IAAEpL;EAAY,CAAC,CAAC;AAC/E;;AChD2E;AAC9B;AAEN;AAEF;AACU;AACsC;AAC/B;AACI;;AAE1D;AACA;AACA;;AAEO,SAAS0K,iBAASA,CAACxjB,GAAQ,EAAEtE,OAAgB,EAA0B;EAC5E,OAAOyuB,SAAe,CAACvK,QAAQ,EAAEnT,GAAG,EAAEzM,GAAG,EAAEtE,OAAO,CAAC;AACrD;AAQA;AACA;AACA;AACA;AACA;AACO,SAAS8f,OAAOA,CAAC7E,MAAgB,EAAuB;EAC7D,OAAOmN,UAAU,CACflE,QAAQ,EACRnT,GAAG,EACHkK,MAAM,EACN;IACE;IACA4E,QAAQ;IACRC,OAAO;IACPI,SAAS,EAAGwO,cAAmB,IAAK5O,OAAO,CAAC;MAAE,GAAG7E,MAAM;MAAE,GAAGyT;IAAe,CAAC,CAAC;IAC7EzR,SAASA,EAAAA,SAAAA;EACX,CAAC,EACDrT,QAAQ,CAACY,WACX,CAAC;AACH;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemkB,YAAYA,CAAC1T,MAAqB,EAAgC;EACtF,MAAMzT,OAAO,CAAConB,GAAG,CACf9G,iBAAS,CAAC7M,MAAM,CAAC3W,GAAG,EAAE2W,MAAM,CAACjb,OAAO,CAAC,CAACqD,GAAG,CAAC,OAAO,CAACmB,GAAG,EAAE6c,KAAK,CAAC,KAAK;IAChE,IAAIA,KAAK,CAAClG,OAAO,IAAI,IAAI,EAAE;IAC3B;IACAF,MAAM,CAACzW,GAAG,CAAC,GAAG,MAAM6c,KAAK,CAAClG,OAAO,CAACF,MAAM,CAACzW,GAAG,CAAC,EAAEyW,MAAM,EAAEA,MAAM,CAAC;EAChE,CAAC,CACH,CAAC;;EAED;EACA,OAAO6E,OAAO,CAAC7E,MAAM,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS4E,QAAQA,CACtBG,SAAsC,EACtCxB,MAAe,EACe;EAC9B,OAAO8J,YAAY,CAACpE,QAAQ,EAAEnT,GAAG,EAAEiP,SAAS,EAAExB,MAAM,EAAE;IAAEqB,QAAQ;IAAEzC,WAAWA,EAAAA,WAAAA;EAAC,CAAC,CAAC;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyR,WAAWA,CAACC,KAAuC,EAAkB;EACnF,MAAM3iB,IAAI,GAAG,OAAO2iB,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAAClY,UAAU,CAAC,KAAK,CAAC,GAAG7J,MAAM,CAAC+hB,KAAK,CAAC,GAAGA,KAAK;EACzF,OAAOhiB,MAAM,CAACiC,IAAI,CAAC5C,IAAI,CAAC,EAAEvC,QAAQ,CAAC4B,MAAM,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASujB,2BAA2BA,CACzCC,UAA+B,EACN;EACzB,IAAI/T,MAAM,GAAG4E,QAAQ,CAACmP,UAAU,CAAC;EACjC,IAAIje,GAAG,CAAC6S,QAAQ,KAAK3I,MAAM,CAAC3W,GAAG,EAAE2W,MAAM,GAAGA,MAAM,CAAC+E,SAAS;EAC1D,IAAIjP,GAAG,CAAC8N,gBAAgB,KAAK5D,MAAM,CAAC3W,GAAG,IAAIyM,GAAG,CAAC+N,UAAU,KAAK7D,MAAM,CAAC3W,GAAG,EAAE;IACxE,MAAM,IAAI7F,aAAa,CAAC,YAAY,EAAE,gCAAgC,EAAEwc,MAAM,CAAC3W,GAAG,CAAC;EACrF;EACA,OAAO0M,eAAe,CAACiK,MAAM,CAAC6J,OAAO,EAAE7J,MAAM,CAAC/J,KAAK,CAAC;AACtD;;;;AC/GA,SAAS+d,MAAMA,CAACC,CAAS,EAAEC,CAAS,EAAU;EAC5C,MAAMC,aAAa,GAAIloB,CAAS,IAC9BA,CAAC,CACEsG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAChBA,KAAK,CAAC,GAAG,CAAC,CACVnK,GAAG,CAAEyL,CAAC,IAAK,CAACA,CAAC,CAAC;EAEnB,MAAMugB,WAAW,GAAGD,aAAa,CAACF,CAAC,CAAC;EACpC,MAAMI,WAAW,GAAGF,aAAa,CAACD,CAAC,CAAC;EAEpC,MAAMI,IAAI,GAAGhpB,IAAI,CAACoP,GAAG,CAAC,GAAG0Z,WAAW,EAAE,GAAGC,WAAW,CAAC,GAAG,CAAC;EACzD,MAAME,kBAAkB,GAAIC,UAAoB,IAC9CA,UAAU,CAACC,OAAO,CAAC,CAAC,CAACtpB,MAAM,CAAC,CAACupB,GAAG,EAAErpB,CAAC,EAAE2S,GAAG,KAAK0W,GAAG,GAAGrpB,CAAC,GAAGipB,IAAI,IAAItW,GAAG,EAAE,CAAC,CAAC;EAExE,OAAOuW,kBAAkB,CAACH,WAAW,CAAC,GAAGG,kBAAkB,CAACF,WAAW,CAAC;AAC1E;AAEe,SAASM,eAAeA,CACrC5vB,OAAe,EACfC,SAAiB,EACjBC,SAAkB,EACT;EACT,OAAO+uB,MAAM,CAACjvB,OAAO,EAAEC,SAAS,CAAC,IAAI,CAAC,KAAKC,SAAS,IAAI,IAAI,IAAI+uB,MAAM,CAACjvB,OAAO,EAAEE,SAAS,CAAC,GAAG,CAAC,CAAC;AACjG;;ACvBwF;AAM5D;AACO;AACiB;AACoC;AAExF,MAAM6vB,YAAY,GAAG,eAAe;AAE7B,MAAMF,gBAAgB,GAAGA,CAC9B,GAAGxmB,IAA6C,KACJ;EAC5C,MAAM2mB,UAAU,GAAGF,iCAAoB,CAAC,GAAGzmB,IAAI,CAAC;EAChD,MAAM;IAAE2R,SAAS;IAAEM;EAAY,CAAC,GAAG0U,UAAU;EAC7C,OAAOnoB,MAAM,CAACqR,MAAM,CAAC8W,UAAU,EAAE;IAC/BhV,SAASA,CACP,GAAG,CAACiV,MAAM,EAAEroB,MAAM,EAAEsoB,UAAU,EAAEtb,OAAO,CAA+B,EACxC;MAC9B;MACA,IAAIqb,MAAM,CAAC7jB,IAAI,CAACtO,IAAI,KAAK,QAAQ,IAAI8J,MAAM,IAAI,IAAI,EAAE;QACnD,OAAOoT,SAAS,CAAC8F,IAAI,CAAC,IAAI,EAAEmP,MAAM,EAAEroB,MAAM,EAAEsoB,UAAU,EAAEtb,OAAO,CAAC;MAClE;MACA,IAAI,OAAOhN,MAAM,KAAK,QAAQ,EAAE;QAC9BsoB,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAVA,UAAU,GAAKD,MAAM,CAACE,cAAc;QACpC,MAAM,IAAIxyB,KAAK,CAAC,GAAGuyB,UAAU,eAAetoB,MAAM,0BAA0B,CAAC;MAC/E;MACA,OAAOA,MAAM,CAAC9G,QAAQ,CAAC,CAAC;IAC1B,CAAC;IAEDwa,WAAWA,CACT,GAAG,CAAC2U,MAAM,EAAEG,YAAY,EAAEF,UAAU,EAAEtb,OAAO,CAAiC,EAC9C;MAChC;MACA,IAAIqb,MAAM,CAAC7jB,IAAI,CAACtO,IAAI,KAAK,QAAQ,IAAIsyB,YAAY,IAAI,IAAI,EAAE;QACzD,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAIA,YAAY,CAACxZ,UAAU,CAACmZ,YAAY,CAAC,EAAE;UAC7E7R,OAAO,CAACC,IAAI,CAAC,sCAAsCiS,YAAY,sBAAsB,CAAC;UACtFA,YAAY,GAAG,CAACA,YAAY,CAACxP,OAAO,CAACmP,YAAY,EAAE,EAAE,CAAC;QACxD;QACA,MAAMzc,MAAM,GAAGgI,WAAW,CAACwF,IAAI,CAAC,IAAI,EAAEmP,MAAM,EAAEG,YAAY,EAAEF,UAAU,EAAEtb,OAAO,CAAC;QAChF;QACA;QACA,IAAItB,MAAM,YAAY+B,IAAI,EAAE,OAAO,IAAIA,IAAI,CAAC,CAAC/B,MAAM,GAAG,IAAI,CAAC;QAC3D,OAAOA,MAAM;MACf;MACA,IAAI,OAAO8c,YAAY,KAAK,QAAQ,IAAIA,YAAY,GAAGhzB,MAAM,CAACmR,gBAAgB,EAAE;QAC9E,MAAM,IAAInO,aAAa,CAAC,UAAUgwB,YAAY,4CAA4C,CAAC;MAC7F;MACA,OAAO9hB,MAAM,CAAC8hB,YAAY,CAACtvB,QAAQ,CAAC,CAAC,CAAC8f,OAAO,CAACmP,YAAY,EAAE,EAAE,CAAC,CAAC;IAClE;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAMM,UAAU,GAAGjzB,MAAM,CAACmR,gBAAgB,CAACzN,QAAQ,CAAC,CAAC,CAAC8F,MAAM;AAC5D,MAAM0pB,gBAAgB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACjN,GAAG,kBAAkB8M,UAAU,cAAc,EAAE,GAAG,CAAC;AAC9F,MAAMI,iBAAiB,GAAG,IAAIF,MAAM,CAACC,MAAM,CAACjN,GAAG,gBAAgB8M,UAAU,OAAO,EAAE,GAAG,CAAC;AAC/E,MAAMK,iBAAiC,GAAG;EAC/C5yB,IAAI,EAAE,eAAe;EACrB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;IAC/B,MAAM/K,QAAQ,GAAG,MAAM+K,IAAI,CAACD,OAAO,CAAC;IACpC,IAAI9K,QAAQ,CAACgL,UAAU,IAAI,IAAI,EAAE,OAAOhL,QAAQ;IAChD;IACAA,QAAQ,CAACgL,UAAU,GAAGhL,QAAQ,CAACgL,UAAU,CAACC,UAAU,CAClD,IAAIR,MAAM,CAACD,gBAAgB,EAAE,GAAG,CAAC,EAChCU,OAAO,IAAK;MACX,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACX,gBAAgB,CAAC;MAC7C,IAAIW,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI5wB,iBAAiB,CAAC,CAAC;MAChD,MAAM,GAAGvC,IAAI,EAAE2H,KAAK,EAAEyrB,GAAG,CAAC,GAAGD,KAAK;MAClC,OAAO,CACLnzB,IAAI,EACJ,CAAC2H,KAAK,GAAGrI,MAAM,CAACmR,gBAAgB,GAAG,IAAIwhB,YAAY,GAAGtqB,KAAK,GAAG,GAAGA,KAAK,EACtEyrB,GAAG,CACJ,CAAC5tB,IAAI,CAAC,EAAE,CAAC;IACZ,CACF,CAAC;IACD;IACAwiB,QAAQ,CAACgL,UAAU,GAAGhL,QAAQ,CAACgL,UAAU,CAACC,UAAU,CAClD,IAAIR,MAAM,CAACE,iBAAiB,EAAE,GAAG,CAAC,EACjCO,OAAO,IAAK;MACX,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,CAACR,iBAAiB,CAAC;MAC9C,IAAIQ,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI5wB,iBAAiB,CAAC,CAAC;MAChD,MAAM,GAAGK,MAAM,EAAE+E,KAAK,CAAC,GAAGwrB,KAAK;MAC/B,OAAO,GAAGvwB,MAAM,IAAIqvB,YAAY,GAAGtqB,KAAK,GAAG;IAC7C,CACF,CAAC;IACD,OAAOqgB,QAAQ;EACjB;AACF,CAAC;AAEM,MAAMqL,sBAAsB,GAAGA,CAAA,KAA8B;EAClE,MAAMC,aAAa,GAAG,IAAIvZ,GAAG,CAA2B,CAAC;EAEzD,OAAO;IACLwZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,gBAAgB;MACtB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAS,kBAAA;QAC/B,MAAM9sB,GAAG,GAAGosB,OAAO,CAACW,OAAO,CAACpc,GAAG,CAAC,SAAS,CAAC;QAC1Cyb,OAAO,CAACW,OAAO,CAACvZ,MAAM,CAAC,SAAS,CAAC;QACjC,MAAMwZ,WAAW,GAAG,MAAAA,CAAA,KAAuCX,IAAI,CAACD,OAAO,CAAC;QACxE,IAAIpsB,GAAG,IAAI,IAAI,EAAE,OAAOgtB,WAAW,CAAC,CAAC;QACrC,MAAMlZ,GAAG,GAAG,EAAAgZ,kBAAA,GAACF,aAAa,CAACjc,GAAG,CAAC3Q,GAAG,CAAC,cAAA8sB,kBAAA,cAAAA,kBAAA,GAAI9pB,OAAO,CAACC,OAAO,CAAC,CAAC,EAAEgqB,IAAI,CAACD,WAAW,CAAC;QAC3EJ,aAAa,CAAC5b,GAAG,CACfhR,GAAG,EACH8T,GAAG,CAACxB,KAAK,CAAC,MAAM,CAAC,CAAC,CACpB,CAAC;QACD,OAAOwB,GAAG;MACZ;IACF,CAAC;IACDoZ,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMC,2BAA2B,GAAGA,CAAA,KAA8B;EACvE,MAAMC,kBAAkB,GAAG,IAAI/Z,GAAG,CAAoC,CAAC;EAEvE,OAAO;IACLwZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,sBAAsB;MAC5B,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAgB,qBAAA;QAC/B,IAAIjB,OAAO,CAACkB,MAAM,KAAK,KAAK,EAAE,OAAOjB,IAAI,CAACD,OAAO,CAAC;QAClD,MAAMpsB,GAAG,GAAGutB,IAAI,CAACC,SAAS,CAAC,CAACpB,OAAO,CAACqB,GAAG,EAAErB,OAAO,CAACsB,IAAI,CAAC,CAAC;QACvD,MAAMpM,QAAQ,IAAA+L,qBAAA,GAAGD,kBAAkB,CAACzc,GAAG,CAAC3Q,GAAG,CAAC,cAAAqtB,qBAAA,cAAAA,qBAAA,GAAIhB,IAAI,CAACD,OAAO,CAAC;QAC7DgB,kBAAkB,CAACpc,GAAG,CAAChR,GAAG,EAAEshB,QAAQ,CAAC;QACrC,IAAI;UACF,OAAO,MAAMA,QAAQ;QACvB,CAAC,SAAS;UACR8L,kBAAkB,CAAC5Z,MAAM,CAACxT,GAAG,CAAC;QAChC;MACF;IACF,CAAC;IACDktB,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMS,oCAAoC,GAAGA,CAAA,KAA8B;EAChF,MAAMC,WAAW,GAAG,IAAIva,GAAG,CAAoC,CAAC;EAEhE,OAAO;IACLwZ,MAAM,EAAE;MACNvzB,IAAI,EAAE,gCAAgC;MACtC,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;QAAA,IAAAwB,gBAAA;QAC/B,IAAIzB,OAAO,CAACkB,MAAM,KAAK,KAAK,EAAE,OAAOjB,IAAI,CAACD,OAAO,CAAC;QAClD,MAAMpsB,GAAG,GAAGutB,IAAI,CAACC,SAAS,CAAC,CAACpB,OAAO,CAACqB,GAAG,EAAErB,OAAO,CAACsB,IAAI,CAAC,CAAC;QACvD,MAAMpM,QAAQ,IAAAuM,gBAAA,GAAGD,WAAW,CAACjd,GAAG,CAAC3Q,GAAG,CAAC,cAAA6tB,gBAAA,cAAAA,gBAAA,GAAIxB,IAAI,CAACD,OAAO,CAAC;QACtDwB,WAAW,CAAC5c,GAAG,CAAChR,GAAG,EAAEshB,QAAQ,CAAC;QAC9B,OAAOA,QAAQ;MACjB;IACF,CAAC;IACD4L,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC;AAEM,MAAMY,uBAAuB,GAClCC,UAA8B,KACF;EAC5BlB,MAAM,EAAE;IACNvzB,IAAI,EAAE,iBAAiB;IACvB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAC/B,IAAI;QACF,OAAO,MAAMA,IAAI,CAACD,OAAO,CAAC;MAC5B,CAAC,CAAC,OAAOvoB,KAAK,EAAE;QACd,IACE,EAAEA,KAAK,YAAYhB,6BAAS,CAAC,IAC7BgB,KAAK,CAACuoB,OAAO,IAAI,IAAI,IACrBvoB,KAAK,CAACxK,OAAO,CAAC+Y,UAAU,CAAC,QAAQ,CAAC,EAElC,MAAMvO,KAAK;QACb,MAAM3H,MAAM,GAAG,GAAG,IAAI0R,GAAG,CAAC/J,KAAK,CAACuoB,OAAO,CAACqB,GAAG,CAAC,CAACxf,QAAQ,CAACjG,KAAK,CAAC,CAAC,CAAC,QAAQ;QAEtE,IAAInE,KAAK,CAACyd,QAAQ,EAAEgL,UAAU,IAAI,IAAI,EAAE;UACtC,IAAIzoB,KAAK,CAACxK,OAAO,KAAK,EAAE,EAAEwK,KAAK,CAACxK,OAAO,GAAG,GAAG6C,MAAM,KAAK2H,KAAK,CAAC0c,IAAI,EAAE;UACpE,MAAM1c,KAAK;QACb;QAEA,MAAM6pB,IAAI,GAAI7pB,KAAK,CAACyd,QAAQ,CAA2B0M,UAAU;QACjEnqB,KAAK,CAACxK,OAAO,GAAG6C,MAAM;QACtB,MAAM7C,OAAO,GAAGq0B,IAAI,IAAI,IAAI,GAAG,IAAI7pB,KAAK,CAACyd,QAAQ,CAACuG,MAAM,cAAc,GAAGkG,UAAU,CAACL,IAAI,CAAC;QACzF,IAAIr0B,OAAO,KAAK,EAAE,EAAEwK,KAAK,CAACxK,OAAO,IAAI,IAAIA,OAAO,EAAE;QAClD,MAAMwK,KAAK;MACb;IACF;EACF,CAAC;EACDqpB,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEK,MAAMe,qBAAqB,GAAGA,CACnC30B,IAAY,EACZ40B,SAAyD,EACzDzyB,SAAiB,EACjBC,SAAiB,EACjByyB,aAAsB,MACM;EAC5BtB,MAAM,EAAE;IACNvzB,IAAI,EAAE,eAAe;IACrB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAC/B,IAAID,OAAO,CAACW,OAAO,CAACqB,GAAG,CAAC,iBAAiB,CAAC,EAAE;QAC1ChC,OAAO,CAACW,OAAO,CAACvZ,MAAM,CAAC,iBAAiB,CAAC;QACzC,OAAO6Y,IAAI,CAACD,OAAO,CAAC;MACtB;MACA,MAAMhc,OAAO,GAAG;QAAEie,cAAc,EAAE;UAAEC,aAAa,EAAE;YAAE,iBAAiB,EAAE;UAAO;QAAE;MAAE,CAAC;MACpF,MAAMzpB,IAAI,GAAG,CAAC,MAAMqpB,SAAS,CAAC9d,OAAO,CAAC,EAAE3U,SAAS,EAAEC,SAAS,CAAU;MACtE,IAAI,CAAC0vB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAAE;QAC7B,MAAMhB,KAAK,GAAG,IAAIvI,uBAAuB,CAAChC,IAAI,EAAE,GAAGuL,IAAI,CAAC;QACxD,IAAIspB,aAAa,EAAEzU,OAAO,CAACC,IAAI,CAAC9V,KAAK,CAACxK,OAAO,CAAC,CAAC,KAC1C,MAAMwK,KAAK;MAClB;MACA,OAAOwoB,IAAI,CAACD,OAAO,CAAC;IACtB;EACF,CAAC;EACDc,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEK,MAAMqB,uBAAuB,GAAGA,CACrCC,UAAkB,EAClBC,iBAAyB,MACG;EAC5B5B,MAAM,EAAE;IACNvzB,IAAI,EAAE,kBAAkB;IACxB,MAAM6yB,WAAWA,CAACC,OAAO,EAAEC,IAAI,EAAE;MAAA,IAAAqC,oBAAA;MAC/B,IAAItC,OAAO,CAACW,OAAO,CAACpc,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;QAC7Cyb,OAAO,CAACW,OAAO,CAACvZ,MAAM,CAAC,YAAY,CAAC;QACpC,OAAO6Y,IAAI,CAACD,OAAO,CAAC;MACtB;MAEA,MAAMuC,SAAS,IAAAD,oBAAA,GAAGtC,OAAO,CAACW,OAAO,CAACpc,GAAG,CAAC,cAAc,CAAC,cAAA+d,oBAAA,cAAAA,oBAAA,GAAIE,GAAG;MAC5DxC,OAAO,CAACW,OAAO,CAACvZ,MAAM,CAAC,cAAc,CAAC;MACtC,MAAMqb,kBAAkB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC7V,MAAM,CAAE9B,CAAC,IAAKA,CAAC,KAAK,CAACyX,SAAS,CAAC;MAEpF,MAAMG,SAAS,GAAG,IAAI9a,KAAK,CAACwa,UAAU,CAAC,CACpCO,IAAI,CAAC,CAAC,CAAC,CACPlwB,GAAG,CAAC,CAACmwB,CAAC,EAAEva,GAAG,KAAK,CAAC,CAACA,GAAG,GAAG,CAAC,IAAI+Z,UAAU,KAAK,CAAC,CAAC;MACjD,MAAMS,WAAW,GAAGH,SAAS,CAACltB,MAAM,CAAC,CAAC8oB,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC;MACxD,MAAMuE,aAAa,GAAGJ,SAAS,CAACjwB,GAAG,CAAE4D,CAAC,IAAKV,IAAI,CAACsO,KAAK,CAAE5N,CAAC,GAAGwsB,WAAW,GAAIR,iBAAiB,CAAC,CAAC;MAE7F,IAAI5qB,KAAK,GAAG,IAAIhB,6BAAS,CAAC,2BAA2B,CAAC;MACtD,KAAK,IAAIssB,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAIX,UAAU,EAAEW,OAAO,IAAI,CAAC,EAAE;QACzD,IAAIA,OAAO,KAAK,CAAC,EAAE;UACjB,MAAMrsB,KAAK,CAACosB,aAAa,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;UACvC,MAAMC,SAAS,GAAG,IAAIxhB,GAAG,CAACwe,OAAO,CAACqB,GAAG,CAAC;UACtC2B,SAAS,CAACC,YAAY,CAACre,GAAG,CAAC,aAAa,EAAEme,OAAO,CAAC7yB,QAAQ,CAAC,CAAC,CAAC;UAC7D8vB,OAAO,CAACqB,GAAG,GAAG2B,SAAS,CAAC9yB,QAAQ,CAAC,CAAC;QACpC;QACA,IAAI;UACF,OAAO,MAAM+vB,IAAI,CAACD,OAAO,CAAC;QAC5B,CAAC,CAAC,OAAO3pB,CAAC,EAAE;UAAA,IAAA6sB,kBAAA;UACV,IAAI,EAAE7sB,CAAC,YAAYI,6BAAS,CAAC,EAAE,MAAMJ,CAAC;UACtC,IAAIosB,kBAAkB,CAACn2B,QAAQ,EAAA42B,kBAAA,GAAC7sB,CAAC,CAAC6e,QAAQ,EAAEuG,MAAM,cAAAyH,kBAAA,cAAAA,kBAAA,GAAI,CAAC,CAAC,EAAE,MAAM7sB,CAAC;UACjEoB,KAAK,GAAGpB,CAAC;QACX;MACF;MACA,MAAMoB,KAAK;IACb;EACF,CAAC;EACDqpB,QAAQ,EAAE;AACZ,CAAC,CAAC;;AC/PK,MAAM/F,OAAmC,GAAG;EACjDvf,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+Y,OAAO,EAAE;QACPqd,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu2B,OAAO,EAAE;QACPlE,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6d,IAAI,EAAE;QACJwU,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,OAAO,EAAE,aAAa;QACxC;MACF,CAAC;MACD3a,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP2I,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy2B,UAAsC,GAAG;EACpDnoB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfjb,MAAM,EAAE;QACNoX,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD02B,SAAS,EAAE;QACTrE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM22B,iBAA6C,GAAG;EAC3DroB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfnS,SAAS,EAAE;QACTqS,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM42B,SAAqC,GAAG;EACnDtoB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf1c,YAAY,EAAE;QACZ6Y,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMnQ,QAAoC,GAAG;EAClDxX,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDje,WAAW,EAAE;QACXoe,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE,CAAC;QACrB,CAAC;QACDhE,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTmQ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+2B,EAA8B,GAAG;EAC5CzoB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,IAAI;IACfC,eAAe,EAAE;MACf3P,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfiO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf+N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV6N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoM,MAAM,EAAE;QACNimB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDkB,aAAa,EAAE;QACb9E,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDqnB,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,QAAQ,EAAE;QACRhF,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDlO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4mB,QAAQ,EAAE;QACRwP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPszB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlB,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmB,OAAO,EAAE;QACPkQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDhQ,SAAS,EAAE;QACTmQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDonB,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP0M,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2pB,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDpM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsO,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,SAAS,EACT,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,wBAAwB,EACxB,sBAAsB,EACtB,oBAAoB,EACpB,gBAAgB,EAChB,iBAAiB,EACjB,uBAAuB,EACvB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,cAAc,EACd,kBAAkB,EAClB,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACV,aAAa;QAEjB;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiB,SAAqC,GAAG;EACnDnpB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfhO,SAAS,EAAE;QACTmK,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDooB,SAAS,EAAE;QACTiK,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM03B,cAA0C,GAAG;EACxDppB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAE;MACxBvF,cAAc,EAAE,IAAI;MACpBwF,UAAU,EAAE;IACd,CAAC;IACD3B,eAAe,EAAE;MACf4B,EAAE,EAAE;QACFzF,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+3B,WAAuC,GAAG;EACrDzpB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ0W,YAAY,EAAE,OAAO;QACrBgT,UAAU,EAAE,IAAI;QAChB3F,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2H,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi4B,GAA+B,GAAG;EAC7C3pB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,OAAO,EAAE,OAAO;QAClC;MACF,CAAC;MACD7uB,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk4B,WAAuC,GAAG;EACrD5pB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfxvB,GAAG,EAAE;QACH2rB,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm4B,UAAU,EAAE;QACV9F,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoD,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo4B,YAAwC,GAAG;EACtD9pB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq4B,SAAS,EAAE;QACTjC,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs4B,MAAM,EAAE;QACNlC,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu4B,aAAa,EAAE;QACblG,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw4B,UAAU,EAAE;QACVpC,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwN,OAAmC,GAAG;EACjDc,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+uB,aAAa,EAAE;QACbqH,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfiO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf+N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDvN,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgvB,SAAS,EAAE;QACToH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV6N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDivB,WAAW,EAAE;QACXmH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy4B,cAA0C,GAAG;EACxDnqB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyuB,MAAM,EAAE;QACN4D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD04B,WAAW,EAAE;QACXrG,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDknB,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM24B,QAAoC,GAAG;EAClDrqB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM64B,GAA+B,GAAG;EAC7CvqB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;MACfjN,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM84B,QAAoC,GAAG;EAClDxqB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfl2B,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+4B,MAAM,EAAE;QACN1G,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg5B,OAAO,EAAE;QACP3G,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi5B,eAAe,EAAE;QACf7C,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk5B,kBAAkB,EAAE;QAClB7G,cAAc,EAAE,sBAAsB;QACtC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5B,iBAAiB,EAAE;QACjB9G,cAAc,EAAE,qBAAqB;QACrC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo5B,IAAI,EAAE;QACJ/G,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoD,aAAa,EAAE;QACbhH,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs5B,eAAe,EAAE;QACfjH,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu5B,WAAW,EAAE;QACXlH,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw5B,KAAiC,GAAG;EAC/ClrB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqO,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy5B,WAAuC,GAAG;EACrDnrB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf9b,GAAG,EAAE;QACHiY,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDya,QAAQ,EAAE;QACR4X,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD1b,GAAG,EAAE;QACH8X,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD3b,QAAQ,EAAE;QACR0K,YAAY,EAAE,KAAK;QACnBqN,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM05B,aAAyC,GAAG;EACvDprB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfrb,MAAM,EAAE;QACNwX,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM25B,eAA2C,GAAG;EACzDrrB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNwrB,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD45B,OAAO,EAAE;QACPvH,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4D,aAAyC,GAAG;EACvDvrB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRzH,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,QAAQ,EAAE;QACR0C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0vB,MAAM,EAAE;QACN2C,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+5B,OAAO,EAAE;QACP1H,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+D,iBAA6C,GAAG;EAC3D1rB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNwrB,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi6B,QAAQ,EAAE;QACR5H,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk6B,aAAyC,GAAG;EACvD5rB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACflb,OAAO,EAAE;QACPqX,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD3b,QAAQ,EAAE;QACR+X,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,YAAY;cAClB2H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAEtO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm6B,YAAwC,GAAG;EACtD7rB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwV,MAAM,EAAE;QACN6c,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDib,MAAM,EAAE;QACNoX,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo6B,OAAO,EAAE;QACP/H,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMoE,kBAA8C,GAAG;EAC5D/rB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACf9O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2uB,WAAW,EAAE;QACXyH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4uB,OAAO,EAAE;QACPwH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwuB,GAAG,EAAE;QACH6D,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDpH,WAAW,EAAE;QACXwD,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8uB,UAAU,EAAE;QACVuD,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ;QACzC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8D,aAAiC,GAAG;EAC/ChsB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACfzzB,OAAO,EAAE;QACP4vB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu6B,MAAM,EAAE;QACNlI,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXC,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJ;cACAtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDqO,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw6B,UAAsC,GAAG;EACpDlsB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfuE,QAAQ,EAAE;QACRpI,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDyE,WAAW,EAAE;QACXrI,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM26B,QAAoC,GAAG;EAClDrsB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,QAAQ,EAAE;QACRvI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,WAAW,EAAE;QACXxI,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD86B,KAAK,EAAE;QACLzI,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+6B,WAAW,EAAE;QACX1I,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDouB,KAAK,EAAE;QACLiE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg7B,GAAG,EAAE;QACH5E,WAAW,EAAE;UACX6E,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ,CAAC;QACD7I,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXE,gBAAgB,EAAE,UAAU;cAC5BD,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsX,IAAI,EAAE;QACJ+a,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm7B,IAAI,EAAE;QACJ9I,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo7B,MAAkC,GAAG;EAChD9sB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,QAAQ,EAAE;QACRvI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,WAAW,EAAE;QACXxI,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD86B,KAAK,EAAE;QACLzI,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+6B,WAAW,EAAE;QACX1I,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDouB,KAAK,EAAE;QACLiE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg7B,GAAG,EAAE;QACH5E,WAAW,EAAE;UACX6E,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ,CAAC;QACD7I,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXE,gBAAgB,EAAE,UAAU;cAC5BD,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsX,IAAI,EAAE;QACJ+a,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm7B,IAAI,EAAE;QACJ9I,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq7B,OAAO,EAAE;QACPhJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs7B,OAAO,EAAE;QACPjJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoR,SAAS,EAAE;QACTihB,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu7B,SAAqC,GAAG;EACnDjtB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfsF,KAAK,EAAE;QACLnJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy7B,aAAa,EAAE;QACbpJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD07B,UAAU,EAAE;QACVrJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD27B,UAAU,EAAE;QACVtJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD47B,eAAe,EAAE;QACfvJ,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM67B,iBAA6C,GAAG;EAC3DvtB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf4F,OAAO,EAAE;QACPzJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+7B,QAAQ,EAAE;QACR1J,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg8B,OAAO,EAAE;QACP3J,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi8B,YAAwC,GAAG;EACtD3tB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk8B,cAA0C,GAAG;EACxD5tB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf10B,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm8B,gBAA4C,GAAG;EAC1D7tB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq7B,OAAO,EAAE;QACPhJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,QAAQ,EAAE;QACRvI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,WAAW,EAAE;QACXxI,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs7B,OAAO,EAAE;QACPjJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoR,SAAS,EAAE;QACTihB,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsX,IAAI,EAAE;QACJ+a,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo8B,aAAyC,GAAG;EACvD9tB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfmG,KAAK,EAAE;QACLjG,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs8B,SAAqC,GAAG;EACnDhuB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmT,KAAK,EAAE;QACLkf,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsG,mBAA+C,GAAG;EAC7DjuB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACfxvB,GAAG,EAAE;QACH2rB,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm4B,UAAU,EAAE;QACV9F,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoD,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw8B,gBAA4C,GAAG;EAC1DluB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy8B,aAAyC,GAAG;EACvDnuB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfwG,aAAa,EAAE;QACbrK,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMtpB,WAAuC,GAAG;EACrD2B,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf9yB,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD28B,WAAW,EAAE;QACXvG,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD5T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM48B,UAAsC,GAAG;EACpDtuB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf2G,MAAM,EAAE;QACNxK,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM88B,aAAyC,GAAG;EACvDxuB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACflW,WAAW,EAAE;QACXoW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDigB,WAAW,EAAE;QACXmW,WAAW,EAAE;UACXE,gBAAgB,EAAE,GAAG;UACrBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+8B,OAAO,EAAE;QACP3G,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg9B,MAAkC,GAAG;EAChD1uB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACf+G,mBAAmB,EAAE;QACnB5K,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk9B,SAAS,EAAE;QACT9G,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm9B,UAAU,EAAE;QACV/G,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo9B,QAAQ,EAAE;QACRhH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq9B,OAAO,EAAE;QACPhL,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs9B,YAAY,EAAE;QACZlH,WAAW,EAAE;UACXE,gBAAgB,EAAE,GAAG;UACrBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu9B,MAAM,EAAE;QACNlL,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw9B,SAAS,EAAE;QACTnL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy9B,SAAS,EAAE;QACTpL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDyH,WAAW,EAAE;QACXrL,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD29B,YAAY,EAAE;QACZtL,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD49B,SAAS,EAAE;QACTxH,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD69B,eAAe,EAAE;QACfxL,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD6H,wBAAwB,EAAE;QACxB1H,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,4BAA4B;QAC5C8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0W,SAAS,EAAE;QACT2b,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+9B,UAAU,EAAE;QACV1L,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg+B,eAAe,EAAE;QACf3L,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+B,cAAc,EAAE;QACd7H,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk+B,QAAoC,GAAG;EAClD5vB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfh0B,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+B,iBAAiB,EAAE;QACjB/H,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,qBAAqB;QACrC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo+B,eAA2C,GAAG;EACzD9vB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfmI,OAAO,EAAE;QACPjI,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs+B,QAAQ,EAAE;QACRlI,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu+B,UAAsC,GAAG;EACpDjwB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfsI,QAAQ,EAAE;QACRnM,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy+B,KAAK,EAAE;QACLpM,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0+B,QAAQ,EAAE;QACRtI,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2+B,SAAqC,GAAG;EACnDrwB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4+B,cAA0C,GAAG;EACxDtwB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfrvB,MAAM,EAAE;QACNwrB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6+B,YAAwC,GAAG;EACtDvwB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf4I,QAAQ,EAAE;QACRzM,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD8I,MAAM,EAAE;QACN1M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD+I,MAAM,EAAE;QACN3M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi/B,QAAoC,GAAG;EAClD3wB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf9O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4uB,OAAO,EAAE;QACPwH,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6uB,WAAW,EAAE;QACXwD,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8uB,UAAU,EAAE;QACVuD,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,IAAI,EAAE,OAAO;QAC/B;MACF,CAAC;MACD0I,WAAW,EAAE;QACX7M,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMtN,oBAAgD,GAAG;EAC9Dra,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMgpB,kBAA8C,GAAG;EAC5D1a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMioB,eAA2C,GAAG;EACzD3Z,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfc,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfiO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf+N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV6N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM9M,gBAA4C,GAAG;EAC1D7a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6gB,sBAAkD,GAAG;EAChEvS,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,wBAAwB;IACnCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoM,MAAM,EAAE;QACNimB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDvN,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm3B,aAAa,EAAE;QACb9E,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm/B,qBAAiD,GAAG;EAC/D7wB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMupB,eAA2C,GAAG;EACzDjb,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkpB,cAA0C,GAAG;EACxD5a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMypB,qBAAiD,GAAG;EAC/Dnb,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqpB,iBAA6C,GAAG;EAC3D/a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo/B,qBAAiD,GAAG;EAC/D9wB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf3H,MAAM,EAAE;QACN8D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMq/B,YAAwC,GAAG;EACtD/wB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfxP,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8d,cAA0C,GAAG;EACxDxP,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf9O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+gB,gBAA4C,GAAG;EAC1DzS,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs/B,UAAsC,GAAG;EACpDhxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu/B,UAAsC,GAAG;EACpDjxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP0M,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw/B,QAAoC,GAAG;EAClDlxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfvM,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMtP,WAAuC,GAAG;EACrDrY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfl2B,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4mB,QAAQ,EAAE;QACRwP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPszB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy/B,QAAoC,GAAG;EAClDnxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwmB,cAA0C,GAAG;EACxDlY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfxP,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+mB,YAAwC,GAAG;EACtDzY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8mB,cAA0C,GAAG;EACxDxY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDumB,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6mB,YAAwC,GAAG;EACtDvY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmB,OAAO,EAAE;QACPkQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDhQ,SAAS,EAAE;QACTmQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0/B,WAAuC,GAAG;EACrDpxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfthB,IAAI,EAAE;QACJyd,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyU,IAAI,EAAE;QACJ2hB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2/B,SAAS,EAAE;QACTvJ,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4/B,QAAQ,EAAE;QACRxJ,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6/B,WAAW,EAAE;QACXxN,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8/B,OAAO,EAAE;QACPzN,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+/B,aAAa,EAAE;QACb3J,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0W,SAAS,EAAE;QACT2b,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD09B,WAAW,EAAE;QACXrL,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD29B,YAAY,EAAE;QACZtL,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDggC,UAAU,EAAE;QACV3N,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDigC,MAAM,EAAE;QACN5N,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwhB,cAA0C,GAAG;EACxDlT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxiB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyhB,aAAyC,GAAG;EACvDnT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfziB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,QAAQ,EAAE;QACRhF,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD5T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuhB,gBAA4C,GAAG;EAC1DjT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf7O,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0hB,eAA2C,GAAG;EACzDpT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfnO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD5T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMihB,WAAuC,GAAG;EACrD3S,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfrM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiK,SAAqC,GAAG;EACnD5xB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfiK,SAAS,EAAE;QACT9N,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDmK,SAAS,EAAE;QACT/N,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoK,OAAO,EAAE;QACPjK,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsgC,kBAA8C,GAAG;EAC5DhyB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACfmI,OAAO,EAAE;QACPjI,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs+B,QAAQ,EAAE;QACRlI,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMugC,kBAA8C,GAAG;EAC5DjyB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACfsK,QAAQ,EAAE;QACRpK,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDygC,UAAU,EAAE;QACVrK,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0gC,KAAiC,GAAG;EAC/CpyB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACfyK,KAAK,EAAE;QACLtO,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDqgC,OAAO,EAAE;QACPhO,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4gC,MAAkC,GAAG;EAChDtyB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfrb,MAAM,EAAE;QACNwX,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsmB,OAAmC,GAAG;EACjDhY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf3P,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6gC,WAAuC,GAAG;EACrDvyB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfzb,QAAQ,EAAE;QACR2b,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+vB,SAAS,EAAE;QACTqG,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8gC,eAAe,EAAE;QACf1K,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+gC,MAAM,EAAE;QACN3K,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiwB,OAAO,EAAE;QACPmG,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD08B,aAAa,EAAE;QACbtG,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDghC,cAAc,EAAE;QACd5K,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDihC,KAAK,EAAE;QACL7K,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkhC,oBAAgD,GAAG;EAC9D7O,cAAc,EAAE,sBAAsB;EACtC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,sBAAsB;IACjC0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtCxG,MAAM,EAAE;QACN2C,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,QAAQ,EAAE;QACR0C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmhC,eAA2C,GAAG;EACzD9O,cAAc,EAAE,iBAAiB;EACjC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC5rB,IAAI,EAAE;QACJ+nB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMohC,mBAA+C,GAAG;EAC7D/O,cAAc,EAAE,qBAAqB;EACrC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChC0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC/iB,KAAK,EAAE;QACLkf,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD/O,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqhC,gBAA4C,GAAG;EAC1DhP,cAAc,EAAE,kBAAkB;EAClC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC5rB,IAAI,EAAE;QACJ+nB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqvB,EAAE,EAAE;QACFgD,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMshC,kBAA8C,GAAG;EAC5DjP,cAAc,EAAE,oBAAoB;EACpC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAEF,cAAc,CAACppB,IAAI,CAACspB,wBAAwB;IACtE1B,eAAe,EAAE;MACf,GAAGwB,cAAc,CAACppB,IAAI,CAAC4nB,eAAe;MACtC7G,EAAE,EAAE;QACFgD,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuhC,wBAAoD,GAAG;EAClEjzB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,0BAA0B;IACrCC,eAAe,EAAE;MACf,GAAGoJ,UAAU,CAAChxB,IAAI,CAAC4nB,eAAe;MAClCra,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,IAAIwhC,cAAc,GAAG;EAC1B9J,cAAc,EAAEA,cAAc;EAC9B,qCAAqC,EAAEwJ,oBAAoB;EAC3D,gCAAgC,EAAEC,eAAe;EACjD,oCAAoC,EAAEC,mBAAmB;EACzD,iCAAiC,EAAEC,gBAAgB;EACnD,mCAAmC,EAAEC;AACvC,CAAC;;ACr7K6B;AAEvB,MAAMK,MAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNnN,YAAY,EAAE,kBAAkB;IAChCgT,UAAU,EAAE,IAAI;IAChB3F,cAAc,EAAE,QAAQ;IACxB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM6hC,KAA4B,GAAG;EAC1CD,aAAa,EAAE,OAAO;EACtBzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF,CAAC;EACD8hC,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMjF,MAA6B,GAAG;EAC3C+E,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNE,cAAc,EAAE,QAAQ;IACxB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMiR,eAA2B,GAAG;EACzC2wB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMwB,MAA6B,GAAG;EAC3CogC,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXE,gBAAgB,EAAE,oBAAoB;MACtCD,gBAAgB,EAAE;IACpB,CAAC;IACDhE,cAAc,EAAE,QAAQ;IACxB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM6jB,QAAiC,GAAG;EAC/C+d,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,KAAK;IACnBqN,cAAc,EAAE,UAAU;IAC1B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,YAAY;IACrC;EACF;AACF,CAAC;AAEM,MAAMx2B,eAA2B,GAAG;EACzC4hC,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM+hC,WAA+B,GAAG;EAC7CH,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,kBAAkB;IAChCgT,UAAU,EAAE,IAAI;IAChB3F,cAAc,EAAE,cAAc;IAC9B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo0B,IAAwB,GAAG;EACtCwN,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEsP,WAAiBA;AAC3B,CAAC;AAEM,MAAM7W,KAA4B,GAAG;EAC1CgX,aAAa,EAAE,OAAO;EACtBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXC,gBAAgB,EAAE;IACpB,CAAC;IACDhE,cAAc,EAAE,OAAO;IACvB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMgiC,QAA+B,GAAG;EAC7CJ,aAAa,EAAE,UAAU;EACzBzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMiiC,SAAkC,GAAG;EAChDL,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMkiC,KAA8B,GAAG;EAC5CN,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,EAAE;IAChBoR,WAAW,EAAE;MACXE,gBAAgB,EAAE,IAAI;MACtBD,gBAAgB,EAAE;IACpB,CAAC;IACDhE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMmiC,SAAkC,GAAG;EAChDP,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,KAAK;IACnBqN,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK;IACzC;EACF;AACF,CAAC;AAEM,MAAMzO,OAA8B,GAAG;EAC5C6Z,aAAa,EAAE,SAAS;EACxBzP,MAAM,EAAE;IACNE,cAAc,EAAE,UAAU;IAC1B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMoiC,KAAyB,GAAG;EACvCR,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEuP,SAAeA;AACzB,CAAC;;AC3L0D;AACV;AACI;AACN;AAyFxC,MAAMc,SAAI,SAASH,0BAAwB,CAAC;EAGjD;AACF;AACA;AACA;AACA;EACEviC,WAAWA,CAAC+hC,KAAa,EAAE/qB,OAA4B,EAAE;IAAA,IAAAb,IAAA,EAAAysB,iBAAA;IACvD,IAAIb,KAAK,KAAK3wB,SAAS,EAAE;MACvB,MAAM,IAAIrR,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACiX,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAM6rB,QAA4B,GAAG;MACnCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,4BAA4B;IACnD,MAAMC,eAAe,GACnBhsB,OAAO,CAACisB,gBAAgB,IAAIjsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,GAChE,GAAGhsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAG7rB,OAAO;MACVisB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAhtB,IAAA,IAAAysB,iBAAA,GAAE5rB,OAAO,CAACmsB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI5rB,OAAO,CAACosB,OAAO,cAAAjtB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAAC+sB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACnB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACEnpB,kBAAkBA,CAChBmkB,MAAc,EACd/lB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBssB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE3qB,yBAAyBA,CACvBokB,MAAc,EACd5rB,IAAY,EACZ6F,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE5rB,IAAI;MAAE6F;IAAQ,CAAC,EACzBusB,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE7qB,2BAA2BA,CACzBqkB,MAAc,EACdr7B,MAAc,EACdsV,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAEr7B,MAAM;MAAEsV;IAAQ,CAAC,EAC3BwsB,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACExf,mBAAmBA,CACjB+Y,MAAc,EACd/lB,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBysB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qCAAqCA,CACnC3G,MAAc,EACd/lB,OAA6D,EACL;IACxD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnB2sB,kDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qBAAqBA,CACnB1jC,IAAY,EACZ8W,OAA6C,EACL;IACxC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEnjC,IAAI;MAAE8W;IAAQ,CAAC,EACjB6sB,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChB/G,MAAc,EACd/lB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnB+sB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE9nB,WAAWA,CACT8gB,MAAc,EACd/lB,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBgtB,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEhoB,eAAeA,CACb+gB,MAAc,EACd/lB,OAAuC,EACL;IAClC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBitB,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZnH,MAAc,EACd/lB,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBmtB,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTptB,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEqtB,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE9pB,kBAAkBA,CAChB+Z,IAAiB,EACjBtd,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBstB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEnrB,oBAAoBA,CAClBnC,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXutB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEhrB,mBAAmBA,CACjBpI,IAAY,EACZ6F,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBwtB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACElrB,qBAAqBA,CACnB5X,MAAc,EACdsV,OAA6C,EACL;IACxC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE3hC,MAAM;MAAEsV;IAAQ,CAAC,EACnBytB,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV1tB,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE2tB,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,YAAYA,CACV5tB,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE6tB,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,4BAA4BA,CAC1B9tB,OAAoD,EACL;IAC/C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX+tB,yCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBhuB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXiuB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBluB,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXmuB,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACExtB,wBAAwBA,CACtBX,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXouB,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEvrB,iBAAiBA,CACf1I,IAAY,EACZ6F,OAAyC,EACL;IACpC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBquB,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEzrB,mBAAmBA,CACjBlY,MAAc,EACdsV,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE3hC,MAAM;MAAEsV;IAAQ,CAAC,EACnBsuB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBvuB,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXwuB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEzrB,yBAAyBA,CACvB5I,IAAY,EACZ6F,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjByuB,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEhsB,+BAA+BA,CAC7BtI,IAAY,EACZ6F,OAAuD,EACL;IAClD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjB0uB,4CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oCAAoCA,CAClCx0B,IAAY,EACZ6F,OAA4D,EACL;IACvD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjB4uB,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,sCAAsCA,CACpC10B,IAAY,EACZ2Z,KAAa,EACb9T,OAA8D,EACL;IACzD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE2Z,KAAK;MAAE9T;IAAQ,CAAC,EACxB8uB,mDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE3pB,kBAAkBA,CAChBjc,IAAY,EACZ8W,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEnjC,IAAI;MAAE8W;IAAQ,CAAC,EACjB+uB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpB9D,QAAgB,EAChBlrB,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEnB,QAAQ;MAAElrB;IAAQ,CAAC,EACrBivB,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACExhB,iBAAiBA,CACfsY,MAAc,EACd/lB,OAAyC,EACL;IACpC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBkvB,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBpJ,MAAc,EACd/lB,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE/lB;IAAQ,CAAC,EACnBovB,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,gCAAgCA,CAC9BtJ,MAAc,EACd9U,OAAe,EACfjR,OAAwD,EACL;IACnD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtG,MAAM;MAAE9U,OAAO;MAAEjR;IAAQ,CAAC,EAC5BsvB,6CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXvvB,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEwvB,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEpmB,kBAAkBA,CAChBpJ,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXyvB,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAAC1vB,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE2vB,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV5vB,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE6vB,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX9vB,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE+vB,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACb1S,IAAe,EACftd,OAAuC,EACL;IAClC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBiwB,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEhvB,oBAAoBA,CAClB9G,IAAY,EACZ6F,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBkwB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtBh2B,IAAY,EACZ6F,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBowB,qCACF,CAAC;EACH;AACF;AACA;AACA,MAAMhV,UAAU,GAAGH,gBAAgB,CAACwQ,uBAAO,EAAE,WAAY,KAAK,CAAC;AAE/D,MAAMa,+BAAyD,GAAG;EAChEpW,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,OAAe1U;IAC7B,CAAC;IACD,GAAG,EAAE;MACHwZ,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMmR,sCAAgE,GAAG;EACvErW,IAAI,EAAE,mCAAmC;EACzCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,OAAe1U;IAC7B,CAAC;IACD,GAAG,EAAE;MACHwZ,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,EAAEA,eAAe,CAAC;EACrEkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMoR,wCAAkE,GAAG;EACzEtW,IAAI,EAAE,uCAAuC;EAC7Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,OAAe1U;IAC7B,CAAC;IACD,GAAG,EAAE;MACHwZ,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,EAAEA,MAAiB,CAAC;EACvEkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMqR,gCAA0D,GAAG;EACjEvW,IAAI,EAAE,kCAAkC;EACxCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,iBAAyB5L;IACvC,CAAC;IACD,GAAG,EAAE;MACH0Q,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,QAAmB,CAAC;EACtCiF,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMuR,kDAA4E,GAChF;EACEzW,IAAI,EAAE,4CAA4C;EAClDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiB3L;IAC/B,CAAC;IACD,GAAG,EAAE;MACHyQ,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACH,MAAMyR,kCAA4D,GAAG;EACnE3W,IAAI,EAAE,qBAAqB;EAC3Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,YAAoBnK;IAClC,CAAC;IACD,GAAG,EAAE;MACHiP,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM2R,+BAAyD,GAAG;EAChE7W,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,OAAe/0B;IAC7B,CAAC;IACD,GAAG,EAAE;MACH65B,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM4R,wBAAkD,GAAG;EACzD9W,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAsB9J;IACpC,CAAC;IACD,GAAG,EAAE;MACH4O,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM6R,4BAAsD,GAAG;EAC7D/W,IAAI,EAAE,6BAA6B;EACnCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgB5J;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0O,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM+R,2BAAqD,GAAG;EAC5DjX,IAAI,EAAE,4BAA4B;EAClCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,GAAW1J;IACzB,CAAC;IACD,GAAG,EAAE;MACHwO,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMiS,wBAAkD,GAAG;EACzDnX,IAAI,EAAE,cAAc;EACpBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgBzJ;IAC9B;EACF,CAAC;EACDyO,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMkS,+BAAyD,GAAG;EAChEpX,IAAI,EAAE,aAAa;EACnBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,aAAqBrI;IACnC,CAAC;IACD,GAAG,EAAE;MACHmN,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,IAAe;EAC5BiF,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,EAAEA,WAAsB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV;AACF,CAAC;AACD,MAAMmS,iCAA2D,GAAG;EAClErX,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkB/H;IAChC,CAAC;IACD,GAAG,EAAE;MACH6M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMoS,gCAA0D,GAAG;EACjEtX,IAAI,EAAE,6BAA6B;EACnCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkB/H;IAChC,CAAC;IACD,GAAG,EAAE;MACH6M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMqS,kCAA4D,GAAG;EACnEvX,IAAI,EAAE,iCAAiC;EACvCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkB/H;IAChC,CAAC;IACD,GAAG,EAAE;MACH6M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMuS,yBAAmD,GAAG;EAC1DzX,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,MAAcnH;IAC5B,CAAC;IACD,GAAG,EAAE;MACHiM,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMyS,yBAAmD,GAAG;EAC1D3X,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiBhH;IAC/B,CAAC;IACD,GAAG,EAAE;MACH8L,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM2S,yCAAmE,GAAG;EAC1E7X,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,iBAAyB1G;IACvC,CAAC;IACD,GAAG,EAAE;MACHwL,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM6S,+BAAyD,GAAG;EAChE/X,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgB5H;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM+S,mCAA6D,GAAG;EACpEjY,IAAI,EAAE,6BAA6B;EACnCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,YAAoBtG;IAClC,CAAC;IACD,GAAG,EAAE;MACHoL,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMgT,qCAA+D,GAAG;EACtElY,IAAI,EAAE,+BAA+B;EACrCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAsBrG;IACpC,CAAC;IACD,GAAG,EAAE;MACHmL,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMiT,8BAAwD,GAAG;EAC/DnY,IAAI,EAAE,4BAA4B;EAClCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgB5H;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMkT,gCAA0D,GAAG;EACjEpY,IAAI,EAAE,gCAAgC;EACtCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgB5H;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMoT,+BAAyD,GAAG;EAChEtY,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgB5H;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0M,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMqT,sCAAgE,GAAG;EACvEvY,IAAI,EAAE,qCAAqC;EAC3Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,gBAAwBpG;IACtC,CAAC;IACD,GAAG,EAAE;MACHkL,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMsT,4CAAsE,GAAG;EAC7ExY,IAAI,EAAE,2CAA2C;EACjDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiB3L;IAC/B,CAAC;IACD,GAAG,EAAE;MACHyQ,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMwT,iDAA2E,GAC/E;EACE1Y,IAAI,EAAE,iDAAiD;EACvDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,aAAqBnG;IACnC,CAAC;IACD,GAAG,EAAE;MACHiL,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACH,MAAM0T,mDAA6E,GACjF;EACE5Y,IAAI,EAAE,yDAAyD;EAC/Dma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgBzc;IAC9B,CAAC;IACD,GAAG,EAAE;MACHuhB,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,EAAEA,KAAgB,CAAC;EACpEkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACH,MAAM2T,+BAAyD,GAAG;EAChE7Y,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiBjG;IAC/B,CAAC;IACD,GAAG,EAAE;MACH+K,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM6T,mCAA6D,GAAG;EACpE/Y,IAAI,EAAE,4BAA4B;EAClCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiBjG;IAC/B,CAAC;IACD,GAAG,EAAE;MACH+K,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,QAAmB,CAAC;EACtDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM8T,8BAAwD,GAAG;EAC/DhZ,IAAI,EAAE,sBAAsB;EAC5Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,gBAAwB/F;IACtC,CAAC;IACD,GAAG,EAAE;MACH6K,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMgU,qCAA+D,GAAG;EACtElZ,IAAI,EAAE,8BAA8B;EACpCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,aAAqB9F;IACnC,CAAC;IACD,GAAG,EAAE;MACH4K,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,SAAoB,EACpBA,KAAgB,EAChBA,SAAoB,CACrB;EACDiF,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMkU,6CAAuE,GAC3E;EACEpZ,IAAI,EAAE,yCAAyC;EAC/Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,WAAmB51B;IACjC,CAAC;IACD,GAAG,EAAE;MACH06B,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,MAAiB,EAAEA,OAAkB,CAAC;EACxEkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACH,MAAMoU,0BAAoD,GAAG;EAC3DtZ,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkB3F;IAChC;EACF,CAAC;EACD2K,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMqU,+BAAyD,GAAG;EAChEvZ,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF;IACF,CAAC;IACD,GAAG,EAAE;MACHoR,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMuU,sBAAgD,GAAG;EACvDzZ,IAAI,EAAE,YAAY;EAClBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,MAAcvF;IAC5B;EACF,CAAC;EACDuK,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMyU,yBAAmD,GAAG;EAC1D3Z,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE,UAAU;UAAE62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAS;UAAE;QAAE;MAClE;IACF;EACF,CAAC;EACDunC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM2U,0BAAoD,GAAG;EAC3D7Z,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkBhE;IAChC,CAAC;IACD,GAAG,EAAE;MACH8I,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAM6U,4BAAsD,GAAG;EAC7D/Z,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAsB3D;IACpC,CAAC;IACD,GAAG,EAAE;MACHyI,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,KAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,MAAiB,EAAEA,WAAsB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV;AACF,CAAC;AACD,MAAM8U,iCAA2D,GAAG;EAClEha,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgBzc;IAC9B,CAAC;IACD,GAAG,EAAE;MACHuhB,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;AACD,MAAMgV,qCAA+D,GAAG;EACtEla,IAAI,EAAE,8BAA8B;EACpCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,YAAoB1D;IAClC,CAAC;IACD,GAAG,EAAE;MACHwI,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,UAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,KAAgB,EAAEA,eAAe,CAAC;EAClDkF,gBAAgB,EAAE,CAAClF,MAAiB,CAAC;EACrCpQ;AACF,CAAC;;;;;;;ACz8CD;;AAE8F;AAQjE;AAC0D;AAC3B;AACS;AAAA,IAAA6V,cAAA,oBAAA9wB,OAAA;AAAA,IAAA+wB,oBAAA,oBAAA/wB,OAAA;AAAA,IAAAgxB,oBAAA,oBAAAhxB,OAAA;AASrE;AACA;AACA;AACe,MAAMurB,IAAI,SAASsF,SAAO,CAAC;EAGxC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEhoC,WAAWA,CACTq0B,GAAW,EACX;IACEU,aAAa,GAAG,KAAK;IACrBK,UAAU,GAAG,CAAC;IACdC,iBAAiB,GAAG,GAAG;IACvB,GAAGre;EAKL,CAAC,GAAG,CAAC,CAAC,EACN;IACA,MAAMoxB,UAAU,GAAG,MAAOC,IAAsB,IAC9C,CAAC,MAAM,IAAI,CAACC,gBAAgB,CAACD,IAAI,CAAC,EAAEzK,WAAW;IACjD;IACA,KAAK,CAACvJ,GAAG,EAAE;MACTkU,uBAAuB,EAAE,IAAI;MAC7BC,kBAAkB,EAAE,CAClB3T,qBAAqB,CAAC,MAAM,EAAEuT,UAAU,EAAE,OAAO,EAAE,OAAO,EAAErT,aAAa,CAAC,EAC1ExB,sBAAsB,CAAC,CAAC,EACxBQ,2BAA2B,CAAC,CAAC,EAC7BoB,uBAAuB,CAACC,UAAU,EAAEC,iBAAiB,CAAC,EACtDX,uBAAuB,CAAEJ,IAAgB,IACvC,CAAC,GAAG,EAAEA,IAAI,CAACnZ,MAAM,EAAEmZ,IAAI,CAACsC,SAAS,IAAI,IAAI,GAAG,EAAE,GAAG,KAAKtC,IAAI,CAACsC,SAAS,GAAG,CAAC,CAAClxB,IAAI,CAAC,EAAE,CAClF,CAAC,CACF;MACD,GAAGsR;IACL,CAAC,CAAC;IAtCJiV,8BAAA,OAASgc,cAAc;IA+CvBhc,8BAAA,OAAAic,oBAAoB;IAoBpBjc,8BAAA,OAAAkc,oBAAoB;IA5BlBjc,yBAAA,CAAK+b,cAAc,EAAnB,IAAI,EAAkBlT,aAAJ,CAAC;IACnB,IAAI,CAAC0T,QAAQ,CAACC,SAAS,CAAC5V,iBAAiB,EAAE;MAAE6V,KAAK,EAAE;IAAc,CAAC,CAAC;IACpE,IAAI,CAACF,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE4nC,uCAAmBA;IAAC,CAAC,CAAC;IACzD,IAAI,CAACW,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE6nC,gDAA4BA;IAAC,CAAC,CAAC;IAClE;IACA,IAAI,CAACU,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE;IAAqB,CAAC,CAAC;EAC5D;EAIA,MAAMooC,gBAAgBA,CAACtxB,OAA0B,EAAoC;IACnF,IAAI8U,yBAAA,CAAKoc,oBAAoB,EAAzB,IAAwB,CAAC,IAAI,IAAI,EAAE,OAAOpc,yBAAA,CAAKoc,oBAAoB,EAAzB,IAAwB,CAAC;IACvE,OAAO,IAAI,CAACxB,SAAS,CAAC1vB,OAAO,CAAC;EAChC;EAEA,MAAe0vB,SAASA,CACtB,GAAGj7B,IAAsC,EACP;IAClC,MAAMo9B,OAAO,GAAG,KAAK,CAACnC,SAAS,CAAC,GAAGj7B,IAAI,CAAC;IACxCo9B,OAAO,CAAChV,IAAI,CACV,MAAM;MACJ3H,yBAAA,CAAKgc,oBAAoB,EAAzB,IAAI,EAAwBW,OAAJ,CAAC;IAC3B,CAAC,EACD,MAAM,CAAC,CACT,CAAC;IACD,OAAOA,OAAO;EAChB;EAIA,MAAM/xB,aAAaA,CAAA,EAAqB;IACtC,IAAIgV,yBAAA,CAAKqc,oBAAoB,EAAzB,IAAwB,CAAC,IAAI,IAAI,EAAE,OAAOrc,yBAAA,CAAKqc,oBAAoB,EAAzB,IAAwB,CAAC;IACvEjc,yBAAA,CAAKic,oBAAoB,EAAzB,IAAI,EAAwB,IAAI,CAACrD,4BAA4B,CAAC;MAC5D7P,cAAc,EAAE;QAAEC,aAAa,EAAE;UAAE,YAAY,EAAE;QAAO;MAAE;IAC5D,CAAC,CAAC,CAACrB,IAAI,CACL,MAAM,IAAI,EACTppB,KAAK,IAAK;MACT,IAAIA,KAAK,CAACxK,OAAO,KAAK,gDAAgD,EAAE,MAAMwK,KAAK;MACnF,OAAO,KAAK;IACd,CACF,CARwB,CAAC;IASzB,OAAOqhB,yBAAA,CAAKqc,oBAAoB,EAAzB,IAAwB,CAAC;EAClC;;EAEA;AACF;AACA;AACA;EACE,MAAMtxB,YAAYA,CAAA,EAAoB;IACpC,OAAO,CAAC,MAAM,IAAI,CAACyxB,gBAAgB,CAAC,CAAC,EAAE1xB,SAAS;EAClD;EAEA,MAAM6G,WAAWA,CAAA,EAAsB;IACrC,MAAM;MACJmgB,WAAW;MACXhnB,SAAS,EAAEkyB,aAAa;MACxBnL,SAAS;MACTQ;IACF,CAAC,GAAG,MAAM,IAAI,CAACuI,SAAS,CAAC,CAAC;IAE1B,MAAMppB,wBAAwB,GAAGqgB,SAAS,CACvC/d,MAAM,CAAC,CAAC;MAAEye;IAAkB,CAAC,KAAKF,cAAc,IAAIE,iBAAiB,CAAC,CACtE71B,MAAM,CAAC,CAACupB,GAAG,EAAEtpB,CAAC,KAAMA,CAAC,CAAC41B,iBAAiB,GAAGtM,GAAG,CAACsM,iBAAiB,GAAG51B,CAAC,GAAGspB,GAAI,EAAE;MAC3EsM,iBAAiB,EAAE,CAAC,CAAC;MACrBj8B,OAAO,EAAE;IACX,CAAC,CAAC,CAACA,OAAO;IACZ,IAAI4Q,wBAAwB,CAACsK,wBAAwB,CAAC,IAAI,IAAI,EAAE;MAC9D,MAAMlb,OAAO,GAAGkb,wBAAwB,CAACpa,QAAQ,CAAC,CAAC;MACnD,MAAM6lC,QAAQ,GAAG9+B,MAAM,CAAC0V,MAAM,CAAC3M,wBAAwB,CAAC,CACrD4M,MAAM,CAAE/U,EAAE,IAAK,OAAOA,EAAE,KAAK,QAAQ,CAAC,CACtCpF,GAAG,CAAEoF,EAAE,IAAK,CAACA,EAAE,CAAC;MACnB,MAAMxI,SAAS,GAAGsG,IAAI,CAACa,GAAG,CAAC,GAAGu/B,QAAQ,CAAC,CAAC7lC,QAAQ,CAAC,CAAC;MAClD,MAAMZ,SAAS,GAAG,CAACqG,IAAI,CAACoP,GAAG,CAAC,GAAGgxB,QAAQ,CAAC,GAAG,CAAC,EAAE7lC,QAAQ,CAAC,CAAC;MACxD,MAAMuH,KAAK,GAAG,IAAIvI,uBAAuB,CACvC,oBAAoB,EACpBE,OAAO,EACPC,SAAS,EACTC,SACF,CAAC;MACD,IAAIwpB,yBAAA,CAAKmc,cAAc,EAAnB,IAAkB,CAAC,EAAE3nB,OAAO,CAACC,IAAI,CAAC9V,KAAK,CAACxK,OAAO,CAAC,CAAC,KAChD,MAAMwK,KAAK;IAClB;IAEA,OAAO;MACL4pB,GAAG,EAAE,IAAI,CAAC0N,KAAK;MACf+G,aAAa;MACb1mC,OAAO,EAAEw7B,WAAW;MACpBtgB;IACF,CAAC;EACH;AACF;;AC1JkE;AACrB;AAC4B;;AAEzE;AACA;AACA;AACA;AACA;AACe,SAAS0rB,2BAA2BA,CACjDjkC,WAAgC,EACR;EACxB,MAAMsY,MAAM,GAAG4E,QAAQ,CAACld,WAAW,CAAC;EACpC,QAAQsY,MAAM,CAAC3W,GAAG;IAChB,KAAKyM,GAAG,CAAC6S,QAAQ;MACf,OAAOgjB,2BAA2B,CAAC9mB,OAAO,CAAC7E,MAAM,CAAC+E,SAAS,CAAC,CAAC;IAC/D,KAAKjP,GAAG,CAAC8K,QAAQ;MACf,OAAOZ,MAAM,CAACwM,IAAI;IACpB;EACF;EAEA,MAAMvW,KAAK,GAAG4W,iBAAS,CAAC7M,MAAM,CAAC3W,GAAG,EAAE2W,MAAM,CAACjb,OAAO,CAAC,CAAC2G,IAAI,CAAC,CAAC,CAAC7I,IAAI,CAAC,KAAKA,IAAI,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC;EAC3F,IAAIoT,KAAK,IAAI,IAAI,EACf,MAAM,IAAI3S,gBAAgB,CAAC,mCAAmCwS,GAAG,CAACkK,MAAM,CAAC3W,GAAG,CAAC,EAAE,CAAC;EAClF,IAAI,EAAE,WAAW,IAAI4M,KAAK,CAAC,EAAE,MAAM,IAAI7Q,iBAAiB,CAAC,CAAC;EAC1D,MAAME,OAAO,GAAG0a,MAAM,CAAC/J,KAAK,CAACwQ,SAAS,CAA6C;EACnF,OAAOnhB,OAAO,CAACqgB,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC;AACvC;;ACbA;AACA;AACA;AACA;AACA;AACe,MAAeimB,WAAW,CAAC;;;;;;;ACpBwC;AAC1C;AACO;AACS;AACb;;AAE3C;AACA;AACA;AACA;AACO,SAASI,QAAQA,CAAC96B,IAAa,EAAU;EAAA,IAAA+6B,aAAA;EAC9C,OAAOn4B,IAAI,EAAAm4B,aAAA,GAACF,+BAAY,CAAC76B,IAAI,CAAC,cAAA+6B,aAAA,cAAAA,aAAA,GAAI,EAAE,CAAC;AACvC;;AAEA;AACA;;AAsCA;AACA;AACA;AACA;AACO,SAASC,UAAUA,CAACC,MAAc,EAAU;EACjD,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,CACN;MACExpC,IAAI,EAAE,MAAM;MACZsO,IAAI,EAAE;QAAEm7B,MAAM,EAAE,CAAC,QAAQ;MAAE;IAC7B,CAAC,EACD;MACEzpC,IAAI,EAAE,SAAS;MACfsO,IAAI,EAAE;QAAEm7B,MAAM,EAAE,CAAC,KAAK;MAAE;IAC1B,CAAC,EACD;MACEzpC,IAAI,EAAE,WAAW;MACjBsO,IAAI,EAAE;QAAEm7B,MAAM,EAAE,CAAC,QAAQ;MAAE;IAC7B,CAAC,EACD;MACEzpC,IAAI,EAAE,iBAAiB;MACvBsO,IAAI,EAAE;QAAEm7B,MAAM,EAAE,CAAC,iBAAiB;MAAE;IACtC,CAAC;EAEL,CAAU;EACV,MAAMC,UAAU,GAAG,IAAIV,2BAAY,CAAC,CAAC,CAACW,WAAW,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EAChE,MAAMK,SAAS,GAAG,IAAIX,uCAAwB,CAAC,CAAC,CAACY,cAAc,CAACP,MAAM,EAAEI,UAAU,CAAC;EACnF,OAAOz4B,IAAI,CAAChC,MAAM,CAAC26B,SAAS,CAAC,CAAC;AAChC;;AAEA;AACA;AACA;AACO,SAASE,aAAaA,CAC3Bz7B,IAA+B,EAC/B07B,GAAa,EACbT,MAAc,EACN;EACR,OAAOr4B,IAAI,CACTzG,aAAa,CAAC,CACZoH,mBAAmB,EACnB,IAAIvH,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EACnBg/B,UAAU,CAACC,MAAM,CAAC,EAClBH,QAAQ,CAACY,GAAG,CAAC,EACb94B,IAAI,CAAChC,MAAM,CAACZ,IAAI,CAAC,CAAC,CACnB,CACH,CAAC;AACH;;;;;;;ACpG6B;AACO;AACwC;AACzB;AACqB;AACtB;AACe;AAChB;AACA;AAE1C,SAAS27B,eAAeA,CAC7BnlC,WAAgC,EAChC6R,SAAiB,EACjBuzB,OAAgB,EACJ;EACZ,MAAM/hC,QAAQ,GAAG,CAACwO,SAAS,CAAC;EAC5B,IAAIuzB,OAAO,EAAE/hC,QAAQ,CAACwT,IAAI,CAAC,UAAU,CAAC;EACtC,MAAMwuB,WAAW,GAAGj7B,MAAM,CAACpK,WAAW,CAAC;EACvC,OAAO2F,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAACpC,QAAQ,CAAC1C,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEyL,IAAI,CAACi5B,WAAW,CAAC,CAAC,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AAHA,IAAAC,iBAAA,oBAAAlzB,OAAA;AAIe,MAAMmzB,aAAa,SAASrB,WAAW,CAAC;EAKrD;AACF;AACA;EACEjpC,WAAWA,CAAiBuqC,SAAmC,EAAE;IAC/D,KAAK,CAAC,CAAC;IANTte,gCAAA,OAASoe,iBAAiB;IAAa,KAKXE,SAAmC,GAAnCA,SAAmC;IAE7D,MAAMC,OAAO,GAAG16B,iCAAS,CAAC06B,OAAO,CAACC,QAAQ,CAACt7B,MAAM,CAACo7B,SAAS,CAAC,CAAC;IAC7Dre,2BAAA,CAAKme,iBAAiB,EAAtB,IAAI,EAAqBG,OAAO,CAACD,SAAZ,CAAC;IACtB,IAAI,CAAC5nC,OAAO,GAAGuM,MAAM,CAACs7B,OAAO,CAACE,SAAS,EAAE1+B,QAAQ,CAAC+B,cAAc,CAAC;EACnE;;EAEA;AACF;AACA;EACE,OAAO48B,QAAQA,CAAA,EAAkB;IAC/B,MAAMJ,SAAS,GAAGr7B,MAAM,CAACY,wCAAgB,CAAC,EAAE,CAAC,EAAE9D,QAAQ,CAACgC,gBAAgB,CAAC;IACzE,OAAO,IAAIs8B,aAAa,CAACC,SAAS,CAAC;EACrC;;EAEA;AACF;AACA;EACE;EACA,MAAeh5B,IAAIA,CAAChD,IAAyB,EAAEyI,OAAa,EAAuB;IACjF,OAAO,IAAI,CAAC4zB,UAAU,CAACr8B,IAAI,EAAEyI,OAAO,CAAC;EACvC;;EAEA;EACA,MAAe4zB,UAAUA,CAACr8B,IAAyB,EAAEyI,OAAa,EAAuB;IACvF,OAAOlH,iCAAS,CAAC0B,QAAQ,CAACnH,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC,EAAEud,2BAAA,CAAKue,iBAAiB,EAAtB,IAAqB,CAAC,CAAC;EACtE;EAEA,MAAeQ,eAAeA,CAC5B9lC,WAAgC,EAChC;IAAEolC,OAAO;IAAEvzB,SAAS;IAAE,GAAGI;EAAmD,CAAC,GAAG,CAAC,CAAC,EACpD;IAC9B,IAAIJ,SAAS,IAAI,IAAI,EAAE;MACrB,MAAM,IAAI/V,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE+V,SAAS,CAAC;IAC7D;IACA,MAAMwzB,WAAW,GAAGj7B,MAAM,CAACpK,WAAW,CAAC;IACvC,MAAM+lC,eAAe,GAAGZ,eAAe,CAACnlC,WAAW,EAAE6R,SAAS,EAAEuzB,OAAO,KAAK,IAAI,CAAC;IAEjF,MAAM5jB,UAAU,GAAG,CAAC,MAAM,IAAI,CAACqkB,UAAU,CAACE,eAAe,EAAE9zB,OAAO,CAAC,CAAC;IACpE,OAAOkL,OAAO,CAAC;MAAExb,GAAG,EAAEyM,GAAG,CAAC6S,QAAQ;MAAE5D,SAAS,EAAEgoB,WAAW;MAAE7jB;IAAW,CAAC,CAAC;EAC3E;EAEA,MAAewkB,WAAWA,CAAC9qC,OAAe,EAAE+W,OAAa,EAAuB;IAC9E,OAAO,IAAI,CAAC4zB,UAAU,CAAC74B,WAAW,CAAC9R,OAAO,CAAC,EAAE+W,OAAO,CAAC;EACvD;EAEA,MAAeg0B,aAAaA,CAC1Bz8B,IAA+B,EAC/B07B,GAAa,EACb;IACE/pC,IAAI;IACJkC,OAAO;IACPwU,SAAS;IACTnS,eAAe;IACf,GAAGuS;EACwC,CAAC,GAAG,CAAC,CAAC,EACvB;IAC5B,MAAMi0B,KAAK,GAAGjB,aAAa,CAACz7B,IAAI,EAAE07B,GAAG,EAAE;MACrC/pC,IAAI;MACJkC,OAAO;MACPwU,SAAS;MACTnS;IACF,CAAC,CAAC;IACF,MAAM6M,SAAS,GAAG,MAAM,IAAI,CAACs5B,UAAU,CAACK,KAAK,EAAEj0B,OAAO,CAAC;IACvD,OAAO9H,MAAM,CAACoC,SAAS,EAAEtF,QAAQ,CAACiC,SAAS,CAAC;EAC9C;EAEA,MAAei9B,cAAcA,CAC3BC,UAA6B,EAC7B;IAAEv0B;EAAkC,CAAC,GAAG,CAAC,CAAC,EACd;IAC5B,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI/V,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE+V,SAAS,CAAC;IAClF,MAAMjI,OAAO,GAAGjE,aAAa,CAAC,CAC5BoH,mBAAmB,EACnB,IAAIvH,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EACnBF,MAAM,CAACG,IAAI,CAACoM,SAAS,CAAC,EACtBzH,MAAM,CAACg8B,UAAU,CAAC,CACnB,CAAC;IACF,MAAM75B,SAAS,GAAG,MAAM,IAAI,CAACs5B,UAAU,CAACj8B,OAAO,CAAC;IAChD,OAAOO,MAAM,CAACoC,SAAS,EAAEtF,QAAQ,CAACiC,SAAS,CAAC;EAC9C;AACF;;ACjHoE;AACvB;AACQ;AACE;AACoC;AAEzB;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASm9B,gBAAgBA,CAC9BrmC,WAAgC,EAChC;EACEolC,OAAO;EACPrb,OAAO;EACPpK,QAAQ;EACR2mB;AAMF,CAAC,GAAG,CAAC,CAAC,EACE;EACR,MAAMhuB,MAAM,GAAG4E,QAAQ,CAACld,WAAW,CAAC;EACpC,IAAIsY,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6S,QAAQ,EAAE;IAC/B,MAAM,IAAI/kB,oBAAoB,CAC5B,+EACF,CAAC;EACH;EAEA,IAAI0K,GAAG,GAAG,EAAE;EACZ,IAAI,KAAK,IAAI0R,MAAM,IAAI8sB,OAAO,KAAK,YAAY,EAAE;IAC/Cx+B,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAACkF,GAAG,CAAC;EAC3B;EACA,IAAIlF,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC0T,WAAW,EAAE;IAClClb,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAACra,OAAO,CAAC;EAC/B;EACA,IAAIqa,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACwO,aAAa,EAAE;IACpChW,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAACqH,QAAQ,CAAC;EAChC;EACA,IAAIrH,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACyO,eAAe,EAAE;IACtCjW,GAAG,IAAI+E,MAAM,CAACgU,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI,CAAC,CAAC;EAC9B;EACA,IAAIrH,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACsW,eAAe,EAAE;IACtC,IAAI4hB,WAAW,KAAK,IAAI,EAAE1/B,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAAC2L,oBAAoB,CAAC;IACpE,IAAIqiB,WAAW,KAAK,KAAK,EAAE1/B,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAAC4L,oBAAoB,CAAC;EACvE;EACA,IACE,CAAC5L,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACqT,OAAO,IACzBnJ,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC8N,gBAAgB,IACnC5D,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6K,cAAc,IACjCX,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACkW,gBAAgB,KACrC8gB,OAAO,KAAK,WAAW,EACvB;IACAx+B,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAACnY,MAAM,CAAC;EAC9B;EACA,IAAImY,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC8N,gBAAgB,EAAEtV,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAAC+J,OAAO,CAAC;EACtE,IACE,CAAC/J,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC8N,gBAAgB,IAClC5D,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6K,cAAc,IACjCX,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC+N,UAAU,IAC7B7D,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,KAC7BksB,OAAO,KAAK,YAAY,EACxB;IACAx+B,GAAG,IAAI+E,MAAM,CAAC2M,MAAM,CAAC4C,QAAQ,CAAC,GAAGvP,MAAM,CAACoe,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIzR,MAAM,CAACmG,QAAQ,CAAC;EACrE;EACA,IAAInG,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,IAAIZ,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACgO,WAAW,EAAE;IACjExV,GAAG,IAAIy/B,gBAAgB,CACrBlpB,OAAO,CAAC7E,MAAM,CAACrF,EAAE,CAACoK,SAAS,CAAC,EAC5B/E,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAACgO,WAAW,GAAG;MAAEgpB,OAAO,EAAE;IAAY,CAAC,GAAG,CAAC,CAC/D,CAAC;EACH;EACA,OAAOx+B,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2/B,0BAA0BA,CACxCvmC,WAAgC,EAChC6R,SAAiB,EACjBI,OAAiE,EACzD;EACR,MAAMqG,MAAM,GAAG4E,QAAQ,CAACld,WAAW,EAAEoO,GAAG,CAAC6S,QAAQ,CAAC;EAClD,IAAI3I,MAAM,CAAC+E,SAAS,CAAC1b,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,EAAE;IACzC,OAAOmtB,gBAAgB,CAAClpB,OAAO,CAAC7E,MAAM,CAAC+E,SAAS,CAAC,EAAEpL,OAAO,CAAC;EAC7D;EAEA,MAAMgB,EAAE,GAAGkK,OAAO,CAAC7E,MAAM,CAAC+E,SAAS,CAAC;EACpC,MAAMzf,OAAO,GAAGqmC,2BAA2B,CAAChxB,EAAE,CAAC;EAC/C,MAAM,CAACuzB,SAAS,EAAEC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC/lC,GAAG,CAAEgmC,CAAC,IACpDp6B,eAAe,CAAC64B,eAAe,CAAClyB,EAAE,EAAEpB,SAAS,EAAE60B,CAAC,CAAC,EAAEpuB,MAAM,CAACkJ,UAAU,CAAC,CAAC,CAAC,EAAE5jB,OAAO,CAClF,CAAC;EACD,IAAI,CAAC4oC,SAAS,IAAI,CAACC,YAAY,EAAE,MAAM,IAAI7qC,gBAAgB,CAAC,wBAAwB,CAAC;EACrF,OAAOyqC,gBAAgB,CAAClpB,OAAO,CAAC7E,MAAM,CAAC+E,SAAS,CAAC,EAAE;IACjD,IAAImpB,SAAS,IAAI;MAAEpB,OAAO,EAAE;IAAa,CAAC,CAAC;IAC3C,GAAGnzB;EACL,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe00B,yBAAyBA,CAC7C3mC,WAAgC,EAChCib,IAAU,EACV;EAAE2rB,OAAO;EAAE,GAAG30B;AAAwE,CAAC,GAAG,CAAC,CAAC,EAC3E;EACjB,IAAIqG,MAAM,GAAG4E,QAAQ,CAACld,WAAW,CAAC;EAClC,MAAM6mC,UAAU,GAAGvuB,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6S,QAAQ;EAC9C,MAAMjf,MAAM,GAAG6kC,UAAU,IAAID,OAAO,KAAK,IAAI,IAAI1a,WAAW,CAAClsB,WAAW,CAAC;EACzE,IAAIsY,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6S,QAAQ,EAAE3I,MAAM,GAAGA,MAAM,CAAC+E,SAAS;;EAE1D;EACA,IACEpL,OAAO,CAAC8X,OAAO,IAAI,IAAI,IACvB/nB,MAAM,KAAK,KAAK,IAChB,CAACoM,GAAG,CAAC8N,gBAAgB,EAAE9N,GAAG,CAAC6K,cAAc,EAAE7K,GAAG,CAAC+N,UAAU,EAAE/N,GAAG,CAAC8K,QAAQ,CAAC,CAAC3e,QAAQ,CAAC+d,MAAM,CAAC3W,GAAG,CAAC,EAC7F;IACA,MAAM;MAAEs4B,QAAQ;MAAEC;IAAO,CAAC,GAAG,MAAMjf,IAAI,CAACmnB,wBAAwB,CAACpgC,MAAM,CAAC;IACxE,MAAM8kC,YAAY,GAAG7M,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIC,MAAM;IACvC,IAAI4M,YAAY,IAAI,IAAI,EAAE;MACxB,MAAM,IAAIrpC,aAAa,CAAC,wDAAwDuE,MAAM,EAAE,CAAC;IAC3F;IACAiQ,OAAO,CAAC8X,OAAO,GAAG+c,YAAY,CAAC/c,OAAO;EACxC;EAEA,IAAI9X,OAAO,CAAC0N,QAAQ,IAAI,IAAI,IAAIvR,GAAG,CAACyO,eAAe,KAAKvE,MAAM,CAAC3W,GAAG,EAAE;IAClEsQ,OAAO,CAAC0N,QAAQ,GAAG,CAAC,MAAM1E,IAAI,CAACyE,iBAAiB,CAACpH,MAAM,CAAC1J,QAAQ,CAAC,EAAE+Q,QAAQ,CAACxhB,QAAQ,CAAC,CAAC;EACxF;EAEA,IAAI8T,OAAO,CAACq0B,WAAW,IAAI,IAAI,IAAIl4B,GAAG,CAACsW,eAAe,KAAKpM,MAAM,CAAC3W,GAAG,IAAIilC,OAAO,KAAK,IAAI,EAAE;IACzF,MAAM;MAAEzU;IAAY,CAAC,GAAG,MAAMlX,IAAI,CAAC8jB,kBAAkB,CAACzmB,MAAM,CAACyL,SAAS,CAAC;IACvE9R,OAAO,CAACq0B,WAAW,GAAGhuB,MAAM,CAAC0L,MAAM,KAAKmO,WAAW;EACrD;EAEA,OAAO0U,UAAU,GACbN,0BAA0B,CAACvmC,WAAW,EAAE,MAAMib,IAAI,CAACnJ,YAAY,CAAC,CAAC,EAAEG,OAAO,CAAC,GAC3Eo0B,gBAAgB,CAACrmC,WAAW,EAAEiS,OAAO,CAAC;AAC5C;;ACjLsD;AACgB;AAEW;AACV;AAChB;AACmB;AACV;AAClC;AAE8C;AACrB;AACW;AACF;AAqBhE,MAAM80B,UAAuB,GAAG,EAAE;AAElC,eAAeC,yBAAyBA,CACtC/zB,EAAc,EACdgI,IAAU,EACVgsB,aAAoB,EACQ;EAC5B,MAAMrpC,OAAO,GAAGqmC,2BAA2B,CAAC9mB,OAAO,CAAClK,EAAE,CAAC,CAAC;EACxD,MAAM,CAACi0B,OAAO,EAAE;IAAEvqC;EAAO,CAAC,EAAE;IAAE4b,wBAAwB;IAAEwrB;EAAc,CAAC,CAAC,GAAG,MAAMl/B,OAAO,CAAConB,GAAG,CAAC,CAC3FhR,IAAI,CACDpH,kBAAkB,CAACjW,OAAO,CAAC,CAC3BuW,KAAK,CAAEzO,KAAK,IAAK;IAChB,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO;MAAEnH,EAAE,EAAEX,OAAO;MAAEsW,OAAO,EAAE,EAAE;MAAE3F,KAAK,EAAE;IAAE,CAAC;EAC/C,CAAC;EACD;EAAA,CACCugB,IAAI,CAAE9B,GAAG,KAAM;IAAE,GAAGA,GAAG;IAAEzuB,EAAE,EAAEyuB,GAAG,CAACzuB;EAA6B,CAAC,CAAC,CAAC,EACpE0c,IAAI,CAACrI,wBAAwB,CAAC,CAAC;EAAE;EACjCqI,IAAI,CAACvC,WAAW,CAAC,CAAC,CACnB,CAAC;EAEF,OAAO,CACL,MAAM7T,OAAO,CAAConB,GAAG,CACf8a,UAAU,CAACrmC,GAAG,CAAC,MAAO6D,CAAC,IACrBA,CAAC,CAAC0O,EAAE,EAAE;IACJgI,IAAI;IACJisB,OAAO;IACPvqC,MAAM;IACN4b,wBAAwB;IACxBwrB,aAAa;IACbkD;EACF,CAAC,CACH,CACF,CAAC,EACDE,IAAI,CAAC,CAAC;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,eAAeC,iBAAiBA,CAC7CpnC,WAA2C,EAC3CqnC,aAAmB,EACS;EAC5B,MAAM3D,QAAQ,GAAG2D,aAAa,CAAC3D,QAAQ,CAAC4D,KAAK,CAAC,CAAC;EAC/C5D,QAAQ,CAACG,YAAY,CAAC;IAAE1oC,IAAI,EAAE;EAAgB,CAAC,CAAC;EAChD,MAAM8f,IAAI,GAAG,IAAI0iB,IAAI,CAAC0J,aAAa,CAACrK,KAAK,EAAE;IACzChN,aAAa,EAAE,IAAI;IACnB0T,QAAQ;IACRD,kBAAkB,EAAE,CAACjU,oCAAoC,CAAC,CAAC;EAC7D,CAAC,CAAC;EACFvU,IAAI,CAACsoB,gBAAgB,GAAG,YAAY8D,aAAa,CAAC9D,gBAAgB,CAAC,CAAC;EACpE,OAAOyD,yBAAyB,CAAC9pB,QAAQ,CAACld,WAAW,CAAC,EAAEib,IAAI,EAAE,EAAE,CAAC;AACnE;AAEA8rB,UAAU,CAAClwB,IAAI,CACb,CAAC5D,EAAE,EAAE;EAAEi0B,OAAO;EAAEnD,aAAa;EAAEkD;AAAc,CAAC,KAAK;EACjD,IAAIh0B,EAAE,CAACtR,GAAG,KAAKyM,GAAG,CAAC6S,QAAQ,EAAE,OAAO,EAAE;EACtC,MAAM;IAAE5D,SAAS;IAAEmE;EAAW,CAAC,GAAGvO,EAAE;EACpC,IAAI,CAACoK,SAAS,aAATA,SAAS,cAATA,SAAS,GAAImE,UAAU,KAAK,IAAI,EAAE,OAAO,EAAE;EAChD,IAAIA,UAAU,CAACvd,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;EACxC,MAAMlG,MAAM,GAAGuH,MAAM,CAACG,IAAI,CACxB,CAACs+B,aAAa,EAAE,IAAIkD,aAAa,CAAC1sC,QAAQ,CAAC6T,GAAG,CAACgO,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC,CAACzb,IAAI,CAAC,GAAG,CAC5F,CAAC;EACD,MAAM4mC,QAAQ,GAAGn9B,MAAM,CAAC+S,OAAO,CAACE,SAAS,CAAC,CAAC;EAC3C,MAAM0oB,eAAe,GAAGpgC,aAAa,CAAC,CAAC5H,MAAM,EAAEwpC,QAAQ,CAAC,CAAC;EACzD,MAAMC,mBAAmB,GAAG7hC,aAAa,CAAC,CAAC5H,MAAM,EAAEqO,IAAI,CAACm7B,QAAQ,CAAC,CAAC,CAAC;EACnE,IACEj7B,eAAe,CAACy5B,eAAe,EAAEvkB,UAAU,CAAC,CAAC,CAAC,EAAE0lB,OAAO,CAAC3oC,EAAE,CAAC,IAC3D+N,eAAe,CAACk7B,mBAAmB,EAAEhmB,UAAU,CAAC,CAAC,CAAC,EAAE0lB,OAAO,CAAC3oC,EAAE,CAAC,EAE/D,OAAO,EAAE;EACX,OAAO,CACL;IACErD,OAAO,EACL,uEAAuE,GACvE,wEAAwE;IAC1E2G,GAAG,EAAE,kBAAkB;IACvB4lC,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY;EACzC,CAAC,CACF;AACH,CAAC,EACD,OAAOx0B,EAAE,EAAE;EAAEgI,IAAI;EAAEgsB;AAAc,CAAC,KAAK;EACrC,IAAIS,QAAQ;EACZ,IAAI,WAAW,IAAIz0B,EAAE,EAAEy0B,QAAQ,GAAGz0B,EAAE,CAACoK,SAAS;EAC9C,IAAI,IAAI,IAAIpK,EAAE,EAAEy0B,QAAQ,GAAGz0B,EAAE,CAACA,EAAE;EAChC,IAAIy0B,QAAQ,IAAI,IAAI,EAAE,OAAO,EAAE;EAC/B,OAAOV,yBAAyB,CAACU,QAAQ,EAAEzsB,IAAI,EAAE,CAAC,GAAGgsB,aAAa,EAAEh0B,EAAE,CAACtR,GAAG,CAAC,CAAC;AAC9E,CAAC,EACD,CAACsR,EAAE,EAAE;EAAEtW;AAAO,CAAC,KAAK;EAClB,IAAI,EAAE,KAAK,IAAIsW,EAAE,CAAC,EAAE,OAAO,EAAE;EAC7B,IAAIA,EAAE,CAACG,GAAG,KAAK,CAAC,IAAIH,EAAE,CAACG,GAAG,GAAGzW,MAAM,EAAE,OAAO,EAAE;EAC9C,OAAO,CACL;IACEzB,OAAO,EAAE,OAAO+X,EAAE,CAACG,GAAG,0CAA0CzW,MAAM,EAAE;IACxEkF,GAAG,EAAE,YAAY;IACjB4lC,WAAW,EAAE,CAAC,KAAK;EACrB,CAAC,CACF;AACH,CAAC,EACD,OAAOx0B,EAAE,EAAE;EAAEi0B,OAAO;EAAED,aAAa;EAAEhsB;AAAK,CAAC,KAAK;EAC9C,IAAIgsB,aAAa,CAAChjC,MAAM,KAAK,CAAC,EAAE,OAAO,EAAE;EACzC,MAAM0jC,IAAI,GAAG,MAAMhB,yBAAyB,CAACxpB,OAAO,CAAClK,EAAE,CAAC,EAAEgI,IAAI,CAAC,CAAC9G,KAAK,CAAC,MAAM,EAAE,CAAC;EAC/E,IAAIwzB,IAAI,IAAIT,OAAO,CAAChzB,OAAO,EAAE,OAAO,EAAE;EACtC,OAAO,CACL;IACEhZ,OAAO,EAAE,mBAAmBgsC,OAAO,CAAChzB,OAAO,wDAAwDyzB,IAAI,EAAE;IACzG9lC,GAAG,EAAE,qBAAqB;IAC1B4lC,WAAW,EAAE,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;EAClE,CAAC,CACF;AACH,CAAC,EACD,OAAOx0B,EAAE,EAAE;EAAEgI;AAAK,CAAC,KAAK;EACtB,IAAIhI,EAAE,CAACtR,GAAG,KAAKyM,GAAG,CAACqT,OAAO,IAAInW,SAAS,CAAC2H,EAAE,CAACyO,WAAW,EAAEza,QAAQ,CAACoC,IAAI,CAAC,EAAE,OAAO,EAAE;EACjF,MAAMu+B,SAAS,GAAG,MAAM3sB,IAAI,CAACpH,kBAAkB,CAACZ,EAAE,CAACyO,WAAW,CAAC,CAACvN,KAAK,CAAEzO,KAAK,IAAK;IAC/E,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;IAC/C,OAAO,IAAI;EACb,CAAC,CAAC;EACF,IAAIkiC,SAAS,IAAI,IAAI,IAAIA,SAAS,CAAClW,OAAO,KAAK,IAAI,EAAE,OAAO,EAAE;EAC9D,OAAO,CACL;IACEx2B,OAAO,EAAE,kCAAkC;IAC3C2G,GAAG,EAAE,4BAA4B;IACjC4lC,WAAW,EAAE,CAAC,aAAa;EAC7B,CAAC,CACF;AACH,CAAC,EACD,CAACx0B,EAAE,EAAE;EAAEi0B;AAAQ,CAAC,KAAK;EACnB,IAAIhsC,OAAO;EACX,IAAI+X,EAAE,CAACtR,GAAG,KAAKyM,GAAG,CAAC6S,QAAQ,IAAIimB,OAAO,CAACluB,IAAI,KAAK,aAAa,IAAI/F,EAAE,CAACuO,UAAU,CAACvd,MAAM,KAAK,CAAC,EAAE;IAC3F/I,OAAO,GAAG,wEAAwE;EACpF;EACA,IAAI+X,EAAE,CAACtR,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,IAAIguB,OAAO,CAACluB,IAAI,KAAK,OAAO,EAAE;IACvD9d,OAAO,GAAG,kDAAkD;EAC9D;EACA,IAAIA,OAAO,IAAI,IAAI,EAAE,OAAO,EAAE;EAC9B,OAAO,CAAC;IAAEA,OAAO;IAAE2G,GAAG,EAAE,oBAAoB;IAAE4lC,WAAW,EAAE,CAAC,KAAK;EAAE,CAAC,CAAC;AACvE,CAAC;AACD;AACA;AACA,CAACx0B,EAAE,EAAE;EAAEsF;AAAyB,CAAC,KAAK;EAAA,IAAAnH,IAAA,EAAAC,KAAA;EACpC,MAAMw2B,UAAU,GAAGz5B,GAAG,CAACsO,gBAAgB,KAAKzJ,EAAE,CAACtR,GAAG;EAClD,MAAMmmC,cAAc,GAAG15B,GAAG,CAAC8N,gBAAgB,KAAKjJ,EAAE,CAACtR,GAAG,IAAIyM,GAAG,CAAC+N,UAAU,KAAKlJ,EAAE,CAACtR,GAAG;EACnF,MAAMomC,YAAY,GAAG35B,GAAG,CAAC6K,cAAc,KAAKhG,EAAE,CAACtR,GAAG,IAAIyM,GAAG,CAAC8K,QAAQ,KAAKjG,EAAE,CAACtR,GAAG;EAC7E,MAAM8H,IAAI,IAAA2H,IAAA,IAAAC,KAAA,GACPw2B,UAAU,GAAG,aAAa,GAAG,IAAI,cAAAx2B,KAAA,cAAAA,KAAA,GACjCy2B,cAAc,GAAG,iBAAiB,GAAG,IAAI,cAAA12B,IAAA,cAAAA,IAAA,GACzC22B,YAAY,GAAG,eAAe,GAAG,IAAK;EACzC,IAAIt+B,IAAI,IAAI,IAAI,EAAE,OAAO,EAAE;EAC3B,MAAM0O,QAAQ,GAAGV,eAAe,CAACc,wBAAwB,CAAC,CAAC9O,IAAI,CAG9D;EAED,IAAI8W,SAAyC;EAC7C,IAAI,YAAY,IAAItN,EAAE,EAAEsN,SAAS,GAAG;IAAE1I,UAAU,EAAE5E,EAAE,CAAC4E;EAAW,CAAC;EACjE,IAAI,WAAW,IAAI5E,EAAE,EAAEsN,SAAS,GAAGtN,EAAE,CAACsN,SAAS;EAC/C,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI7iB,iBAAiB,CAAC,CAAC;EACpD,IACE,CAACya,QAAQ,CAACN,UAAU,CAACtd,QAAQ,CAACgmB,SAAS,CAAC1I,UAAU,CAAC,IAClDiwB,cAAc,IAAI,CAAC3vB,QAAQ,CAACR,SAAS,CAACpd,QAAQ,CAACgmB,SAAS,CAAC5I,SAAS,CAAE,EACrE;IACA,OAAO,CACL;MACEzc,OAAO,EAAE,kBAAkBk0B,IAAI,CAACC,SAAS,CAAC9O,SAAS,CAAC,4BAA4B6O,IAAI,CAACC,SAAS,CAAClX,QAAQ,CAAC,EAAE;MAC1GtW,GAAG,EAAE,yBAAyB;MAC9B4lC,WAAW,EAAE,CAAC,WAAW,EAAE,YAAY;IACzC,CAAC,CACF;EACH;EACA,OAAO,EAAE;AACX,CAAC,EACD,OAAOx0B,EAAE,EAAE;EAAEgI;AAAK,CAAC,KAAK;EACtB,IAAI7M,GAAG,CAAC6K,cAAc,KAAKhG,EAAE,CAACtR,GAAG,EAAE,OAAO,EAAE;EAC5C;EACA,IAAIsR,EAAE,CAAC+D,UAAU,CAAC/C,UAAU,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE;EAC9C,IAAI;IACF,MAAM;MAAE2V;IAAO,CAAC,GAAG,MAAM3O,IAAI,CAAC/D,WAAW,CAACjE,EAAE,CAAC+D,UAAU,CAAC;IACxD,IAAI4S,MAAM,EAAE,OAAO,EAAE;IACrB,OAAO,CACL;MACE1uB,OAAO,EAAE,YAAY+X,EAAE,CAAC+D,UAAU,gBAAgB;MAClDnV,GAAG,EAAE,mBAAmB;MACxB4lC,WAAW,EAAE,CAAC,YAAY;IAC5B,CAAC,CACF;EACH,CAAC,CAAC,OAAO/hC,KAAK,EAAE;IACd,IAAI,EAAEA,KAAK,YAAYhB,6BAAS,CAAC,IAAIgB,KAAK,CAACyd,QAAQ,EAAEgL,UAAU,IAAI,IAAI,EAAE,MAAMzoB,KAAK;IACpF,OAAO,CACL;MACExK,OAAO,EAAEk0B,IAAI,CAAC4Y,KAAK,CAACtiC,KAAK,CAACyd,QAAQ,CAACgL,UAAU,CAAC,CAAC/X,MAAM;MAAE;MACvDvU,GAAG,EAAE,kBAAkB;MACvB4lC,WAAW,EAAE,CAAC,YAAY;IAC5B,CAAC,CACF;EACH;AACF,CACF,CAAC;;AC9OsE;AACxB;AACM;AAKD;AACA;;AAEpD;AACA;AACA;AACO,MAAMQ,cAAc,SAASrsC,gBAAgB,CAAC;EAKnDX,WAAWA,CAACC,OAAe,EAAEgtC,UAA6B,EAAEloC,WAAgC,EAAE;IAC5F,KAAK,CAAC9E,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,gBAAgB;IAC5B,IAAI,CAAC+sC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACloC,WAAW,GAAGA,WAAW;EAChC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAemoC,eAAeA,CACnCC,UAA+B,EAC/B;EACEx2B,MAAM;EACNnT,SAAS;EACTiO,MAAM,GAAG,IAAI;EACb27B,SAAS,GAAG,IAAI;EAChB70B,OAAO;EACP4xB,OAAO;EACP,GAAGnzB;AACmB,CAAC,EACW;EACpC,MAAMgB,EAAE,GAAG,MAAMxU,SAAS,CAACqnC,eAAe,CAACsC,UAAU,EAAE;IACrD,GAAGn2B,OAAO;IACVL,MAAM;IACNwzB,OAAO;IACPvzB,SAAS,EAAE,MAAMD,MAAM,CAACE,YAAY,CAAC;EACvC,CAAC,CAAC;EAEF,IAAIszB,OAAO,KAAK,IAAI,EAAE,OAAO;IAAEh5B,IAAI,EAAE8f,WAAW,CAACjZ,EAAE,CAAC;IAAEkZ,KAAK,EAAElZ;EAAG,CAAC;EAEjE,IAAIvG,MAAM,EAAE;IACV,MAAMw7B,UAAU,GAAG,MAAMd,iBAAiB,CAACn0B,EAAE,EAAErB,MAAM,CAAC;IACtD,IAAIs2B,UAAU,CAACjkC,MAAM,GAAG,CAAC,EAAE;MACzB,MAAM/I,OAAO,GAAG,oCAAoCgtC,UAAU,CAC3DxnC,GAAG,CAAE6D,CAAsB,IAAKA,CAAC,CAACrJ,OAAO,CAAC,CAC1CyF,IAAI,CAAC,IAAI,CAAC,EAAE;MACf,MAAM,IAAIsnC,cAAc,CAAC/sC,OAAO,EAAEgtC,UAAU,EAAEj1B,EAAE,CAAC;IACnD;EACF;EAEA,IAAI;IACF,IAAIq1B,OAAO;IACX,IAAI;MACFA,OAAO,GAAG7pC,SAAS,IAAI,IAAI,GAAG,MAAMA,SAAS,CAACb,OAAO,EAAE,GAAG,IAAI;IAChE,CAAC,CAAC,OAAO8H,KAAK,EAAE;MACd4iC,OAAO,GAAG,IAAI;IAChB;IACA,MAAM;MAAEtmC;IAAO,CAAC,GAAG,MAAM4P,MAAM,CAACqwB,eAAe,CAC7C;MAAEhvB;IAAG,CAAC,EACN;MACEid,cAAc,EAAE;QACdC,aAAa,EAAE;UACb;UACA,cAAc,EAAE,KAAK;UACrB,IAAImY,OAAO,IAAI,IAAI,GAAG;YAAEA;UAAQ,CAAC,GAAG,CAAC,CAAC;QACxC;MACF;IACF,CACF,CAAC;IAED,IAAID,SAAS,EAAE;MACb,MAAME,UAAU,GAAG,MAAMz1B,IAAI,CAAC9Q,MAAM,EAAE;QAAE4P,MAAM;QAAE,GAAGK;MAAQ,CAAC,CAAC;MAC7D,MAAMu2B,MAAM,GAAG;QACb,GAAGD,UAAU;QACbn8B,IAAI,EAAEm8B,UAAU,CAACn8B,IAAsB;QACvC+f,KAAK,EAAElZ;MACT,CAAC;MACD;MACA,IAAIO,OAAO,IAAI,IAAI,IAAI,CAACA,OAAO,GAAG,CAAC,EAAE;QACnC,MAAMuF,CAAC,GAAG,OAAOvF,OAAO,KAAK,SAAS,GAAGnH,SAAS,GAAGmH,OAAO;QAC5D,OAAO;UACL,GAAGg1B,MAAM;UACTC,kBAAkB,EAAE,MAAMl1B,gBAAgB,CAACvR,MAAM,EAAE;YAAE4P,MAAM;YAAE4B,OAAO,EAAEuF,CAAC;YAAE,GAAG9G;UAAQ,CAAC;QACvF,CAAC;MACH;MACA,OAAOu2B,MAAM;IACf;IACA,OAAO;MAAEp8B,IAAI,EAAEpK,MAAM;MAAEmqB,KAAK,EAAElZ;IAAG,CAAC;EACpC,CAAC,CAAC,OAAOvN,KAAK,EAAE;IACdW,WAAW,CAACX,KAAK,CAAC;IAClB,MAAMR,MAAM,CAACqR,MAAM,CAAC7Q,KAAK,EAAE;MACzBymB,KAAK,EAAElZ,EAAE;MACTy1B,QAAQ,EAAE,MAAAA,CAAA,KAAYtB,iBAAiB,CAACn0B,EAAE,EAAErB,MAAM;IACpD,CAAC,CAAC;EACJ;AACF;;AC7GwC;AAEyB;AACnB;AACqB;;AAEnE;AACA,MAAM+2B,WAAW,GAAIn/B,IAAkC,IACrDlE,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC,CAACrL,QAAQ,CAAC,QAAQ,CAAC,CAACiwB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAACnQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AAEnG,MAAM2qB,aAAa,GAAIp/B,IAAY,IACjClE,MAAM,CAACG,IAAI,CAAC+D,IAAI,CAAC4kB,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC;AAEvE,MAAMya,iBAAiB,GAAIr/B,IAAS;EAAA,IAAA+6B,aAAA;EAAA,OAAaoE,WAAW,EAAApE,aAAA,GAACF,+BAAY,CAAC76B,IAAI,CAAC,cAAA+6B,aAAA,cAAAA,aAAA,GAAI,EAAE,CAAC;AAAA;AAEtF,MAAMuE,MAAM,GAAG,sCAAsC,CAAC,CAAC;;AAEvD;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeC,OAAOA,CAACC,eAAoB,EAAE9B,OAAoB,EAAgB;EACtF,MAAMt9B,OAAO,GAAG;IAAE,GAAGo/B;EAAgB,CAAC;EACtC,IAAI,EAAE,SAAS,IAAIp/B,OAAO,CAAC,EAAE;IAC3BA,OAAO,CAACq/B,OAAO,GAAG;MAChBC,GAAG,EAAE,KAAK;MACVC,GAAG,EAAE,SAAS;MACdC,CAAC,EAAET,WAAW,CAACv+B,MAAM,CAAC88B,OAAO,CAACtpC,OAAO,CAAC;IACxC,CAAC;EACH;EACA,IAAIgM,OAAO,CAACq/B,OAAO,KAAK58B,SAAS,EAAE,OAAOzC,OAAO,CAACq/B,OAAO;EACzD,MAAM1Z,IAAI,GAAG,GAAGuZ,MAAM,IAAID,iBAAiB,CAACj/B,OAAO,CAAC,EAAW;EAC/D,MAAM2C,SAAS,GAAG,MAAM26B,OAAO,CAACrB,UAAU,CAACtW,IAAI,CAAC;EAChD,OAAO,GAAGA,IAAI,IAAIoZ,WAAW,CAACp8B,SAAS,CAAC,EAAE;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS88B,SAASA,CACvBC,GAAQ,EACR1rC,OAAgC,EAUhC;EAAA,IAAA2rC,gBAAA;EACA,MAAMzc,UAAU,GAAGwc,GAAG,CAACz+B,KAAK,CAAC,GAAG,CAAC;EACjC,IAAIiiB,UAAU,CAAC7oB,MAAM,KAAK,CAAC,EACzB,MAAM,IAAInI,aAAa,CAAC,sBAAsB,EAAE,CAAC,EAAEgxB,UAAU,CAAC7oB,MAAM,CAAC;EACvE,MAAM,CAACsN,CAAC,EAAEi4B,cAAc,EAAEj9B,SAAS,CAAC,GAAGugB,UAAU;EACjD,IAAIvb,CAAC,KAAKu3B,MAAM,EAAE,MAAM,IAAIhtC,aAAa,CAAC,YAAY,EAAEgtC,MAAM,EAAEv3B,CAAC,CAAC;EAClE,MAAM3H,OAAO,GAAGwlB,IAAI,CAAC4Y,KAAK,CAACY,aAAa,CAACY,cAAc,CAAC,CAACrrC,QAAQ,CAAC,CAAC,CAAC;EACpE,MAAMsrC,GAAG,IAAAF,gBAAA,GAAG3/B,OAAO,CAACq/B,OAAO,cAAAM,gBAAA,cAAAA,gBAAA,GAAI,CAAC,CAAC;EACjC,MAAMG,MAAM,GACVD,GAAG,CAACL,CAAC,IAAI,IAAI,IAAIK,GAAG,CAACP,GAAG,KAAK,KAAK,IAAIO,GAAG,CAACN,GAAG,KAAK,SAAS,GACvDvrC,OAAO,GACPuM,MAAM,CAACy+B,aAAa,CAACa,GAAG,CAACL,CAAC,CAAC,EAAEniC,QAAQ,CAAC+B,cAAc,CAAC;EAC3D,IAAIpL,OAAO,IAAI,IAAI,IAAI8rC,MAAM,KAAK9rC,OAAO,EAAE;IACzC,MAAM,IAAI9B,aAAa,CAAC,SAAS,EAAE,GAAG4tC,MAAM,cAAc,EAAE9rC,OAAO,CAAC;EACtE;EACA,IACE8rC,MAAM,IAAI,IAAI,IACd,CAACp9B,eAAe,CAAChH,MAAM,CAACG,IAAI,CAAC,GAAG8L,CAAC,IAAIi4B,cAAc,EAAE,CAAC,EAAEZ,aAAa,CAACr8B,SAAS,CAAC,EAAEm9B,MAAM,CAAC,EACzF;IACA,MAAM,IAAIjoC,qBAAqB,CAAC,wBAAwBioC,MAAM,EAAE,CAAC;EACnE;EACA,OAAO;IAAE9/B,OAAO;IAAE8/B;EAAO,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,KAAKA,CAACC,QAAgB,EAAmB;EACvD,IAAI;IACFP,SAAS,CAACO,QAAe,CAAC;IAC1B,OAAO,IAAI;EACb,CAAC,CAAC,OAAOlkC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASmkC,SAASA,CAACD,QAAgB,EAA2B;EACnEP,SAAS,CAACO,QAAe,CAAC;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,SAASA,CAACR,GAAQ,EAAE1rC,OAAgC,EAAW;EAC7E,IAAI;IACF,MAAM;MAAE8rC;IAAO,CAAC,GAAGL,SAAS,CAACC,GAAG,EAAE1rC,OAAO,CAAC;IAC1C,OAAO8rC,MAAM,IAAI,IAAI;EACvB,CAAC,CAAC,OAAOhkC,KAAK,EAAE;IACd,OAAO,KAAK;EACd;AACF;;AC3HgD;AACD;AACkB;AACa;;AAE9E;AACA;AACA;AACO,IAAKqkC,aAAa,0BAAbA,aAAa;EACvB;AACF;AACA;EAHYA,aAAa,CAAbA,aAAa;EAKvB;AACF;AACA;EAPYA,aAAa,CAAbA,aAAa;EASvB;AACF;AACA;EAXYA,aAAa,CAAbA,aAAa;EAavB;AACF;AACA;EAfYA,aAAa,CAAbA,aAAa;EAiBvB;AACF;AACA;EAnBYA,aAAa,CAAbA,aAAa;EAAA,OAAbA,aAAa;AAAA;AAuBzB,MAAMC,kBAAkB,GAAGpsC,eAAO,CAACqJ,QAAQ,CAAC6B,aAAa,CAAC;AAC1D;AACA;AACA;AACA,MAAMmhC,YAAY,GAAG;EACnB5xB,SAASA,CAACvV,KAA4B,EAAU;IAC9C,OAAOknC,kBAAkB,CAAC3xB,SAAS,CAAClO,MAAM,CAACC,MAAM,CAACtH,KAAK,CAAC,EAAEmE,QAAQ,CAAC6B,aAAa,CAAC,CAAC;EACpF,CAAC;EACD6P,WAAWA,CAAC7V,KAAa,EAAyB;IAChD,OAAOqH,MAAM,CAACC,MAAM,CAAC4/B,kBAAkB,CAACrxB,WAAW,CAAC7V,KAAK,CAAC,CAAC,EAAEmE,QAAQ,CAAC8B,aAAa,CAAC;EACtF;AACF,CAAU;;AAEV;AACA;AACA;AACA,MAAMrJ,eAAe,GAAG9B,eAAO,CAACqJ,QAAQ,CAAC2B,eAAe,CAAC;;AAEzD;AACA;AACA;AACO,MAAMwc,cAAO,GAAG,CACrB;EACEzjB,GAAG,EAAEkf,sBAAc,CAACkpB,aAAa,CAACG,YAAY,CAAC;EAC/C7sC,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEnY,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEkf,sBAAc,CAACkpB,aAAa,CAACI,QAAQ,CAAC;EAC3C9sC,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEnY,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAChD;AACJ;AACA;EACI2X,MAAM;EACNjhB;AACF,CAAC,EACD;EACEiC,GAAG,EAAEkf,sBAAc,CAACkpB,aAAa,CAACK,YAAY,CAAC;EAC/C/sC,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEnY,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEkf,sBAAc,CAACkpB,aAAa,CAACzgB,MAAM,CAAC;EACzCjsB,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChC9K,cAAc,EAAEnY,eAAO,CAACqJ,QAAQ,CAAC+B,cAAc,CAAC;EAChDtJ;AACF,CAAC,EACD;EACEiC,GAAG,EAAEkf,sBAAc,CAACkpB,aAAa,CAAChiC,cAAc,CAAC;EACjD1K,OAAO,EAAEwjB,sBAAc,CAAC,CAAC,EAAE,IAAI,CAAC;EAChCqC,OAAO,EAAE+mB,YAAY;EACrBvqC;AACF,CAAC,CACO;;ACxFoD;AACN;AACH;AAGrD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS2qC,cAAcA,CAAC/xB,MAAiB,EAAqB;EACnE,OAAOmN,UAAU,CAACL,cAAO,EAAE2kB,aAAa,EAAEzxB,MAAM,EAAE,CAAC,CAAC,EAAErR,QAAQ,CAACmB,SAAS,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASkiC,gBAAgBA,CAC9B9pB,OAA0B,EAC1BqF,WAAe,EACW;EAC1B,OAAOF,YAAY,CAACP,cAAO,EAAE2kB,aAAa,EAAEvpB,OAAO,EAAEqF,WAAW,EAAE,CAAC,CAAC,CAAC;AACvE;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGuD;AACgC;AAC7B;AACH;AACR;AACiC;AAEX;AAmCrE,MAAM0kB,mBAAmB,SAAS/sC,UAAU,CAAC;EAC3CvC,WAAWA,CAACE,IAAc,EAAEqvC,MAAc,EAAE;IAC1C,KAAK,CAAC,SAASA,MAAM,YAAYrvC,IAAI,yBAAyB,CAAC;IAC/D,IAAI,CAACA,IAAI,GAAG,qBAAqB;EACnC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA,IAAAsvC,KAAA,oBAAAr4B,OAAA;AAOe,MAAM/I,IAAI,CAAC;EAGxB;AACF;AACA;AACA;AACA;AACA;EACEpO,WAAWA,CACO6H,KAAe,EACxBmP,OAON,EACD;IAlBFiV,8BAAA,OAAAujB,KAAK;IAAU,KASG3nC,KAAe,GAAfA,KAAe;IAAA,KACxBmP,OAON,GAPMA,OAON;IAED,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;EACE,IAAI1T,EAAEA,CAAA,EAAiB;IACrB,OAAOyR,aAAa,CAAC,IAAI,CAAClN,KAAK,CAAC;EAClC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM4nC,MAAMA,CAACz4B,OAA0B,GAAG,CAAC,CAAC,EAAsC;IAChF,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMgB,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC8T,YAAY;MACrBvB,MAAM,EAAE,IAAI,CAAC7d,KAAK;MAClB8e,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb;IAC3B,CAAC,CAAC;IACF,OAAOuqC,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMpjC,MAAMA,CACViQ,QAAqB,EACrBvF,OAA0B,GAAG,CAAC,CAAC,EACK;IACpC,MAAM;MAAE24B,cAAc;MAAE,GAAGD;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAClE,MAAM44B,WAAW,GAAG;MAClB,IAAID,cAAc,KAAK,IAAI,IACzB1lC,MAAM,CAACC,WAAW,CAChB,CAAC,MAAMwlC,GAAG,CAAC/4B,MAAM,CAACwF,kBAAkB,CAAC,IAAI,CAACtU,KAAK,CAAC,EAAE0U,QAAQ,CAAC9W,GAAG,CAAC,CAAC;QAAEmB,GAAG;QAAEtD;MAAG,CAAC,KAAK,CAC9EsD,GAAG,EACHtD,EAAE,CACH,CACH,CAAC,CAAC;MACJ,GAAGiZ;IACL,CAAC;IAED,MAAMszB,cAAc,GAAG5lC,MAAM,CAAC0V,MAAM,CAACiwB,WAAW,CAAC,CAACE,IAAI,CAAExmC,CAAC,IAAK+G,SAAS,CAAC/G,CAAC,EAAE0C,QAAQ,CAACmB,SAAS,CAAC,CAAC;IAE/F,MAAM6K,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC4T,YAAY;MACrB3kB,OAAO,EAAEytC,cAAc,GAAG,CAAC,GAAG,CAAC;MAC/BnqB,MAAM,EAAE,IAAI,CAAC7d,KAAK;MAClB8e,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb,OAAO;MAChC4Z,QAAQ,EAAEtS,MAAM,CAACE,OAAO,CAACylC,WAAW,CAAC,CAACnqC,GAAG,CACvC,CAAC,CAACmB,GAAG,EAAEtD,EAAE,CAA8C,MAAM;QAAEsD,GAAG;QAAEtD;MAAG,CAAC,CAC1E;IACF,CAAC,CAAC;IACF,OAAO4pC,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMK,QAAQA,CACZptC,OAA+B,EAC/BqU,OAA4B,GAAG,CAAC,CAAC,EACG;IACpC,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMgB,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC6T,cAAc;MACvBtB,MAAM,EAAE,IAAI,CAAC7d,KAAK;MAClB8e,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb,OAAO;MAChC8jB,WAAW,EAAE9jB;IACf,CAAC,CAAC;IACF,OAAOuqC,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMM,QAAQA,CAACh5B,OAA0B,GAAG,CAAC,CAAC,EAK5C;IAAA,IAAAi5B,eAAA;IACA,MAAMt5B,MAAM,IAAAs5B,eAAA,GAAGj5B,OAAO,CAACL,MAAM,cAAAs5B,eAAA,cAAAA,eAAA,GAAI,IAAI,CAACj5B,OAAO,CAACL,MAAM;IACpD,MAAMu5B,SAAS,GAAG,MAAMv5B,MAAM,CAACwF,kBAAkB,CAAC,IAAI,CAACtU,KAAK,CAAC;IAC7D,OAAO;MACL,GAAGqoC,SAAS;MACZ5sC,EAAE,EAAE4sC,SAAS,CAAC5sC,EAAkB;MAChC+P,KAAK,EAAE68B,SAAS,CAAC78B;IACnB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM88B,eAAeA,CAACn5B,OAA0B,GAAG,CAAC,CAAC,EAKnD;IAAA,IAAAo5B,gBAAA;IACA,IAAI,CAAC75B,aAAa,CAAC,IAAI,CAAC1O,KAAK,CAAC,EAAE,MAAM,IAAIynC,mBAAmB,CAAC,IAAI,CAACznC,KAAK,EAAE,mBAAmB,CAAC;IAC9F,MAAM8O,MAAM,IAAAy5B,gBAAA,GAAGp5B,OAAO,CAACL,MAAM,cAAAy5B,gBAAA,cAAAA,gBAAA,GAAI,IAAI,CAACp5B,OAAO,CAACL,MAAM;IACpD,MAAMu5B,SAAS,GAAG,MAAMv5B,MAAM,CAACitB,qBAAqB,CAAC,IAAI,CAAC/7B,KAAK,CAAC;IAChE,OAAO;MACL,GAAGqoC,SAAS;MACZ5sC,EAAE,EAAE4sC,SAAS,CAAC5sC,EAAkB;MAChCm1B,aAAa,EAAEyX,SAAS,CAACzX;IAC3B,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM4X,SAASA,CACbjqB,OAAgB,EAChBpP,OAA0E,GAAG,CAAC,CAAC,EACnD;IAC5B,OAAO,IAAI,CAAC1K,MAAM,CAAC,CAAC,CAAC,EAAE;MAAE,GAAG0K,OAAO;MAAEoP,OAAO;MAAEupB,cAAc,EAAE;IAAK,CAAC,CAAC;EACvE;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMW,KAAKA,CAACt5B,OAAyB,GAAG,CAAC,CAAC,EAAsC;IAC9E,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMgB,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB8B,QAAQ,EAAEgF,yBAAA,CAAK0jB,KAAK,EAAV,IAAS,CAAC;MACpB,GAAGE,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC0T,WAAW;MACpBF,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb,OAAO;MAChCzC,IAAI,EAAE,IAAI,CAAC2H;IACb,CAAC,CAAC;IACF,OAAOqlC,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;EACjC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMa,QAAQA,CACZv5B,OAA4B,GAAG,CAAC,CAAC,EAC4C;IAC7E,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAM8P,QAAQ,GAAGxW,OAAO,CAAC,CAAC;IAC1B,MAAM0H,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAACuT,cAAc;MACvBC,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb,OAAO;MAChCikB,YAAY,EAAE5R,cAAc,CAAC,IAAI,CAACnN,KAAK,EAAEif,QAAQ;IACnD,CAAC,CAAC;IACF,MAAMpR,MAAM,GAAG,MAAMw3B,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;IAC7CxjB,yBAAA,CAAKsjB,KAAK,EAAV,IAAI,EAAS1oB,QAAJ,CAAC;IACV,OAAO;MAAE,GAAGpR,MAAM;MAAEoR;IAAS,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM0pB,GAAGA,CACPxtC,OAAoC,EACpCgU,OAA0C,GAAG,CAAC,CAAC,EACX;IACpC,IAAI,CAACT,aAAa,CAAC,IAAI,CAAC1O,KAAK,CAAC,EAAE,MAAM,IAAIynC,mBAAmB,CAAC,IAAI,CAACznC,KAAK,EAAE,YAAY,CAAC;IACvF,MAAM6nC,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMgB,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC0T,WAAW;MACpBF,SAAS,EAAE+oB,GAAG,CAAClsC,SAAS,CAACb,OAAO;MAChCmkB,QAAQ,EAAE,CAAC;MACX5mB,IAAI,EAAE,IAAI,CAAC2H,KAAK;MAChB7E;IACF,CAAC,CAAC;IACF,OAAOkqC,eAAe,CAACl1B,EAAE,EAAE03B,GAAG,CAAC;EACjC;AACF;;;;;;;;;ACvUA;AACA;AACA;AACA;AACA;AACA;;AAE+D;AACa;AAO5C;AACsB;AAoB1B;AAC0B;AAOU;AACiB;AAEZ;AACJ;;AAkCjE;AACA;AACA;;AA4BA;AACA;AACA;AAFA,IAAAkB,eAAA,oBAAAjlB,OAAA;AAAA,IAAAklB,YAAA,oBAAA15B,OAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM0W,QAAQ,CAAgC;EAC5C;AACF;AACA;AACA;EACE,MAAMijB,QAAQA,CAAA,EAAuC;IACnD,IAAI,IAAI,CAACC,QAAQ,CAACjY,QAAQ,IAAI,IAAI,EAAE,OAAO,IAAI,CAACiY,QAAQ,CAACjY,QAAQ;IACjE,IAAI,IAAI,CAACiY,QAAQ,CAACC,UAAU,IAAI,IAAI,EAClC,MAAM,IAAI/vC,oBAAoB,CAAC,gCAAgC,CAAC;IAClE,IAAI,IAAI,CAAC8vC,QAAQ,CAACE,UAAU,IAAI,IAAI,EAAE;MACpC,MAAM;QAAEnY;MAAS,CAAC,GAAG,MAAM,IAAI,CAACiY,QAAQ,CAACC,UAAU,CAACE,mBAAmB,CACrE,IAAI,CAACH,QAAQ,CAACE,UAAU,EACxB,IAAI,CAACF,QAAQ,CAACI,UAChB,CAAC;MACD,IAAI,CAACJ,QAAQ,CAACjY,QAAQ,GAAGA,QAAQ;IACnC;IACA,IAAI,IAAI,CAACiY,QAAQ,CAACK,cAAc,IAAI,IAAI,EAAE;MACxC,MAAM;QAAEtY;MAAS,CAAC,GAAG,MAAM,IAAI,CAACiY,QAAQ,CAACC,UAAU,CAACK,OAAO,CAAC,IAAI,CAACN,QAAQ,CAACK,cAAc,CAAC;MACzF,IAAI,CAACL,QAAQ,CAACjY,QAAQ,GAAGA,QAAQ;IACnC;IACA,IAAI,IAAI,CAACiY,QAAQ,CAACjY,QAAQ,IAAI,IAAI,EAAE;MAClC,MAAM,IAAI73B,oBAAoB,CAAC,qDAAqD,CAAC;IACvF;IACA,OAAO,IAAI,CAAC8vC,QAAQ,CAACjY,QAAQ;EAC/B;EAuDA,MAAMwY,sBAAsBA,CAC1BngC,IAAoB,EACpBogC,MAAU,EACVv6B,OAAqD,EAC2B;IAChF,MAAM;MAAEgoB;IAAS,CAAC,GAAG,MAAM,IAAI,CAAC+R,QAAQ,CAACp6B,MAAM,CAACwwB,wBAAwB,CAACh2B,IAAI,CAAC;IAC9E,IAAI6tB,QAAQ,IAAI,IAAI,EAAE;MACpB,MAAM,IAAIx+B,aAAa,CAAC,6CAA6C2Q,IAAI,EAAE,CAAC;IAC9E;IACA,MAAMqgC,aAAa,GAAGxS,QAA8B;IACpD,OAAO;MACL,GAAGpS,yBAAA,CAAAgkB,eAAA,MAAI,EAACa,cAAa,CAAC,CAAAvuB,IAAA,CAAnB,IAAI,EAAgBsuB,aAAa,EAAED,MAAM,EAAEngC,SAAS,EAAE4F,OAAO,CAAC;MACjEtB,MAAM,EAAE87B;IACV,CAAC;EACH;EAEA,MAAME,YAAYA,CAChBxxC,IAAQ,EACRmd,MAA+B,EAC/BrG,OAAgE,GAAG,CAAC,CAAC,EACpD;IACjB,MAAM;MAAEtB;IAAO,CAAC,GAAG,MAAM,IAAI,CAACi8B,KAAK,CAACzxC,IAAI,EAAEmd,MAAM,EAAE;MAAE,GAAGrG,OAAO;MAAE46B,UAAU,EAAE;IAAK,CAAC,CAAC;IACnF,IAAIl8B,MAAM,IAAI,IAAI,EAAE,MAAM,IAAIjT,iBAAiB,CAAC,CAAC;IACjD,MAAM;MAAEqsB;IAAQ,CAAC,GAAGpZ,MAAM;IAC1B;IACA,OAAO/M,IAAI,CAACsO,KAAK,CAAC6X,OAAO,GAAG,IAAI,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM+iB,OAAOA,CACXx0B,MAAmC,EACnCrG,OACgF,EAQhF;IAAA,IAAA86B,aAAA;IACA,MAAM;MAAEF,UAAU;MAAE,GAAGlC;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAACqB,QAAQ;MAAE,GAAG/5B;IAAQ,CAAC;IAC/D,IAAI,IAAI,CAAC+5B,QAAQ,CAACjY,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI,CAACgY,QAAQ,CAAC,CAAC;IACzD,IAAIc,UAAU,KAAK,IAAI,EAAE,OAAO,IAAI,CAACD,KAAK,CAAC,MAAM,EAAEt0B,MAAM,EAAE;MAAE,GAAGqyB,GAAG;MAAEkC;IAAW,CAAC,CAAC;IAClF,IAAI,IAAI,CAACb,QAAQ,CAACpuC,OAAO,IAAI,IAAI,EAAE,MAAM,IAAI4B,sBAAsB,CAAC,CAAC;IAErE,IAAImrC,GAAG,CAAClsC,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIvC,oBAAoB,CAAC,8BAA8B,CAAC;IACzF,MAAMimB,OAAO,GAAGwoB,GAAG,CAAClsC,SAAS,CAACb,OAAO;IACrC,IAAI,IAAI,CAACouC,QAAQ,CAACjY,QAAQ,IAAI,IAAI,EAChC,MAAM,IAAI73B,oBAAoB,CAAC,+BAA+B,CAAC;IACjE,MAAM+W,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC8N,gBAAgB;MACzBuC,QAAQ,GAAAsuB,aAAA,GAAEpC,GAAG,CAAClsB,QAAQ,cAAAsuB,aAAA,cAAAA,aAAA,GAAK,MAAM,IAAI,CAACJ,YAAY,CAAC,MAAM,EAAEr0B,MAAM,EAAEqyB,GAAG,CAAE;MACxEroB,QAAQ,EAAE,IAAI,CAAC0qB,SAAS,CAAC7iC,MAAM,CAAC,IAAI,CAAC8iC,KAAK,EAAE,MAAM,EAAE30B,MAAM,CAAC;MAC3D8J,IAAI,EAAE,IAAI,CAAC4pB,QAAQ,CAACjY,QAAQ;MAC5B5R;IACF,CAAC,CAAC;IACF,MAAM;MAAE/V,IAAI;MAAE,GAAGgD;IAAM,CAAC,GAAG,MAAMyY,yBAAA,CAAAgkB,eAAA,MAAI,EAACqB,eAAc,CAAC,CAAA/uB,IAAA,CAApB,IAAI,EAAiBlL,EAAE,EAAE,MAAM,EAAE;MAChE,GAAG03B,GAAG;MACNlsC,SAAS,EAAEksC,GAAG,CAAClsC;IACjB,CAAC,CAAC;IACF,IAAI,CAACutC,QAAQ,CAACpuC,OAAO,GAAGwuB,2BAA2B,CAAChd,KAAK,CAAC+c,KAAK,CAAC;IAChE,OAAO;MACL,GAAG/c,KAAK;MACR,IAAIA,KAAK,CAACuB,MAAM,EAAEgZ,GAAG,IAAI,IAAI,IAAI;QAC/BwjB,aAAa,EAAE,IAAI,CAACC,aAAa,CAACh+B,KAAK,CAACuB,MAAM,CAACgZ,GAAG,EAAEghB,GAAG;MACzD,CAAC,CAAC;MACFr8B,KAAK,EAAE6T,OAAO;MACdniB,WAAW,EAAEoM,IAAI;MACjBxO,OAAO,EAAE,IAAI,CAACouC,QAAQ,CAACpuC;IACzB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;;EAkBE;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMgvC,KAAKA,CACTxsC,EAAM,EACNkY,MAA+B,EAC/BrG,OAG2E,GAAG,CAAC,CAAC,EACG;IAAA,IAAAo7B,cAAA;IACnF,MAAM;MAAER,UAAU;MAAEt3B,GAAG;MAAE,GAAGo1B;IAAI,CAAC,GAAG;MAAE,GAAG,IAAI,CAACqB,QAAQ;MAAE,GAAG/5B;IAAQ,CAAC;IACpE,MAAMq7B,KAAK,GAAGzlB,yBAAA,CAAAgkB,eAAA,MAAI,EAAC0B,eAAc,CAAC,CAAApvB,IAAA,CAApB,IAAI,EAAiB/d,EAAE,CAAC;IACtC,MAAM;MAAExC,OAAO;MAAEzC;IAAK,CAAC,GAAG,IAAI,CAAC6wC,QAAQ;IACvC;IACA,MAAMh1B,UAAU,GAAG7b,IAAI,IAAI,IAAI,GAAG6U,aAAa,CAAC7U,IAAI,CAAC,GAAGyC,OAAO;IAC/D,MAAM;MAAEgU;IAAO,CAAC,GAAG+4B,GAAG;IAEtB,IAAIvqC,EAAE,IAAI,IAAI,EAAE,MAAM,IAAIN,wBAAwB,CAAC,CAAC;IACpD,IAAIM,EAAE,KAAK,MAAM,IAAIysC,UAAU,KAAK,IAAI,EACtC,MAAM,IAAIltC,4BAA4B,CAAC,sCAAsC,CAAC;IAChF,IAAIS,EAAE,KAAK,MAAM,IAAIuqC,GAAG,CAACxqC,MAAM,IAAI,IAAI,IAAI1F,MAAM,CAACkwC,GAAG,CAACxqC,MAAM,CAAC,GAAG,CAAC,IAAI,CAACmtC,KAAK,CAAC5b,OAAO,EAAE;MACnF,MAAM,IAAIxxB,uBAAuB,CAACyqC,GAAG,CAACxqC,MAAM,EAAEC,EAAE,CAAC;IACnD;IAEA,IAAImiB,QAAQ;IACZ,IAAI;MACF,IAAIooB,GAAG,CAAClsC,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIhB,aAAa,CAAC,sBAAsB,CAAC;MAC1E8kB,QAAQ,GAAGooB,GAAG,CAAClsC,SAAS,CAACb,OAAO;IAClC,CAAC,CAAC,OAAO8H,KAAK,EAAE;MACd,MAAM8nC,kBAAkB,GACtBX,UAAU,KAAK,IAAI,KACjBnnC,KAAK,YAAY3I,gBAAS,IAC1B2I,KAAK,CAACxK,OAAO,KACX,sGAAsG,IACxGwK,KAAK,YAAYxD,sBAAsB,IACtCwD,KAAK,YAAYjI,aAAa,IAAIiI,KAAK,CAACxK,OAAO,KAAK,sBAAuB,CAAC;MACjF,IAAI,CAACsyC,kBAAkB,EAAE,MAAM9nC,KAAK;MACpC6c,QAAQ,GAAGhV,eAAe,CAACC,GAAG;IAChC;IACA,MAAM8U,QAAQ,GAAG,IAAI,CAAC0qB,SAAS,CAAC7iC,MAAM,CAAC,IAAI,CAAC8iC,KAAK,EAAE7sC,EAAE,EAAEkY,MAAM,CAAC;IAE9D,IAAIu0B,UAAU,KAAK,IAAI,EAAE;MACvB,IAAIlC,GAAG,CAACp8B,KAAK,IAAI,IAAI,EAAE;QACrB,MAAMk/B,SAAS,GAAGl4B,GAAG,IAAI,IAAI,IAAI;UAAE,CAAC,OAAOA,GAAG,KAAK,QAAQ,GAAG,QAAQ,GAAG,MAAM,GAAGA;QAAI,CAAC;QACvF,MAAM2xB,OAAO,GAAG,MAAMxzB,UAAU,CAAC6O,QAAQ,EAAE;UAAE,GAAGkrB,SAAS;UAAE77B;QAAO,CAAC,CAAC,CAACuC,KAAK,CAAEzO,KAAK,IAAK;UACpF,IAAI,CAACS,sBAAsB,CAACT,KAAK,CAAC,EAAE,MAAMA,KAAK;UAC/C,OAAO;YAAEsT,IAAI,EAAE,OAAO;YAAEzK,KAAK,EAAE;UAAE,CAAC;QACpC,CAAC,CAAC;QACFo8B,GAAG,CAACp8B,KAAK,GAAG24B,OAAO,CAACluB,IAAI,KAAK,aAAa,GAAG,CAAC,GAAGkuB,OAAO,CAAC34B,KAAK,GAAG,CAAC;MACpE;MAEA,MAAMm/B,KAAK,GAAG;QAAE,GAAG/C,GAAG;QAAE/4B,MAAM;QAAE0Q;MAAS,CAAC;MAC1C,IAAIrP,EAAE;MACN,IAAI7S,EAAE,KAAK,MAAM,EAAE;QACjB,IAAI,IAAI,CAAC4rC,QAAQ,CAACjY,QAAQ,IAAI,IAAI,EAChC,MAAM,IAAI73B,oBAAoB,CAAC,wCAAwC,CAAC;QAC1E+W,EAAE,GAAG,MAAM+Y,YAAY,CAAC;UACtB,GAAG0hB,KAAK;UACR/rC,GAAG,EAAEyM,GAAG,CAAC8N,gBAAgB;UACzBkG,IAAI,EAAE,IAAI,CAAC4pB,QAAQ,CAACjY,QAAQ;UAC5B5R,OAAO,EAAEI;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAIvL,UAAU,IAAI,IAAI,EACpB,MAAM,IAAIpX,2BAA2B,CAAC,wCAAwC,CAAC;QACjFqT,EAAE,GAAG,MAAM+Y,YAAY,CAAC;UACtB,GAAG0hB,KAAK;UACR/rC,GAAG,EAAEyM,GAAG,CAAC6K,cAAc;UACvBsJ,QAAQ;UACRvL;QACF,CAAC,CAAC;MACJ;MAEA,MAAM;QAAEue,OAAO;QAAE,GAAGoY;MAAY,CAAC,GAAG,MAAMn3B,QAAQ,CAACvD,EAAE,EAAEsP,QAAQ,EAAE;QAAE,GAAGooB,GAAG;QAAEp1B;MAAI,CAAC,CAAC;MACjF,IAAIggB,OAAO,IAAI,IAAI,EAAE;QACnB,MAAM,IAAI93B,aAAa,CAAC,4CAA4CwV,EAAE,EAAE,CAAC;MAC3E;MACA,MAAMw5B,aAAa,GAAGlX,OAA6B;MACnD,OAAO;QACL,GAAGoY,WAAW;QACd,GAAG9lB,yBAAA,CAAAgkB,eAAA,MAAI,EAACa,cAAa,CAAC,CAAAvuB,IAAA,CAAnB,IAAI,EAAgBsuB,aAAa,EAAErsC,EAAE,EAAE6S,EAAE,EAAE03B,GAAG,CAAC;QAClD13B,EAAE,EAAEiK,QAAQ,CAACjK,EAAE,CAAC;QAChBtC,MAAM,EAAE87B,aAAa;QACrBtgB,KAAK,EAAElZ,EAAE;QACT7G,IAAI,EAAE8f,WAAW,CAACjZ,EAAE,CAAC;QACrBu1B,MAAM,EAAEn8B;MACV,CAAC;IACH;IAEA,IAAIkJ,GAAG,IAAI,IAAI,EACb,MAAM,IAAIrZ,oBAAoB,CAAC,qDAAqD,CAAC;IACvF,IAAI8a,UAAU,IAAI,IAAI,EACpB,MAAM,IAAIpX,2BAA2B,CAAC,qCAAqC,CAAC;IAC9E,MAAMqT,EAAE,GAAG,MAAM+Y,YAAY,CAAC;MAC5B/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAAC6K,cAAc;MACvBwF,QAAQ,GAAA4uB,cAAA,GAAE1C,GAAG,CAAClsB,QAAQ,cAAA4uB,cAAA,cAAAA,cAAA,GAAK,MAAM,IAAI,CAACV,YAAY,CAACvsC,EAAE,EAAEkY,MAAM,EAAEqyB,GAAG,CAAE;MACpEpoB,QAAQ;MACRvL,UAAU;MACVsL;IACF,CAAC,CAAC;IACF,IAAIqoB,GAAG,CAAClsC,SAAS,IAAI,IAAI,EACvB,MAAM,IAAIvC,oBAAoB,CAAC,8CAA8C,CAAC;IAChF,OAAO2rB,yBAAA,CAAAgkB,eAAA,MAAI,EAACqB,eAAc,CAAC,CAAA/uB,IAAA,CAApB,IAAI,EAAiBlL,EAAE,EAAE7S,EAAE,EAAE;MAAE,GAAGuqC,GAAG;MAAElsC,SAAS,EAAEksC,GAAG,CAAClsC;IAAU,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAiCE;AACF;AACA;AACA;AACA;AACA;EACE2uC,aAAaA,CACXQ,MAAe,EACf;IAAEC,WAAW;IAAE,GAAGlD;EAA+D,CAAC,GAAG,CAAC,CAAC,EACvE;IAChB,OAAOiD,MAAM,CACVltC,GAAG,CAAEotC,KAAK,IAAK;MACd,IAAIC,YAAY;MAChB,IAAI;QACFA,YAAY,GAAGlmB,yBAAA,CAAAgkB,eAAA,MAAI,EAACmC,uBAAsB,CAAC,CAAA7vB,IAAA,CAA5B,IAAI,EAAyB2vB,KAAK,CAAClwC,OAAO,EAAEkwC,KAAK,CAACpY,MAAM,CAAC,CAAC,CAAC,EAAEiV,GAAG,CAAC;MAClF,CAAC,CAAC,OAAOjlC,KAAK,EAAE;QACd,IAAI,CAACmoC,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,KAAK,KAAKnoC,KAAK,YAAYrF,2BAA2B,EAAE,OAAO,IAAI;QACvF,MAAMqF,KAAK;MACb;MACA,MAAMuoC,OAAO,GAAG,IAAI,CAACjB,SAAS,CAACkB,WAAW,CAACH,YAAY,EAAED,KAAK,CAACtkC,IAAI,EAAEskC,KAAK,CAACpY,MAAM,CAAC;MAClF,MAAM,CAACv6B,IAAI,EAAEuL,IAAI,CAAC,GAAGxB,MAAM,CAACE,OAAO,CAAC6oC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/C,OAAO;QACL9yC,IAAI;QACJuL,IAAI;QACJokB,QAAQ,EAAE;UACR3vB,IAAI,EAAE4yC,YAAY;UAClBnwC,OAAO,EAAEkwC,KAAK,CAAClwC;QACjB;MACF,CAAC;IACH,CAAC,CAAC,CACDid,MAAM,CAAEvW,CAAsB,IAAwBA,CAAC,IAAI,IAAI,CAAC;EACrE;EAEA,aAAa6pC,UAAUA,CAAgC;IACrDlC,UAAU;IACVr6B,MAAM;IACNmiB,QAAQ;IACRmR,GAAG;IACHtnC,OAAO;IACPyuC,cAAc;IACdH,UAAU;IACVE,UAAU;IACVgC,gBAAgB;IAChB,GAAGC;EAKL,CAAC,EAAmC;IAClC,IAAInJ,GAAG,IAAI,IAAI,IAAI+G,UAAU,IAAI,IAAI,EAAE;MACrC,IAAIrlC,GAAG;MACP,IAAIylC,cAAc,IAAI,IAAI,EAAEzlC,GAAG,GAAG,MAAMqlC,UAAU,CAACK,OAAO,CAACD,cAAc,CAAC;MAC1E,IAAIH,UAAU,IAAI,IAAI,EAAEtlC,GAAG,GAAG,MAAMqlC,UAAU,CAACE,mBAAmB,CAACD,UAAU,EAAEE,UAAU,CAAC;MAC1F,IAAIxlC,GAAG,IAAI,IAAI,EAAE;QACfs+B,GAAG,GAAGt+B,GAAG,CAACs+B,GAAG;QACbnR,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAARA,QAAQ,GAAKntB,GAAG,CAACmtB,QAAQ;MAC3B;IACF;IACA,IAAImR,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIrlC,uBAAuB,CAAC,CAAC;IAEpD,IAAI1E,IAAI;IACR,IAAIyC,OAAO,IAAI,IAAI,EAAE;MACnBA,OAAO,GAAI,MAAMyZ,WAAW,CAACzZ,OAAO,EAAE,iBAAiB,EAAE;QACvD0Z,aAAa,EAAE,IAAI;QACnB1F;MACF,CAAC,CAA6B;MAC9B,IAAItB,MAAM,CAAC1S,OAAO,CAAC,EAAEzC,IAAI,GAAGyC,OAAO;IACrC;IAEA,IAAIA,OAAO,IAAI,IAAI,IAAIsuC,UAAU,IAAI,IAAI,IAAIG,cAAc,IAAI,IAAI,IAAItY,QAAQ,IAAI,IAAI,EAAE;MACvF,MAAM,IAAIn0B,2BAA2B,CAAC,8CAA8C,CAAC;IACvF;IAEA,IAAIhC,OAAO,IAAI,IAAI,EAAE;MACnB,MAAMktB,QAAQ,GAAG,MAAMlZ,MAAM,CAACsF,WAAW,CAACtZ,OAAO,CAAC;MAClD,IAAIktB,QAAQ,CAAClB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAInqB,qBAAqB,CAAC7B,OAAO,CAAC;IACvE;IAEA,IAAIwwC,gBAAgB,KAAK,IAAI,EAAE;MAC7B,IAAIxwC,OAAO,IAAI,IAAI,EACjB,MAAM,IAAIgC,2BAA2B,CAAC,kDAAkD,CAAC;MAC3F,MAAM0uC,cAAc,GAAG,CAAC,MAAM18B,MAAM,CAACqF,eAAe,CAACrZ,OAAO,CAAC,EAAEm2B,QAAQ;MACvE,IAAIwa,OAAO,GAAG,KAAK;MACnB,IAAIxa,QAAQ,IAAI,IAAI,EAAEwa,OAAO,GAAGxa,QAAQ,KAAKua,cAAc,CAAC,KACvD,IAAIpC,UAAU,IAAI,IAAI,EAAE;QAC3B,IAAID,UAAU,IAAI,IAAI,EACpB,MAAM,IAAI/vC,oBAAoB,CAAC,0CAA0C,CAAC;QAC5EqyC,OAAO,GAAG,MAAMtC,UAAU,CAACuC,oBAAoB,CAACF,cAAc,EAAEpC,UAAU,EAAEE,UAAU,CAAC;MACzF,CAAC,MAAM,IAAIC,cAAc,IAAI,IAAI,EAAE;QACjC,IAAIJ,UAAU,IAAI,IAAI,EACpB,MAAM,IAAI/vC,oBAAoB,CAAC,0CAA0C,CAAC;QAC5EqyC,OAAO,GAAG,MAAMtC,UAAU,CAACwC,QAAQ,CAACH,cAAc,EAAEjC,cAAc,CAAC;MACrE;MACA,IAAI,CAACkC,OAAO,EAAE;QACZ,MAAM,IAAIlvC,qBAAqB,CAC7B,CAAC6sC,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAIG,cAAc,KAAK,IAAI,GAAG,aAAa,GAAG,UAC3D,CAAC;MACH;IACF;IAEA,OAAO,IAAIqC,mBAAmB,CAAI;MAChCzC,UAAU;MACVr6B,MAAM;MACNs6B,UAAU;MACVG,cAAc;MACdtY,QAAQ;MACRmR,GAAG;MACHtnC,OAAO;MACPzC,IAAI;MACJixC,UAAU;MACV,GAAGiC;IACL,CAAC,CAAC;EACJ;EAYA;AACF;AACA;EACEpzC,WAAWA,CAAC;IACViqC,GAAG;IACH,GAAGmJ;EAcmC,CAAC,EAAE;IAAApnB,mCAAA,OAAA4kB,eAAA;IA3B3C3kB,kCAAA,OAAS4kB,YAAY;IA4BnB,IAAI,CAAC6C,IAAI,GAAGzJ,GAAG;IACf,MAAM0J,OAAO,GAAG1J,GAAG,CAACA,GAAG,CAACjhC,MAAM,GAAG,CAAC,CAAC;IACnC,IAAI2qC,OAAO,CAAC9jB,QAAQ,IAAI,IAAI,EAAE;MAC5B,MAAM,IAAI5uB,oBAAoB,CAC5B,uDAAuDgJ,MAAM,CAACuT,IAAI,CAACm2B,OAAO,CAAC,eAC7E,CAAC;IACH;IACAznB,6BAAA,CAAK2kB,YAAY,EAAjB,IAAI,EAAgB8C,OAAO,CAAC9jB,QAAZ,CAAC;IACjB,IAAI,CAACmiB,KAAK,GAAGlmB,6BAAA,CAAK+kB,YAAY,EAAjB,IAAgB,CAAC,CAAC3wC,IAAI;IACnC,IAAI,CAAC6xC,SAAS,GAAG,IAAIrB,sBAAQ,CAACzG,GAAG,CAAC;IAClC,IAAI,CAAC8G,QAAQ,GAAGqC,YAAY;;IAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACInpC,MAAM,CAACqR,MAAM,CACX,IAAI,EACJrR,MAAM,CAACC,WAAW,CAChB4hB,6BAAA,CAAK+kB,YAAY,EAAjB,IAAgB,CAAC,CAAC+C,SAAS,CAACnuC,GAAG,CAAC,CAAC;MAAEvF,IAAI;MAAE2zC,SAAS,EAAEC,OAAO;MAAE3Z;IAAsB,CAAC,KAAK;MACvF,MAAMyX,UAAU,GAAG1xC,IAAI,KAAK,MAAM,IAAI,CAACi6B,QAAQ;MAC/C,OAAO,CACLj6B,IAAI,EACJ,OAAO,GAAGuL,IAAS,KAAK;QACtB,MAAMuL,OAAO,GAAGvL,IAAI,CAACzC,MAAM,KAAK8qC,OAAO,CAAC9qC,MAAM,GAAG,CAAC,GAAGyC,IAAI,CAACsoC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACpE,IAAI,OAAO/8B,OAAO,KAAK,QAAQ,EAC7B,MAAM,IAAIlV,gBAAS,CAAC,gCAAgCkV,OAAO,EAAE,CAAC;QAChE,IAAI9W,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC2xC,OAAO,CAACpmC,IAAI,EAAE;UAAEmmC,UAAU;UAAE,GAAG56B;QAAQ,CAAC,CAAC;QAC1E,OAAO,IAAI,CAAC26B,KAAK,CAACzxC,IAAI,EAAEuL,IAAI,EAAE;UAAEmmC,UAAU;UAAE,GAAG56B;QAAQ,CAAC,CAAC;MAC3D,CAAC,CACF;IACH,CAAC,CACH,CACF,CAAC;EACH;AACF;AAACg9B,SAAA,GA1gBKnmB,QAAQ;AAAA,SAAA4jB,eA2BV;EAAEziB,UAAU;EAAED,WAAW;EAAEL;AAAwB,CAAC,EACpD6iB,MAAU,EACVxsC,WAA4C,EAC5CiS,OAAoD,EACd;EACtC,IAAI/W,OAAe;EACnB,QAAQ+uB,UAAU;IAChB,KAAK,IAAI;MAAE;QACT,MAAMqjB,KAAK,GAAGzlB,yBAAA,CAAAgkB,eAAA,MAAI,EAAC0B,eAAc,CAAC,CAAApvB,IAAA,CAApB,IAAI,EAAiBquB,MAAM,CAAC;QAC1C,OAAO;UACL0C,aAAa,EAAE,IAAI,CAAClC,SAAS,CAAC5iC,MAAM,CAAC,IAAI,CAAC6iC,KAAK,EAAEK,KAAK,CAACnyC,IAAI,EAAE6uB,WAAW,CAAC;UACzEmjB,aAAa,EAAE,IAAI,CAACC,aAAa,CAACzjB,GAAG,EAAE1X,OAAO;QAChD,CAAC;MACH;IACA,KAAK,QAAQ;MACX/W,OAAO,GAAG,IAAI,CAAC8xC,SAAS,CAACmC,gBAAgB,CAACnlB,WAAW,CAAC;MACtD;IACF,KAAK,OAAO;MACV9uB,OAAO,GAAGkP,MAAM,CAAC4f,WAAW,CAAC,CAAC7rB,QAAQ,CAAC,CAAC;MACxC,IAAI,iCAAiC,CAACkR,IAAI,CAACnU,OAAO,CAAC,EAAE;QACnD,MAAM,IAAImE,qBAAqB,CAAC,KAAK,EAAE,8BAA8BnE,OAAO,IAAI,CAAC;MACnF;MACA,IAAI,wDAAwD,CAACmU,IAAI,CAACnU,OAAO,CAAC,EAAE;QAC1E,MAAM,IAAImE,qBAAqB,CAC7B,KAAK,EACL,8BAA8BnE,OAAO,qBAAqBsxC,MAAM,GAClE,CAAC;MACH;MACA;IACF;MACE,MAAM,IAAI/uC,aAAa,CAAC,wBAAwBwsB,UAAU,EAAE,CAAC;EACjE;EACA,MAAM,IAAIlqB,mBAAmB,CAAC7E,OAAO,EAAE8E,WAAW,CAAC;AACrD;AAAC,eAAAktC,gBAGCj6B,EAAuB,EACvBu5B,MAAU,EACVv6B,OAAsF,EACH;EACnF,MAAMu2B,MAAM,GAAG,MAAML,eAAe,CAACl1B,EAAE,EAAE;IAAE,GAAG,IAAI,CAAC+4B,QAAQ;IAAE,GAAG/5B;EAAQ,CAAC,CAAC;EAC1E,OAAO;IACL7F,IAAI,EAAEo8B,MAAM,CAACp8B,IAAI;IACjB6G,EAAE,EAAEiK,QAAQ,CAA4CsrB,MAAM,CAACrc,KAAK,CAAC;IACrEqc,MAAM;IACNrc,KAAK,EAAEqc,MAAM,CAACrc,KAAK;IACnB;IACA,IAAIqc,MAAM,CAACr1B,WAAW,IAAI,IAAI,KAC3B,MAAM,IAAI,CAACo5B,sBAAsB,CAAC/D,MAAM,CAACp8B,IAAI,EAAEogC,MAAM,EAAEv6B,OAAO,CAAC,CAAC;EACrE,CAAC;AACH;AAAC,SAAAs7B,gBAuFepyC,IAAY,EAAe;EACzC,MAAMiF,EAAE,GAAG2mB,6BAAA,CAAK+kB,YAAY,EAAjB,IAAgB,CAAC,CAAC+C,SAAS,CAAC7qC,IAAI,CAAE0iC,CAAmB,IAAKA,CAAC,CAACvrC,IAAI,KAAKA,IAAI,CAAC;EACrF,IAAIiF,EAAE,IAAI,IAAI,EAAE;IACd,OAAOA,EAAE;EACX;EACA,IAAIjF,IAAI,KAAK,MAAM,EAAE;IACnB,OAAO;MACL2zC,SAAS,EAAE,EAAE;MACb3zC,IAAI,EAAE,MAAM;MACZu2B,OAAO,EAAE,KAAK;MACd0d,OAAO,EAAE,MAAM;MACfha,QAAQ,EAAE;IACZ,CAAC;EACH;EACA,MAAM,IAAIn1B,2BAA2B,CAAC9E,IAAI,CAAC;AAC7C;AAAC,SAAA6yC,wBA2HCqB,SAAkC,EAClClS,QAAgB,EAChB;EAAEmS;AAAqD,CAAC,EAChD;EACR,MAAMC,aAAa,GAAG;IAAE,GAAG,IAAI,CAACvD,QAAQ,CAACsD,qBAAqB;IAAE,GAAGA;EAAsB,CAAC;EAC1F,IAAIC,aAAa,CAACF,SAAS,CAAC,IAAI,IAAI,EAAE,OAAOE,aAAa,CAACF,SAAS,CAAC;;EAErE;EACA,MAAM5nB,OAAO,GAAGA,CAAC8E,CAAM,EAAEC,CAAM,KAAc4C,IAAI,CAACC,SAAS,CAAC9C,CAAC,CAAC,KAAK6C,IAAI,CAACC,SAAS,CAAC7C,CAAC,CAAC;EAEpF,MAAMtB,SAAS,GAAG,IAAI,CAACyjB,IAAI,CACxBjuC,GAAG,CAAC,CAAC;IAAEoqB;EAAS,CAAC,KAAKA,QAAQ,CAAC,CAC/BjQ,MAAM,CAAEiQ,QAAQ,IAAKA,QAAQ,EAAEgjB,KAAK,CAAkB;EACzD,MAAMrtC,aAAa,GAAGyqB,SAAS,CAC5BxqB,GAAG,CAAEoqB,QAAQ,IAAK,CAACA,QAAQ,CAAC3vB,IAAI,EAAE2vB,QAAQ,CAACgjB,KAAK,CAAC0B,OAAO,CAAC,CAAC,CAC1D9uC,GAAG,CAAC,CAAC,CAACvF,IAAI,EAAEyyC,MAAM,CAAC,KAClBA,MAAM,CAACltC,GAAG,CAAEotC,KAAS,IAAK,CAAC3yC,IAAI,EAAE+J,MAAM,CAACuT,IAAI,CAACq1B,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE5oC,MAAM,CAAC0V,MAAM,CAACkzB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAClF,CAAC,CACA3G,IAAI,CAAC,CAAC,CACNtsB,MAAM,CAAC,CAAC,GAAG40B,SAAS,CAAC,KAAK9jC,MAAM,CAAC,KAAKigC,IAAQ,CAAC6D,SAAS,CAAC,CAACtxC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,KAAKg/B,QAAQ,CAAC,CAC1FtiB,MAAM,CAAC,CAAC,IAAKpR,IAAI,CAAC,EAAE6M,GAAG,EAAEo5B,GAAG,KAAK,CAACA,GAAG,CAAC7lC,KAAK,CAAC,CAAC,EAAEyM,GAAG,CAAC,CAACy0B,IAAI,CAAEjlC,EAAE,IAAK2hB,OAAO,CAAC3hB,EAAE,CAAC,CAAC,CAAC,EAAE2D,IAAI,CAAC,CAAC,CAAC;EAC1F,QAAQhJ,aAAa,CAACwD,MAAM;IAC1B,KAAK,CAAC;MACJ,MAAM,IAAI5D,2BAA2B,CAAC88B,QAAQ,CAACh/B,QAAQ,CAAC,CAAC,EAAEkxC,SAAS,CAAC;IACvE,KAAK,CAAC;MACJ,OAAO5uC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B;MACE,MAAM,IAAID,6BAA6B,CAAC6uC,SAAS,EAAE5uC,aAAa,CAAC;EACrE;AACF;AAwMF;AACA;AACA;AACA;AACA,MAAMiuC,mBAA6C,GAAG5lB,QAAe;AAErE,wDAAe4lB,mBAAmB;;AChrBoB;;AAGtD;AACA;AACA;;AAGA;AACA;AACA;;AAQA,SAASiB,WAAWA,CAACC,UAA2B,EAAe;EAC7D,OAAO;IACL,GAAGA,UAAU;IACbrxC,EAAE,EAAEqxC,UAAU,CAACrxC,EAA2B;IAC1CsxC,YAAY,EAAEzlC,MAAM,CAACwlC,UAAU,CAAC/sB,KAA4B,CAAC,CAAC1kB,QAAQ,CAAC,CAAC;IACxE2xC,eAAe,EAAE1lC,MAAM,CAACwlC,UAAU,CAACzsB,QAAkC,CAAC,CAAChlB,QAAQ,CAAC;EAClF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACe,MAAM4xC,UAAU,CAAC;EAC9B;AACF;AACA;EACE90C,WAAWA,CACO2C,OAA8B,EACvCqU,OAAyB,EAChC;IAAA,KAFgBrU,OAA8B,GAA9BA,OAA8B;IAAA,KACvCqU,OAAyB,GAAzBA,OAAyB;EAC/B;;EAEH;AACF;AACA;AACA;EACE,MAAMg5B,QAAQA,CAACh5B,OAA0B,GAAG,CAAC,CAAC,EAAyC;IACrF,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,OAAO04B,GAAG,CAAC/4B,MAAM,CAAC8N,iBAAiB,CAAC,IAAI,CAAC9hB,OAAO,CAAC;EACnD;;EAEA;AACF;AACA;AACA;EACE,MAAMoyC,UAAUA,CAAC/9B,OAA0B,GAAG,CAAC,CAAC,EAA0B;IACxE,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,OAAO,CAAC,MAAM04B,GAAG,CAAC/4B,MAAM,CAACwvB,wBAAwB,CAAC,IAAI,CAACxjC,OAAO,CAAC,EAAEi6B,aAAa,CAACn3B,GAAG,CAACivC,WAAW,CAAC;EACjG;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMM,QAAQA,CACZ/sB,OAA8B,EAC9BjR,OAA0B,GAAG,CAAC,CAAC,EACT;IACtB,MAAM;MAAEL;IAAO,CAAC,GAAG;MAAE,GAAG,IAAI,CAACK,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAClD,MAAM29B,UAAU,GAAG,MAAMh+B,MAAM,CAAC0vB,gCAAgC,CAAC,IAAI,CAAC1jC,OAAO,EAAEslB,OAAO,CAAC;IACvF,OAAOysB,WAAW,CAACC,UAAU,CAAC;EAChC;AACF;;;;;;;ACxEsE;AACrB;AACkB;AACK;AACzB;AACkC;AAGvB;;AAE1D;AACA;AACA;;AAKA;AACA;AACA;;AAKA;AACA;AACA;AAFA,IAAAM,qBAAA,oBAAA99B,OAAA;AAOA;AACA;AACA;AACe,MAAMkX,MAAM,SAASymB,UAAU,CAAC;EAC7C;AACF;AACA;AACA;EACE90C,WAAWA,CACOisC,OAAoB,EACpBj1B,OAE2C,EAC3D;IACA,KAAK,CAAC9H,MAAM,CAACC,MAAM,CAAC88B,OAAO,CAACtpC,OAAO,CAAC,EAAEqJ,QAAQ,CAAC6B,aAAa,CAAC,EAAEmJ,OAAO,CAAC;IAyGzEiV,gCAAA,OAAAgpB,qBAAqB;IAAiB,KA9GpBhJ,OAAoB,GAApBA,OAAoB;IAAA,KACpBj1B,OAE2C,GAF3CA,OAE2C;EAG7D;;EAEA;EACA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMk+B,QAAQA,CACZ3tB,WAAmB,EACnBC,cAAsB,EACtBxQ,OAA8B,GAAG,CAAC,CAAC,EACC;IACpC,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMm+B,gBAAgB,GAAG,MAAMpkB,YAAY,CAAC;MAC1C/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAACsO,gBAAgB;MACzBkF,SAAS,EAAE,IAAI,CAACslB,OAAO,CAACtpC,OAAO;MAC/B4kB,WAAW;MACXC;IACF,CAAC,CAAC;IACF,OAAO0lB,eAAe,CAACiI,gBAAgB,EAAE;MAAE,GAAGzF,GAAG;MAAElsC,SAAS,EAAE,IAAI,CAACyoC;IAAQ,CAAC,CAAC;EAC/E;;EAEA;AACF;AACA;AACA;EACE,MAAMoE,SAASA,CAACr5B,OAA+B,GAAG,CAAC,CAAC,EAAsC;IACxF,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMo+B,cAAc,GAAG,MAAMrkB,YAAY,CAAC;MACxC/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAACuO,cAAc;MACvB/N,QAAQ,EAAE,IAAI,CAAChR;IACjB,CAAC,CAAC;IACF,OAAOuqC,eAAe,CAACkI,cAAc,EAAE;MAAE,GAAG1F,GAAG;MAAElsC,SAAS,EAAE,IAAI,CAACyoC;IAAQ,CAAC,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEoJ,WAAWA,CACTC,OAAqC,EACrCt+B,OAEC,GAAG,CAAC,CAAC,EACM;IACZ,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMu+B,aAAa,GAAG,IAAI16B,GAAG,CAAC,CAAC;IAE/B,IAAI26B,UAAU,GAAG,KAAK;IACtB,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAA2B;MACjD,IAAID,UAAU,EAAE;MAChBA,UAAU,GAAG,IAAI;MACjB,MAAME,QAAQ,GAAG,CAAC,MAAM,IAAI,CAACX,UAAU,CAACrF,GAAG,CAAC,EACzC9vB,MAAM,CAAC,CAAC;QAAEtc;MAAG,CAAC,KAAK,CAACiyC,aAAa,CAACvgB,GAAG,CAAC1xB,EAAE,CAAC,CAAC,CAC1Csc,MAAM,CAAEgI,KAAK,IAAK5Q,OAAO,CAAC2+B,gBAAgB,KAAK,IAAI,IAAI/tB,KAAK,CAACitB,eAAe,KAAK,EAAE,CAAC;MACvFa,QAAQ,CAAC16B,OAAO,CAAE4M,KAAK,IAAK2tB,aAAa,CAACK,GAAG,CAAChuB,KAAK,CAACtkB,EAAE,CAAC,CAAC;MACxDkyC,UAAU,GAAG,KAAK;MAClB,MAAM5rC,OAAO,CAAConB,GAAG,CAAC0kB,QAAQ,CAACjwC,GAAG,CAAEmiB,KAAK,IAAK0tB,OAAO,CAAC1tB,KAAK,CAAC,CAAC,CAAC;IAC5D,CAAC;IAED6tB,eAAe,CAAC,CAAC;IACjB,MAAMI,SAAS,GAAG,CAAC,MAAAC,aAAA,IAAY;MAC7B,MAAMh+B,QAAQ,IAAAg+B,aAAA,GAAGpG,GAAG,CAAC53B,QAAQ,cAAAg+B,aAAA,cAAAA,aAAA,GAAK,MAAM/+B,gBAAgB,CAAC,aAAa,EAAE24B,GAAG,CAAE;MAC7E,OAAOqG,WAAW,CAAC,YAAYN,eAAe,CAAC,CAAC,EAAE39B,QAAQ,CAAC;IAC7D,CAAC,EAAE,CAAC;IAEJ,OAAO,YAAY;MACjB,MAAMxU,EAAE,GAAG,MAAMuyC,SAAS;MAC1BG,aAAa,CAAC1yC,EAAE,CAAC;IACnB,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM2yC,cAAcA,CAClBhuB,OAA8B,EAC9BC,QAAgB,EAChBlR,OAAoC,GAAG,CAAC,CAAC,EACL;IACpC,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMk/B,eAAe,GAAG,MAAMnlB,YAAY,CAAC;MACzC/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAACyO,eAAe;MACxBjO,QAAQ,EAAE,IAAI,CAAChR,OAAO;MACtBslB,OAAO;MACPC;IACF,CAAC,CAAC;IACF,OAAOglB,eAAe,CAACgJ,eAAe,EAAE;MAAE,GAAGxG,GAAG;MAAElsC,SAAS,EAAE,IAAI,CAACyoC;IAAQ,CAAC,CAAC;EAC9E;EAIA;AACF;AACA;AACA;AACA;AACA;AACA;EACEkK,aAAaA,CACXviB,WAAyD,EACzD5c,OAA2E,GAAG,CAAC,CAAC,EACpE;IACZ,IAAI8U,2BAAA,CAAKmpB,qBAAqB,EAA1B,IAAyB,CAAC,IAAI,IAAI,EAAE;MACtC,MAAM,IAAI1yC,UAAU,CAClB,gFACF,CAAC;IACH;IACA,MAAMmtC,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAE3C,IAAIo/B,YAAY,GAAGxsC,OAAO,CAACC,OAAO,CAAC,CAAC;IACpC,MAAMwsC,OAAO,GAAG,MAAOC,CAAc,IAAoB;MACvD,MAAMpuB,QAAQ,GAAG,MAAM0L,WAAW,CAAC0iB,CAAC,CAAC;MACrC,MAAMC,cAAc,GAAGH,YAAY,CAACviB,IAAI,CAAC,YACvC,IAAI,CAACoiB,cAAc,CAACK,CAAC,CAAChzC,EAAE,EAAE4kB,QAAQ,EAAEwnB,GAAG,CACzC,CAAC;MACD0G,YAAY,GAAGG,cAAc,CAAC1iB,IAAI,CAChC,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CAAC;MACD,MAAM0iB,cAAc;IACtB,CAAC;IAEDrqB,2BAAA,CAAK+oB,qBAAqB,EAA1B,IAAI,EAAyBrrC,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;IAC1B,MAAM2sC,QAAQ,GAAG,IAAI,CAACnB,WAAW,CAAC,MAAOztB,KAAkB,IAAK;MAC9D,MAAMihB,OAAO,GAAGwN,OAAO,CAACzuB,KAAK,CAAC;MAC9B,IAAIkE,2BAAA,CAAKmpB,qBAAqB,EAA1B,IAAyB,CAAC,IAAI,IAAI,EAAE,MAAM,IAAIxyC,iBAAiB,CAAC,CAAC;MACrEypB,2BAAA,CAAK+oB,qBAAqB,EAA1B,IAAI,EAAyBnpB,2BAAA,CAAKmpB,qBAAqB,EAA1B,IAAyB,CAAC,CACpDphB,IAAI,CAAC,YAAYgV,OAAO,CAAC,CACzBhV,IAAI,CACH,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CALuB,CAAC;MAM1B,OAAOgV,OAAO;IAChB,CAAC,EAAE6G,GAAG,CAAC;IAEP,OAAO,YAAY;MACjB8G,QAAQ,CAAC,CAAC;MACV,MAAM1qB,2BAAA,CAAKmpB,qBAAqB,EAA1B,IAAyB,CAAC;MAChC/oB,2BAAA,CAAK+oB,qBAAqB,EAA1B,IAAI,EAAyB7jC,SAAJ,CAAC;IAC5B,CAAC;EACH;AACF;;AC1MoD;AACK;AACuB;AAC/B;AACS;AACJ;AACI;AACD;AAGhB;;AAEzC;AACA;AACA;;AAKA;AACA;AACA;AACe,MAAMqlC,YAAY,SAAS3B,UAAU,CAAC;EACnD;AACF;AACA;AACA;AACA;AACA;EACE90C,WAAWA,CACT2C,OAA8B,EACdqU,OAEZ,EACJ;IACA,KAAK,CAACrU,OAAO,EAAEqU,OAAO,CAAC;IAAC,KAJRA,OAEZ,GAFYA,OAEZ;EAGN;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM0/B,SAASA,CACb9uB,KAAa,EACb5Q,OAAqC,GAAG,CAAC,CAAC,EACiD;IAC3F,MAAM04B,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMtD,QAAQ,GAAGg8B,GAAG,CAAClsC,SAAS,CAACb,OAAO;IAEtC,MAAMg0C,aAAa,GAAG,MAAM5lB,YAAY,CAAC;MACvC/L,gBAAgB,EAAE,IAAI;MACtB,GAAG0qB,GAAG;MACNhpC,GAAG,EAAEyM,GAAG,CAACwO,aAAa;MACtBhO,QAAQ,EAAE,IAAI,CAAChR,OAAO;MACtB+Q,QAAQ;MACRkU;IACF,CAAC,CAAC;IACF,MAAM;MAAEtU;IAAM,CAAC,GAAG2O,QAAQ,CAAC00B,aAAa,EAAExjC,GAAG,CAACwO,aAAa,CAAC;IAC5D,OAAO;MACL,IAAI,MAAMurB,eAAe,CAACyJ,aAAa,EAAEjH,GAAG,CAAC,CAAC;MAC9CznB,OAAO,EAAExU,aAAa,CAACC,QAAQ,EAAEJ,KAAK,EAAE,IAAI,CAAC3Q,OAAO;IACtD,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMi0C,eAAeA,CACnB3uB,OAA8B,EAC9BjR,OAAgF,GAAG,CAAC,CAAC,EACpE;IAAA,IAAA8+B,aAAA;IACjB,MAAMpG,GAAG,GAAG;MAAE,GAAG,IAAI,CAAC14B,OAAO;MAAE,GAAGA;IAAQ,CAAC;IAC3C,MAAMc,QAAQ,IAAAg+B,aAAA,GAAGpG,GAAG,CAAC53B,QAAQ,cAAAg+B,aAAA,cAAAA,aAAA,GAAK,MAAM/+B,gBAAgB,CAAC,aAAa,EAAE24B,GAAG,CAAE;IAC7E,IAAIhuC,MAAM;IACV,IAAIyW,GAAG;IACP,IAAI+P,QAAQ;IACZ,GAAG;MACD,CAAC;QAAEA,QAAQ;QAAE/P;MAAI,CAAC,GAAG,MAAM,IAAI,CAAC68B,QAAQ,CAAC/sB,OAAO,EAAEynB,GAAG,CAAC;MACtD,MAAMmH,cAAc,GAAG1nC,MAAM,CAAC+Y,QAAkC,CAAC;MACjE,IAAI2uB,cAAc,CAAC7tC,MAAM,GAAG,CAAC,EAAE,OAAO6tC,cAAc,CAAC3zC,QAAQ,CAAC,CAAC;MAC/D,MAAMwG,KAAK,CAACoO,QAAQ,CAAC;MACrBpW,MAAM,GAAG,MAAM0V,SAAS,CAAC;QAAE,GAAGs4B,GAAG;QAAEr4B,MAAM,EAAE;MAAK,CAAC,CAAC;IACpD,CAAC,QAAQc,GAAG,IAAIzW,MAAM;IACtB,MAAM,IAAID,oBAAoB,CAACC,MAAM,CAAC;EACxC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMkmB,KAAKA,CACTA,KAAa,EACb5Q,OAAsF,GAAG,CAAC,CAAC,EAC1E;IACjB,MAAM;MAAEiR;IAAQ,CAAC,GAAG,MAAM,IAAI,CAACyuB,SAAS,CAAC9uB,KAAK,EAAE5Q,OAAO,CAAC;IACxD,OAAO,IAAI,CAAC4/B,eAAe,CAAC3uB,OAAO,EAAEjR,OAAO,CAAC;EAC/C;AACF;;ACzGqC;AACgB;AAC2B;AACD;AAC7B;AAEQ;;AAE1D;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe8/B,KAAKA,CACzB5xC,MAAuB,EACvB6xC,iBAA8E,EAC9E//B,OAAqB,EACe;EACpC,OAAOk2B,eAAe,CACpB,MAAMnc,YAAY,CAAC;IACjB/L,gBAAgB,EAAE,IAAI;IACtB,GAAGhO,OAAO;IACVtQ,GAAG,EAAEyM,GAAG,CAACqT,OAAO;IAChB9S,QAAQ,EAAEsD,OAAO,CAACxT,SAAS,CAACb,OAAO;IACnC8jB,WAAW,EAAE,MAAMrK,WAAW,CAAC26B,iBAAiB,EAAE,gBAAgB,EAAE//B,OAAO,CAAC;IAC5E9R;EACF,CAAC,CAAC,EACF8R,OACF,CAAC;AACH;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeggC,aAAaA,CACjCC,QAAyB;AAAE;AAC3BF,iBAA8E,EAC9E//B,OAA6B,EACO;EACpC,IAAI,CAACigC,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ,GAAG,CAAC,EAAE;IAClC,MAAM,IAAIp2C,aAAa,CAAC,UAAU,EAAE,0BAA0B,EAAEo2C,QAAQ,CAAC;EAC3E;EACA,MAAMxwB,WAAW,GAAG,MAAMrK,WAAW,CAAC26B,iBAAiB,EAAE,gBAAgB,EAAE//B,OAAO,CAAC;EACnF,MAAMtD,QAAQ,GAAGsD,OAAO,CAACxT,SAAS,CAACb,OAAO;EAC1C,MAAMsW,OAAO,GAAG,IAAI9Z,iCAAS,CAAC,MAAM0Z,UAAU,CAAChN,IAAI,CAACmL,OAAO,CAACxT,SAAS,CAAC,CAACkQ,QAAQ,EAAEsD,OAAO,CAAC,CAAC;EAC1F,MAAMkgC,aAAa,GAAGj+B,OAAO,CAAClG,KAAK,CAACkkC,QAAQ,CAAC,CAACr3C,YAAY,CAACT,+CAAuB,CAAC;EACnF,MAAM;IAAEojB;EAAI,CAAC,GAAGN,QAAQ,CACtB,MAAM8O,YAAY,CAAC;IACjB/L,gBAAgB,EAAE,IAAI;IACtB,GAAGhO,OAAO;IACVtQ,GAAG,EAAEyM,GAAG,CAACqT,OAAO;IAChB9S,QAAQ;IACR+S,WAAW;IACXvhB,MAAM,EAAEgyC;EACV,CAAC,CAAC,EACF/jC,GAAG,CAACqT,OACN,CAAC;EACD;EACA,MAAMthB,MAAM,GAAGgyC,aAAa,CAAClhC,IAAI,CAACuM,GAAG,CAAC,CAACU,EAAE,CAAChK,OAAO,CAAC,GAAGA,OAAO,CAACm+B,KAAK,CAAC70B,GAAG,CAAC,GAAG20B,aAAa;EACvF,OAAOhK,eAAe,CACpB,MAAMnc,YAAY,CAAC;IACjB/L,gBAAgB,EAAE,IAAI;IACtB,GAAGhO,OAAO;IACVtQ,GAAG,EAAEyM,GAAG,CAACqT,OAAO;IAChB9S,QAAQ;IACR+S,WAAW;IACXvhB;EACF,CAAC,CAAC,EACF8R,OACF,CAAC;AACH;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeqgC,iBAAiBA,CACrCtyC,WAAgC,EAChCiS,OAAiC,EACG;EACpC,OAAOk2B,eAAe,CACpB,MAAMnc,YAAY,CAAC;IACjB/L,gBAAgB,EAAE,IAAI;IACtB,GAAGhO,OAAO;IACVtQ,GAAG,EAAEyM,GAAG,CAACgO,WAAW;IACpB4I,OAAO,EAAE/S,OAAO,CAACxT,SAAS,CAACb,OAAO;IAClCqV,EAAE,EAAEjT;EACN,CAAC,CAAC,EACFiS,OACF,CAAC;AACH;;AClIA;AACA;AACA;;AAEgF;AAOhD;AACU;AAC8B;AACC;AACvB;AACb;AAEI;AACwC;AAExB;AACG;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAesgC,wBAAwBA,CAC5CC,UAAkB,EAClB9rC,IAAW,EACX;EACEjI,SAAS;EACTwtC,UAAU;EACVr6B,MAAM;EACNmiB,QAAQ;EACRmR,GAAG;EACHmH,cAAc;EACdH,UAAU;EACVE,UAAU;EACV,GAAGn6B;AAC4B,CAAC,EAQlC;EAAA,IAAAwgC,iBAAA;EACA,MAAMtwB,OAAO,GAAG1jB,SAAS,CAACb,OAAO;EACjC,IAAI,CAAC,MAAM8V,UAAU,CAACyO,OAAO,EAAE;IAAEvQ;EAAO,CAAC,CAAC,EAAEoH,IAAI,KAAK,aAAa,EAAE;IAClE,MAAM,IAAI9c,oBAAoB,CAAC,WAAWimB,OAAO,gBAAgB,CAAC;EACpE;EAEA,MAAM2I,QAAQ,GAAG,MAAMhC,iBAAQ,CAACqlB,UAAU,CAAkC;IAC1E1vC,SAAS;IACTwtC,UAAU;IACVr6B,MAAM;IACNmiB,QAAQ;IACRmR,GAAG;IACHmH,cAAc;IACdH,UAAU;IACVE;EACF,CAAC,CAAC;EAEF,MAAMn5B,EAAE,GAAG,MAAM+Y,YAAY,CAAC;IAC5B/L,gBAAgB,EAAE,IAAI;IACtB,GAAGhO,OAAO;IACVtQ,GAAG,EAAEyM,GAAG,CAAC+N,UAAU;IACnBvK,MAAM;IACNwQ,IAAI,EAAE,MAAM0I,QAAQ,CAACihB,QAAQ,CAAC,CAAC;IAC/BttB,QAAQ,GAAAg0B,iBAAA,GAAExgC,OAAO,CAACwM,QAAQ,cAAAg0B,iBAAA,cAAAA,iBAAA,GAAK,MAAM3nB,QAAQ,CAAC6hB,YAAY,CAAC,MAAM,EAAEjmC,IAAI,EAAEuL,OAAO,CAAE;IAClFkQ,OAAO;IACPG,QAAQ,EAAEwI,QAAQ,CAACkiB,SAAS,CAAC7iC,MAAM,CAAC2gB,QAAQ,CAACmiB,KAAK,EAAE,MAAM,EAAEvmC,IAAI,CAAC;IACjEme,OAAO,EAAEzY,IAAI,CAAComC,UAAU;EAC1B,CAAC,CAAC;EACF,MAAM;IAAEpmC,IAAI,EAAEpM,WAAW;IAAEmsB;EAAM,CAAC,GAAG,MAAMgc,eAAe,CAACl1B,EAAE,EAAE;IAC7DrB,MAAM;IACNnT,SAAS;IACTwtC,UAAU;IACV,GAAGh6B;EACL,CAAC,CAAC;EACF,MAAM+E,UAAU,GAAGoV,2BAA2B,CAACD,KAAK,CAAC;EAErD,OAAOjnB,MAAM,CAACwtC,MAAM,CAAC;IACnBpkC,KAAK,EAAE6T,OAAO;IACdniB,WAAW;IACXmsB,KAAK;IACLwmB,YAAY,EAAE37B;EAChB,CAAC,CAAC;AACJ;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAe47B,eAAeA,CACnC5yC,WAAgC,EAChC;EAAEwd,GAAG;EAAEtC,QAAQ;EAAEtJ;AAAoD,CAAC,EACrD;EACjB,MAAM;IAAEmyB,aAAa;IAAExrB;EAAyB,CAAC,GAAG,MAAM3G,MAAM,CAAC8G,WAAW,CAAC,CAAC;EAC9E,IAAI9O,OAAO,GAAGwC,IAAI,CAACzG,aAAa,CAAC,CAACL,MAAM,CAACG,IAAI,CAACs+B,aAAa,CAAC,EAAE35B,MAAM,CAACpK,WAAW,CAAC,CAAC,CAAC,CAAC;EACpF,IAAIuY,wBAAwB,KAAKtK,wBAAwB,CAACyJ,KAAK,EAAE;IAC/D,IAAI8F,GAAG,IAAI,IAAI,EAAE,MAAM,IAAI1hB,aAAa,CAAC,KAAK,EAAE,qBAAqB,EAAE0hB,GAAG,CAAC;IAC3E,IAAItC,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIpf,aAAa,CAAC,UAAU,EAAE,qBAAqB,EAAEof,QAAQ,CAAC;IAC1FtR,OAAO,GAAGwC,IAAI,CACZhC,MAAM,CACJkQ,SAAS,CAAC;MACR3Y,GAAG,EAAE2e,QAAQ,CAACqL,gBAAgB;MAC9BnO,GAAG;MACHtC,QAAQ;MACRlZ,MAAM,EAAEmI,MAAM,CAACP,OAAO,EAAE3C,QAAQ,CAAC4B,MAAM;IACzC,CAAC,CACH,CACF,CAAC;EACH;EACA,OAAOe,OAAO;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,eAAeipC,yBAAyBA,CAC7C7yC,WAAgC,EAChC;EAAE4R;AAAyB,CAAC,EACX;EACjB,MAAMyI,QAAQ,GAAG6C,QAAQ,CAACld,WAAW,EAAEoO,GAAG,CAAC6S,QAAQ,CAAC;EACpD,IAAI5G,QAAQ,CAACgD,SAAS,CAAC1b,GAAG,KAAKyM,GAAG,CAAC8K,QAAQ,EAAE;IAC3C,MAAM,IAAIpd,aAAa,CAAC,aAAa,EAAE,qBAAqB,EAAEsS,GAAG,CAACiM,QAAQ,CAACgD,SAAS,CAAC1b,GAAG,CAAC,CAAC;EAC5F;EACA,OAAOixC,eAAe,CAACz1B,OAAO,CAAC9C,QAAQ,CAACgD,SAAS,CAACpK,EAAE,CAACoK,SAAS,CAAC,EAAE;IAC/DG,GAAG,EAAEnD,QAAQ,CAACgD,SAAS,CAACG,GAAG;IAC3BtC,QAAQ,EAAEb,QAAQ,CAACgD,SAAS,CAACnC,QAAQ;IACrCtJ;EACF,CAAC,CAAC;AACJ;;;;;;;;;;;ACrK2C;AACa;AACb;AACW;AACD;AACa;AACZ;AAStD,MAAMqhC,OAAO,GAAG;EACd,GAAGH,qBAAY;EACf3K,eAAe;EACf,GAAG4K,qBAAY;EACf,GAAGC,kBAAiBA;AACtB,CAAU;AAAC,IAAAE,eAAA,oBAAA9gC,OAAA;AAkBX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM+gC,YAAY,CAAC;EAKjB;AACF;AACA;EACEl4C,WAAWA,CAACgX,OAA4B,GAAG,CAAC,CAAC,EAAE;IAAAmhC,wBAAA,mBAPf,CAAC,CAAC;IAElClsB,sCAAA,OAASgsB,eAAe;IAMtBhuC,MAAM,CAACqR,MAAM,CAAC,IAAI,CAAC88B,QAAQ,EAAEphC,OAAO,CAAC;IACrCkV,iCAAA,CAAK+rB,eAAe,EAApB,IAAI,EAAmB;MACrBz0C,SAAS,EAAE6H,aAAa,CAAC,MAAM,IAAI,CAAC+sC,QAAQ,CAAC50C,SAAS,CAAC;MACvDmT,MAAM,EAAEtL,aAAa,CAAC,MAAM,IAAI,CAAC+sC,QAAQ,CAACzhC,MAAM,CAAC;MACjDq6B,UAAU,EAAE3lC,aAAa,CAAC,MAAM,IAAI,CAAC+sC,QAAQ,CAACpH,UAAU;IAC1D,CAJmB,CAAC;EAKtB;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEqH,UAAUA,CAACC,SAA8B,GAAG,CAAC,CAAC,EAAwC;IACpF,OAAO;MACL,GAAG,IAAI,CAACF,QAAQ;MAChB,GAAGtsB,iCAAA,CAAKmsB,eAAe,EAApB,IAAmB,CAAC;MACvB,GAAGK;IACL,CAAC;EACH;;EAEA;EACA,MAAMp2B,OAAOA,CAAClL,OAAsB,EAAgC;IAClE;IACA,OAAO+Z,YAAY,CAAC;MAAE,GAAI,IAAI,CAACsnB,UAAU,CAAC,CAAS;MAAE,GAAGrhC;IAAQ,CAAC,CAAC;EACpE;AACF;AAgCA/M,MAAM,CAACqR,MAAM,CACX48B,YAAY,CAACK,SAAS,EACtBxuC,SAAS,CAAqBiuC,OAAO,EAAE,CAAC,CAAC93C,IAAI,EAAEm2C,OAAO,CAAC,KAAK,CAC1Dn2C,IAAI,EACJ,SAASs4C,aAAaA,CAAqB,GAAG/sC,IAAW,EAAE;EACzDA,IAAI,CAACzC,MAAM,GAAGqtC,OAAO,CAACrtC,MAAM;EAC5B,MAAMgO,OAAO,GAAGvL,IAAI,CAACA,IAAI,CAACzC,MAAM,GAAG,CAAC,CAAC;EACrCyC,IAAI,CAACA,IAAI,CAACzC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAACqvC,UAAU,CAACrhC,OAAO,CAAC;EAChD,OAAOq/B,OAAO,CAAC,GAAG5qC,IAAI,CAAC;AACzB,CAAC,CACF,CACH,CAAC;AAGD;AACA,MAAMgtC,iBAAiB,GAAGP,YAAwE;AAClG,uDAAeO,iBAAiB;;;;;;;;AC/HL;AAE2B;AAE2C;AAAA,IAAAR,wBAAA,oBAAA9gC,OAAA;AAIjG;AACA;AACA;AACA;AACA;AACA;AACe,MAAMuhC,SAAS,SAASR,gBAAY,CAAC;EAOlD;AACF;AACA;AACA;EACEl4C,WAAWA,CAAC;IACV24C,KAAK,GAAG,EAAE;IACV,GAAG3hC;EAGL,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,KAAK,CAACA,OAAO,CAAC;IAACmhC,wBAAA,eAhBS,IAAIl+B,GAAG,CAAC,CAAC;IAInCgS,mCAAA,OAASgsB,wBAAe;IActBU,KAAK,CAAC39B,OAAO,CAAC,CAAC;MAAE9a,IAAI;MAAE04C;IAAS,CAAC,EAAE1nC,CAAC,KAAK,IAAI,CAAC2nC,OAAO,CAAC34C,IAAI,EAAE04C,QAAQ,EAAE1nC,CAAC,KAAK,CAAC,CAAC,CAAC;IAE/Egb,8BAAA,CAAK+rB,wBAAe,EAApB,IAAI,EAAmB;MACrBthC,MAAM,EAAEtL,aAAa,CAAC,MAAM,IAAI,CAACytC,GAAG,CAAC;MACrC9H,UAAU,EAAE3lC,aAAa,CAAC,MAAM,IAAI,CAAC0tC,WAAW,CAAC;MACjDv1C,SAAS,EAAE6H,aAAa,CAAC,MAAM,IAAI,CAAC2tC,eAAe,CAAC,CAAC;IACvD,CAJmB,CAAC;EAKtB;;EAEA;EACA;EACA;EACA,IAAID,WAAWA,CAAA,EAAiB;IAC9B,IAAI,IAAI,CAACX,QAAQ,CAACpH,UAAU,IAAI,IAAI,EAAE;MACpC,MAAM,IAAIzwC,aAAa,CAAC,oDAAoD,CAAC;IAC/E;IACA,OAAO,IAAI,CAAC63C,QAAQ,CAACpH,UAAU;EACjC;EAEA,IAAI8H,GAAGA,CAAA,EAAS;IACd,IAAI,CAACG,mBAAmB,CAAC,CAAC;IAC1B,OAAO,IAAI,CAACC,IAAI,CAAC3hC,GAAG,CAAC,IAAI,CAAC4hC,gBAAgB,CAAC;EAC7C;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEN,OAAOA,CAAC34C,IAAY,EAAE8f,IAAU,EAAEo5B,MAAM,GAAG,KAAK,EAAQ;IACtD,IAAI,IAAI,CAACF,IAAI,CAAClkB,GAAG,CAAC90B,IAAI,CAAC,EAAE,MAAM,IAAIgG,kBAAkB,CAAChG,IAAI,CAAC;IAE3D,IAAI,CAACg5C,IAAI,CAACthC,GAAG,CAAC1X,IAAI,EAAE8f,IAAI,CAAC;IACzB,IAAIo5B,MAAM,IAAI,IAAI,CAACD,gBAAgB,IAAI,IAAI,EAAE;MAC3C,IAAI,CAACE,UAAU,CAACn5C,IAAI,CAAC;IACvB;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEm5C,UAAUA,CAACn5C,IAAY,EAAQ;IAC7B,IAAI,CAAC,IAAI,CAACg5C,IAAI,CAAClkB,GAAG,CAAC90B,IAAI,CAAC,EAAE,MAAM,IAAIiG,iBAAiB,CAAC,kBAAkBjG,IAAI,cAAc,CAAC;IAC3F,IAAI,CAACi5C,gBAAgB,GAAGj5C,IAAI;EAC9B;;EAEA;AACF;AACA;AACA;AACA;EACEo5C,eAAeA,CAAA,EAAqD;IAClE,OAAO,IAAI,CAACH,gBAAgB,IAAI,IAAI;EACtC;EAEUF,mBAAmBA,CAAA,EAA6D;IACxF,IAAI,CAAC,IAAI,CAACK,eAAe,CAAC,CAAC,EAAE;MAC3B,MAAM,IAAInzC,iBAAiB,CAAC,+DAA+D,CAAC;IAC9F;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMsX,WAAWA,CAAA,EAAsB;IACrC,IAAI,CAACw7B,mBAAmB,CAAC,CAAC;IAC1B,OAAO;MACL/4C,IAAI,EAAE,IAAI,CAACi5C,gBAAgB;MAC3B,IAAI,MAAM,IAAI,CAACL,GAAG,CAACr7B,WAAW,CAAC,CAAC;IAClC,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM87B,cAAcA,CAAA,EAAwB;IAC1C,OAAO3vC,OAAO,CAAConB,GAAG,CAChBpW,KAAK,CAACpQ,IAAI,CAAC,IAAI,CAAC0uC,IAAI,CAAC/uC,OAAO,CAAC,CAAC,CAAC,CAAC1E,GAAG,CAAC,OAAO,CAACvF,IAAI,EAAE8f,IAAI,CAAC,MAAM;MAC3D9f,IAAI;MACJ,IAAI,MAAM8f,IAAI,CAACvC,WAAW,CAAC,CAAC;IAC9B,CAAC,CAAC,CACJ,CAAC;EACH;;EAEA;EACA+7B,SAASA,CAAA,EAA6B;IACpC,OAAO,EAAE;EACX;;EAEA;AACF;AACA;AACA;EACER,eAAeA,CAAC/M,OAAkB,GAAG,IAAI,CAACmM,QAAQ,CAAC50C,SAAS,EAAe;IACzE,IAAI,OAAOyoC,OAAO,KAAK,QAAQ,EAAE,MAAM,IAAIhqC,mBAAmB,CAAC,4BAA4B,CAAC;IAC5F,IAAI,OAAOgqC,OAAO,KAAK,QAAQ,EAAE,OAAOA,OAAO;IAC/C,MAAM,IAAInqC,gBAAS,CACjB,qDAAqD,GACnD,mCAAmC8wB,MAAM,CAACqZ,OAAO,CAAC,UACtD,CAAC;EACH;EAEA,IAAItpC,OAAOA,CAAA,EAA2B;IACpC,OAAO,IAAI,CAACq2C,eAAe,CAAC,CAAC,CAACr2C,OAAO;EACvC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM4O,IAAIA,CACRhD,IAAyB,EACzByI,OAAkC,GAAG,CAAC,CAAC,EAClB;IACrB,OAAO,IAAI,CAAC4zB,UAAU,CAACr8B,IAAI,EAAEyI,OAAO,CAAC;EACvC;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM4zB,UAAUA,CACdr8B,IAAyB,EACzB;IAAE/K,SAAS;IAAE,GAAGwT;EAAmC,CAAC,GAAG,CAAC,CAAC,EACpC;IACrB,OAAO,IAAI,CAACgiC,eAAe,CAACx1C,SAAS,CAAC,CAAConC,UAAU,CAACr8B,IAAI,EAAEyI,OAAO,CAAC;EAClE;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM6zB,eAAeA,CACnB7yB,EAAuB,EACvB;IACExU,SAAS;IACT,GAAGwT;EACsE,CAAC,GAAG,CAAC,CAAC,EACnD;IAC9B,MAAMJ,SAAS,GAAG,IAAI,CAACuiC,gBAAgB,KAAK,IAAI,GAAG,MAAM,IAAI,CAACL,GAAG,CAACjiC,YAAY,CAAC,CAAC,GAAGzF,SAAS;IAC5F,OAAO,IAAI,CAAC4nC,eAAe,CAACx1C,SAAS,CAAC,CAACqnC,eAAe,CAAC7yB,EAAE,EAAE;MAAEpB,SAAS;MAAE,GAAGI;IAAQ,CAAC,CAAC;EACvF;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM+zB,WAAWA,CACf9qC,OAAe,EACf;IACEuD,SAAS;IACT,GAAGwT;EACkE,CAAC,GAAG,CAAC,CAAC,EACxD;IACrB,OAAO,IAAI,CAACgiC,eAAe,CAACx1C,SAAS,CAAC,CAACunC,WAAW,CAAC9qC,OAAO,EAAE+W,OAAO,CAAC;EACtE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMg0B,aAAaA,CACjBz8B,IAA+B,EAC/B07B,GAAgD,EAChD;IACEzmC,SAAS;IACT,GAAGwT;EACoE,CAAC,GAAG,CAAC,CAAC,EACnD;IAC5B,OAAO,IAAI,CAACgiC,eAAe,CAACx1C,SAAS,CAAC,CAACwnC,aAAa,CAACz8B,IAAI,EAAE07B,GAAG,EAAEjzB,OAAO,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMk0B,cAAcA,CAClBC,UAA6B,EAC7B;IACE3nC,SAAS;IACT,GAAGwT;EACqE,CAAC,GAAG,CAAC,CAAC,EACpD;IAAA,IAAAyiC,kBAAA;IAC5B,CAAAA,kBAAA,GAAAziC,OAAO,CAACJ,SAAS,cAAA6iC,kBAAA,cAAAA,kBAAA,GAAjBziC,OAAO,CAACJ,SAAS,GACf,IAAI,CAACuiC,gBAAgB,KAAK,IAAI,GAAG,MAAM,IAAI,CAACL,GAAG,CAACjiC,YAAY,CAAC,CAAC,GAAGzF,SAAS;IAC5E,OAAO,IAAI,CAAC4nC,eAAe,CAACx1C,SAAS,CAAC,CAAC0nC,cAAc,CAACC,UAAU,EAAEn0B,OAAO,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACWqhC,UAAUA,CAACC,SAA8B,GAAG,CAAC,CAAC,EAAwC;IAC7F,OAAO;MACL,GAAG,IAAI,CAACF,QAAQ;MAChB,GAAGtsB,8BAAA,CAAKmsB,wBAAe,EAApB,IAAmB,CAAC;MACvB,GAAGK,SAAS;MACZ,IAAIA,SAAS,CAAC90C,SAAS,IAAI,IAAI,IAAI;QACjCA,SAAS,EAAE,IAAI,CAACw1C,eAAe,CAACV,SAAS,CAAC90C,SAAS;MACrD,CAAC;IACH,CAAC;EACH;AACF;;;AC1QuC;AAGc;AACO;AAE7C,MAAMk2C,KAAK,SAAShB,SAAS,CAAC;EAK3C;AACF;AACA;EACE14C,WAAWA,CAAC;IACV2a,QAAQ;IACR,GAAG3D;EACsE,CAAC,GAAG,CAAC,CAAC,EAAE;IACjF,KAAK,CAACA,OAAO,CAAC;IAACmhC,wBAAA,mBAX0C,CAAC,CAAC;IAY3Dx9B,QAAQ,EAAEK,OAAO,CAAC,CAACixB,OAAO,EAAE5wB,GAAG,KAAK,IAAI,CAACs+B,UAAU,CAAC1N,OAAO,EAAE;MAAEmN,MAAM,EAAE/9B,GAAG,KAAK;IAAE,CAAC,CAAC,CAAC;EACtF;EAES29B,eAAeA,CAAC/M,OAAkB,GAAG,IAAI,CAAC2N,eAAe,EAAe;IAC/E,IAAI,OAAO3N,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMtpC,OAAO,GAAGspC,OAAiC;MACjD98B,MAAM,CAACxM,OAAO,CAAC;MACf,IAAI,IAAI,CAACgY,QAAQ,CAAChY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACupC,OAAO,CAAC;MAC9EA,OAAO,GAAG,IAAI,CAACtxB,QAAQ,CAAChY,OAAO,CAAC;IAClC;IACA,OAAO,KAAK,CAACq2C,eAAe,CAAC/M,OAAO,CAAC;EACvC;;EAEA;AACF;AACA;AACA;EACWuN,SAASA,CAAA,EAA6B;IAC7C,OAAOvvC,MAAM,CAACuT,IAAI,CAAC,IAAI,CAAC7C,QAAQ,CAAC;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEg/B,UAAUA,CAAC1N,OAAoB,EAAE;IAAEmN;EAA6B,CAAC,GAAG,CAAC,CAAC,EAAQ;IAC5E,MAAM;MAAEz2C;IAAQ,CAAC,GAAGspC,OAAO;IAC3B,IAAI,CAACtxB,QAAQ,CAAChY,OAAO,CAAC,GAAGspC,OAAO;IAChC,IAAImN,MAAM,KAAK,IAAI,EAAE,IAAI,CAACS,aAAa,CAACl3C,OAAO,CAAC;EAClD;;EAEA;AACF;AACA;AACA;AACA;EACEm3C,aAAaA,CAACn3C,OAA+B,EAAQ;IACnD,IAAI,IAAI,CAACgY,QAAQ,CAAChY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACC,OAAO,CAAC;IAC9E,OAAO,IAAI,CAACgY,QAAQ,CAAChY,OAAO,CAAC,CAAC,CAAC;IAC/B,IAAI,IAAI,CAACi3C,eAAe,KAAKj3C,OAAO,EAAE,OAAO,IAAI,CAACi3C,eAAe;EACnE;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CAACl3C,OAA+B,EAAQ;IACnDwM,MAAM,CAACxM,OAAO,CAAC;IACf,IAAI,IAAI,CAACgY,QAAQ,CAAChY,OAAO,CAAC,IAAI,IAAI,EAAE,MAAM,IAAID,uBAAuB,CAACC,OAAO,CAAC;IAC9E,IAAI,CAACi3C,eAAe,GAAGj3C,OAAO;EAChC;AACF;;;AC1EA;;AAE8D;;AAE9D;AACA;AACA;AACO,IAAWo3C,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAKnC;AACA;AACA;AACO,IAAWC,WAAW,0BAAXA,WAAW;EAAXA,WAAW;EAAXA,WAAW;EAAA,OAAXA,WAAW;AAAA;;AAK7B;AACA;AACA;AACO,IAAWC,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;;AAKpC;AACA;AACA;AACO,IAAWC,OAAO,0BAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAPA,OAAO;EAAA,OAAPA,OAAO;AAAA;;AAezB;AACA;AACA;AACO,IAAWC,UAAU,0BAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAVA,UAAU;EAAA,OAAVA,UAAU;AAAA;AAY5B,MAAMC,SAAmE,GAAG,EAAE;;AAE9E;AACA;AACA;AACO,MAAeC,QAAQ,SAASv6C,SAAS,CAAC;EAO/Cw6C,MAAMA,CAAA,EAAmB;IACvB,OAAO;MACLnzB,IAAI,EAAE,IAAI,CAACA,IAAI;MACflnB,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBsO,IAAI,EAAE,IAAI,CAACA;IACb,CAAC;EACH;EAEA,OAAOmP,WAAWA,CAAC68B,IAAoB,EAAY;IACjD,MAAMC,MAAM,GAAGJ,SAAS,CAACrxC,IAAI,CAAE0xC,EAAE,IAAKA,EAAE,CAACtzB,IAAI,KAAKozB,IAAI,CAACpzB,IAAI,CAAC;IAC5D,IAAIqzB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAIh4C,aAAa,CAAC,kCAAkC+3C,IAAI,CAACpzB,IAAI,EAAE,CAAC;IAC1F,OAAO,IAAIqzB,MAAM,CAACD,IAAI,CAAChsC,IAAI,CAAC;EAC9B;AACF;;AAEA;AACA;AACA;AACO,MAAMmsC,0BAA0B,SAASL,QAAQ,CAAC;EAKvDr6C,WAAWA,CAACuO,IAAU,EAAE;IACtB,KAAK,CAAC,qBAAqB,CAAC;IAAC4pC,wBAAA,eAHf,CAAC;IAIf,IAAI,CAAC5pC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACrO,IAAI,GAAG,4BAA4B;EAC1C;AACF;AAACi4C,wBAAA,CAVYuC,0BAA0B,UACd,CAAC;AAU1BN,SAAS,CAACx+B,IAAI,CAAC8+B,0BAA0B,CAAC;;AAE1C;AACA;AACA;AACO,MAAMC,sBAAsB,SAASN,QAAQ,CAAC;EAKnDr6C,WAAWA,CAACuO,IAAU,EAAE;IACtB,KAAK,CAAC,4BAA4B,CAAC;IAAC4pC,wBAAA,eAHtB,CAAC;IAIf,IAAI,CAAC5pC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACrO,IAAI,GAAG,wBAAwB;EACtC;AACF;AAACi4C,wBAAA,CAVYwC,sBAAsB,UACV,CAAC;AAU1BP,SAAS,CAACx+B,IAAI,CAAC++B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,2BAA2B,SAASP,QAAQ,CAAC;EAKxDr6C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,8BAA8B,CAAC;IAACm4C,wBAAA,eAHxB,CAAC;IAIf,IAAI,CAACj4C,IAAI,GAAG,6BAA6B;EAC3C;AACF;AAACi4C,wBAAA,CATYyC,2BAA2B,UACf,CAAC;AAS1BR,SAAS,CAACx+B,IAAI,CAACg/B,2BAA2B,CAAC;;AAE3C;AACA;AACA;AACO,MAAMC,sBAAsB,SAASR,QAAQ,CAAC;EAKnDr6C,WAAWA,CAACuO,IAAU,EAAE;IACtB,KAAK,CAAC,qCAAqC,CAAC;IAAC4pC,wBAAA,eAH/B,CAAC;IAIf,IAAI,CAAC5pC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACrO,IAAI,GAAG,wBAAwB;EACtC;AACF;AAACi4C,wBAAA,CAVY0C,sBAAsB,UACV,CAAC;AAU1BT,SAAS,CAACx+B,IAAI,CAACi/B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,oBAAoB,SAAST,QAAQ,CAAC;EAKjDr6C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,qCAAqC,CAAC;IAACm4C,wBAAA,eAH/B,EAAE;IAIhB,IAAI,CAACj4C,IAAI,GAAG,sBAAsB;EACpC;AACF;AAACi4C,wBAAA,CATY2C,oBAAoB,UACR,EAAE;AAS3BV,SAAS,CAACx+B,IAAI,CAACk/B,oBAAoB,CAAC;;AAEpC;AACA;AACA;AACO,MAAMC,sBAAsB,SAASV,QAAQ,CAAC;EAKnDr6C,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,sCAAsCA,OAAO,EAAE,CAAC;IAACw1C,wBAAA,eAHzC,EAAE;IAIhB,IAAI,CAAC5pC,IAAI,GAAG5L,OAAO;IACnB,IAAI,CAACzC,IAAI,GAAG,wBAAwB;EACtC;AACF;AAACi4C,wBAAA,CAVY4C,sBAAsB,UACV,EAAE;AAU3BX,SAAS,CAACx+B,IAAI,CAACm/B,sBAAsB,CAAC;;AAEtC;AACA;AACA;AACO,MAAMC,gBAAgB,SAASX,QAAQ,CAAC;EAK7Cr6C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,8DAA8D,CAAC;IAACm4C,wBAAA,eAHxD,EAAE;IAIhB,IAAI,CAACj4C,IAAI,GAAG,kBAAkB;EAChC;AACF;AAACi4C,wBAAA,CATY6C,gBAAgB,UACJ,EAAE;AAS3BZ,SAAS,CAACx+B,IAAI,CAACo/B,gBAAgB,CAAC;;AAEhC;AACA;AACA;AACO,MAAMC,gBAAgB,SAASZ,QAAQ,CAAC;EAK7Cr6C,WAAWA,CAAC4W,SAAiB,EAAE;IAC7B,KAAK,CAAC,sCAAsCA,SAAS,GAAG,CAAC;IAACuhC,wBAAA,eAH5C,EAAE;IAIhB,IAAI,CAAC5pC,IAAI,GAAGqI,SAAS;IACrB,IAAI,CAAC1W,IAAI,GAAG,kBAAkB;EAChC;AACF;AAACi4C,wBAAA,CAVY8C,gBAAgB,UACJ,EAAE;AAU3Bb,SAAS,CAACx+B,IAAI,CAACq/B,gBAAgB,CAAC;;AAEhC;AACA;AACA;AACO,MAAMC,sBAAsB,SAASb,QAAQ,CAAC;EAKnDr6C,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,kBAAkB,CAAC;IAACm4C,wBAAA,eAHZ,CAAC,KAAK;IAIpB,IAAI,CAACj4C,IAAI,GAAG,wBAAwB;EACtC;AACF;AAACi4C,wBAAA,CATY+C,sBAAsB,UACV,CAAC,KAAK;AAS/Bd,SAAS,CAACx+B,IAAI,CAACs/B,sBAAsB,CAAC;;AClOF;AAC6B;AACY;AACL;AAIxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMC,UAAU,SAASlS,WAAW,CAAC;EAKlDjpC,WAAWA,CAACo7C,SAAwC,EAAEz4C,OAA+B,EAAE;IACrF,KAAK,CAAC,CAAC;IACP,IAAI,CAAC04C,UAAU,GAAGD,SAAS;IAC3B,IAAI,CAACz4C,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;EACE,MAAM4O,IAAIA,CAAC+pC,OAA4B,EAAuB;IAC5D,OAAO,IAAI,CAAC1Q,UAAU,CAAC0Q,OAAO,CAAC;EACjC;EAEA,MAAM1Q,UAAUA,CAAC0Q,OAA4B,EAAuB;IAClE,MAAM/sC,IAAI,GAAGW,MAAM,CAAC7E,MAAM,CAACG,IAAI,CAAC8wC,OAAO,CAAC,EAAEtvC,QAAQ,CAACmB,SAAS,CAAC;IAC7D,MAAM;MAAEmE;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC+pC,UAAU,CAACroB,OAAO,CAACknB,OAAO,CAACtP,UAAU,EAAE;MACtEpnC,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB4L;IACF,CAAC,CAAC;IACF,OAAOY,MAAM,CAACmC,SAAS,CAAC;EAC1B;EAEA,MAAeu5B,eAAeA,CAC5B7yB,EAAuB,EACvB;IAAEmyB,OAAO;IAAEvzB;EAAyD,CAAC,GAAG,CAAC,CAAC,EAC5C;IAC9B,IAAIA,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI/V,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE+V,SAAS,CAAC;IAClF,MAAMjL,GAAG,GAAG,MAAM,IAAI,CAAC0vC,UAAU,CAACroB,OAAO,CAACknB,OAAO,CAAC3oC,IAAI,EAAE;MACtD/N,SAAS,EAAE,IAAI,CAACb,OAAO;MACvBqV,EAAE;MACFujC,YAAY,EAAE,IAAI;MAClB3kC,SAAS;MACTuzB;IACF,CAAC,CAAC;IACF,IAAIx+B,GAAG,CAAC6vC,iBAAiB,IAAI,IAAI,EAAE;MACjC,MAAM,IAAIx5C,wBAAwB,CAAC,gDAAgD,CAAC;IACtF;IACA,OAAO2J,GAAG,CAAC6vC,iBAAiB;EAC9B;EAEA,MAAezQ,WAAWA,CAAC9qC,OAAe,EAAuB;IAC/D,MAAM;MAAEqR;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC+pC,UAAU,CAACroB,OAAO,CAACknB,OAAO,CAACnP,WAAW,EAAE;MACvEvnC,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB1C;IACF,CAAC,CAAC;IACF,OAAOoK,MAAM,CAACG,IAAI,CAAC8G,SAAS,EAAE,KAAK,CAAC;EACtC;EAEA,MAAe05B,aAAaA,CAC1Bz8B,IAA+B,EAC/B07B,GAAgD,EAChD;IAAE/pC,IAAI;IAAEkC,OAAO;IAAEqC,eAAe;IAAEmS;EAAuD,CAAC,GAAG,CAAC,CAAC,EACnE;IAC5B,MAAM;MAAEtF;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC+pC,UAAU,CAACroB,OAAO,CAACknB,OAAO,CAAClP,aAAa,EAAE;MACzExnC,SAAS,EAAE,IAAI,CAACb,OAAO;MACvB6mC,MAAM,EAAE;QACNtpC,IAAI;QACJkC,OAAO;QACPwU,SAAS;QACTnS;MACF,CAAC;MACDwlC,GAAG;MACH17B;IACF,CAAC,CAAC;IACF,OAAO+C,SAAS;EAClB;EAEA,MAAe45B,cAAcA,CAACC,UAA6B,EAA8B;IACvF,MAAM;MAAE75B;IAAU,CAAC,GAAG,MAAM,IAAI,CAAC+pC,UAAU,CAACroB,OAAO,CAACknB,OAAO,CAAChP,cAAc,EAAE;MAC1EC,UAAU;MACV3nC,SAAS,EAAE,IAAI,CAACb;IAClB,CAAC,CAAC;IACF,OAAO2O,SAAS;EAClB;AACF;;AC5FwE;AA6BjE,MAAMmqC,WAAW,GAAG,CAAC;;;;;;;;AC/BsD;AAEG;AAClC;AAAA,IAAAC,UAAA,oBAAAvkC,OAAA;AAAA,IAAAwkC,UAAA,oBAAAxkC,OAAA;AAAA,IAAAykC,QAAA,oBAAAzkC,OAAA;AAAA,IAAA0kC,gBAAA,oBAAAlwB,OAAA;AA2BnD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMmwB,SAAS,CAG5B;EAYA97C,WAAWA,CACT+7C,UAA6B,EAC7BC,YAAwB,EACxBhE,OAA6B,EAC7B;IAAAhsB,oCAAA,OAAA6vB,gBAAA;IAbF5vB,mCAAA,OAASyvB,UAAU,EAAG,IAAIzhC,GAAG,CAG3B,CAAC;IAEHgS,mCAAA,OAAA0vB,UAAU,EAAG,CAAC;IAEd1vB,mCAAA,OAAS2vB,QAAQ;IAOf,IAAI,CAACG,UAAU,GAAGA,UAAU;IAC5B7vB,8BAAA,CAAK0vB,QAAQ,EAAb,IAAI,EAAY5D,OAAJ,CAAC;IACb+D,UAAU,CAACE,OAAO,CAACrvB,0BAAA,CAAAivB,gBAAA,MAAI,EAACK,cAAa,CAAC,CAACrwC,IAAI,CAAC,IAAI,CAAC,EAAEmwC,YAAY,CAAC;EAClE;EA0DA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMhpB,OAAOA,CACX9yB,IAAU,EACVmd,MAAsC,EACA;IACtCuP,0BAAA,CAAAivB,gBAAA,MAAI,EAACM,YAAW,CAAC,CAAAj5B,IAAA,CAAjB,IAAI,EAAegJ,8BAAA,CAAKyvB,UAAU,EAAf,IAAI,EAAJ7vB,8BAAA,CAAK6vB,UAAU,EAAf,IAAc,CAAC,GAAI,CAAL,CAAC,EAAQz7C,IAAI,EAAEmd,MAAM;IACtD,OAAO,IAAIzT,OAAO,CAAC,CAACC,OAAO,EAAEoR,MAAM,KAAK;MACtC6Q,8BAAA,CAAK4vB,UAAU,EAAf,IAAc,CAAC,CAAC9jC,GAAG,CAACkU,8BAAA,CAAK6vB,UAAU,EAAf,IAAc,CAAC,EAAE;QAAE9xC,OAAO;QAAEoR;MAAO,CAAC,CAAC;IAC3D,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;EACEmhC,MAAMA,CAA+Bl8C,IAAU,EAAEmd,MAAsC,EAAQ;IAC7FuP,0BAAA,CAAAivB,gBAAA,MAAI,EAACM,YAAW,CAAC,CAAAj5B,IAAA,CAAjB,IAAI,EAAc9R,SAAS,EAAElR,IAAI,EAAEmd,MAAM;EAC3C;;EAEA;AACF;AACA;AACA;AAQA;AAAC,eAAA6+B,eA5FsBlqC,GAAqC,EAAEqqC,MAAc,EAAiB;EACzF,IAAIrqC,GAAG,EAAEsqC,OAAO,KAAK,KAAK,EAAE,MAAM,IAAIl5C,sBAAsB,CAAC+wB,IAAI,CAACC,SAAS,CAACpiB,GAAG,CAAC,CAAC;EACjF,IAAI,QAAQ,IAAIA,GAAG,IAAI,OAAO,IAAIA,GAAG,EAAE;IACrC4a,0BAAA,CAAAivB,gBAAA,MAAI,EAACU,gBAAe,CAAC,CAAAr5B,IAAA,CAArB,IAAI,EAAkBlR,GAAG;IACzB;EACF;EAEA,MAAMghB,OAAO,GAAGhhB,GAAqB;EACrC,IAAI0D,MAAM;EACV,IAAIjL,KAAwB;EAC5B,IAAI;IACF,IAAI,EAAEuoB,OAAO,CAACkB,MAAM,IAAIpI,8BAAA,CAAK8vB,QAAQ,EAAb,IAAY,CAAC,CAAC,EAAE,MAAM,IAAIV,sBAAsB,CAAC,CAAC;IAC1E,MAAMsB,UAAU,GAAGxpB,OAAO,CAACkB,MAAwB;IACnDxe,MAAM,GAAG,MAAMoW,8BAAA,CAAK8vB,QAAQ,EAAb,IAAY,CAAC,CAACY,UAAU,CAAC,CAACxpB,OAAO,CAAC3V,MAAM,EAAEg/B,MAAM,CAAC;EAClE,CAAC,CAAC,OAAOhzC,CAAC,EAAE;IACV+B,WAAW,CAAC/B,CAAC,CAAC;IACdoB,KAAK,GAAGpB,CAAC;EACX;EACA,IAAI2pB,OAAO,CAAC1vB,EAAE,IAAI,IAAI,EAAE;IACtBspB,0BAAA,CAAAivB,gBAAA,MAAI,EAACY,aAAY,CAAC,CAAAv5B,IAAA,CAAlB,IAAI,EACF8P,OAAO,CAAC1vB,EAAE,EACV0vB,OAAO,CAACkB,MAAM,EACdxe,MAAM,EACNjL,KAAK,IAAI,IAAI,IAAIA,KAAK,YAAY4vC,QAAQ,GAAG5vC,KAAK,GAAG,IAAIuwC,gBAAgB,CAAC,CAAC;EAE/E;EACA,IAAIvwC,KAAK,IAAI,IAAI,IAAI,EAAEA,KAAK,YAAY4vC,QAAQ,CAAC,EAAE,MAAM5vC,KAAK;AAChE;AAAC,SAAA0xC,aAGC74C,EAAsB,EACtB4wB,MAAwC,EACxC7W,MAAY,EACN;EACN,IAAI,CAAC0+B,UAAU,CAACW,WAAW,CAAC;IAC1BJ,OAAO,EAAE,KAAK;IACd,IAAIh5C,EAAE,IAAI,IAAI,GAAG;MAAEA;IAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B4wB,MAAM;IACN,IAAI7W,MAAM,IAAI,IAAI,GAAG;MAAEA;IAAO,CAAC,GAAG,CAAC,CAAC;EACtC,CAAC,CAAC;AACJ;AAAC,SAAAo/B,cAGCn5C,EAAU,EACV4wB,MAAwC;AAAE;AAC1Cxe,MAAY,EACZjL,KAAgB,EACV;EACN,IAAI,CAACsxC,UAAU,CAACW,WAAW,CAAC;IAC1BJ,OAAO,EAAE,KAAK;IACdh5C,EAAE;IACF4wB,MAAM;IACN,IAAIzpB,KAAK,IAAI,IAAI,GAAG;MAAEA,KAAK,EAAEA,KAAK,CAAC6vC,MAAM,CAAC;IAAE,CAAC,GAAG;MAAE5kC;IAAO,CAAC;EAC5D,CAAC,CAAC;AACJ;AAAC,SAAA6mC,iBA+BgB;EAAEj5C,EAAE;EAAEmH,KAAK;EAAEiL;AAAkD,CAAC,EAAQ;EACvF,MAAMinC,SAAS,GAAG7wB,8BAAA,CAAK4vB,UAAU,EAAf,IAAc,CAAC,CAACnkC,GAAG,CAACjU,EAAE,CAAC;EACzC,IAAIq5C,SAAS,IAAI,IAAI,EAAE,MAAM,IAAIt5C,oBAAoB,CAACC,EAAE,CAAC;EACzD,IAAImH,KAAK,IAAI,IAAI,EAAEkyC,SAAS,CAAC1hC,MAAM,CAACo/B,QAAQ,CAAC38B,WAAW,CAACjT,KAAK,CAAC,CAAC,CAAC,KAC5DkyC,SAAS,CAAC9yC,OAAO,CAAC6L,MAAM,CAAC;EAC9BoW,8BAAA,CAAK4vB,UAAU,EAAf,IAAc,CAAC,CAACthC,MAAM,CAAC9W,EAAE,CAAC;AAC5B;;ACzJqC;AAGG;AACW;AAUH;AACmB;AACe;AAOzD;AACE;AAG7B;AACA;AACA;AACA;AACA;AACA;AACe,MAAMs5C,SAAS,SAASlE,SAAS,CAAC;EAa/C;AACF;AACA;AACA;AACA;AACA;AACA;EACE14C,WAAWA,CAAC;IACVE,IAAI;IACJ28C,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;IAC1Bb,YAAY,GAAGA,CAAA,KAAM,CAAC,CAAC;IACvBc,eAAe,GAAGA,CAAA,KAAM,CAAC,CAAC;IAC1B,GAAG3oC;EAMwC,CAAC,EAAE;IAC9C,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAAC0oC,eAAe,GAAGA,eAAe;IACtC,IAAI,CAACb,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACc,eAAe,GAAGA,eAAe;IACtC,IAAI,CAAC58C,IAAI,GAAGA,IAAI;EAClB;EAES84C,eAAeA,CAAC/M,OAAkB,GAAG,IAAI,CAACuN,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAe;IAC9E,IAAI,OAAOvN,OAAO,KAAK,QAAQ,EAAE;MAC/B,MAAMtpC,OAAO,GAAGspC,OAAiC;MACjD98B,MAAM,CAACxM,OAAO,CAAC;MACf,IAAI,CAAC,IAAI,CAAC62C,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACqD,OAAO,CAAC,EAAE,MAAM,IAAIY,wBAAwB,CAACZ,OAAO,CAAC;MACpF,IAAI,CAACo6C,gBAAgB,CAAC,CAAC;MACvB9Q,OAAO,GAAG,IAAIkP,UAAU,CAAC,IAAI,CAACC,SAAS,EAAEz4C,OAAO,CAAC;IACnD;IACA,IAAIspC,OAAO,IAAI,IAAI,EAAE,IAAI,CAAC+Q,oBAAoB,CAAC,CAAC;IAChD,OAAO,KAAK,CAAChE,eAAe,CAAC/M,OAAO,CAAC;EACvC;EAESuN,SAASA,CAAA,EAA6B;IAC7C,IAAI,IAAI,CAACyD,SAAS,IAAI,IAAI,EAAE,OAAO,EAAE;IACrC,MAAMC,OAAO,GAAGjzC,MAAM,CAACuT,IAAI,CAAC,IAAI,CAACy/B,SAAS,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtD,OAAO,CACL,IAAIA,OAAO,IAAI,IAAI,GAAG,CAACA,OAAO,CAAC,GAAG,EAAE,CAAC,EACrC,GAAGjzC,MAAM,CAACuT,IAAI,CAAC,IAAI,CAACy/B,SAAS,CAAC5c,SAAS,CAAC,CACzC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAM8c,eAAeA,CACnBpB,UAA6B,EAC7B;IAAEqB,WAAW,GAAG,KAAK;IAAEl9C,IAAI,GAAG;EAAwD,CAAC,GAAG,CAAC,CAAC,EAClD;IAC1C,IAAI,IAAI,CAACk7C,SAAS,IAAI,IAAI,EACxB,MAAM,IAAIp0C,qBAAqB,CAAC,qCAAqC,CAAC;IACxE,IAAIq2C,gBAAqB;IAEzB,MAAMC,aAAa,GAAIjgC,MAAe,IAAW;MAC/C,IAAI+/B,WAAW,EAAE;QACf,IAAI//B,MAAM,CAAC2C,IAAI,EAAEqU,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIntB,kBAAkB,CAAC,0BAA0B,CAAC;QACtF,IAAI,CAACgyC,IAAI,CAAC9+B,MAAM,CAACla,IAAI,CAAC;QACtB,IAAI,CAAC24C,OAAO,CAAC34C,IAAI,EAAE,IAAIwiC,IAAI,CAACrlB,MAAM,CAAC2C,IAAI,CAACqU,GAAG,CAAC,EAAE,IAAI,CAAC;MACrD;MACA,IAAI,CAACyoB,eAAe,CAACz/B,MAAM,CAAC;IAC9B,CAAC;IAED,MAAMkgC,MAAM,GAAG,IAAIzB,SAAS,CAC1BC,UAAU,EACV,MAAM;MACJ,OAAO,IAAI,CAACX,SAAS;MACrB,OAAO,IAAI,CAAC6B,SAAS;MACrB,IAAI,CAACjB,YAAY,CAACqB,gBAAgB,CAAC;IACrC,CAAC,EACD;MACE,CAACnD,OAAO,CAACsD,aAAa,GAAIngC,MAAM,IAAK;QACnC,IAAI,CAAC4/B,SAAS,GAAG5/B,MAAM;QACvB,IAAI,CAACw/B,eAAe,CAACx/B,MAAM,CAAC;MAC9B,CAAC;MACD,CAAC68B,OAAO,CAACoD,aAAa,GAAGA,aAAa;MACtC,CAACpD,OAAO,CAACuD,eAAe,GAAIpgC,MAAM,IAAK;QACrCggC,gBAAgB,GAAGhgC,MAAM;QACzBkgC,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;MAChC,CAAC;MACD,CAACxD,OAAO,CAACyD,cAAc,GAAG,MAAM,CAAC;IACnC,CACF,CAAC;IACD,MAAMC,UAAU,GAAG,MAAML,MAAM,CAACvqB,OAAO,CAACknB,OAAO,CAAC+B,OAAO,EAAE;MACvD/7C,IAAI,EAAE,IAAI,CAACA,IAAI;MACfkC,OAAO,EAAEq5C,WAAW;MACpB2B;IACF,CAAC,CAAC;IACFE,aAAa,CAACM,UAAU,CAAC;IACzB,IAAI,CAACxC,SAAS,GAAGmC,MAAM;IACvB,OAAOK,UAAU;EACnB;;EAEA;AACF;AACA;EACEC,gBAAgBA,CAAA,EAAS;IACvB,IAAI,CAACd,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAAC3B,SAAS,CAACgB,MAAM,CAAClC,OAAO,CAACuD,eAAe,EAAE;MAAEtiC,MAAM,EAAE;IAAM,CAAC,CAAC;IACjE,IAAI,CAACigC,SAAS,CAACW,UAAU,CAAC2B,UAAU,CAAC,CAAC;EACxC;;EAEA;AACF;AACA;AACA;EACE,MAAMI,YAAYA,CAAA,EAAsC;IACtD,IAAI,CAACf,gBAAgB,CAAC,CAAC;IACvB,OAAO,IAAI,CAAC3B,SAAS,CAACpoB,OAAO,CAACknB,OAAO,CAACv3C,OAAO,EAAEyO,SAAS,CAAC;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM2sC,gBAAgBA,CACpBvvC,IAAwB,EACxB3G,KAA8B,EAC4B;IAC1D,IAAI,CAACk1C,gBAAgB,CAAC,CAAC;IACvB,MAAMrnC,MAAM,GAAG,MAAM,IAAI,CAAC0lC,SAAS,CAACpoB,OAAO,CAACknB,OAAO,CAAC6D,gBAAgB,EAAE;MAAEvvC,IAAI;MAAE3G;IAAM,CAAC,CAAC;IACtF,IAAI,CAACo1C,SAAS,GAAGvnC,MAAM,CAAC/S,OAAO;IAC/B,OAAO+S,MAAM;EACf;;EAEA;AACF;AACA;EACE,MAAMsoC,kBAAkBA,CAACC,OAAwB,EAAiB;IAChE,IAAI,CAAClB,gBAAgB,CAAC,CAAC;IACvB,MAAM,IAAI,CAAC3B,SAAS,CAACpoB,OAAO,CAACknB,OAAO,CAACoD,aAAa,EAAEW,OAAO,CAAC;EAC9D;EAEAlB,gBAAgBA,CAAA,EAEd;IACA,IAAI,IAAI,CAAC3B,SAAS,IAAI,IAAI,EAAE;IAC5B,MAAM,IAAIn0C,sBAAsB,CAAC,iCAAiC,CAAC;EACrE;EAEA+1C,oBAAoBA,CAAA,EAElB;IACA,IAAI,CAACD,gBAAgB,CAAC,CAAC;IACvB,IAAI,IAAI,CAACvD,SAAS,CAAC,CAAC,CAACxwC,MAAM,KAAK,CAAC,EAAE;IACnC,MAAM,IAAItF,wBAAwB,CAAC,CAAC;EACtC;AACF;;;;;;;;;;AC3M6C;AACF;AASnB;AACmB;AACe;AACE;AAAA,IAAA23C,UAAA,oBAAAlkC,OAAA;AAAA,IAAAgnC,+BAAA,oBAAAxyB,OAAA;AAAA,IAAAsxB,SAAA,oBAAA9lC,OAAA;AAQ7C,MAAeinC,wBAAwB,SAAuBF,oCAAY,CAEvF;EASA;AACF;AACA;EACE,IAAIG,WAAWA,CAAA,EAAY;IACzB,OAAOvyB,6CAAA,CAAKuvB,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI;EAChC;EAIA;AACF;AACA;EACE,IAAI1gC,QAAQA,CAAA,EAAiB;IAC3B,OAAOmR,6CAAA,CAAKmxB,SAAS,EAAd,IAAa,CAAC;EACvB;EAEUj9C,WAAWA,CAAA,EAAG;IACtB,KAAK,CAAC,CAAC;IAACgsB,mDAAA,OAAAmyB,+BAAA;IAzBVlyB,kDAAA,OAAAovB,UAAU;IAeVpvB,kDAAA,OAAAgxB,SAAS,EAAiB,EAAE;EAW5B;EAYA,aAAaqB,QAAQA,CACnBp+C,IAAY,EACZ67C,UAA6B,EAC7BwC,SAAwC,EACxCnB,WAAoB,EACL;IACf,IAAIC,gBAAqB;IAEzB,MAAME,MAAM,GAAG,IAAIzB,SAAS,CAC1BC,UAAU,EACV,MAAM;MACJ7vB,6CAAA,CAAUmvB,UAAU,EAApBkD,SAAS,EAAcntC,SAAJ,CAAC;MACpB8a,6CAAA,CAAU+wB,SAAS,EAAnBsB,SAAS,EAAa,EAAJ,CAAC;MACnBA,SAAS,CAACC,IAAI,CAAC,YAAY,EAAEnB,gBAAgB,CAAC;IAChD,CAAC,EACD;MACE,CAACnD,OAAO,CAACsD,aAAa,GAAG5wB,yCAAA,CAAAuxB,+BAAA,EAAAI,SAAS,EAACE,eAAc,CAAC,CAAC5yC,IAAI,CAAC0yC,SAAS,CAAC;MAClE,CAACrE,OAAO,CAACoD,aAAa,GAAGiB,SAAS,CAACG,cAAc,CAAC7yC,IAAI,CAAC0yC,SAAS,CAAC;MACjE,CAACrE,OAAO,CAACuD,eAAe,GAAIpgC,MAAM,IAAK;QACrCggC,gBAAgB,GAAGhgC,MAAM;QACzBkgC,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;MAChC,CAAC;MACD,CAACxD,OAAO,CAACyD,cAAc,GAAG,MAAM,CAAC;IACnC,CACF,CAAC;IACDzxB,6CAAA,CAAUmvB,UAAU,EAApBkD,SAAS,EAAchB,MAAJ,CAAC;IACpB,MAAMK,UAAU,GAAG,MAAM9xB,6CAAA,CAAUuvB,UAAU,EAApBkD,SAAmB,CAAC,CAACvrB,OAAO,CAACknB,OAAO,CAAC+B,OAAO,EAAE;MACrE/7C,IAAI;MACJkC,OAAO,EAAEq5C,WAAW;MACpB2B;IACF,CAAC,CAAC;IACFmB,SAAS,CAACG,cAAc,CAACd,UAAU,CAAC;EACtC;;EAEA;AACF;AACA;EACEF,UAAUA,CAAA,EAAS;IACjB,MAAMH,MAAM,GAAG3wB,yCAAA,CAAAuxB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAz7B,IAAA,CAAlB,IAAI,CAAgB;IACnCq6B,MAAM,CAACnB,MAAM,CAAClC,OAAO,CAACuD,eAAe,EAAE;MAAEtiC,MAAM,EAAE;IAAM,CAAC,CAAC;IACzDoiC,MAAM,CAACxB,UAAU,CAAC2B,UAAU,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;EACE,MAAMkB,WAAWA,CAAA,EAA0B;IACzC,MAAMrB,MAAM,GAAG3wB,yCAAA,CAAAuxB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAz7B,IAAA,CAAlB,IAAI,CAAgB;IACnC,MAAMs2B,SAAS,GAAG,MAAM+D,MAAM,CAACvqB,OAAO,CAACknB,OAAO,CAACv3C,OAAO,EAAEyO,SAAS,CAAC;IAClE,OAAOooC,SAAS,CAAC/zC,GAAG,CAAE9C,OAAO,IAAK,IAAIw4C,UAAU,CAACoC,MAAM,EAAE56C,OAAO,CAAC,CAAC;EACpE;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,MAAMk8C,iBAAiBA,CACrBrwC,IAAwB,EACxB3G,KAA8B,EACP;IACvB,MAAM6N,MAAM,GAAG,MAAMkX,yCAAA,CAAAuxB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAz7B,IAAA,CAAlB,IAAI,EAAiB8P,OAAO,CAACknB,OAAO,CAAC6D,gBAAgB,EAAE;MAAEvvC,IAAI;MAAE3G;IAAM,CAAC,CAAC;IAC5F+kB,yCAAA,CAAAuxB,+BAAA,MAAI,EAACM,eAAc,CAAC,CAAAv7B,IAAA,CAApB,IAAI,EAAiBxN,MAAM,CAAC/S,OAAO;IACnC,OAAOmpB,6CAAA,CAAKmxB,SAAS,EAAd,IAAa,CAAC;EACvB;;EAEA;AACF;AACA;EACE,MAAMe,kBAAkBA,CAACC,OAAwB,EAAiB;IAChE,MAAMrxB,yCAAA,CAAAuxB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAz7B,IAAA,CAAlB,IAAI,EAAiB8P,OAAO,CAACknB,OAAO,CAACoD,aAAa,EAAEW,OAAO,CAAC;EACpE;AACF;AAAC,SAAAU,cAAA,EA7GgD;EAC7C,IAAI7yB,6CAAA,CAAKuvB,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EACzB,MAAM,IAAIp0C,sBAAsB,CAAC,iCAAiC,CAAC;EACrE,OAAO6kB,6CAAA,CAAKuvB,UAAU,EAAf,IAAc,CAAC;AACxB;AAAC,SAAAoD,gBAwBephC,MAAgB,EAAQ;EACtC,MAAMm8B,SAAS,GAAG,CAChB,GAAG,IAAI3+B,GAAG,CAAC,CAAC,GAAG5Q,MAAM,CAACuT,IAAI,CAACH,MAAM,CAAC6/B,OAAO,CAAC,EAAE,GAAGjzC,MAAM,CAACuT,IAAI,CAACH,MAAM,CAACgjB,SAAS,CAAC,CAAC,CAAC,CACnD;EAC7BnU,6CAAA,CAAK+wB,SAAS,EAAd,IAAI,EAAazD,SAAS,CAAC/zC,GAAG,CAAE9C,OAAO,IAAK,IAAIw4C,UAAU,CAACvuB,yCAAA,CAAAuxB,+BAAA,MAAI,EAACQ,aAAY,CAAC,CAAAz7B,IAAA,CAAlB,IAAI,GAAkBvgB,OAAO,CAAC,CAA5E,CAAC;EACd,IAAI,CAAC67C,IAAI,CAAC,gBAAgB,EAAE1yB,6CAAA,CAAKmxB,SAAS,EAAd,IAAa,CAAC,CAAC;AAC7C;;;;;;;AC1DmE;AAAA,IAAA6B,UAAA,oBAAA3nC,OAAA;AAMrE;AACA;AACA;AACA;AACe,MAAM4nC,oBAAoB,SAASX,wBAAwB,CAAkB;EAAAp+C,YAAA,GAAAyL,IAAA;IAAA,SAAAA,IAAA;IAC1FwgB,8CAAA,OAAA6yB,UAAU,EAAG,EAAE;EAAC;EAEhB;AACF;AACA;EACE,IAAIloC,SAASA,CAAA,EAAW;IACtB,OAAOkV,yCAAA,CAAKgzB,UAAU,EAAf,IAAc,CAAC;EACxB;EAEmBJ,cAAcA,CAACrhC,MAAe,EAAQ;IACvD6O,yCAAA,CAAK4yB,UAAU,EAAf,IAAI,EAAczhC,MAAM,CAACzG,SAAX,CAAC;IACf,IAAI,CAAC4nC,IAAI,CAAC,iBAAiB,EAAE1yB,yCAAA,CAAKgzB,UAAU,EAAf,IAAc,CAAC,CAAC;EAC/C;;EAEA;AACF;AACA;AACA;AACA;EACE,aAAa7C,OAAOA,CAAC/7C,IAAY,EAAE67C,UAA6B,EAAiC;IAC/F,MAAMwC,SAAS,GAAG,IAAIQ,oBAAoB,CAAC,CAAC;IAC5C,MAAMA,oBAAoB,CAACT,QAAQ,CAACp+C,IAAI,EAAE67C,UAAU,EAAEwC,SAAS,EAAE,KAAK,CAAC;IACvE,OAAOA,SAAS;EAClB;AACF;;;;;;;ACpCwD;AAC1B;AAEuC;AAAA,IAAAS,KAAA,oBAAA7nC,OAAA;AAMrE;AACA;AACA;AACA;AACA;AACe,MAAM8nC,4BAA4B,SAASb,wBAAwB,CAAiB;EAAAp+C,YAAA,GAAAyL,IAAA;IAAA,SAAAA,IAAA;IACjGwgB,sDAAA,OAAA+yB,KAAK,EAAS,IAAI;EAAoB;EAEtC;AACF;AACA;EACE,IAAIh/B,IAAIA,CAAA,EAAS;IACf,OAAO8L,iDAAA,CAAKkzB,KAAK,EAAV,IAAS,CAAC;EACnB;EAEmBN,cAAcA,CAACrhC,MAAe,EAAQ;IACvD,IAAIA,MAAM,CAAC2C,IAAI,EAAEqU,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIntB,kBAAkB,CAAC,0BAA0B,CAAC;IACtFglB,iDAAA,CAAK8yB,KAAK,EAAV,IAAI,EAAS,IAAItc,IAAI,CAACrlB,MAAM,CAAC2C,IAAI,CAACqU,GAAG,CAA5B,CAAC;IACV,IAAI,CAACmqB,IAAI,CAAC,YAAY,EAAE1yB,iDAAA,CAAKkzB,KAAK,EAAV,IAAS,CAAC,CAAC;EACrC;;EAEA;AACF;AACA;AACA;AACA;EACE,aAAa/C,OAAOA,CAClB/7C,IAAY,EACZ67C,UAA6B,EACU;IACvC,MAAMwC,SAAS,GAAG,IAAIU,4BAA4B,CAAC,CAAC;IACpD,MAAM,KAAK,CAACX,QAAQ,CAACp+C,IAAI,EAAE67C,UAAU,EAAEwC,SAAS,EAAE,IAAI,CAAC;IACvD,OAAOA,SAAS;EAClB;AACF;;;;;AC5CkC;AACG;AACE;AAEvC,MAAMY,OAAO,GAAGD,8BAAO,CAAC;EAAEE,aAAa,EAAE;AAAK,CAAC,CAAC;AAEhD,MAAMC,yBAAyB,GAAIx3C,KAAU,IAAU;EACrD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,CAAC7H,WAAW,KAAKiK,MAAM,EAAE;IAC/E,OAAOF,SAAS,CAAClC,KAAK,EAAE,CAAC,CAACmlB,CAAC,EAAE1jB,CAAC,CAAC,KAAK,CAAC0jB,CAAC,EAAEqyB,yBAAyB,CAAC/1C,CAAC,CAAC,CAAC,CAAC;EACxE;EACA,IAAIsR,KAAK,CAAC0kC,OAAO,CAACz3C,KAAK,CAAC,EAAE;IACxB,OAAOA,KAAK,CAACpC,GAAG,CAAEuF,IAAI,IAAKq0C,yBAAyB,CAACr0C,IAAI,CAAC,CAAC;EAC7D;EACA,IAAI,OAAOnD,KAAK,KAAK,QAAQ,IAAI,IAAI1I,iCAAS,CAAC0I,KAAK,CAAC,CAAC3E,QAAQ,CAAC,EAAE,CAAC,KAAK2E,KAAK,EAAE;IAC5E,MAAM03C,EAAE,GAAG,IAAIpgD,iCAAS,CAAC0I,KAAK,CAAC;IAC/B03C,EAAE,CAACjF,MAAM,GAAG,MAAMiF,EAAE,CAACr8C,QAAQ,CAAC,EAAE,CAAC;IACjC,OAAOq8C,EAAE;EACX;EACA,OAAO13C,KAAK;AACd,CAAC;AAED,+CAAe;EACbusB,SAAS,EAAEA,CAAC,GAAG3oB,IAA+C,KAC5D0zC,OAAO,CAAC/qB,SAAS,CAACirB,yBAAyB,CAAC5zC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGA,IAAI,CAACmD,KAAK,CAAC,CAAC,CAAC,CAAC;EACzEm+B,KAAK,EAAEoS,OAAO,CAACpS;AACjB,CAAC;;;ACzB4B;AACE;AACmB;AACmB;AAUtB;AAC0B;AAWvB;AACqB;AAC7B;AAiC1C;AACA;AACA;AACA;AACe,MAAMyS,WAAW,SAAS9F,KAAK,CAAC;EAmB7C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE15C,WAAWA,CAAC;IACVE,IAAI;IACJoD,EAAE;IACFkL,IAAI;IACJixC,YAAY;IACZC,cAAc;IACd1D,YAAY;IACZ2D,aAAa;IACbC,oBAAoB;IACpB,GAAG5oC;EAUoC,CAAC,EAAE;IAC1C,KAAK,CAACA,OAAO,CAAC;IAACmhC,wBAAA,mBA5CN,IAAIl+B,GAAG,CAAyB,CAAC;IA6C1C,IAAI,CAACwlC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,cAAc,GAAGA,cAAc;IACpC,IAAI,CAAC1D,YAAY,GAAGA,YAAY;IAChC,IAAI,CAAC2D,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAAC1/C,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACoD,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACu8C,KAAK,GAAGrxC,IAAI;EACnB;EAEAsxC,qBAAqBA,CAAC;IAAEC;EAAoC,CAAC,EAAY;IACvE,MAAM;MAAE7C,OAAO;MAAE7c;IAAU,CAAC,GAAG,IAAI,CAACue,WAAW,CAAC,CAAC;IACjD,OAAO;MACL1B,OAAO,EACL6C,mBAAmB,CAAC/qB,GAAG,CAAC,SAAS,CAAC,IAAI+qB,mBAAmB,CAAC/qB,GAAG,CAAC,WAAW,CAAC,GAAGkoB,OAAO,GAAG,CAAC,CAAC;MAC3F7c,SAAS,EAAE0f,mBAAmB,CAAC/qB,GAAG,CAAC,WAAW,CAAC,GAAGqL,SAAS,GAAG,CAAC;IACjE,CAAC;EACH;EAEA2f,mBAAmBA,CAAA,EAAS;IAC1B,IAAI,IAAI,CAACC,QAAQ,IAAI,IAAI,EAAE;IAC3BrlC,KAAK,CAACpQ,IAAI,CAAC,IAAI,CAACy1C,QAAQ,CAACziC,IAAI,CAAC,CAAC,CAAC,CAC7BoC,MAAM,CAAEsgC,QAAQ,IAAK,IAAI,CAACC,qBAAqB,CAACD,QAAQ,CAAC,CAAC,CAC1Dz6C,GAAG,CAAEy6C,QAAQ,IAAK,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAAC,CAC5CtgC,MAAM,CAAE29B,MAAM,IAAKA,MAAM,CAACwC,mBAAmB,CAACM,IAAI,KAAK,CAAC,CAAC,CACzDrlC,OAAO,CAAEuiC,MAAM,IACdA,MAAM,CAAC+C,GAAG,CAAClE,MAAM,CAAClC,OAAO,CAACsD,aAAa,EAAE,IAAI,CAACsC,qBAAqB,CAACvC,MAAM,CAAC,CAC7E,CAAC;EACL;EAES1D,aAAaA,CAACl3C,OAA+B,EAAQ;IAC5D,KAAK,CAACk3C,aAAa,CAACl3C,OAAO,CAAC;IAC5B,IAAI,CAACq9C,mBAAmB,CAAC,CAAC;EAC5B;EAESrG,UAAUA,CAAC1N,OAAoB,EAAEj1B,OAA4C,EAAQ;IAC5F,KAAK,CAAC2iC,UAAU,CAAC1N,OAAO,EAAEj1B,OAAO,CAAC;IAClC,IAAI,CAACgpC,mBAAmB,CAAC,CAAC;EAC5B;EAEAO,QAAQA,CAAA,EAA8B;IACpC,IAAI,CAACtH,mBAAmB,CAAC,CAAC;IAC1B,OAAO;MAAEj5B,IAAI,EAAE;QAAEqU,GAAG,EAAE,IAAI,CAACykB,GAAG,CAAC/W,KAAK;QAAE7hC,IAAI,EAAE,IAAI,CAACi5C;MAAiB;IAAE,CAAC;EACvE;EAEA,MAAeE,UAAUA,CAACn5C,IAAY,EAAiB;IACrD,KAAK,CAACm5C,UAAU,CAACn5C,IAAI,CAAC;IACtB,MAAM0W,SAAS,GAAG,MAAM,IAAI,CAACkiC,GAAG,CAACjiC,YAAY,CAAC,CAAC;IAC/C+D,KAAK,CAACpQ,IAAI,CAAC,IAAI,CAACy1C,QAAQ,CAACziC,IAAI,CAAC,CAAC,CAAC,CAC7BoC,MAAM,CAAEsgC,QAAQ,IAAK,IAAI,CAACC,qBAAqB,CAACD,QAAQ,CAAC,CAAC,CAC1Dz6C,GAAG,CAAEy6C,QAAQ,IAAK,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAAC,CAC5CllC,OAAO,CAAEuiC,MAAM,IAAK;MACnBA,MAAM,CAAC+C,GAAG,CAAClE,MAAM,CAAClC,OAAO,CAACoD,aAAa,EAAE;QACvC1mC,SAAS;QACT,IAAI2mC,MAAM,CAACH,WAAW,IAAI,IAAI,CAACmD,QAAQ,CAAC,CAAC;MAC3C,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;EAEAH,UAAUA,CAACF,QAAgB,EAAkB;IAC3C,MAAM3C,MAAM,GAAG,IAAI,CAAC0C,QAAQ,CAAC1oC,GAAG,CAAC2oC,QAAQ,CAAC;IAC1C,IAAI3C,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI95C,qBAAqB,CAACy8C,QAAQ,CAAC;IAC7D,OAAO3C,MAAM;EACf;EAEA4C,qBAAqBA,CAACD,QAAgB,EAAW;IAC/C,OACE/F,UAAU,CAACqG,SAAS,KAAK,IAAI,CAACJ,UAAU,CAACF,QAAQ,CAAC,CAACzxB,MAAM,IACzD,IAAI,CAAC2xB,UAAU,CAACF,QAAQ,CAAC,CAACI,GAAG,CAACvE,UAAU,CAACsC,WAAW,CAAC,CAAC;EAE1D;EAEAoC,oBAAoBA,CAACP,QAAgB,EAAQ;IAC3C,MAAM3C,MAAM,GAAG,IAAI,CAAC6C,UAAU,CAACF,QAAQ,CAAC;IACxC3C,MAAM,CAAC+C,GAAG,CAACvE,UAAU,CAAC2B,UAAU,CAAC,CAAC;IAClCH,MAAM,CAAC9uB,MAAM,GAAG0rB,UAAU,CAACuG,YAAY;IACvCnD,MAAM,CAACwC,mBAAmB,GAAG,IAAIllC,GAAG,CAAC,CAAC;EACxC;;EAEA;AACF;AACA;AACA;EACE8lC,eAAeA,CAACr9C,EAAU,EAAQ;IAChC,IAAI,CAACm9C,oBAAoB,CAACn9C,EAAE,CAAC;IAC7B,IAAI,CAAC28C,QAAQ,CAAC7lC,MAAM,CAAC9W,EAAE,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;AACA;EACEs9C,YAAYA,CAACC,gBAAmC,EAAU;IACxD;IACA;IACA,MAAMv9C,EAAE,GAAG+G,MAAM,CAACG,IAAI,CAACsF,wCAAgB,CAAC,CAAC,CAAC,CAAC,CAAC5M,QAAQ,CAAC,QAAQ,CAAC;IAC9D,IAAIm6C,gBAAqB;IACzB,MAAME,MAAsB,GAAG;MAC7Bj6C,EAAE;MACFmrB,MAAM,EAAE0rB,UAAU,CAAC2G,8BAA8B;MACjDf,mBAAmB,EAAE,IAAIllC,GAAG,CAAC,CAAC;MAC9BuiC,WAAW,EAAE,KAAK;MAClBkD,GAAG,EAAE,IAAIxE,SAAS,CAChB+E,gBAAgB,EAChB,MAAM;QACJ,IAAI,CAACZ,QAAQ,CAAC7lC,MAAM,CAAC9W,EAAE,CAAC;QACxB,IAAI,CAAC04C,YAAY,CAAC14C,EAAE,EAAE+5C,gBAAgB,CAAC,CAAC,CAAC;MAC3C,CAAC,EACD;QACE,CAACnD,OAAO,CAACuD,eAAe,GAAIpgC,MAAM,IAAK;UACrCggC,gBAAgB,GAAGhgC,MAAM;UACzB,IAAI,CAACojC,oBAAoB,CAACn9C,EAAE,CAAC;QAC/B,CAAC;QACD;QACA;QACA,CAAC42C,OAAO,CAAC+B,OAAO,GAAG,OAAO;UAAE/7C,IAAI;UAAEkC,OAAO;UAAE2+C,KAAK;UAAE3D;QAAY,CAAC,EAAEf,MAAM,KAAK;UAC1E,IAAIj6C,OAAO,KAAKq5C,WAAW,EAAE,MAAM,IAAIb,2BAA2B,CAAC,CAAC;UAEpE,MAAM,IAAI,CAAC6E,YAAY,CAACn8C,EAAE,EAAE;YAAEpD,IAAI;YAAE6gD,KAAK;YAAE3D;UAAY,CAAC,EAAEf,MAAM,CAAC;UACjEkB,MAAM,CAAC9uB,MAAM,GAAG0rB,UAAU,CAACqG,SAAS;UACpCjD,MAAM,CAACH,WAAW,GAAGA,WAAW;UAChC,OAAO;YACL,IAAI,MAAM,IAAI,CAAC4D,aAAa,CAAC,CAAC,CAAC;YAC/B,IAAI5D,WAAW,IAAI,IAAI,CAACmD,QAAQ,CAAC,CAAC;UACpC,CAAC;QACH,CAAC;QACD,CAACrG,OAAO,CAAC6D,gBAAgB,GAAG,OAAO;UAAEvvC,IAAI;UAAE3G;QAAM,CAAC,EAAEw0C,MAAM,KAAK;UAC7D,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UAErE,QAAQtsC,IAAI;YACV,KAAKyrC,kBAAkB,CAACgH,SAAS;cAC/B;cACA,MAAM,IAAI,CAACvB,cAAc,CAACp8C,EAAE,EAAE;gBAAEkL,IAAI;gBAAE3G;cAAM,CAAC,EAAEw0C,MAAM,CAAC;cACtDkB,MAAM,CAACwC,mBAAmB,CAACnK,GAAG,CAAC/tC,KAAK,CAAC;cACrC;YACF,KAAKoyC,kBAAkB,CAACiH,WAAW;cACjC3D,MAAM,CAACwC,mBAAmB,CAAC3lC,MAAM,CAACvS,KAAK,CAAC;cACxC;YACF;cACE,MAAM,IAAIrF,aAAa,CAAC,8BAA8BgM,IAAI,EAAE,CAAC;UACjE;UAEA,OAAO;YACL2yC,YAAY,EAAEvmC,KAAK,CAACpQ,IAAI,CAAC+yC,MAAM,CAACwC,mBAAmB,CAAC;YACpDp9C,OAAO,EAAE,IAAI,CAACm9C,qBAAqB,CAACvC,MAAM;UAC5C,CAAC;QACH,CAAC;QACD,CAACrD,OAAO,CAACv3C,OAAO,GAAG,OAAO0a,MAAM,EAAEg/B,MAAM,KAAK;UAC3C,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,MAAM,IAAI,CAAC6E,aAAa,CAACr8C,EAAE,EAAE+Z,MAAM,EAAEg/B,MAAM,CAAC;UAC5C,OAAO,IAAI,CAAC7C,SAAS,CAAC,CAAC;QACzB,CAAC;QACD,CAACU,OAAO,CAAC3oC,IAAI,GAAG,OACd;UAAEyG,EAAE;UAAExU,SAAS,GAAG,IAAI,CAACb,OAAO;UAAE44C,YAAY;UAAEpR;QAAQ,CAAC,EACvDkS,MAAM,KACH;UACH,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIu3C,sBAAsB,CAACv3C,SAAS,CAAC;UAC7C;UAEA,MAAMmgB,UAAU,GAAG;YACjBngB,SAAS;YACT49C,UAAU,EAAE/E,MAAM;YAClBgF,eAAe,EAAE/9C,EAAE;YACnB6mC;UACF,CAAC;UACD,IAAIoR,YAAY,IAAIpR,OAAO,KAAK,IAAI,EAAE;YACpC,OAAO;cAAEqR,iBAAiB,EAAE,MAAM,IAAI,CAAC3Q,eAAe,CAAC7yB,EAAE,EAAE2L,UAAU;YAAE,CAAC;UAC1E;UACA,IAAI;YACF,OAAOw7B,QAAO,CAACpS,KAAK,CAClBoS,QAAO,CAAC/qB,SAAS,CAAC;cAChBktB,eAAe,EAAE,MAAM,IAAI,CAACpU,eAAe,CAACl1B,EAAE,EAAE;gBAAE,GAAG2L,UAAU;gBAAElS,MAAM,EAAE;cAAM,CAAC;YAClF,CAAC,CACH,CAAC;UACH,CAAC,CAAC,OAAOhH,KAAK,EAAE;YACd,MAAMwiC,UAAU,GAAG,MAAMd,iBAAiB,CAACn0B,EAAE,EAAE,IAAI,CAAC8gC,GAAG,CAAC;YACxD,IAAI7L,UAAU,CAACjkC,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI0xC,0BAA0B,CAACzN,UAAU,CAAC;YAC3E,MAAMxiC,KAAK;UACb;QACF,CAAC;QACD,CAACyvC,OAAO,CAACnP,WAAW,GAAG,OAAO;UAAE9qC,OAAO;UAAEuD,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAE05C,MAAM,KAAK;UAC9E,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIu3C,sBAAsB,CAACv3C,SAAS,CAAC;UAC7C;UAEA,MAAMmgB,UAAU,GAAG;YAAEngB,SAAS;YAAE49C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE/9C;UAAG,CAAC;UACzE,OAAO;YACLgO,SAAS,EAAEjH,MAAM,CAACG,IAAI,CAAC,MAAM,IAAI,CAACugC,WAAW,CAAC9qC,OAAO,EAAE0jB,UAAU,CAAC,CAAC,CAACzgB,QAAQ,CAAC,KAAK;UACpF,CAAC;QACH,CAAC;QACD,CAACg3C,OAAO,CAAClP,aAAa,GAAG,OACvB;UAAExB,MAAM;UAAES,GAAG;UAAE17B,IAAI;UAAE/K,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAC/C05C,MAAM,KACH;UACH,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACkE,SAAS,CAAC,EAAE;YACzC,MAAM,IAAIu3C,sBAAsB,CAACv3C,SAAS,CAAC;UAC7C;UAEA,MAAMmgB,UAAU,GAAG;YACjB,GAAG6lB,MAAM;YACThmC,SAAS;YACT49C,UAAU,EAAE/E,MAAM;YAClBgF,eAAe,EAAE/9C;UACnB,CAAC;UACD,OAAO;YACLgO,SAAS,EAAE,MAAM,IAAI,CAAC05B,aAAa,CAACz8B,IAAI,EAAE07B,GAAG,EAAEtmB,UAAU;UAC3D,CAAC;QACH,CAAC;QACD,CAACu2B,OAAO,CAACtP,UAAU,GAAG,OAAO;UAAEr8B,IAAI;UAAE/K,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAE05C,MAAM,KAAK;UAC1E,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACkE,SAAS,CAAC,EAAE,MAAM,IAAIu3C,sBAAsB,CAACv3C,SAAS,CAAC;UACtF,MAAMmgB,UAAU,GAAG;YAAEngB,SAAS;YAAE49C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE/9C;UAAG,CAAC;UACzE,MAAMgO,SAAS,GAAGpC,MAAM,CACtB,MAAM,IAAI,CAAC07B,UAAU,CAACz7B,MAAM,CAACZ,IAAI,CAAC,EAAEoV,UAAU,CAAC,EAC/C3X,QAAQ,CAACiC,SACX,CAAC;UACD,OAAO;YAAEqD;UAAU,CAAC;QACtB,CAAC;QACD,CAAC4oC,OAAO,CAAChP,cAAc,GAAG,OAAO;UAAEC,UAAU;UAAE3nC,SAAS,GAAG,IAAI,CAACb;QAAQ,CAAC,EAAE05C,MAAM,KAAK;UACpF,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,IAAI,CAAC,IAAI,CAACtB,SAAS,CAAC,CAAC,CAACl6C,QAAQ,CAACkE,SAAS,CAAC,EAAE,MAAM,IAAIu3C,sBAAsB,CAACv3C,SAAS,CAAC;UACtF,MAAMmgB,UAAU,GAAG;YAAEngB,SAAS;YAAE49C,UAAU,EAAE/E,MAAM;YAAEgF,eAAe,EAAE/9C;UAAG,CAAC;UACzE,MAAMgO,SAAS,GAAG,MAAM,IAAI,CAAC45B,cAAc,CAACC,UAAU,EAAExnB,UAAU,CAAC;UACnE,OAAO;YAAErS;UAAU,CAAC;QACtB,CAAC;QACD,CAAC4oC,OAAO,CAACoD,aAAa,GAAG,OAAOjgC,MAAM,EAAEg/B,MAAM,KAAK;UACjD,IAAI,CAAC,IAAI,CAAC8D,qBAAqB,CAAC78C,EAAE,CAAC,EAAE,MAAM,IAAIw3C,oBAAoB,CAAC,CAAC;UACrE,MAAM,IAAI,CAAC8E,oBAAoB,CAACt8C,EAAE,EAAE+Z,MAAM,EAAEg/B,MAAM,CAAC;UACnD,OAAO,IAAI;QACb;MACF,CACF;IACF,CAAC;IACD,IAAI,CAAC4D,QAAQ,CAACroC,GAAG,CAACtU,EAAE,EAAEi6C,MAAM,CAAC;IAC7B,OAAOj6C,EAAE;EACX;;EAEA;AACF;AACA;AACA;EACE,MAAMi+C,eAAeA,CAACrB,QAAgB,EAAiB;IACrD,IAAI,CAACE,UAAU,CAACF,QAAQ,CAAC,CAACI,GAAG,CAAClE,MAAM,CAAClC,OAAO,CAACyD,cAAc,EAAE,MAAM,IAAI,CAACqD,aAAa,CAAC,CAAC,CAAC;EAC1F;;EAEA;AACF;AACA;AACA;EACE,MAAMA,aAAaA,CAAA,EAAwB;IACzC,MAAM;MAAE3E;IAAO,CAAC,GAAGmF,MAAM,CAACC,QAAQ;IAClC,OAAO;MACLn+C,EAAE,EAAE,IAAI,CAACA,EAAE;MACXpD,IAAI,EAAE,IAAI,CAACA,IAAI;MACf0W,SAAS,EAAE,MAAM,IAAI,CAACkiC,GAAG,CAACjiC,YAAY,CAAC,CAAC;MACxCwlC,MAAM,EAAEA,MAAM,KAAK,SAAS,GAAG,GAAG,GAAGA,MAAM;MAC3C7tC,IAAI,EAAE,IAAI,CAACqxC;IACb,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEjB,WAAWA,CAAA,EAAa;IACtB,OAAO;MACL1B,OAAO,EAAE,IAAI,CAACtD,eAAe,IAAI,IAAI,GAAG;QAAE,CAAC,IAAI,CAACA,eAAe,GAAG,CAAC;MAAE,CAAC,GAAG,CAAC,CAAC;MAC3EvZ,SAAS,EAAE,IAAI,CAACmZ,SAAS,CAAC,CAAC,CACxB55B,MAAM,CAAE0R,CAAC,IAAKA,CAAC,KAAK,IAAI,CAACsoB,eAAe,CAAC,CACzCpxC,MAAM,CAAC,CAACupB,GAAG,EAAET,CAAC,MAAM;QAAE,GAAGS,GAAG;QAAE,CAACT,CAAC,GAAG,CAAC;MAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACjD,CAAC;EACH;AACF;;;;;;;ACtYA;AACA;AACA;AACA;AACe,MAAeowB,kBAAkB,CAAC;EAC/C;AACF;AACA;AACA;;EAGE;AACF;AACA;AACA;AACA;AACA;EACE,MAAMC,QAAQA,CAAC3hC,IAAU,EAA0B;IACjD,IAAI8K,KAAK,GAAG,CAAC;IACb,MAAMpV,MAAM,GAAG,EAAE;IACjB,IAAIu2B,OAAO;IACX,GAAG;MACD,IAAIA,OAAO,IAAI,IAAI,EAAEv2B,MAAM,CAACkG,IAAI,CAACqwB,OAAO,CAAC;MACzCA,OAAO,GAAG,MAAM,IAAI,CAACiH,UAAU,CAACpoB,KAAK,CAAC;MACtCA,KAAK,IAAI,CAAC;IACZ,CAAC,QACC,MAAM9K,IAAI,CAACpH,kBAAkB,CAACqzB,OAAO,CAACtpC,OAAO,CAAC,CAACkxB,IAAI,CACjD,MAAM,IAAI,EACV,MAAM,KACR,CAAC;IAEH,OAAOne,MAAM;EACf;AACF;;;;;;;;ACpCkE;AACvB;AACO;AACV;AACgC;AACtB;AACC;AAE5C,MAAMqsC,aAAa,GAAG13C,MAAM,CAACG,IAAI,CAAC,cAAc,CAAC;AACxD,MAAMw3C,eAAe,GAAG,UAAU;AAO3B,SAASC,SAASA,CAAChiD,OAAmB,EAAE2G,GAAe,EAAe;EAC3E,MAAMs7C,CAAC,GAAGJ,sCAAkB,CAAC7hD,OAAO,EAAE2G,GAAG,CAAC;EAC1C,MAAMw7C,EAAE,GAAGF,CAAC,CAACtzC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,MAAMyzC,EAAE,GAAGH,CAAC,CAACtzC,KAAK,CAAC,EAAE,CAAC;EACtB,OAAO;IACL27B,SAAS,EAAE6X,EAAE;IACbE,SAAS,EAAED;EACb,CAAC;AACH;AAEO,SAASE,iBAAiBA,CAAC37C,GAAgB,EAAE47C,QAA2B,EAAe;EAC5F,OAAOA,QAAQ,CAACh6C,MAAM,CAAC,CAAC;IAAE+hC,SAAS;IAAE+X;EAAU,CAAC,EAAEG,OAAO,KAAK;IAC5D,MAAMC,WAAW,GAAGr4C,MAAM,CAACyG,WAAW,CAAC,CAAC,CAAC;IACzC4xC,WAAW,CAAC3xC,aAAa,CAAC0xC,OAAO,GAAGT,eAAe,EAAE,CAAC,CAAC;IACvD,MAAMzzC,IAAI,GAAG7D,aAAa,CAAC,CAACL,MAAM,CAACyJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEy2B,SAAS,EAAEmY,WAAW,CAAC,CAAC;IACxE,OAAOT,SAAS,CAAC1zC,IAAI,EAAE+zC,SAAS,CAAC;EACnC,CAAC,EAAE17C,GAAG,CAAC;AACT;AAAC,IAAA+7C,uBAAA,oBAAAxrC,OAAA;AAAA,IAAAyrC,6BAAA,oBAAAj3B,OAAA;AAOD;AACA;AACA;AACA;AACe,MAAMk3B,sBAAsB,SAASnB,kBAAkB,CAAC;EAGrE;AACF;AACA;AACA;EACE1hD,WAAWA,CAAC8iD,sBAAoD,EAAE;IAChE,KAAK,CAAC,CAAC;IAAC92B,0CAAA,OAAA42B,6BAAA;IAPV32B,yCAAA,OAAA02B,uBAAuB;IAQrBz2B,oCAAA,CAAKy2B,uBAAuB,EAA5B,IAAI,EAA2BG,sBAAJ,CAAC;EAC9B;EA2BA;AACF;AACA;AACA;EACE,MAAMC,SAASA,CAAA,EAAoB;IACjC,OAAOn2B,gCAAA,CAAAg2B,6BAAA,MAAI,EAACI,UAAS,CAAC,CAAA9/B,IAAA,CAAf,IAAI,EAAY,KAAK;EAC9B;;EAEA;AACF;AACA;EACE+/B,aAAaA,CAAA,EAAW;IACtB,OAAOr2B,gCAAA,CAAAg2B,6BAAA,MAAI,EAACI,UAAS,CAAC,CAAA9/B,IAAA,CAAf,IAAI,EAAY,IAAI;EAC7B;EAWA;AACF;AACA;AACA;EACE,MAAMgwB,UAAUA,CAACgQ,YAAoB,EAA0B;IAC7D,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACJ,SAAS,CAAC,CAAC;IACrC,OAAOn2B,gCAAA,CAAAg2B,6BAAA,MAAI,EAACQ,mBAAkB,CAAC,CAAAlgC,IAAA,CAAxB,IAAI,EAAqBggC,YAAY,EAAEC,MAAM;EACtD;;EAEA;AACF;AACA;EACEE,cAAcA,CAACH,YAAoB,EAAiB;IAClD,MAAMC,MAAM,GAAG,IAAI,CAACF,aAAa,CAAC,CAAC;IACnC,OAAOr2B,gCAAA,CAAAg2B,6BAAA,MAAI,EAACQ,mBAAkB,CAAC,CAAAlgC,IAAA,CAAxB,IAAI,EAAqBggC,YAAY,EAAEC,MAAM;EACtD;AACF;AAAC,SAAAH,WA/DYM,IAAa,EAA4B;EAClD,MAAMC,eAAe,GAAIC,IAAgB,IAAa;IACpD,MAAMC,SAAS,GAAGxB,SAAS,CAACuB,IAAI,EAAEzB,aAAa,CAAC;IAChD,MAAM2B,SAAS,GAAGnB,iBAAiB,CAACkB,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IACzDv3B,oCAAA,CAAKy2B,uBAAuB,EAA5B,IAAI,EAA2B;MAC7BpY,SAAS,EAAEr7B,MAAM,CAACw0C,SAAS,CAACnZ,SAAS,EAAEv+B,QAAQ,CAACmB,SAAS,CAAC;MAC1Dm1C,SAAS,EAAEpzC,MAAM,CAACw0C,SAAS,CAACpB,SAAS,EAAEt2C,QAAQ,CAACmB,SAAS;IAC3D,CAH2B,CAAC;IAI5B,OAAO2e,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC;EACrC,CAAC;EAED,IAAIrjC,WAAW,CAACC,MAAM,CAACuM,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC,EAAE;IACpD,IAAI72B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC35C,MAAM,KAAK,EAAE,EAAE;MAC9C,MAAM,IAAInI,aAAa,CAAC,aAAa,EAAE,EAAE,EAAEirB,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC35C,MAAM,CAAC;IACjF;IACA,OAAOu6C,eAAe,CAACz3B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC;EACtD;EACA,IAAI,OAAO72B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,KAAK,QAAQ,EAAE,OAAO72B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC;EACzF,OAAOW,IAAI,GACPC,eAAe,CAAC1B,6BAAkB,CAAC/1B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC,CAAC,GACjEf,yBAAc,CAAC91B,oCAAA,CAAK62B,uBAAuB,EAA5B,IAA2B,CAAC,CAAC,CAAC9uB,IAAI,CAAC0vB,eAAe,CAAC;AACxE;AAAC,SAAAH,oBAiBmBF,YAAoB,EAAEC,MAAc,EAAiB;EACvE,MAAMO,SAAS,GAAG;IAChBnZ,SAAS,EAAEp7B,MAAM,CAACg0C,MAAM,CAAC5Y,SAAS,CAAC;IACnC+X,SAAS,EAAEnzC,MAAM,CAACg0C,MAAM,CAACb,SAAS;EACpC,CAAC;EACD,MAAM38B,GAAG,GAAG48B,iBAAiB,CAACmB,SAAS,EAAE,CAACR,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC3Y,SAAS;EACxE,OAAO,IAAID,aAAa,CAACp7B,MAAM,CAACyW,GAAG,EAAE3Z,QAAQ,CAACgC,gBAAgB,CAAC,CAAC;AAClE;;;;;;;ACvGkC;AAMR;AAC0B;AACb;AACM;AACgB;AACd;;AAEjD;AACA;AACA;AACA;AAHA,IAAA21C,QAAA,oBAAAxsC,OAAA;AAIe,MAAMysC,kBAAkB,SAAS3a,WAAW,CAAC;EAK1D;AACF;AACA;EACEjpC,WAAWA,CAAC2C,OAA+B,EAAE;IAC3C,KAAK,CAAC,CAAC;IANTspB,qCAAA,OAAA03B,QAAQ;IAONx0C,MAAM,CAACxM,OAAO,CAAC;IACf,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;EACE;EACA,MAAe4O,IAAIA,CAAA,EAAwB;IACzC,OAAO,IAAI,CAACq5B,UAAU,CAAC,CAAC;EAC1B;;EAEA;EACA,MAAeA,UAAUA,CAAA,EAAwB;IAC/C,MAAM,IAAI3oC,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAe8oC,WAAWA,CAAA,EAAwB;IAChD,MAAM,IAAI9oC,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAe+oC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI/oC,mBAAmB,CAAC,sCAAsC,CAAC;EACvE;;EAEA;EACA,MAAeipC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIjpC,mBAAmB,CAAC,8CAA8C,CAAC;EAC/E;EAEA,MAAe4oC,eAAeA,CAC5B7yB,EAAuB,EACvB;IAAE8R,QAAQ;IAAEknB,UAAU;IAAEr6B;EAAsD,CAAC,EACjD;IAC9B,IAAImT,QAAQ,IAAI,IAAI,IAAIknB,UAAU,IAAI,IAAI,IAAIr6B,MAAM,IAAI,IAAI,EAAE;MAC5D,MAAM,IAAI9V,aAAa,CAAC,8BAA8B,EAAE,UAAU,EAAE,IAAI,CAAC;IAC3E;IACA,MAAM;MAAEwmB,QAAQ;MAAE4pB,UAAU;MAAExlC,IAAI;MAAE8W,GAAG;MAAEiB,QAAQ;MAAEvD;IAAS,CAAC,GAC3D,OAAO6J,QAAQ,KAAK,UAAU,GAAG,MAAMA,QAAQ,CAAC9R,EAAE,CAAC,GAAG8R,QAAQ;IAEhE,MAAM+5B,YAAY,GAChBx8B,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GACP,MAAM,CAAC,YAAY;MAClB,IAAIyE,gCAAA,CAAK63B,QAAQ,EAAb,IAAY,CAAC,IAAI,IAAI,EAAE;QACzB,MAAM1X,OAAO,GAAG,MAAMxzB,UAAU,CAAC,IAAI,CAAC9V,OAAO,EAAE;UAAEgU;QAAO,CAAC,CAAC;QAC1D,IAAIs1B,OAAO,CAACluB,IAAI,KAAK,aAAa,EAAE;UAClC,MAAM,IAAIld,aAAa,CAAC,cAAc,EAAE,aAAa,EAAEorC,OAAO,CAACluB,IAAI,CAAC;QACtE;QACAmO,gCAAA,CAAKy3B,QAAQ,EAAb,IAAI,EAAY1X,OAAO,CAACriB,OAAZ,CAAC;MACf;MACA,IAAIkC,gCAAA,CAAK63B,QAAQ,EAAb,IAAY,CAAC,IAAI,IAAI,EAAE;QACzB,MAAM,IAAInhD,aAAa,CAAC,kDAAkD,CAAC;MAC7E;MAEA,IAAIyuC,UAAU,IAAI,IAAI,IAAIxlC,IAAI,IAAI,IAAI,EAAE;QACtC,MAAM,IAAItH,oBAAoB,CAAC,yDAAyD,CAAC;MAC3F;MACA,MAAM0rB,QAAQ,GAAG,MAAMhC,iBAAQ,CAACqlB,UAAU,CAAC;QAAElC,UAAU;QAAEr6B,MAAM;QAAEs6B;MAAW,CAAC,CAAC;MAC9E,OAAOphB,QAAQ,CAACkiB,SAAS,CAAC7iC,MAAM,CAAC2gB,QAAQ,CAACmiB,KAAK,EAAElmB,gCAAA,CAAK63B,QAAQ,EAAb,IAAY,CAAC,EAAEl4C,IAAI,CAAC;IACvE,CAAC,EAAE,CAAE;IAEP,MAAMq4C,QAAQ,GAAG,MAAM/yB,YAAY,CAAC;MAClCrqB,GAAG,EAAEyM,GAAG,CAAC8K,QAAQ;MACjBjG,EAAE,EAAE;QAAEtR,GAAG,EAAEyM,GAAG,CAAC6S,QAAQ;QAAE5D,SAAS,EAAEjT,MAAM,CAAC6I,EAAE,CAAC;QAAEuO,UAAU,EAAE;MAAG,CAAC;MAChEsD,IAAI,EAAE,IAAI,CAAClnB,OAAO;MAClBmnB,QAAQ,EAAE+5B,YAAY;MACtBthC,GAAG;MACHiB,QAAQ;MACRvD,QAAQ;MACRtJ;IACF,CAAC,CAAC;IACF,OAAOuL,OAAO,CAAC;MAAExb,GAAG,EAAEyM,GAAG,CAAC6S,QAAQ;MAAE5D,SAAS,EAAEjT,MAAM,CAAC20C,QAAQ,CAAC;MAAEv9B,UAAU,EAAE;IAAG,CAAC,CAAC;EACpF;AACF;;ACrGoC;AACoC;AAClB;AACL;AACA;AAE1C,MAAMw9B,GAAG,GAAG,IAAI;AAChB,MAAMC,WAAW,GAAG,IAAI;AACxB,MAAMC,gBAAgB,GAAG,IAAI;AAC7B,MAAMC,qBAAqB,GAAG,IAAI;AAClC,MAAMC,qBAAqB,GAAG,IAAI;;AAEzC;AACA;AACA;AACA;AACe,MAAMC,aAAa,SAASnb,WAAW,CAAC;EACrD;AACF;AACA;AACA;AACA;EACEjpC,WAAWA,CACAqkD,SAAoB,EACpBv5B,KAAa,EACJnoB,OAA+B,EACjD;IACA,KAAK,CAAC,CAAC;IAAC,KAJC0hD,SAAoB,GAApBA,SAAoB;IAAA,KACpBv5B,KAAa,GAAbA,KAAa;IAAA,KACJnoB,OAA+B,GAA/BA,OAA+B;IAGjD0hD,SAAS,CAACC,qBAAqB,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,aAAa,CAAC,EAAE,KAAK,CAAC;EAClF;;EAEA;AACF;AACA;EACE;EACA,MAAe/yC,IAAIA,CAAA,EAAwB;IACzC,OAAO,IAAI,CAACq5B,UAAU,CAAC,CAAC;EAC1B;;EAEA;EACA,MAAeA,UAAUA,CAAA,EAAwB;IAC/C,MAAM,IAAI3oC,mBAAmB,CAAC,6BAA6B,CAAC;EAC9D;;EAEA;EACA,MAAe+oC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI/oC,mBAAmB,CAAC,oCAAoC,CAAC;EACrE;;EAEA;EACA,MAAeipC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIjpC,mBAAmB,CAAC,oCAAoC,CAAC;EACrE;EAEA,MAAe4oC,eAAeA,CAC5B7yB,EAAuB,EACvB;IAAEmyB,OAAO;IAAEvzB;EAAqD,CAAC,GAAG,CAAC,CAAC,EACxC;IAC9B,IAAIuzB,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIloC,mBAAmB,CAAC,iCAAiC,CAAC;IACrF,IAAI2U,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI/V,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE+V,SAAS,CAAC;IAElF,MAAMsa,KAAK,GAAG/hB,MAAM,CAAC6I,EAAE,CAAC;IACxB,IAAIusC,MAAM,GAAG,CAAC;IACd,MAAMC,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IAC9B,MAAMC,eAAe,GAAGp6C,MAAM,CAACG,IAAI,CAACoM,SAAS,CAAC;IAC9C,MAAM8tC,MAAM,GAAG,EAAE;IACjB,OAAOH,MAAM,KAAKrzB,KAAK,CAACloB,MAAM,EAAE;MAC9B,MAAM27C,YAAY,GAAGJ,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGC,YAAY,GAAGC,eAAe,CAACz7C,MAAM,GAAG,GAAG;MACrF,MAAM47C,SAAS,GAAGL,MAAM,GAAGI,YAAY,GAAGzzB,KAAK,CAACloB,MAAM,GAAGkoB,KAAK,CAACloB,MAAM,GAAGu7C,MAAM,GAAGI,YAAY;MAC7F,MAAM51C,MAAM,GAAG1E,MAAM,CAACyJ,KAAK,CACzBywC,MAAM,KAAK,CAAC,GAAGC,YAAY,GAAGC,eAAe,CAACz7C,MAAM,GAAG47C,SAAS,GAAGA,SACrE,CAAC;MACD,IAAIL,MAAM,KAAK,CAAC,EAAE;QAChB,IAAIM,YAAY,GAAG91C,MAAM,CAACgC,aAAa,CAAC,IAAI,CAAC+Z,KAAK,EAAE,CAAC,CAAC;QACtD+5B,YAAY,GAAG91C,MAAM,CAACgC,aAAa,CAACmgB,KAAK,CAACloB,MAAM,EAAE67C,YAAY,CAAC;QAC/DA,YAAY,GAAG91C,MAAM,CAAC+1C,UAAU,CAACL,eAAe,CAACz7C,MAAM,EAAE67C,YAAY,CAAC;QACtEA,YAAY,IAAIJ,eAAe,CAACM,IAAI,CAACh2C,MAAM,EAAE81C,YAAY,EAAE,CAAC,EAAEJ,eAAe,CAACz7C,MAAM,CAAC;QACrFkoB,KAAK,CAAC6zB,IAAI,CAACh2C,MAAM,EAAE81C,YAAY,EAAE,CAAC,EAAE,GAAG,GAAGA,YAAY,CAAC;MACzD,CAAC,MAAM;QACL3zB,KAAK,CAAC6zB,IAAI,CAACh2C,MAAM,EAAE,CAAC,EAAEw1C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACnD;MACAF,MAAM,CAAC9oC,IAAI,CAAC7M,MAAM,CAAC;MACnBw1C,MAAM,IAAIK,SAAS;IACrB;IACA,MAAM18B,QAAQ,GAAG,MAAMw8B,MAAM,CAACl8C,MAAM,CAClC,OAAOw8C,QAAQ,EAAEz2C,IAAI,EAAE2C,CAAC,KAAK;MAC3B,MAAM8zC,QAAQ;MACd,OAAO,IAAI,CAACX,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEE,gBAAgB,EAAE/yC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE3C,IAAI,CAAC;IACtF,CAAC,EACD3E,OAAO,CAACC,OAAO,CAACQ,MAAM,CAACyJ,KAAK,CAAC,CAAC,CAAC,CACjC,CAAC;IACD,MAAMyS,UAAU,GAAG,CAAC2B,QAAQ,CAAClX,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE7C,OAAOkR,OAAO,CAAC;MAAExb,GAAG,EAAEyM,GAAG,CAAC6S,QAAQ;MAAE5D,SAAS,EAAE8O,KAAK;MAAE3K;IAAW,CAAC,CAAC;EACrE;EAEA,MAAewkB,WAAWA,CAACma,UAAkB,EAAuB;IAClE,IAAIX,MAAM,GAAG,CAAC;IACd,MAAMtkD,OAAO,GAAGoK,MAAM,CAACG,IAAI,CAAC06C,UAAU,CAAC;IACvC,MAAMR,MAAM,GAAG,EAAE;IACjB,OAAOH,MAAM,KAAKtkD,OAAO,CAAC+I,MAAM,EAAE;MAChC,MAAM27C,YAAY,GAAGJ,MAAM,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG;MACrD,MAAMK,SAAS,GACbL,MAAM,GAAGI,YAAY,GAAG1kD,OAAO,CAAC+I,MAAM,GAAG/I,OAAO,CAAC+I,MAAM,GAAGu7C,MAAM,GAAGI,YAAY;MACjF,MAAM51C,MAAM,GAAG1E,MAAM,CAACyJ,KAAK,CAACywC,MAAM,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGK,SAAS,GAAGA,SAAS,CAAC;MACzE,IAAIL,MAAM,KAAK,CAAC,EAAE;QAChBx1C,MAAM,CAACgC,aAAa,CAAC,IAAI,CAAC+Z,KAAK,EAAE,CAAC,CAAC;QACnC/b,MAAM,CAACgC,aAAa,CAAC9Q,OAAO,CAAC+I,MAAM,EAAE,CAAC,CAAC;QACvC/I,OAAO,CAAC8kD,IAAI,CAACh2C,MAAM,EAAE,CAAC,GAAG,CAAC,EAAEw1C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACzD,CAAC,MAAM;QACL3kD,OAAO,CAAC8kD,IAAI,CAACh2C,MAAM,EAAE,CAAC,EAAEw1C,MAAM,EAAEA,MAAM,GAAGK,SAAS,CAAC;MACrD;MACAF,MAAM,CAAC9oC,IAAI,CAAC7M,MAAM,CAAC;MACnBw1C,MAAM,IAAIK,SAAS;IACrB;IACA,MAAM18B,QAAQ,GAAG,MAAMw8B,MAAM,CAACl8C,MAAM,CAClC,OAAOw8C,QAAQ,EAAEz2C,IAAI,EAAE2C,CAAC,KAAK;MAC3B,MAAM8zC,QAAQ;MACd,OAAO,IAAI,CAACX,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEI,qBAAqB,EAAEjzC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE3C,IAAI,CAAC;IAC3F,CAAC,EACD3E,OAAO,CAACC,OAAO,CAACQ,MAAM,CAACyJ,KAAK,CAAC,CAAC,CAAC,CACjC,CAAC;IACD,OAAOoU,QAAQ,CAAClX,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;EACjC;AACF;;;;;;;;;AC5HqF;AACxB;AAEF;AACT;AAAA,IAAAm0C,mBAAA,oBAAAhuC,OAAA;AAAA,IAAAiuC,2BAAA,oBAAAz5B,OAAA;AAMlD;AACA;AACA;AACA;AACe,MAAM05B,oBAAoB,SAAS3D,kBAAkB,CAAC;EACnE;AACF;AACA;EACE1hD,WAAWA,CAAUqkD,SAAoB,EAAE;IACzC,KAAK,CAAC,CAAC;IAACr4B,wCAAA,OAAAo5B,2BAAA;IAIVn5B,uCAAA,OAAAk5B,mBAAmB;IAEnB;IAAAhN,wBAAA,8CACsC,KAAK;IAAA,KARtBkM,SAAoB,GAApBA,SAAoB;IAEvCA,SAAS,CAACC,qBAAqB,CAAC,IAAI,EAAE,CAAC,YAAY,EAAE,qBAAqB,CAAC,EAAE,KAAK,CAAC;EACrF;EAOA;AACF;AACA;AACA;EACE,MAAMgB,WAAWA,CAAA,EAAkB;IACjC,MAAM;MAAEljD;IAAQ,CAAC,GAAG,MAAMwqB,8BAAA,CAAAw4B,2BAAA,MAAI,EAACG,oBAAmB,CAAC,CAAAriC,IAAA,CAAzB,IAAI,CAAuB;IACrD,MAAMsiC,MAAM,GAAG,CAACpjD,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;IACnD,MAAMqjD,MAAM,GAAG,CAACrjD,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;IACnD,IACE,CAAC4vB,eAAe,CAAC,GAAGwzB,MAAM,CAAC,KAC1B,CAAC,IAAI,CAACE,mCAAmC,IAAI,CAAC1zB,eAAe,CAAC,GAAGyzB,MAAM,CAAC,CAAC,EAE1E,MAAM,IAAIvjD,uBAAuB,CAAC,yBAAyB,EAAE,GAAGsjD,MAAM,CAAC;IACzEt5B,kCAAA,CAAKi5B,mBAAmB,EAAxB,IAAI,EAAuBv7C,OAAO,CAACC,OAAO,CAAC,CAApB,CAAC;EAC1B;EAeA;AACF;AACA;EACE,MAAM87C,mBAAmBA,CAAA,EAA8B;IACrD,OAAO/4B,8BAAA,CAAAw4B,2BAAA,MAAI,EAACG,oBAAmB,CAAC,CAAAriC,IAAA,CAAzB,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAM0iC,UAAUA,CAAC1C,YAAoB,EAAEzxC,MAAM,GAAG,KAAK,EAAmC;IACtF,MAAMmb,8BAAA,CAAAw4B,2BAAA,MAAI,EAACS,YAAW,CAAC,CAAA3iC,IAAA,CAAjB,IAAI,CAAe;IACzB,MAAMnU,MAAM,GAAG1E,MAAM,CAACyJ,KAAK,CAAC,CAAC,CAAC;IAC9B/E,MAAM,CAACgC,aAAa,CAACmyC,YAAY,EAAE,CAAC,CAAC;IACrC,MAAMh7B,QAAQ,GAAG,MAAM,IAAI,CAACm8B,SAAS,CAACY,IAAI,CACxClB,GAAG,EACHC,WAAW,EACXvyC,MAAM,GAAG,IAAI,GAAG,IAAI,EACpB,IAAI,EACJ1C,MACF,CAAC;IACD,MAAM+2C,aAAa,GAAG59B,QAAQ,CAAC,CAAC,CAAC;IACjC,OAAOA,QAAQ,CAAClX,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG80C,aAAa,CAAC,CAAC5iD,QAAQ,CAAC,OAAO,CAAC;EAClE;;EAEA;AACF;AACA;AACA;EACE,MAAMgwC,UAAUA,CAACgQ,YAAoB,EAA0B;IAC7D,OAAO,IAAIkB,aAAa,CAAC,IAAI,CAACC,SAAS,EAAEnB,YAAY,EAAE,MAAM,IAAI,CAAC0C,UAAU,CAAC1C,YAAY,CAAC,CAAC;EAC7F;AACF;AAAC,eAAA2C,aAAA,EA/CqC;EAAA,IAAAE,sBAAA;EAClC,CAAAA,sBAAA,GAAAj6B,kCAAA,CAAKq5B,mBAAmB,EAAxB,IAAuB,CAAC,cAAAY,sBAAA,cAAAA,sBAAA,GAAxB75B,kCAAA,CAAKi5B,mBAAmB,EAAxB,IAAI,EAAyB,IAAI,CAACG,WAAW,CAAC,CAAvB,CAAC;EACxB,OAAOx5B,kCAAA,CAAKq5B,mBAAmB,EAAxB,IAAuB,CAAC;AACjC;AAAC,eAAAI,qBAAA,EAEuD;EACtD,IAAIr9B,QAAQ,GAAG,MAAM,IAAI,CAACm8B,SAAS,CAACY,IAAI,CAAClB,GAAG,EAAEG,qBAAqB,EAAE,IAAI,EAAE,IAAI,CAAC;EAChF,IAAIh8B,QAAQ,CAAClf,MAAM,KAAK,CAAC,EAAEkf,QAAQ,GAAGA,QAAQ,CAAClX,QAAQ,CAAC,CAAC,CAAC;EAC1D,OAAO;IACL5O,OAAO,EAAE,CAAC8lB,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACxiB,IAAI,CAAC,GAAG;EAC3D,CAAC;AACH;;ACvDkC;AAEmD;AAEhF,MAAMsgD,MAAM,GAAG,4BAA4B;AAE3C,eAAeC,UAAUA,CAC9BC,QAAsB,EACtBhyB,MAAc,EACd7W,MAAe,EACfzW,GAAW,EACC;EACZ,MAAMshB,QAAQ,GAAG,MAAMg+B,QAAQ,CAAClzB,OAAO,CAA6B;IAClEkB,MAAM,EAAE,mBAAmB;IAC3B7W,MAAM,EAAE;MAAE2oC,MAAM;MAAEhzB,OAAO,EAAE;QAAEkB,MAAM;QAAE7W;MAAO;IAAE;EAChD,CAAC,CAAC;EACF,IAAI6K,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAI1lB,aAAa,CAAC,yBAAyB,CAAC;EACxE,IAAI,EAAEoE,GAAG,IAAIshB,QAAQ,CAAC,EAAE;IACtB,MAAM,IAAI1lB,aAAa,CAAC,OAAOoE,GAAG,uBAAuButB,IAAI,CAACC,SAAS,CAAClM,QAAQ,CAAC,EAAE,CAAC;EACtF;EACA,OAAOA,QAAQ,CAACthB,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACe,MAAMu/C,eAAe,SAASld,WAAW,CAAC;EACvD;AACF;AACA;;EAOE;AACF;AACA;EACEjpC,WAAWA,CAACkmD,QAAsB,EAAEp7B,KAAa,EAAEnoB,OAA+B,EAAE;IAClF,KAAK,CAAC,CAAC;IACP,IAAI,CAACujD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACp7B,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACnoB,OAAO,GAAGA,OAAO;EACxB;;EAEA;AACF;AACA;EACE;EACA,MAAe4O,IAAIA,CAAA,EAAwB;IACzC,OAAO,IAAI,CAACq5B,UAAU,CAAC,CAAC;EAC1B;;EAEA;EACA,MAAeA,UAAUA,CAAA,EAAwB;IAC/C,MAAM,IAAI3oC,mBAAmB,CAAC,4BAA4B,CAAC;EAC7D;;EAEA;EACA,MAAe+oC,aAAaA,CAAA,EAA+B;IACzD,MAAM,IAAI/oC,mBAAmB,CAAC,mCAAmC,CAAC;EACpE;;EAEA;EACA,MAAeipC,cAAcA,CAAA,EAA+B;IAC1D,MAAM,IAAIjpC,mBAAmB,CAAC,mCAAmC,CAAC;EACpE;;EAEA;EACA,MAAe4oC,eAAeA,CAC5B7yB,EAAuB,EACvB;IAAEmyB,OAAO;IAAEvzB;EAAqD,CAAC,GAAG,CAAC,CAAC,EACxC;IAC9B,IAAIuzB,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIloC,mBAAmB,CAAC,mCAAmC,CAAC;IACvF,IAAI2U,SAAS,IAAI,IAAI,EAAE,MAAM,IAAI/V,aAAa,CAAC,WAAW,EAAE,UAAU,EAAE+V,SAAS,CAAC;IAElF,OAAOqvC,UAAU,CACf,IAAI,CAACC,QAAQ,EACb,iBAAiB,EACjB;MAAEE,cAAc,EAAE,CAAC,GAAG,IAAI,CAACt7B,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;MAAE9S,EAAE;MAAEpB;IAAU,CAAC,EACjE,UACF,CAAC;EACH;;EAEA;EACA,MAAem0B,WAAWA,CAAC9qC,OAAe,EAAuB;IAC/D,MAAMqR,SAAS,GAAG,MAAM20C,UAAU,CAChC,IAAI,CAACC,QAAQ,EACb,aAAa,EACb;MACEE,cAAc,EAAE,CAAC,GAAG,IAAI,CAACt7B,KAAK,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;MAC9C7qB,OAAO,EAAEoK,MAAM,CAACG,IAAI,CAACvK,OAAO,CAAC,CAACiD,QAAQ,CAAC,QAAQ;IACjD,CAAC,EACD,WACF,CAAC;IACD,OAAOmH,MAAM,CAACG,IAAI,CAAC8G,SAAS,EAAE,QAAQ,CAAC;EACzC;AACF;;;;;;;;AChG4B;AAE+B;AACT;AACkB;AAEpE,MAAM+0C,cAAc,GAAG,OAAO;AAC9B,MAAMC,cAAc,GAAG,OAAO;AAC9B,MAAMC,qBAAqB,GAAG,YAAY;AAAC,IAAAC,SAAA,oBAAArvC,OAAA;AAAA,IAAAsvC,6BAAA,oBAAA96B,OAAA;AAAA,IAAA+6B,gBAAA,oBAAAvvC,OAAA;AAU3C;AACA;AACA;AACA;AACA;AACe,MAAMwvC,sBAAsB,SAASjF,kBAAkB,CAAC;EAIrE;AACF;AACA;EACE,IAAIwE,QAAQA,CAAA,EAAiB;IAC3B,IAAIp6B,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC,IAAI,IAAI,EAAE,MAAM,IAAIzkD,wBAAwB,CAAC,8BAA8B,CAAC;IAC9F,OAAO+pB,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC;EACvB;EAiDA;AACF;AACA;EACExmD,WAAWA,CAACkmD,UAAuB,EAAE;IACnC,KAAK,CAAC,CAAC;IAACl6B,0CAAA,OAAAy6B,6BAAA;IA9DV;IACAx6B,yCAAA,OAAAu6B,SAAS;IAqCTv6B,yCAAA,OAAAy6B,gBAAgB;IAyBdx6B,oCAAA,CAAKs6B,SAAS,EAAd,IAAI,EAAaN,UAAJ,CAAC;IACd,IAAIp6B,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC,IAAI,IAAI,IAAIhF,MAAM,IAAI,IAAI,EAAE;MAC5C,MAAM,IAAIz/C,wBAAwB,CAChC,iGACF,CAAC;IACH;EACF;;EAEA;AACF;AACA;AACA;EACE,MAAM6kD,WAAWA,CAAA,EAAyB;IACxC,MAAMV,QAAQ,GAAG,MAAMt5B,gCAAA,CAAA65B,6BAAA,MAAI,EAACI,YAAW,CAAC,CAAA3jC,IAAA,CAAjB,IAAI,CAAe;IAC1C,MAAM5e,OAAO,GAAI,MAAM4hD,QAAQ,CAAClzB,OAAO,CAAC;MACtCkB,MAAM,EAAE,qBAAqB;MAC7B7W,MAAM,EAAE;QAAE,CAAC2oC,MAAM,GAAG;UAAE5jD,OAAO,EAAEikD;QAAe;MAAE;IAClD,CAAC,CAA6C;IAC9C,OAAO/hD,OAAO,CAAC0hD,MAAM,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMc,WAAWA,CAAC1kD,OAAO,GAAG,KAAKikD,cAAc,KAAKC,cAAc,EAAE,EAAwB;IAC1F,MAAMJ,QAAQ,GAAG,MAAMt5B,gCAAA,CAAA65B,6BAAA,MAAI,EAACI,YAAW,CAAC,CAAA3jC,IAAA,CAAjB,IAAI,CAAe;IAC1C,MAAM5e,OAAO,GAAI,MAAM4hD,QAAQ,CAAClzB,OAAO,CAAC;MACtCkB,MAAM,EAAE,qBAAqB;MAC7B7W,MAAM,EAAE;QAAE,CAAC2oC,MAAM,GAAG;UAAE5jD;QAAQ;MAAE;IAClC,CAAC,CAA6C;IAC9C,OAAOkC,OAAO,CAAC0hD,MAAM,CAAC;EACxB;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMV,WAAWA,CAAA,EAAkB;IACjC,MAAMyB,WAAW,GAAG,MAAM,IAAI,CAACC,cAAc,CAAC,CAAC;IAC/C,MAAMv7C,IAAI,GAAG,CAACs7C,WAAW,EAAEV,cAAc,EAAEC,cAAc,CAAU;IACnE,IAAI,CAACt0B,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAC3B,MAAM,IAAIvJ,uBAAuB,CAAC,4BAA4B,EAAE,GAAGuJ,IAAI,CAAC;EAC5E;;EAEA;AACF;AACA;EACE,MAAMu7C,cAAcA,CAAA,EAAoB;IACtC,MAAMd,QAAQ,GAAG,MAAMt5B,gCAAA,CAAA65B,6BAAA,MAAI,EAACI,YAAW,CAAC,CAAA3jC,IAAA,CAAjB,IAAI,CAAe;IAC1C,MAAM+jC,KAAK,GAAI,MAAMf,QAAQ,CAAClzB,OAAO,CAAC;MAAEkB,MAAM,EAAE;IAAkB,CAAC,CAGlE;IACD,MAAM9xB,OAAO,GAAG6kD,KAAK,CAACjB,MAAM,CAAC,EAAE5jD,OAAO;IACtC,IAAIA,OAAO,IAAI,IAAI,EACjB,MAAM,IAAIL,wBAAwB,CAChC,2EACF,CAAC;IACH,OAAOK,OAAO;EAChB;;EAEA;AACF;AACA;AACA;EACE,MAAM8wC,UAAUA,CAACgQ,YAAoB,EAA4B;IAC/D,MAAM,IAAI,CAAC4D,WAAW,CAAC,CAAC;IACxB,MAAMZ,QAAQ,GAAG,MAAMt5B,gCAAA,CAAA65B,6BAAA,MAAI,EAACI,YAAW,CAAC,CAAA3jC,IAAA,CAAjB,IAAI,CAAe;IAC1C,MAAMvgB,OAAO,GAAG,MAAMsjD,UAAU,CAC9BC,QAAQ,EACR,cAAc,EACd;MAAEE,cAAc,EAAE,CAAC,GAAGlD,YAAY,GAAG,EAAE,IAAI,EAAE,IAAI;IAAE,CAAC,EACpD,WACF,CAAC;IACD,OAAO,IAAIiD,eAAe,CAACD,QAAQ,EAAEhD,YAAY,EAAEvgD,OAAO,CAAC;EAC7D;AACF;AAAC,eAAAukD,uBAAA,EAxImE;EAChE,IAAI,EAAE,UAAU,IAAI1F,MAAM,CAAC,IAAIA,MAAM,CAAC2F,QAAQ,IAAI,IAAI,EAAE;EACxD,MAAMjB,QAAQ,GAAG1E,MAAM,CAAC2F,QAAwB;EAChD,MAAM/kD,OAAO,GAAG,MAAM8jD,QAAQ,CAAClzB,OAAO,CAAS;IAAEkB,MAAM,EAAE;EAAqB,CAAC,CAAC;EAChF,IAAI9xB,OAAO,IAAI,IAAI,EAAE,MAAM,IAAII,aAAa,CAAC,qCAAqC,CAAC;EACnF,IAAI,CAACJ,OAAO,CAAC4W,UAAU,CAACutC,qBAAqB,CAAC,EAAE;EAChD,OAAOL,QAAQ;AACjB;AAAC,eAAAkB,oBAAA,EAEkE;EACjEt9C,UAAU,CAAC,MAAM03C,MAAM,CAAC6F,aAAa,CAAC,IAAI7sB,KAAK,CAAC,yBAAyB,CAAC,CAAC,CAAC;EAC5E,OAAO,IAAI5wB,OAAO,CAA4BC,OAAO,IAAK;IACxD,MAAMwsC,OAAO,GACXxD,KAAsE,IAC7D;MACT,IAAIA,KAAK,CAACyU,MAAM,CAACjsB,IAAI,CAACksB,IAAI,KAAK,aAAa,EAAE;MAC9C/F,MAAM,CAACgG,mBAAmB,CAAC,0BAA0B,EAAEnR,OAAO,CAAC;MAC/DxsC,OAAO,CAACgpC,KAAK,CAACyU,MAAM,CAACpB,QAAQ,CAAC;IAChC,CAAC;IACD1E,MAAM,CAACiG,gBAAgB,CAAC,0BAA0B,EAAEpR,OAAO,CAAC;IAC5DvsC,UAAU,CAAC,MAAM;MACf03C,MAAM,CAACgG,mBAAmB,CAAC,0BAA0B,EAAEnR,OAAO,CAAC;MAC/DxsC,OAAO,CAACuH,SAAS,CAAC;IACpB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ;AAAC,eAAAy1C,aAAA,EAI2C;EAAA,IAAAd,sBAAA;EAC1C,CAAAA,sBAAA,GAAAj6B,oCAAA,CAAK46B,gBAAgB,EAArB,IAAoB,CAAC,cAAAX,sBAAA,cAAAA,sBAAA,GAArB75B,oCAAA,CAAKw6B,gBAAgB,EAArB,IAAI,EAAsB,CAAC,OAAAgB,sBAAA,EAAAC,qBAAA,KAAY;IACrC,CAAAD,sBAAA,GAAA57B,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC,cAAAkB,sBAAA,cAAAA,sBAAA,GAAdx7B,oCAAA,CAAKs6B,SAAS,EAAd,IAAI,GAAAmB,qBAAA,GACD,MAAM/6B,gCAAA,CAAA65B,6BAAA,MAAI,EAACS,sBAAqB,CAAC,CAAAhkC,IAAA,CAA3B,IAAI,CAAyB,cAAAykC,qBAAA,cAAAA,qBAAA,GAAM,MAAM/6B,gCAAA,CAAA65B,6BAAA,MAAI,EAACW,mBAAsB,CAAC,CAAAlkC,IAAA,CAA5B,IAAI,CADzC,CAAC;IAEd,IAAI4I,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC,IAAI,IAAI,EAAE;MAC1B,MAAM,IAAIzkD,wBAAwB,CAChC,mIACF,CAAC;IACH;IACA,MAAMK,OAAO,GAAG,MAAM0pB,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC,CAACxzB,OAAO,CAAS;MAAEkB,MAAM,EAAE;IAAqB,CAAC,CAAC;IACtF,IAAI9xB,OAAO,IAAI,IAAI,EAAE,MAAM,IAAII,aAAa,CAAC,qCAAqC,CAAC;IACnF,MAAMiJ,IAAI,GAAG,CAACrJ,OAAO,CAACwM,KAAK,CAAC23C,qBAAqB,CAACv9C,MAAM,CAAC,EAAE,QAAQ,CAAU;IAC7E,IAAI,CAACgpB,eAAe,CAAC,GAAGvmB,IAAI,CAAC,EAAE,MAAM,IAAIvJ,uBAAuB,CAAC,UAAU,EAAE,GAAGuJ,IAAI,CAAC;IACrF,OAAOqgB,oCAAA,CAAK06B,SAAS,EAAd,IAAa,CAAC;EACvB,CAAC,EAAE,CAbiB,CAAC;EAcrB,OAAO16B,oCAAA,CAAK46B,gBAAgB,EAArB,IAAoB,CAAC;AAC9B;;ACnDF;AACA;AACA;AACA;AACe,MAAekB,YAAY,CAAC;;ACpCpC,MAAM/5B,gBAAoC,GAAG;EAClDrf,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfjP,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8W,OAAO,EAAE;QACPub,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0xB,WAAuC,GAAG;EACrDr5C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf+a,UAAU,EAAE;QACV5e,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD4nD,OAAO,EAAE;QACPv1B,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMK,qBAAyC,GAAG;EACvDiO,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6nD,GAAG,EAAE;QACHx1B,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDl2B,OAAO,EAAE;QACPsyB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+5B,OAAO,EAAE;QACP1H,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8nD,QAAoC,GAAG;EAClDx5C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf6xB,IAAI,EAAE;QACJ11B,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoD,IAAI,EAAE;QACJ31B,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDioD,GAAG,EAAE;QACH51B,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkoD,aAAyC,GAAG;EACvD55C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+pC,GAAG,EAAE;QACH1X,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,YAAY;cAClB2H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAEtO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF,CAAC;MACDmoD,QAAQ,EAAE;QACR91B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmyB,qBAAiD,GAAG;EAC/D95C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf/xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8W,OAAO,EAAE;QACPub,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoyB,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoD,UAAU,EAAE;QACVj2B,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoD,SAAS,EAAE;QACTl2B,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwoD,uBAAmD,GAAG;EACjEl6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,yBAAyB;IACpCC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoD,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoD,UAAU,EAAE;QACVj2B,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoD,SAAS,EAAE;QACTl2B,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyoD,iBAA6C,GAAG;EAC3Dn6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfmyB,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwV,MAAM,EAAE;QACN6c,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0oD,iBAA6C,GAAG;EAC3Dp6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf/xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8W,OAAO,EAAE;QACPub,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoyB,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2zC,SAAS,EAAE;QACTthB,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwwC,QAAoC,GAAG;EAClDliC,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRzH,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2oD,sBAAkD,GAAG;EAChEr6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,wBAAwB;IACnCC,eAAe,EAAE;MACf4D,QAAQ,EAAE;QACRzH,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD44B,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4oD,eAA2C,GAAG;EACzDt6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfmyB,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2zC,SAAS,EAAE;QACTthB,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,YAAY;cAClB2H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAEtO,IAAI,EAAE;gBAAM;cAAE;YACjC;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy2B,kBAAsC,GAAG;EACpDnoB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfjb,MAAM,EAAE;QACNoX,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6oD,oBAAgD,GAAG;EAC9Dv6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACf/xB,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8W,OAAO,EAAE;QACPub,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD6D,QAAQ,EAAE;QACRzH,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoD,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8oD,aAAyC,GAAG;EACvDx6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+oD,aAAyC,GAAG;EACvDz6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf8yB,aAAa,EAAE;QACb32B,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMipD,qBAAiD,GAAG;EAC/D36C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACf0C,QAAQ,EAAE;QACRvG,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmE,MAAM,EAAE;QACNkuB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8W,OAAO,EAAE;QACPub,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMizB,eAA2C,GAAG;EACzD56C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfh0B,OAAO,EAAE;QACPmwB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmpD,UAAsC,GAAG;EACpD76C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfkzB,UAAU,EAAE;QACV/2B,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqpD,gBAA4C,GAAG;EAC1D/6C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfozB,UAAU,EAAE;QACVj3B,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqO,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMupD,cAA0C,GAAG;EACxDj7C,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;;AChiB6B;AAEvB,MAAM+hC,sBAA+B,GAAG;EAC7CH,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,kBAAkB;IAChCgT,UAAU,EAAE,IAAI;IAChB3F,cAAc,EAAE,cAAc;IAC9B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo0B,eAAwB,GAAG;EACtCwN,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEq3B,gBAAcA;AACxB,CAAC;AAEM,MAAM7nB,iBAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNnN,YAAY,EAAE,kBAAkB;IAChCgT,UAAU,EAAE,IAAI;IAChB3F,cAAc,EAAE,QAAQ;IACxB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM6hC,gBAA4B,GAAG;EAC1CD,aAAa,EAAE,OAAO;EACtBzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF,CAAC;EACD8hC,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMM,gBAAyB,GAAG;EACvCR,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEs3B,qBAA2BA;AACrC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCpoB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEu3B,uBAA6BA;AACvC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCroB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEw3B,iBAAuBA;AACjC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCtoB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAEy3B,sBAA4BA;AACtC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCvoB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE03B,oBAA0BA;AACpC,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCxoB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE23B,aAAmBA;AAC7B,CAAC;AAEM,MAAMO,KAAyB,GAAG;EACvCzoB,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE43B,qBAA2BA;AACrC,CAAC;;ACtFgD;AACI;AACN;AAsCxC,MAAMO,QAAQ,SAASjoB,0BAAwB,CAAC;EAGrD;AACF;AACA;AACA;AACA;EACEviC,WAAWA,CAAC+hC,KAAa,EAAE/qB,OAAgC,EAAE;IAAA,IAAAb,IAAA,EAAAysB,iBAAA;IAC3D,IAAIb,KAAK,KAAK3wB,SAAS,EAAE;MACvB,MAAM,IAAIrR,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACiX,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAM6rB,QAAgC,GAAG;MACvCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,gCAAgC;IACvD,MAAMC,eAAe,GACnBhsB,OAAO,CAACisB,gBAAgB,IAAIjsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,GAChE,GAAGhsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAG7rB,OAAO;MACVisB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAhtB,IAAA,IAAAysB,iBAAA,GAAE5rB,OAAO,CAACmsB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI5rB,OAAO,CAACosB,OAAO,cAAAjtB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAAC+sB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACnB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACE0oB,WAAWA,CACTn2B,IAAc,EACdtd,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjB0zC,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbr2B,IAAc,EACdtd,OAAuC,EACL;IAClC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjB4zC,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdv2B,IAA2B,EAC3Btd,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjB8zC,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBz2B,IAA6B,EAC7Btd,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBg0C,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ32B,IAAuB,EACvBtd,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBk0C,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpB72B,IAA4B,EAC5Btd,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBo0C,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClB/2B,IAA0B,EAC1Btd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBs0C,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBj3B,IAAmB,EACnBtd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjBw0C,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdn3B,IAA2B,EAC3Btd,OAAwC,EACzB;IACf,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjB00C,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBr3B,IAAmB,EACnBtd,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE/O,IAAI;MAAEtd;IAAQ,CAAC,EACjB40C,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACExpD,OAAOA,CAAC4U,OAA+B,EAA4B;IACjE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE60C,oBAAoB,CAAC;EACrE;;EAEA;AACF;AACA;AACA;EACEvC,UAAUA,CAACtyC,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE80C,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;EACEhT,GAAGA,CAAC9hC,OAA2B,EAAwB;IACrD,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE+0C,gBAAgB,CAAC;EACjE;AACF;AACA;AACA,MAAM35B,mBAAU,GAAGmQ,6BAA2B,CAACE,8BAAO,EAAE,WAAY,KAAK,CAAC;AAE1E,MAAMioB,wBAAkD,GAAG;EACzDx9B,IAAI,EAAE,MAAM;EACZma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,YAAY;cAAE2H,KAAK,EAAE;gBAAE2G,IAAI,EAAE;kBAAEtO,IAAI,EAAE;gBAAM;cAAE;YAAE;UAC/D;QACF;MACF;IACF,CAAC;IACD,GAAG,EAAE;MACHqnC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,eAAe;EAC5BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMw4B,4BAAsD,GAAG;EAC7D19B,IAAI,EAAE,UAAU;EAChBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,aAAqB2lB;IACnC,CAAC;IACD,GAAG,EAAE;MACH7gB,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,eAAe;EAC5BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAM04B,6BAAuD,GAAG;EAC9D59B,IAAI,EAAE,qBAAqB;EAC3Bma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE;QAAM;MAAE;IACtC,CAAC;IACD,GAAG,EAAE;MACHqnC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,gBAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAM44B,qCAA+D,GAAG;EACtE99B,IAAI,EAAE,8BAA8B;EACpCma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,iBAAyBkmB;IACvC,CAAC;IACD,GAAG,EAAE;MACHphB,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAM84B,2BAAqD,GAAG;EAC5Dh+B,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgBiO;IAC9B,CAAC;IACD,GAAG,EAAE;MACHnJ,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMg5B,mCAA6D,GAAG;EACpEl+B,IAAI,EAAE,2BAA2B;EACjCma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,eAAuBqmB;IACrC,CAAC;IACD,GAAG,EAAE;MACHvhB,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMk5B,iCAA2D,GAAG;EAClEp+B,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,eAAuBqmB;IACrC,CAAC;IACD,GAAG,EAAE;MACHvhB,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMo5B,iCAA2D,GAAG;EAClEt+B,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,aAAqBwmB;IACnC,CAAC;IACD,GAAG,EAAE;MACH1hB,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMs5B,6BAAuD,GAAG;EAC9Dx+B,IAAI,EAAE,qBAAqB;EAC3Bma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE,CAAC,CAAC;IACP,GAAG,EAAE;MACHC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YAAEvoB,IAAI,EAAE;cAAEtO,IAAI,EAAE,WAAW;cAAEi2B,SAAS,EAAE;YAAgB;UAAE;QACrE;MACF,CAAC;MACDqR,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMw5B,+BAAyD,GAAG;EAChE1+B,IAAI,EAAE,mBAAmB;EACzBma,UAAU,EAAE,MAAM;EAClBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,eAAuB2mB;IACrC,CAAC;IACD,GAAG,EAAE;MACH7hB,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDI,WAAW,EAAEpF,KAAgB;EAC7BiF,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,sBAAsB,EAAEA,iBAAiB,CAAC;EAC7DqF,SAAS,EAAE,MAAM;EACjBzV,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAMy5B,oBAA8C,GAAG;EACrD3+B,IAAI,EAAE,UAAU;EAChBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,eAAuB2mB;IACrC,CAAC;IACD,GAAG,EAAE;MACH7hB,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,iBAAiB,CAAC;EACrCpQ,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAM05B,uBAAiD,GAAG;EACxD5+B,IAAI,EAAE,cAAc;EACpBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,UAAkB4mB;IAChC,CAAC;IACD,GAAG,EAAE;MACH9hB,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,iBAAiB,CAAC;EACrCpQ,UAAUA,qBAAAA;AACZ,CAAC;AACD,MAAM25B,gBAA0C,GAAG;EACjD7+B,IAAI,EAAE,MAAM;EACZma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACV/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE,YAAY;UAAE2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QAAE;MAC/D;IACF,CAAC;IACD,GAAG,EAAE;MACHqnC,UAAU,EAAE9E,kBAAkB;MAC9B+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,gBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,iBAAiB,CAAC;EACrCpQ,UAAUA,qBAAAA;AACZ,CAAC;;AC1gBkC;AAMG;AACmD;AAC5B;AAEc;AAO3E;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM65B,YAAY,SAASrE,YAAY,CAAC;EAGrD;AACF;AACA;AACA;AACA;AACA;EACE5nD,WAAWA,CAACksD,WAAmB,EAAE;IAAEn3B,aAAa,GAAG;EAAmC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC5F,KAAK,CAAC,CAAC;IAEP,IAAI3yB,OAA2B;IAC/B,MAAMgmC,UAAU,GAAG,MAAOC,IAAsB,IAAsB;MACpE,IAAIjmC,OAAO,IAAI,IAAI,EAAE,OAAOA,OAAO;MACnCA,OAAO,GAAG,CAAC,MAAM,IAAI,CAAC02C,GAAG,CAACwQ,UAAU,CAACjhB,IAAI,CAAC,EAAEihB,UAAU;MACtD,OAAOlnD,OAAO;IAChB,CAAC;IAED,IAAI,CAAC02C,GAAG,GAAG,IAAIkT,QAAW,CAACE,WAAW,EAAE;MACtC3jB,uBAAuB,EAAE,IAAI;MAC7BC,kBAAkB,EAAE,CAClB3T,qBAAqB,CAAC,UAAU,EAAEuT,UAAU,EAAE,OAAO,EAAE,OAAO,EAAErT,aAAa,CAAC,EAC9EL,uBAAuB,CAAEJ,IAA+C,IAAK;QAC3E,IAAIr0B,OAAO,GAAG,EAAE;QAChB,IAAI,QAAQ,IAAIq0B,IAAI,EAAE;UACpBr0B,OAAO,IAAI,IAAIq0B,IAAI,CAACnZ,MAAM,GACxBmZ,IAAI,CAAC63B,SAAS,IAAI,IAAI,GAAG,OAAO73B,IAAI,CAAC63B,SAAS,EAAE,GAAG;UACnD;UAAA,GACC73B,IAAI,CAAC+G,IAAI,IAAI,IAAI,GAAG,KAAKlH,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC+G,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE;QACjE;QACA,IAAIzgB,KAAK,CAAC0kC,OAAO,CAAChrB,IAAI,CAAC,EAAE;UACvBr0B,OAAO,IAAI,KAAKq0B,IAAI,CACjB7uB,GAAG,CACD4D,CAAC,IACA,GAAGA,CAAC,CAACmF,IAAI,IAAInF,CAAC,CAAC0+C,GAAG,CAACG,IAAI,IAAI7+C,CAAC,CAAC0+C,GAAG,CAACI,GAAG,KAAK9+C,CAAC,CAACpJ,OAAO,GAAGoJ,CAAC,CAAC4wB,OAAO,IAAI,IAAI,GAAG,KAAK5wB,CAAC,CAAC4wB,OAAO,GAAG,GAAG,EAAE,EACnG,CAAC,CACAv0B,IAAI,CAAC,IAAI,CAAC,EAAE;QACjB;QACA,OAAOzF,OAAO;MAChB,CAAC,CAAC;IAEN,CAAC,CAAC;IACF,IAAI,CAAC64C,GAAG,CAACrQ,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE4nC,uCAAmBA;IAAC,CAAC,CAAC;IAC7D,IAAI,CAACgR,GAAG,CAACrQ,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE6nC,gDAA4BA;IAAC,CAAC,CAAC;EACxE;EAEA,MAAMmJ,mBAAmBA,CACvBD,UAAkB,EAClBE,UAAmC,EACpB;IACf,IAAI;MACF,MAAMib,MAAM,GAAG,MAAM,IAAI,CAACtT,GAAG,CAAC6R,eAAe,CAAC;QAAExjC,IAAI,EAAE8pB,UAAU;QAAEj6B,OAAO,EAAE;UAAEm6B;QAAW;MAAE,CAAC,CAAC;MAC5F,MAAMkX,QAAQ,GAAG+D,MAAM,CAAC/D,QAAQ,CAAC5iD,GAAG,CAAC,CAAC;QAAE+I,IAAI;QAAE,GAAG69C;MAAQ,CAAC,KAAKA,OAAO,CAAC;MACvE,MAAM1gD,GAAG,GAAG;QAAE,GAAGygD,MAAM;QAAE/D;MAAS,CAAC;MACnC;MACA,OAAO18C,GAAG;IACZ,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYhB,6BAAS,IAAIgB,KAAK,CAACU,UAAU,KAAK,GAAG,EAAE;QAC1D,MAAM,IAAI5K,aAAa,CAACkK,KAAK,CAACxK,OAAO,CAAC;MACxC;MACA,MAAMwK,KAAK;IACb;EACF;;EAEA;EACA,MAAM4mC,OAAOA,CAACnkB,IAAY,EAAiB;IACzC,MAAM,IAAIjrB,mBAAmB,CAAC,kDAAkD,CAAC;EACnF;EAEA,MAAMqqD,uBAAuBA,CAC3Brb,UAAkB,EAClBE,UAAmC,EACrB;IACd,IAAI;MACF,OAAO,MAAM,IAAI,CAAC2H,GAAG,CAAC2R,WAAW,CAAC;QAAEtjC,IAAI,EAAE8pB,UAAU;QAAEj6B,OAAO,EAAE;UAAEm6B;QAAW;MAAE,CAAC,CAAC;IAClF,CAAC,CAAC,OAAO1mC,KAAK,EAAE;MACd,IAAIA,KAAK,YAAYhB,6BAAS,IAAIgB,KAAK,CAACU,UAAU,KAAK,GAAG,EAAE;QAC1D,MAAM,IAAI5K,aAAa,CAACkK,KAAK,CAACxK,OAAO,CAAC;MACxC;MACA,MAAMwK,KAAK;IACb;EACF;;EAEA;EACA,MAAM8hD,WAAWA,CAACr/B,IAAY,EAAgB;IAC5C,MAAM,IAAIjrB,mBAAmB,CAAC,kDAAkD,CAAC;EACnF;EAEA,MAAMsxC,oBAAoBA,CACxBza,QAAmC,EACnCmY,UAAkB,EAClBE,UAAmC,EACjB;IAClB,IAAI;MACF,MAAM,IAAI,CAAC2H,GAAG,CAAC2S,gBAAgB,CAAC;QAAE3yB,QAAQ;QAAEz0B,MAAM,EAAE4sC,UAAU;QAAEj6B,OAAO,EAAE;UAAEm6B;QAAW;MAAE,CAAC,CAAC;MAC1F,OAAO,IAAI;IACb,CAAC,CAAC,MAAM;MACN,OAAO,KAAK;IACd;EACF;;EAEA;EACA,MAAMqC,QAAQA,CAAC1a,QAAmC,EAAE5L,IAAY,EAAoB;IAClF,MAAM,IAAIjrB,mBAAmB,CAAC,kDAAkD,CAAC;EACnF;EAEA,MAAMG,OAAOA,CAAA,EAAoB;IAC/B,OAAO,CAAC,MAAM,IAAI,CAAC02C,GAAG,CAAC12C,OAAO,CAAC,CAAC,EAAEA,OAAO;EAC3C;AACF;;AC1IA;AACA;AACA;AACA;AACA;AACO,SAASoqD,aAAaA,CAACniC,CAAS,EAAU;EAC/C,OAAOA,CAAC,CAACrH,OAAO,CAAC,KAAK,EAAGqQ,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAACo5B,WAAW,CAAC,CAAC,CAAC;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASC,aAAaA,CAACriC,CAAS,EAAU;EAC/C,OAAOA,CAAC,CAACrH,OAAO,CAAC,QAAQ,EAAGqQ,KAAK,IAAK,IAAIA,KAAK,CAACs5B,WAAW,CAAC,CAAC,EAAE,CAAC;AAClE;;;;;AChB8D;AAGnB;AACQ;AAUvB;AAC+B;AACX;AAEhD,MAAM;EAAEG,YAAY,EAAEC;AAAa,CAAC,GAAGF,8BAAS;;AA+BhD;;AAMA;AACA;AACA;;AAwMA;AACA,MAAMG,eAAe,GAAG,KAAK;AAC7B;AACA,MAAMC,eAAe,GAAG,KAAK;AAEtB,SAASzO,IAAIA,CAClB0O,OAAgB,EAChB,GAAGzhD,IAA0C,EACvC;EACN,MAAM,CAAC+oC,SAAS,EAAE,GAAG2Y,IAAI,CAAC,GAAG1hD,IAAI;EACjCyhD,OAAO,CAACE,aAAa,CAAC5O,IAAI,CAAChK,SAAS,EAAE,GAAG2Y,IAAI,CAAC;AAChD;AAEA,SAASE,UAAUA,CAACH,OAAgB,EAAEI,SAAqB,EAAQ;EACjE,IAAIA,SAAS,IAAI,IAAI,EAAE;IACrB,MAAM,IAAIppD,wBAAwB,CAAC,CAAC;EACtC;EACAgpD,OAAO,CAACK,MAAM,CAAC,aAAa,EAAED,SAAS,CAACjX,OAAO,CAACn2C,IAAI,CAAC;EACrDgtD,OAAO,CAACM,IAAI,GAAGF,SAAS;EACxB,IAAIA,SAAS,EAAEjX,OAAO,EAAEoX,KAAK,IAAI,IAAI,EAAE;IACrCH,SAAS,CAACjX,OAAO,CAACoX,KAAK,CAACP,OAAO,CAAC;EAClC;EACA;EACA,KAAKQ,aAAa,CAACR,OAAO,CAAC;AAC7B;;AAEA;;AAaO,SAASS,YAAYA,CAACT,OAAgB,EAAEU,SAAwB,EAAEC,KAAe,EAAQ;EAC9FX,OAAO,CAACK,MAAM,CAACK,SAAS,EAAE,UAAUV,OAAO,CAACY,OAAO,GAAG,EAAED,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC;EACpE,IAAID,SAAS,KAAKV,OAAO,CAACY,OAAO,EAAE;EACnCZ,OAAO,CAACY,OAAO,GAAGF,SAAS;EAC3BpP,IAAI,CAAC0O,OAAO,EAAE,eAAe,EAAEU,SAAS,CAAC;AAC3C;AAEO,SAASG,WAAWA,CAACb,OAAgB,EAAEc,QAAkC,EAAQ;EACtFd,OAAO,CAACe,MAAM,GAAGD,QAAQ;EACzBxP,IAAI,CAAC0O,OAAO,EAAE,cAAc,EAAEc,QAAQ,CAAC;AACzC;AAEA,SAAS/I,IAAIA,CAACiI,OAAgB,EAAEjtD,OAAuB,EAAQ;EAC7DitD,OAAO,CAACK,MAAM,CAAC,cAAc,EAAEttD,OAAO,CAACi0B,MAAM,EAAEj0B,OAAO,CAACod,MAAM,CAAC;EAC9D6vC,OAAO,CAACgB,UAAU,CAACjJ,IAAI,CAAC/F,QAAO,CAAC9qB,SAAS,CAAC;IAAEkoB,OAAO,EAAE,KAAK;IAAE,GAAGr8C;EAAQ,CAAC,CAAC,CAAC;AAC5E;AAEO,SAASm8C,MAAMA,CAAC8Q,OAAgB,EAAEh5B,MAAc,EAAE7W,MAAc,GAAG,CAAC,CAAC,EAAQ;EAClF4nC,IAAI,CAACiI,OAAO,EAAE;IAAEh5B,MAAM;IAAE7W;EAAO,CAAC,CAAC;AACnC;AAEA,eAAeqwC,aAAaA,CAACR,OAAgB,EAAiB;EAC5D,IAAIA,OAAO,CAACiB,oBAAoB,EAAE;EAClC,MAAMC,KAAK,GAAGlB,OAAO,CAACmB,YAAY;EAClC,IAAID,KAAK,CAACplD,MAAM,KAAK,CAAC,EAAE;EACxB,MAAM8hB,KAAK,GAAGsjC,KAAK,CAACn9C,SAAS,CAAEs+B,MAAM,IAAKA,MAAM,CAAC+e,KAAK,CAACpB,OAAO,EAAEA,OAAO,CAACM,IAAI,CAAC,CAAC;EAC9E,IAAI1iC,KAAK,KAAK,CAAC,CAAC,EAAE;EAClBoiC,OAAO,CAACmB,YAAY,GAAGD,KAAK,CAACxuC,MAAM,CAAC,CAACgW,CAAC,EAAE1kB,CAAC,KAAK4Z,KAAK,KAAK5Z,CAAC,CAAC;EAC1Dg8C,OAAO,CAACiB,oBAAoB,GAAG,IAAI;EACnC,MAAMb,SAAqB,GAAG,MAAMc,KAAK,CAACtjC,KAAK,CAAC,CAACykB,MAAM,CAAC2d,OAAO,EAAEA,OAAO,CAACM,IAAI,CAAC;EAC9EN,OAAO,CAACiB,oBAAoB,GAAG,KAAK;EACpCd,UAAU,CAACH,OAAO,EAAEI,SAAS,CAAC;AAChC;AAEO,eAAeiB,aAAaA,CACjCrB,OAAgB,EAChBoB,KAA6B,EAC7B/e,MAAwE,EAC1D;EACd,MAAM1G,OAAO,GAAG,IAAIj/B,OAAO,CAAC,CAACC,OAAO,EAAEoR,MAAM,KAAK;IAC/CiyC,OAAO,CAACmB,YAAY,CAACzyC,IAAI,CAAC;MACxB0yC,KAAK;MACL/e,MAAMA,CAAA,EAAG;QACP,MAAM5jC,GAAG,GAAG4jC,MAAM,CAAC,CAAC;QACpB,OAAO;UAAE,GAAG5jC,GAAG;UAAE6iD,KAAK,EAAE;YAAE,GAAG7iD,GAAG,CAAC6iD,KAAK;YAAE3kD,OAAO;YAAEoR;UAAO;QAAE,CAAC;MAC7D;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,KAAKyyC,aAAa,CAACR,OAAO,CAAC;EAC3B,OAAOrkB,OAAO;AAChB;AAEA,eAAe4lB,aAAaA,CAACvB,OAAgB,EAAEjtD,OAAuB,EAAiB;EACrF,MAAM;IAAEo2C,OAAO;IAAEmY,KAAK,EAAEE;EAAG,CAAC,GAAGxB,OAAO,CAACM,IAAI;EAC3C,MAAMF,SAAS,GAAG,MAAM1jD,OAAO,CAACC,OAAO,CAACwsC,OAAO,CAAC6W,OAAO,EAAEjtD,OAAO,EAAEyuD,EAAE,CAAC,CAAC;EACtErB,UAAU,CAACH,OAAO,EAAEI,SAAS,CAAC;EAC9B;EACA,IACErtD,OAAO,EAAEod,MAAM,EAAE9O,IAAI,EAAEogD,OAAO,GAAG,CAAC,CAAC,EAAE32B,EAAE,KAAK,qBAAqB;EACjE;EACAs1B,SAAS,EAAEjX,OAAO,CAACn2C,IAAI,KAAK,aAAa,EACzC;IACA,MAAMopB,KAAK,GAAG4jC,OAAO,CAAC5jC,KAAK,CAAC,CAAC;IAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI7mB,iBAAiB,CAAC,eAAe,CAAC;IAC/D,MAAM4Q,KAAK,GAAGpT,OAAO,EAAEod,MAAM,EAAE9O,IAAI,EAAEogD,OAAO,GAAG,CAAC,CAAC,EAAEt7C,KAAK;IACxDmrC,IAAI,CAAC0O,OAAO,EAAE,aAAa,EAAE95C,eAAe,CAACC,KAAK,EAAEiW,KAAK,GAAG,CAAC,CAAC,CAAC;EACjE;AACF;AAEA,eAAeslC,cAAcA,CAAC1B,OAAgB,EAAiB;EAC7D,IAAIA,OAAO,CAAC2B,qBAAqB,EAAE;EACnC3B,OAAO,CAAC2B,qBAAqB,GAAG,IAAI;EACpC,OAAO3B,OAAO,CAAC4B,aAAa,CAAC9lD,MAAM,GAAG,CAAC,EAAE;IACvC,MAAM/I,OAAO,GAAGitD,OAAO,CAAC4B,aAAa,CAACC,KAAK,CAAC,CAAC;IAC7C,IAAI9uD,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIwC,iBAAiB,CAAC,CAAC;IAClD,IAAI;MACF,MAAMgsD,aAAa,CAACvB,OAAO,EAAEjtD,OAAO,CAAC;IACvC,CAAC,CAAC,OAAOwK,KAAK,EAAE;MACdW,WAAW,CAACX,KAAK,CAAC;MAClB+zC,IAAI,CAAC0O,OAAO,EAAE,OAAO,EAAE,IAAInpD,2BAA2B,CAAC0G,KAAK,EAAExK,OAAO,CAAC,CAAC;IACzE;EACF;EACAitD,OAAO,CAAC2B,qBAAqB,GAAG,KAAK;AACvC;AAEO,SAASnR,UAAUA,CAACwP,OAAgB,EAAQ;EACjDA,OAAO,CAACgB,UAAU,CAACc,KAAK,CAAC,CAAC;EAC1BC,YAAY,CAAC/B,OAAO,CAACgC,cAAc,CAAC;AACtC;AAEA,SAASC,IAAIA,CAACjC,OAAgB,EAAQ;EACpC+B,YAAY,CAAC/B,OAAO,CAACgC,cAAc,CAAC;EACpChC,OAAO,CAACgC,cAAc,GAAGplD,UAAU,CAAC,MAAM;IACxCsyC,MAAM,CAAC8Q,OAAO,EAAE,iBAAiB,EAAE;MAAE3d,MAAM,EAAE;IAAO,CAAC,CAAC;IACtD2d,OAAO,CAACgC,cAAc,GAAGplD,UAAU,CAAC,MAAM;MACxC4zC,UAAU,CAACwP,OAAO,CAAC;MACnB1O,IAAI,CAAC0O,OAAO,EAAE,OAAO,EAAE,IAAIrpD,wBAAwB,CAAC,CAAC,CAAC;IACxD,CAAC,EAAEopD,eAAe,CAAC;EACrB,CAAC,EAAED,eAAe,CAAC;AACrB;AAEA,SAASoC,SAASA,CAAClC,OAAgB,EAAE3+C,IAAY,EAAQ;EACvD,MAAMtO,OAAO,GAAGi/C,QAAO,CAACnS,KAAK,CAACx+B,IAAI,CAAC;EACnC2+C,OAAO,CAACK,MAAM,CAAC,kBAAkB,EAAEttD,OAAO,CAACi0B,MAAM,EAAEj0B,OAAO,CAACod,MAAM,CAAC;EAClE,IAAIpd,OAAO,CAACqD,EAAE,IAAI,IAAI,EAAE;IACtB,MAAM+rD,QAAQ,GAAGnC,OAAO,CAACoC,aAAa,CAAC/3C,GAAG,CAACtX,OAAO,CAACqD,EAAE,CAAC;IACtD,IAAI+rD,QAAQ,IAAI,IAAI,EAAE;MACpB7Q,IAAI,CAAC0O,OAAO,EAAE,OAAO,EAAE,IAAI5sD,YAAY,CAAC,8BAA8BL,OAAO,CAACqD,EAAE,EAAE,CAAC,CAAC;MACpF;IACF;IACA,IAAI;MACF+rD,QAAQ,CAACpvD,OAAO,CAAC;IACnB,CAAC,SAAS;MACRitD,OAAO,CAACoC,aAAa,CAACl1C,MAAM,CAACna,OAAO,CAACqD,EAAE,CAAC;IAC1C;IACA;EACF;EACA,IAAIrD,OAAO,CAACi0B,MAAM,KAAK,kBAAkB,EAAE;IACzCsqB,IAAI,CAAC0O,OAAO,EAAE,SAAS,EAAEjtD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACtO,OAAO,CAAC;IACrD;EACF;EACA,IAAIA,OAAO,CAACi0B,MAAM,KAAK,sBAAsB,EAAE;IAC7C,IAAIj0B,OAAO,CAACod,MAAM,CAACkyC,UAAU,KAAKrC,OAAO,CAACsC,UAAU,IAAItC,OAAO,CAACsC,UAAU,IAAI,IAAI,EAAE;MAClFL,IAAI,CAACjC,OAAO,CAAC;IACf;IACA;EACF;EACAA,OAAO,CAAC4B,aAAa,CAAClzC,IAAI,CAAC3b,OAAO,CAAC;EACnC,KAAK2uD,cAAc,CAAC1B,OAAO,CAAC;AAC9B;AAEO,eAAehqC,IAAIA,CAACgqC,OAAgB,EAAEh5B,MAAc,EAAE7W,MAAW,EAAgB;EACtF,OAAO,IAAIzT,OAAO,CAAC,CAACC,OAAO,EAAEoR,MAAM,KAAK;IACtC,MAAM3X,EAAE,GAAG4pD,OAAO,CAACuC,iBAAiB;IACpCvC,OAAO,CAACuC,iBAAiB,IAAI,CAAC;IAC9BvC,OAAO,CAACoC,aAAa,CAAC13C,GAAG,CACvBtU,EAAE,EACDrD,OAAkE,IAAK;MACtE,IAAIA,OAAO,CAACwK,KAAK,IAAI,IAAI,EAAE;QAAA,IAAAilD,oBAAA;QACzB,MAAMprD,OAAO,IAAAorD,oBAAA,GAAGzvD,OAAO,CAACwK,KAAK,CAAC8D,IAAI,CAAC,CAAC,CAAC,CAACtO,OAAO,cAAAyvD,oBAAA,cAAAA,oBAAA,GAAI,EAAE;QACnDz0C,MAAM,CAAC,IAAItX,gBAAgB,CAAC1D,OAAO,CAACwK,KAAK,CAACxK,OAAO,GAAGqE,OAAO,CAAC,CAAC;MAC/D,CAAC,MAAMuF,OAAO,CAAC5J,OAAO,CAACyV,MAAM,CAAC;IAChC,CACF,CAAC;IACDuvC,IAAI,CAACiI,OAAO,EAAE;MAAEh5B,MAAM;MAAE5wB,EAAE;MAAE+Z;IAAO,CAAC,CAAC;EACvC,CAAC,CAAC;AACJ;AAEO,eAAe61B,UAAUA,CAC9Bga,OAAgB,EAChByC,iBAA2B,EAC3BC,WAAqB,EACrB;EAAEv7B,GAAG;EAAE,GAAGw7B;AAA+B,CAAC,EAC3B;EACf3C,OAAO,CAAC9U,QAAQ,GAAG;IAAE/jB,GAAG;IAAE,GAAGw7B;EAAe,CAAC;EAE7C,MAAMC,KAAK,GAAG,IAAIt7C,GAAG,CAAC6f,GAAG,CAAC;EAC1BpqB,MAAM,CAACE,OAAO,CAAC0lD,cAAc,CAAC,CAC3BjwC,MAAM,CAAC,CAAC,CAAChZ,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAACtH,QAAQ,CAACsH,GAAG,CAAC,CAAC,CACnDoU,OAAO,CAAC,CAAC,CAACpU,GAAG,EAAEiB,KAAK,CAAC,KAAKioD,KAAK,CAAC75B,YAAY,CAACre,GAAG,CAAC80C,aAAa,CAAC9lD,GAAG,CAAC,EAAEiB,KAAK,CAAC3E,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1F4sD,KAAK,CAAC75B,YAAY,CAACre,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;EAC9C+1C,YAAY,CAACT,OAAO,EAAE,YAAY,CAAC;EACnCA,OAAO,CAACgB,UAAU,GAAG,IAAInB,YAAY,CAAC+C,KAAK,CAAC5sD,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,IAAI0G,OAAO,CAAO,CAACC,OAAO,EAAEoR,MAAM,KAAK;IAC3ChR,MAAM,CAACqR,MAAM,CAAC4xC,OAAO,CAACgB,UAAU,EAAE;MAChC6B,OAAO,EAAE90C,MAAM;MACf+0C,MAAM,EAAE,MAAOnd,KAAY,IAAK;QAC9BhpC,OAAO,CAAC,CAAC;QACT8jD,YAAY,CAACT,OAAO,EAAE,WAAW,EAAEra,KAAK,CAAC;QACzCwa,UAAU,CAACH,OAAO,EAAE;UAAE7W,OAAO,EAAEsZ;QAAkB,CAAC,CAAC;QACnDR,IAAI,CAACjC,OAAO,CAAC;MACf,CAAC;MACD+C,OAAO,EAAGpd,KAAkB,IAAK;QAC/B8a,YAAY,CAACT,OAAO,EAAE,cAAc,EAAEra,KAAK,CAAC;QAC5Coc,YAAY,CAAC/B,OAAO,CAACgC,cAAc,CAAC;MACtC,CAAC;MACDgB,SAAS,EAAEA,CAAC;QAAE3hD;MAAuB,CAAC,KAAK6gD,SAAS,CAAClC,OAAO,EAAE3+C,IAAI;IACpE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AC3dA;AACA;AACA;AAauB;AACoC;AACL;AAO1B;AAEqB;AACE;AAE5C,eAAe4hD,eAAeA,CACnCn4C,EAAuB,EACvBo4C,MAAc,EACgC;EAC9C,MAAM;IAAE7pC,UAAU;IAAEnE;EAAU,CAAC,GAAGH,QAAQ,CAACjK,EAAE,EAAE7E,GAAG,CAAC6S,QAAQ,CAAC;EAC5D,MAAMqqC,SAAS,GAAGnuC,OAAO,CAACE,SAAS,CAAC;EACpC,MAAM1M,MAAM,GAAG,MAAM06C,MAAM,CAACC,SAAS,CAAC;EACtC,IAAI,OAAO36C,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM;MAAE6Q,UAAU,EAAE+pC;IAAY,CAAC,GAAGruC,QAAQ,CAACvM,MAAM,EAAEvC,GAAG,CAAC6S,QAAQ,CAAC;IAClE,OAAO9D,OAAO,CAAC;MACbxb,GAAG,EAAEyM,GAAG,CAAC6S,QAAQ;MACjBO,UAAU,EAAEA,UAAU,CAACjc,MAAM,CAACgmD,WAAW,CAAC;MAC1CluC,SAAS,EAAEjT,MAAM,CAACkhD,SAAS;IAC7B,CAAC,CAAC;EACJ;EACA,OAAO36C,MAAM;AACf;AAEO,eAAe66C,aAAaA,CACjCrD,OAAgB,EAChBh5B,MAAc,EACd3lB,IAGC,EACD6hD,MAAc,EACI;EAClB,IAAII,QAAQ;EACZ,IAAIjiD,IAAI,CAACyJ,EAAE,IAAI,IAAI,EAAEw4C,QAAQ,GAAG,MAAMJ,MAAM,CAAC7hD,IAAI,CAACyJ,EAAE,CAAC,CAAC,KACjD,IAAIzJ,IAAI,CAACkiD,SAAS,IAAI,IAAI,EAAED,QAAQ,GAAG,MAAML,eAAe,CAAC5hD,IAAI,CAACkiD,SAAS,EAAEL,MAAM,CAAC,CAAC,KACrF,MAAM,IAAI9vD,YAAY,CAAC,mCAAmC,CAAC;EAChE,MAAMknC,OAAO,GAAG,OAAOgpB,QAAQ,KAAK,QAAQ;EAC5C,MAAM5pD,GAAG,GAAG2H,IAAI,CAACyJ,EAAE,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW;EAChDokC,MAAM,CAAC8Q,OAAO,EAAEh5B,MAAM,EAAEsT,OAAO,GAAG;IAAE/8B,KAAK,EAAE+lD,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAI;EAAE,CAAC,GAAG;IAAE,CAAC5pD,GAAG,GAAG4pD;EAAS,CAAC,CAAC;EACjF,OAAOhpB,OAAO;AAChB;AAEO,SAASkpB,uBAAuBA,CACrCC,QAAiB,EACjB1wD,OAAuB,EACvBuuD,KAAmB,EACP;EACZA,KAAK,EAAEvzC,MAAM,GACXhR,MAAM,CAACqR,MAAM,CACX,IAAIxX,6BAA6B,CAC/B,mCAAmCqwB,IAAI,CAACC,SAAS,CAACn0B,OAAO,CAAC,EAC5D,CAAC,EACD;IAAE2wD,SAAS,EAAE3wD;EAAQ,CACvB,CACF,CAAC;EACD,OAAO;IAAEo2C,OAAO,EAAEwa;EAAY,CAAC;AACjC;AAEO,SAASC,kBAAkBA,CAChC5D,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACnBuC,SAA0C,EAC9B;EACZ,IAAIA,SAAS,IAAI,IAAI,IAAI9wD,OAAO,CAACi0B,MAAM,KAAK,iBAAiB,EAAE;IAC7D,OAAO68B,SAAS,CAAC7D,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;EAC3C;EACA,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,mBAAmB,EAAE;IAC1Cs6B,KAAK,CAAC3kD,OAAO,CAAC;MACZmnD,QAAQ,EAAE,KAAK;MACfp6B,SAAS,EAAE32B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAAC0iD,UAAU;MACzCC,YAAY,EAAEjxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAAC4iD;IACpC,CAAC,CAAC;IACF,OAAO;MAAE9a,OAAO,EAAEwa;IAAY,CAAC;EACjC;EACA,IAAI5wD,OAAO,CAACi0B,MAAM,KAAK,eAAe,EAAE;IACtC,IAAIj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,gBAAgB,EAAE;MAClD2b,KAAK,CAAC3kD,OAAO,CAAC;QAAEmnD,QAAQ,EAAE;MAAM,CAAC,CAAC;MAClC,OAAO;QAAE3a,OAAO,EAAEwa;MAAY,CAAC;IACjC;EACF;EACA,IAAI5wD,OAAO,CAACwK,KAAK,IAAI,IAAI,EAAE;IACzB,MAAM2mD,KAAK,GAAGnxD,OAAO,CAACwK,KAAK,CAAC8D,IAAI,CAAC9I,GAAG,CAAEknB,CAAC,IAAKA,CAAC,CAACxF,IAAI,CAAC;IACnD,IAAIiqC,KAAK,CAAC9xD,QAAQ,CAAC,IAAI,CAAC,EAAE;MACxBkvD,KAAK,CAACvzC,MAAM,CAAC,IAAI3Z,wBAAwB,CAAC,sBAAsB,CAAC,CAAC;IACpE,CAAC,MAAM,IAAI8vD,KAAK,CAAC9xD,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC/BkvD,KAAK,CAACvzC,MAAM,CAAC,IAAIha,oBAAoB,CAAC,2BAA2B,CAAC,CAAC;IACrE,CAAC,MAAM;MACLutD,KAAK,CAACvzC,MAAM,CAAC,IAAIrX,sBAAsB,CAAC3D,OAAO,CAACwK,KAAK,CAACxK,OAAO,CAAC,CAAC;IACjE;IACA,OAAO;MAAEo2C,OAAO,EAAEwa;IAAY,CAAC;EACjC;EACA,OAAOH,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;AACzD;AAEO,SAAS6C,kBAAkBA,CAChCnE,OAAgB,EAChBjtD,OAAuB,EACC;EACxB,IAAIA,OAAO,CAACi0B,MAAM,KAAK,eAAe,EAAE;IACtC,MAAMo9B,iBAAyB,GAAGrxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK;IAE3D,IAAI0e,UAAgC,GAAG,IAAI;IAC3C,IAAID,iBAAiB,KAAK,gBAAgB,EAAEC,UAAU,GAAG,UAAU;IACnE,IAAID,iBAAiB,KAAK,iBAAiB,EAAEC,UAAU,GAAG,YAAY;IACtE,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtB5D,YAAY,CAACT,OAAO,EAAEqE,UAAU,CAAC;MACjC,OAAO;QAAElb,OAAO,EAAEmb;MAAwB,CAAC;IAC7C;IAEA,IAAIvxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,uBAAuB,EAAE;MACzD,OAAO;QAAEwD,OAAO,EAAEob;MAAyB,CAAC;IAC9C;IACA,IAAIxxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,QAAQ,EAAE;MAC1Cqa,OAAO,CAACwE,MAAM,GAAGzxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACojD,MAAM;MAC3C,OAAO;QAAEtb,OAAO,EAAEgb;MAAmB,CAAC;IACxC;IACA,OAAO;MAAEhb,OAAO,EAAEgb;IAAmB,CAAC;EACxC;EACA,IAAIpxD,OAAO,CAACi0B,MAAM,KAAK,gBAAgB,EAAE;IACvCsqB,IAAI,CAAC0O,OAAO,EAAE,OAAO,EAAE,IAAItpD,sBAAsB,CAAC3D,OAAO,EAAE0O,OAAO,EAAE1O,OAAO,CAAC,CAAC;IAC7E,OAAO;MAAEo2C,OAAO,EAAEub;IAAc,CAAC;EACnC;AACF;AAEO,eAAeC,mBAAmBA,CACvC3E,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACE;EACrB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,eAAe,IAAIj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,QAAQ,EAAE;IAChFqa,OAAO,CAACwE,MAAM,GAAGzxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACojD,MAAM;IAC3C,OAAO;MACLtb,OAAO,EAAE,SAASyb,4BAA4BA,CAC5Cl8B,CAAU,EACVm8B,QAAwB,EACxBC,MAAoB,EACI;QACxB,IACED,QAAQ,CAAC79B,MAAM,KAAK,eAAe,IACnC69B,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,uBAAuB,EAEtD,OAAO;UAAEwD,OAAO,EAAEob;QAAyB,CAAC;QAC9C,OAAOf,uBAAuB,CAACxD,OAAO,EAAE6E,QAAQ,EAAEC,MAAM,CAAC;MAC3D;IACF,CAAC;EACH;EACA,OAAOtB,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;AACzD;AAEO,eAAeyD,oBAAoBA,CACxC/E,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACE;EACrB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,eAAe,IAAIj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,QAAQ,EAAE;IAChFqa,OAAO,CAACwE,MAAM,GAAGzxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACojD,MAAM;IAC3C,MAAM;MAAEnB;IAAS,CAAC,GAAG,MAAMtD,OAAO,CAACsB,KAAK,CAAC,CAAC;IAC1CT,WAAW,CAACb,OAAO,EAAEsD,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAGtuC,OAAO,CAACsuC,QAAQ,CAAC,CAAC;IAC/D,OAAO;MAAEna,OAAO,EAAEwa;IAAY,CAAC;EACjC;EACA,OAAOH,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;AACzD;AAEO,eAAegD,uBAAuBA,CAC3CtE,OAAgB,EAChBjtD,OAAuB,EACU;EACjC,MAAMyG,GAAG,GAAGwmD,OAAO,CAAC9U,QAAQ,CAAC8Z,IAAI,KAAK,WAAW,GAAG,gBAAgB,GAAG,gBAAgB;EACvF,IAAIjyD,OAAO,CAACi0B,MAAM,KAAK,iBAAiBxtB,GAAG,EAAE,EAAE;IAC7C,MAAM6pD,aAAa,CAACrD,OAAO,EAAE,YAAYxmD,GAAG,EAAE,EAAEzG,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IAC5Ek1C,OAAO,CAAC9U,QAAQ,CAAC7mC,IAAI,CAAC7K,GAAG,EAAEsR,EAAE,CAC/B,CAAC;IACD,OAAO;MAAEq+B,OAAO,EAAE8b;IAAkB,CAAC;EACvC;AACF;AAEO,SAASA,iBAAiBA,CAC/BjF,OAAgB,EAChBjtD,OAAuB,EACC;EACxB,SAASmyD,sBAAsBA,CAACx8B,CAAU,EAAEm8B,QAAwB,EAA0B;IAC5F,IAAIA,QAAQ,CAAC79B,MAAM,KAAK,eAAe,EAAE;MACvC,QAAQ69B,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACskC,KAAK;QAChC,KAAK,iBAAiB;QACtB,KAAK,oBAAoB;UACvB,OAAO;YAAEwD,OAAO,EAAE+b;UAAuB,CAAC;QAC5C,KAAK,gBAAgB;UACnB,OAAO;YAAE/b,OAAO,EAAEob;UAAyB,CAAC;MAChD;IACF;IACA,IAAIM,QAAQ,CAAC79B,MAAM,KAAK,sBAAsB,EAAE;MAC9CsqB,IAAI,CAAC0O,OAAO,EAAE,WAAW,EAAE6E,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACyJ,EAAE,EAAE;QAClDqjB,IAAI,EAAE02B,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAAC8sB,IAAI;QAC/B7sB,IAAI,EAAEujD,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACC;MAC7B,CAAC,CAAC;MACF,OAAO;QAAE6nC,OAAO,EAAE+b;MAAuB,CAAC;IAC5C;EACF;EAEA,IAAInyD,OAAO,CAACi0B,MAAM,KAAK,sBAAsB,EAAE;IAC7C,MAAM;MAAEmH;IAAK,CAAC,GAAGp7B,OAAO,CAACod,MAAM,CAAC9O,IAAI;IACpC,MAAM;MAAE2jD;IAAK,CAAC,GAAGhF,OAAO,CAAC9U,QAAQ;IACjC,IACG/c,IAAI,KAAK,gBAAgB,IAAI62B,IAAI,KAAK,WAAW,IACjD72B,IAAI,KAAK,iBAAiB,IAAI62B,IAAI,KAAK,WAAY,EACpD;MACA,OAAO;QAAE7b,OAAO,EAAE+b;MAAuB,CAAC;IAC5C;EACF;EACA,IACEnyD,OAAO,CAACi0B,MAAM,KAAK,eAAe,IAClCj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,gBAAgB,IAC9Cqa,OAAO,CAAC9U,QAAQ,CAAC8Z,IAAI,KAAK,WAAW,EACrC;IACAhF,OAAO,CAACsC,UAAU,GAAGvvD,OAAO,CAACod,MAAM,CAACkyC,UAAU;IAC9C5B,YAAY,CAACT,OAAO,EAAE,QAAQ,CAAC;IAC/B,OAAO;MAAE7W,OAAO,EAAE8b;IAAkB,CAAC;EACvC;AACF;AAEA,SAASV,wBAAwBA,CAC/BvE,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACK;EACxB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,eAAe,IAAIj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,MAAM,EAAE;IAC9Eqa,OAAO,CAACsC,UAAU,GAAGvvD,OAAO,CAACod,MAAM,CAACkyC,UAAU;IAC9C,OAAO;MACLlZ,OAAO,EAAE,SAASgc,sBAAsBA,CACtCz8B,CAAU,EACVm8B,QAAwB,EACxBC,MAAoB,EACI;QACxB,IAAID,QAAQ,CAAC79B,MAAM,KAAK,iBAAiB,EAAE;UACzC65B,WAAW,CAACb,OAAO,EAAE6E,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;UAChD,OAAO;YAAEnY,OAAO,EAAEwa;UAAY,CAAC;QACjC;QACA,OAAOH,uBAAuB,CAACxD,OAAO,EAAE6E,QAAQ,EAAEC,MAAM,CAAC;MAC3D;IACF,CAAC;EACH;EACA,OAAOtB,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;AACzD;AAEO,eAAeqC,WAAWA,CAC/B3D,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACc;EACjC,QAAQvuD,OAAO,CAACi0B,MAAM;IACpB,KAAK,eAAe;MAClB,QAAQj0B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK;QAC/B,KAAK,QAAQ;QACb,KAAK,kBAAkB;QACvB,KAAK,iBAAiB;UACpB,OAAO;YAAEwD,OAAO,EAAEic;UAAsB,CAAC;QAC3C,KAAK,qBAAqB;QAC1B,KAAK,iBAAiB;QACtB,KAAK,oBAAoB;QACzB,KAAK,gBAAgB;QACrB,KAAK,mBAAmB;QACxB,KAAK,uBAAuB;QAC5B,KAAK,MAAM;UACT;UACA;UACA;UACA;UACA9T,IAAI,CAAC0O,OAAO,EAAEV,aAAa,CAACvsD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,CAAwB,CAAC;UAC9E,OAAO;YAAEwD,OAAO,EAAEwa;UAAY,CAAC;QACjC,KAAK,QAAQ;UACX3D,OAAO,CAACwE,MAAM,GAAGzxD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACojD,MAAM;UAC3C,OAAO;YAAEtb,OAAO,EAAEwa;UAAY,CAAC;QACjC,KAAK,SAAS;QACd,KAAK,cAAc;UACjB,OAAO;YAAExa,OAAO,EAAEwa;UAAY,CAAC;QACjC,KAAK,SAAS;UACZlD,YAAY,CAACT,OAAO,EAAE,SAAS,CAAC;UAChC,OAAO;YAAE7W,OAAO,EAAEwa;UAAY,CAAC;QACjC,KAAK,kBAAkB;UACrBlD,YAAY,CAACT,OAAO,EAAE,QAAQ,CAAC;UAC/B,OAAO;YAAE7W,OAAO,EAAEub;UAAc,CAAC;QACnC,KAAK,MAAM;UACTjE,YAAY,CAACT,OAAO,EAAE,MAAM,CAAC;UAC7B,OAAO;YAAE7W,OAAO,EAAEub;UAAc,CAAC;QACnC,KAAK,UAAU;UACb,OAAO;YAAEvb,OAAO,EAAEwa;UAAY,CAAC;MACnC;MACA;IACF,KAAK,sBAAsB;MACzBrS,IAAI,CAAC0O,OAAO,EAAE,WAAW,EAAEjtD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACyJ,EAAE,EAAE;QACjDqjB,IAAI,EAAEp7B,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAAC8sB,IAAI;QAC9B7sB,IAAI,EAAEvO,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACC;MAC5B,CAAC,CAAC;MACF,OAAO;QAAE6nC,OAAO,EAAEwa;MAAY,CAAC;IACjC,KAAK,gBAAgB;MACnB;MACA,OAAO;QAAExa,OAAO,EAAEwa;MAAY,CAAC;IACjC,KAAK,iBAAiB;MACpB9C,WAAW,CAACb,OAAO,EAAEjtD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;MAC/C,OAAO;QAAEnY,OAAO,EAAEwa;MAAY,CAAC;IACjC,KAAK,iCAAiC;MACpC,OAAOyB,qBAAqB,CAACpF,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;EACzD;AACF;AACAqC,WAAW,CAACpD,KAAK,GAAIP,OAAgB,IAAK;EACxCS,YAAY,CAACT,OAAO,EAAE,MAAM,CAAC;AAC/B,CAAC;AAED,eAAeoF,qBAAqBA,CAClCpF,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACE;EAAA,IAAA+D,qBAAA;EACrB,MAAM,GAAG7rD,GAAG,CAAC,IAAA6rD,qBAAA,GAAGtyD,OAAO,CAACi0B,MAAM,CAACb,KAAK,CAAC,2BAA2B,CAAC,cAAAk/B,qBAAA,cAAAA,qBAAA,GAAI,EAAE;EACvE,IAAI7rD,GAAG,IAAI,IAAI,EAAE,OAAOgqD,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;EACxE,MAAMhnB,OAAO,GAAG,MAAM+oB,aAAa,CAACrD,OAAO,EAAE,YAAYxmD,GAAG,EAAE,EAAEzG,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IAC5Fk1C,OAAO,CAAC9U,QAAQ,CAAC7mC,IAAI,CAAC7K,GAAG,EAAEsR,EAAE,EAAE;IAAE22C,OAAO,EAAE1uD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACogD;EAAQ,CAAC,CACzE,CAAC;EAED,SAAS6D,sBAAsBA,CAAC58B,CAAU,EAAEm8B,QAAwB,EAAc;IAChF,IAAIA,QAAQ,CAACtnD,KAAK,IAAI,IAAI,EAAE;MAC1B,OAAO;QAAE4rC,OAAO,EAAEmc,sBAAsB;QAAEhE;MAAM,CAAC;IACnD;IACA,IAAIuD,QAAQ,CAAC79B,MAAM,KAAK,mBAAmB,EAAE;MAC3C,OAAO;QAAEmiB,OAAO,EAAEwa;MAAY,CAAC;IACjC;IACA,OAAOH,uBAAuB,CAACxD,OAAO,EAAE6E,QAAQ,EAAEvD,KAAK,CAAC;EAC1D;EACA,OAAOhnB,OAAO,GAAG;IAAE6O,OAAO,EAAEmc,sBAAsB;IAAEhE;EAAM,CAAC,GAAG;IAAEnY,OAAO,EAAEwa;EAAY,CAAC;AACxF;AAEO,eAAe4B,kBAAkBA,CACtCvF,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACE;EACrB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,6BAA6B,EAAE;IACpD,OAAOw8B,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;EACzD;EACA,MAAM+B,aAAa,CAACrD,OAAO,EAAE,wBAAwB,EAAEjtD,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IACnFw2C,KAAK,CAACj9C,IAAI,CAACyG,EAAE,CACf,CAAC;EACD,OAAO;IACLq+B,OAAOA,CAACzgB,CAAU,EAAEm8B,QAAwB,EAAc;MACxD,IAAIA,QAAQ,CAAC79B,MAAM,KAAK,sBAAsB,EAAE;QAC9C,OAAOw8B,uBAAuB,CAACxD,OAAO,EAAE6E,QAAQ,EAAEvD,KAAK,CAAC;MAC1D;MACA;MACA,OAAO;QAAEnY,OAAO,EAAEub,aAAa;QAAEpD;MAAM,CAAC;IAC1C,CAAC;IACDA;EACF,CAAC;AACH;AAEO,SAASkE,aAAaA,CAC3BxF,OAAgB,EAChBjtD,OAAuB,EACvBuuD,KAAmB,EACP;EACZ,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,gBAAgB,EAAE;IACvCs6B,KAAK,CAAC3kD,OAAO,CAAC;MAAEif,SAAS,EAAE7oB,OAAO,CAACod,MAAM,CAACkyC,UAAU;MAAEiB,QAAQ,EAAEvwD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACigD;IAAM,CAAC,CAAC;IAC5F9Q,UAAU,CAACwP,OAAO,CAAC;IACnB,OAAO;MAAE7W,OAAO,EAAEub;IAAc,CAAC;EACnC;EACA,IAAI3xD,OAAO,CAACi0B,MAAM,KAAK,gBAAgB,EAAE;IACvCs6B,KAAK,CAACvzC,MAAM,CAAC,IAAIrX,sBAAsB,CAAC3D,OAAO,CAACsO,IAAI,CAACtO,OAAO,CAAC,CAAC;IAC9D,OAAO;MAAEo2C,OAAO,EAAEwa;IAAY,CAAC;EACjC;EACA,OAAOH,uBAAuB,CAACxD,OAAO,EAAEjtD,OAAO,EAAEuuD,KAAK,CAAC;AACzD;AAEO,SAASoD,aAAaA,CAC3BjB,QAAiB,EACjB1wD,OAAuB,EACvBuuD,KAAmB,EACP;EACZ,IAAIA,KAAK,IAAI,IAAI,EAAE,OAAO;IAAEnY,OAAO,EAAEub;EAAc,CAAC;EACpD,IAAI3xD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,SAAS,EAAE,OAAO;IAAEwD,OAAO,EAAEub,aAAa;IAAEpD;EAAM,CAAC;EACrF,IAAIvuD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAAC8sB,IAAI,KAAK,gBAAgB,EAAE;IACjDmzB,KAAK,CAACmE,OAAO,GAAG1yD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACyJ,EAAE;IACtC,OAAO;MAAEq+B,OAAO,EAAEub,aAAa;MAAEpD;IAAM,CAAC;EAC1C;EACA,IAAIvuD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACskC,KAAK,KAAK,kBAAkB,EAAE;IACpD2b,KAAK,CAAC3kD,OAAO,CAAC2kD,KAAK,CAACmE,OAAO,CAAC;IAC5B,OAAO;MAAEtc,OAAO,EAAEub;IAAc,CAAC;EACnC;EACA,OAAO;IAAEvb,OAAO,EAAEub,aAAa;IAAEpD;EAAM,CAAC;AAC1C;;;;;;;;;;;AC5ZkC;AAEiB;AACD;AACD;AACP;AAgBnB;AACiD;AAIb;AAG3D,SAASsE,oBAAoBA,CAAOC,GAAW,EAAQ;EACrD,OAAO9oD,MAAM,CAACE,OAAO,CAAC4oD,GAAG,CAAC,CAACvqD,MAAM,CAC/B,CAACkN,MAAM,EAAE,CAAC9O,GAAG,EAAEuL,GAAG,CAAC,MAAM;IACvB,GAAGuD,MAAM;IACT,CAAC82C,aAAa,CAAC5lD,GAAG,CAAC,GAAGuL;EACxB,CAAC,CAAC,EACF,CAAC,CACH,CAAC;AACH;AAEA,IAAI6gD,cAAc,GAAG,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA,IAAAC,QAAA,oBAAA97C,OAAA;AAqBe,MAAMzJ,YAAO,CAAC;EAiCjB1N,WAAWA,CAAA,EAAG;IAAAm4C,wBAAA,wBAhCR,IAAI+F,2BAAY,CAAC,CAAC;IAAA/F,wBAAA,4BAId,CAAC;IAAAA,wBAAA,wBAEL,IAAIl+B,GAAG,CAAoC,CAAC;IAAAk+B,wBAAA,wBAI1B,EAAE;IAAAA,wBAAA,gCAEZ,KAAK;IAAAA,wBAAA,uBAEG,EAAE;IAAAA,wBAAA,+BAEX,KAAK;IAAAA,wBAAA,kBAEH,cAAc;IAAAA,wBAAA,iBAMJ,EAAE;IAIrClsB,8BAAA,OAASgnC,QAAQ;IAKfD,cAAc,IAAI,CAAC;IACnB9mC,yBAAA,CAAK+mC,QAAQ,EAAb,IAAI,EAAYD,cAAJ,CAAC;EACf;EAEAzF,MAAMA,CAAC,GAAG9hD,IAAW,EAAQ;IAC3B,IAAI,IAAI,CAAC2sC,QAAQ,CAACyV,KAAK,KAAK,IAAI,EAAE;IAClCvtC,OAAO,CAACutC,KAAK,CAAC,YAAY/hC,yBAAA,CAAKmnC,QAAQ,EAAb,IAAY,CAAC,EAAE,EAAE,GAAGxnD,IAAI,CAAC;EACrD;;EAEA;AACF;AACA;EACE,aAAaynC,UAAUA,CAACl8B,OAAuB,EAAoB;IACjE,OAAOtJ,YAAO,CAACwlD,WAAW,CAAC,IAAIxlD,YAAO,CAAC,CAAC,EAAEsJ,OAAO,CAAC;EACpD;EAEA,aAAak8C,WAAWA,CAAoBhG,OAAU,EAAEl2C,OAAuB,EAAc;IAAA,IAAAm8C,qBAAA;IAC3F,MAAMC,SAAS,GAAG,EAAAD,qBAAA,GAACn8C,OAAO,CAACq8C,aAAa,cAAAF,qBAAA,cAAAA,qBAAA,GAAIn8C,OAAO,CAACs8C,iBAAiB,KAAK,IAAI;IAC9E,IAAIF,SAAS,KAAKp8C,OAAO,CAACq8C,aAAa,IAAI,IAAI,IAAIr8C,OAAO,CAACs8C,iBAAiB,IAAI,IAAI,CAAC,EAAE;MACrF,MAAM,IAAIryD,oBAAoB,CAC5B,wEACF,CAAC;IACH;IACA,MAAMsyD,gBAAgB,GACpBX,wBAAQ,CAAC57C,OAAO,CAACw8C,WAAW,KAAK,IAAI,GAAG,qBAAqB,GAAG,sBAAsB,CAAC;IACzF,MAAMtgB,UAAU,CACdga,OAAO,EACPkG,SAAS,GAAGG,gBAAgB,GAAGX,kBAA2B,EAC1DA,WAAoB,EACpB57C,OACF,CAAC;IACD,OAAOk2C,OAAO;EAChB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEuG,EAAEA,CAAgCjf,SAAY,EAAE6a,QAA0B,EAAQ;IAChF,IAAI,CAACjC,aAAa,CAACqG,EAAE,CAACjf,SAAS,EAAE6a,QAAQ,CAAC;EAC5C;;EAEA;AACF;AACA;AACA;AACA;EACEqE,GAAGA,CAAgClf,SAAY,EAAE6a,QAA0B,EAAQ;IACjF,IAAI,CAACjC,aAAa,CAACuG,cAAc,CAACnf,SAAS,EAAE6a,QAAQ,CAAC;EACxD;;EAEA;AACF;AACA;EACE3R,UAAUA,CAAA,EAAS;IACjB,OAAOmV,UAAiB,CAAC,IAAI,CAAC;EAChC;;EAEA;AACF;AACA;EACEpkC,MAAMA,CAAA,EAAkB;IACtB,OAAO,IAAI,CAACq/B,OAAO;EACrB;;EAEA;AACF;AACA;EACE,MAAMU,KAAKA,CAAA,EAKR;IACD,MAAM7iD,GAAG,GAAGmnD,oBAAoB,CAK7B,MAAM5vC,IAAI,CAAC,IAAI,EAAE,6BAA6B,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,OAAO;MACL6M,KAAK,EAAEvQ,WAAW,CAAC7T,GAAG,CAACokB,KAAK,CAAC;MAC7B,IAAIpkB,GAAG,CAACioD,YAAY,KAAK,EAAE,IAAI;QAAEA,YAAY,EAAE3xC,QAAQ,CAACtW,GAAG,CAACioD,YAAY,EAAEzgD,GAAG,CAAC6S,QAAQ;MAAE,CAAC,CAAC;MAC1F,IAAIra,GAAG,CAAC6kD,QAAQ,KAAK,EAAE,IAAI;QAAEA,QAAQ,EAAEvuC,QAAQ,CAACtW,GAAG,CAAC6kD,QAAQ,EAAEr9C,GAAG,CAAC6S,QAAQ;MAAE,CAAC,CAAC;MAC9E6tC,KAAK,EAAEr0C,WAAW,CAAC7T,GAAG,CAACkoD,KAAK;IAC9B,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEvqC,KAAKA,CAAA,EAAkB;IACrB,IAAI,IAAI,CAAC2kC,MAAM,KAAK,EAAE,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAM5wC,MAAM,GAAG4E,QAAQ,CAAC,IAAI,CAACgsC,MAAM,EAAE96C,GAAG,CAAC6S,QAAQ,CAAC,CAAC5D,SAAS;IAC5D,QAAQ/E,MAAM,CAAC3W,GAAG;MAChB,KAAKyM,GAAG,CAACgV,eAAe;QACtB,OAAO,CAAC;MACV,KAAKhV,GAAG,CAAC6N,iBAAiB;MAC1B,KAAK7N,GAAG,CAACoW,iBAAiB;MAC1B,KAAKpW,GAAG,CAACkW,gBAAgB;QACvB,OAAOhM,MAAM,CAACiM,KAAK;MACrB;QACE,OAAO,IAAI;IACf;EACF;;EAEA;AACF;AACA;AACA;EACEhmB,EAAEA,CAAA,EAAoB;IACpB,IAAI,IAAI,CAACksD,UAAU,IAAI,IAAI,EAAE,MAAM,IAAIlvD,YAAY,CAAC,4BAA4B,CAAC;IACjF,OAAO,IAAI,CAACkvD,UAAU;EACxB;;EAEA;AACF;AACA;AACA;EACEsE,KAAKA,CAAA,EAAsB;IACzB,IAAI,IAAI,CAACpC,MAAM,IAAI,IAAI,EAAE,MAAM,IAAIpxD,YAAY,CAAC,4BAA4B,CAAC;IAC7E,OAAO,IAAI,CAACoxD,MAAM;EACpB;EAEA,MAAgBnD,aAAaA,CAC3Bhf,MAAwE,EAC1D;IACd,OAAOgf,aAAa,CAAC,IAAI,EAAE,CAACrB,OAAO,EAAEsB,KAAK,KAAKA,KAAK,EAAEnY,OAAO,KAAKuc,WAAoB,EAAErjB,MAAM,CAAC;EACjG;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMwkB,KAAKA,CAAA,EAA2E;IACpF,OAAO,IAAI,CAACxF,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,gBAAgB,CAAC;MAC9B,OAAO;QAAE/F,OAAO,EAAEuc,aAAsBF;MAAC,CAAC;IAC5C,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMsB,QAAQA,CAACziD,IAAY,EAAgC;IACzD,OAAO,IAAI,CAACg9C,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,mBAAmB,CAAC;MACjC,OAAO;QACL/F,OAAO,EAAEuc,kBAA2B;QACpCpE,KAAK,EAAE;UAAEj9C;QAAK;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;AACF;;ACjSuB;AAEmB;AACV;AAC4B;AAMrC;AAGoC;AAE5C,MAAM0iD,YAAY,SAASvmD,YAAO,CAAC;EAChD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,MAAMpB,MAAMA,CACV9B,IAA4B,EAC5B+kB,EAA0B,EAC1BrqB,MAA0B,EAC1BqM,IAAY,EACZ2iD,QAAkB,GAAG,EAAE,EAMtB;IACD,OAAO,IAAI,CAAC3F,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,qBAAqB,EAAE;QAClC5xC,IAAI;QACJ+kB,EAAE;QACFrqB,MAAM;QACNivD,IAAI,EAAED;MACR,CAAC,CAAC;MAEF,MAAME,kBAAkB,GAAG,MAAAA,CACzBx+B,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK;QACxB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,sBAAsB,EAAE;UAC7C,MAAMsT,OAAO,GAAG,MAAM+oB,aAAa,CACjC,IAAI,EACJ,iBAAiB,EACjBtwD,OAAO,CAACod,MAAM,CAAC9O,IAAI,EACnB,MAAOyJ,EAAE,IAAKzG,IAAI,CAACyG,EAAE,EAAE;YAAE22C,OAAO,EAAE1uD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACogD;UAAQ,CAAC,CACjE,CAAC;UACD,IAAInnB,OAAO,EAAE,OAAO;YAAE6O,OAAO,EAAE+d,kBAAkB;YAAE5F;UAAM,CAAC;UAC1D,OAAO;YACLnY,OAAO,EAAEA,CAACge,EAAW,EAAEtC,QAAwB,KAC7CjB,kBAAkB,CAAC,IAAI,EAAEiB,QAAQ,EAAEvD,KAAK,EAAE,MAAM;cAC9CT,WAAW,CAAC,IAAI,EAAEgE,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;cAC7CA,KAAK,CAAC3kD,OAAO,CAAC;gBAAEmnD,QAAQ,EAAE,IAAI;gBAAER,QAAQ,EAAEuB,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD;cAAM,CAAC,CAAC;cACvE,OAAO;gBAAEnY,OAAO,EAAEwa,WAAWA;cAAC,CAAC;YACjC,CAAC,CAAC;YACJrC;UACF,CAAC;QACH;QACA,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,gBAAgB,EAAE;UACvCs6B,KAAK,CAACvzC,MAAM,CAAC,IAAIrX,sBAAsB,CAAC3D,OAAO,CAACsO,IAAI,CAACtO,OAAO,CAAC,CAAC;UAC9D,OAAO;YAAEo2C,OAAO,EAAEwa,WAAWA;UAAC,CAAC;QACjC;QACA,OAAOC,kBAAkB,CAAC,IAAI,EAAE7wD,OAAO,EAAEuuD,KAAK,CAAC;MACjD,CAAC;MAED,OAAO;QAAEnY,OAAO,EAAE+d;MAAmB,CAAC;IACxC,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMjrC,GAAGA,CAAC;IACRxO,QAAQ;IACRsV;EAIF,CAAC,EAAqD;IACpD,MAAM;MAAE9G;IAA0B,CAAC,GAAG,MAAMjG,IAAI,CAAC,IAAI,EAAE,kBAAkB,EAAE;MACzEvI,QAAQ;MACRsV;IACF,CAAC,CAAC;IACF,OAAOzQ,WAAW,CAAC2J,GAAG,CAAC;EACzB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmrC,QAAQA,CACZ35C,QAAkC,EACkB;IACpD,OAAO1Q,MAAM,CAACC,WAAW,CACvB,CAAC,MAAMgZ,IAAI,CAAC,IAAI,EAAE,uBAAuB,EAAE;MAAEvI;IAAS,CAAC,CAAC,EAAElV,GAAG,CAC1DuF,IAA0D,IAAK,CAC9DA,IAAI,CAACihC,OAAO,EACZjhC,IAAI,CAACiO,OAAO,CAEhB,CACF,CAAC;EACH;EAEA,MAAcs7C,gBAAgBA,CAC5BhlB,MAA8B,EAC9BtvC,OAAuB,EACvBuuD,KAAmB,EACE;IACrB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,iBAAiBqb,MAAM,KAAK,EAAE;MACnD,OAAOmhB,uBAAuB,CAAC,IAAI,EAAEzwD,OAAO,EAAEuuD,KAAK,CAAC;IACtD;IAEA,MAAMgG,wBAAwB,GAAGA,CAAC5+B,CAAU,EAAEm8B,QAAwB,KAAiB;MACrF,IAAIA,QAAQ,CAAC79B,MAAM,KAAK,sBAAsB,EAAE;QAC9Cs6B,KAAK,CAACiG,WAAW,GAAG1C,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACyJ,EAAE,CAAC;QAC5C,OAAO;UAAEq+B,OAAO,EAAEme,wBAAwB;UAAEhG;QAAM,CAAC;MACrD;MACA,IACEuD,QAAQ,CAAC79B,MAAM,KAAK,eAAe,IACnC,CAAC,OAAOqb,MAAM,SAAS,EAAE,GAAGA,MAAM,SAAS,CAAC,CAACjwC,QAAQ,CAACyyD,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACskC,KAAK,CAAC,EACjF;QACA,MAAM6hB,MAAM,GAAGnlB,MAAM,KAAK,SAAS,GAAG,SAAS,GAAG,UAAU;QAC5D,MAAMolB,KAAc,GAAG5C,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACskC,KAAK,CAAC75B,UAAU,CAAC,MAAM,CAAC;QACpEw1C,KAAK,CAAC,KAAKmG,KAAK,GAAG,KAAK,GAAG,EAAE,GAAGD,MAAM,QAAQ,CAAC,GAAG,CAAC;QACnD,OAAO;UAAEre,OAAO,EAAEme,wBAAwB;UAAEhG;QAAM,CAAC;MACrD;MACA,OAAOsC,kBAAkB,CAAC,IAAI,EAAEiB,QAAQ,EAAEvD,KAAK,EAAE,MAAM;QACrDT,WAAW,CAAC,IAAI,EAAEgE,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;QAC7CA,KAAK,CAAC3kD,OAAO,CAAC;UAAEmnD,QAAQ,EAAE,IAAI;UAAER,QAAQ,EAAEuB,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD;QAAM,CAAC,CAAC;QACvE,OAAO;UAAEnY,OAAO,EAAEwa,WAAWA;QAAC,CAAC;MACjC,CAAC,CAAC;IACJ,CAAC;IAED,MAAM;MAAEt/C;IAAK,CAAC,GAAGi9C,KAAK;IACtB,MAAM+B,aAAa,CAAC,IAAI,EAAE,YAAYhhB,MAAM,KAAK,EAAEtvC,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IAC/EzG,IAAI,CAACyG,EAAE,EAAE;MAAE22C,OAAO,EAAE1uD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACogD;IAAQ,CAAC,CACnD,CAAC;IACD,OAAO;MAAEtY,OAAO,EAAEme,wBAAwB;MAAEhG;IAAM,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMoG,QAAQA,CACZ1vD,MAA0B,EAC1BqM,IAAY,EACZ;IACEkjD,WAAW;IACXI,mBAAmB;IACnBC;EAC8E,CAAC,GAAG,CAAC,CAAC,EACvB;IAC/D,OAAO,IAAI,CAACvG,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE;QAAEl3C;MAAO,CAAC,CAAC;MAC7C,OAAO;QACLmxC,OAAO,EAAE,MAAAA,CACPzgB,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK,IAAI,CAAC+F,gBAAgB,CAAC,UAAU,EAAEt0D,OAAO,EAAEuuD,KAAK,CAAC;QAC3EA,KAAK,EAAE;UACLj9C,IAAI;UACJkjD,WAAW;UACXI,mBAAmB;UACnBC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM1tC,OAAOA,CACXliB,MAA0B,EAC1BqM,IAAY,EACZ;IACEkjD,WAAW;IACXM,kBAAkB;IAClBC;EAC4E,CAAC,GAAG,CAAC,CAAC,EAC/B;IACrD,OAAO,IAAI,CAACzG,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE;QAAEl3C;MAAO,CAAC,CAAC;MAC5C,OAAO;QACLmxC,OAAO,EAAE,MAAAA,CACPzgB,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK,IAAI,CAAC+F,gBAAgB,CAAC,SAAS,EAAEt0D,OAAO,EAAEuuD,KAAK,CAAC;QAC1EA,KAAK,EAAE;UACLj9C,IAAI;UACJkjD,WAAW;UACXM,kBAAkB;UAClBC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMtY,WAAWA,CAACz8C,OAAwB,EAAE0sC,SAAiC,EAAiB;IAC5F,MAAMtR,IAAI,GAAG,OAAOp7B,OAAO,KAAK,QAAQ,GAAGk0B,IAAI,CAACC,SAAS,CAACn0B,OAAO,CAAC,GAAGA,OAAO;IAC5E,IAAI,IAAI,CAACwuB,MAAM,CAAC,CAAC,KAAK,YAAY,EAAE;MAClC,MAAM,IAAI7kB,OAAO,CAAQC,OAAO,IAAK;QACnC,MAAMorD,eAAe,GAAIxmC,MAAc,IAAW;UAChD,IAAIA,MAAM,KAAK,YAAY,EAAE;UAC7B5kB,OAAO,CAAC,CAAC;UACT,IAAI,CAAC6pD,GAAG,CAAC,eAAe,EAAEuB,eAAe,CAAC;QAC5C,CAAC;QACD,IAAI,CAACxB,EAAE,CAAC,eAAe,EAAEwB,eAAe,CAAC;MAC3C,CAAC,CAAC;MACF;MACA;MACA,MAAMvrD,KAAK,CAAC,GAAG,CAAC;IAClB;IACA0yC,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE;MAAE/gB,IAAI;MAAE9L,EAAE,EAAEod;IAAU,CAAC,CAAC;EAC3D;AACF;;ACzYmD;AACoC;AAOhE;AAWA;AAIS;AACM;AAC2C;AAC/B;AACS;AAE3D,SAASmmB,6BAAoBA,CAAOC,GAAW,EAAQ;EACrD,OAAO9oD,MAAM,CAACE,OAAO,CAAC4oD,GAAG,CAAC,CAACvqD,MAAM,CAC/B,CAACkN,MAAM,EAAE,CAAC9O,GAAG,EAAEuL,GAAG,CAAC,MAAM;IACvB,GAAGuD,MAAM;IACT,CAAC82C,aAAa,CAAC5lD,GAAG,CAAC,GAAGuL;EACxB,CAAC,CAAC,EACF,CAAC,CACH,CAAC;AACH;AAyCA;AACA;AACA;AACe,MAAM+iD,eAAe,SAASjB,YAAY,CAAC;EACxD,aAAsB/gB,UAAUA,CAACl8B,OAAuB,EAA4B;IAClF,OAAOtJ,YAAO,CAACwlD,WAAW,CAAC,IAAIgC,eAAe,CAAC,CAAC,EAAEl+C,OAAO,CAAC;EAC5D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMm+C,cAAcA,CAClB;IACEhuC,IAAI;IACJE,QAAQ;IACRD,OAAO;IACP1K,SAAS;IACTE;EAOF,CAAC,EACDrL,IAAY,EAKX;IACD,OAAO,IAAI,CAACg9C,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,8BAA8B,EAAE;QAC3Cj1B,IAAI;QACJiuC,SAAS,EAAE/tC,QAAQ;QACnBD,OAAO;QACPiuC,UAAU,EAAE34C,SAAS;QACrB44C,WAAW,EAAE14C;MACf,CAAC,CAAC;MACF,OAAO;QACLy5B,OAAO,EAAE,MAAAA,CACPzgB,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK;UACxB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,sBAAsB,EAAE;YAC7C,OAAOw8B,uBAAuB,CAAC,IAAI,EAAEzwD,OAAO,EAAEuuD,KAAK,CAAC;UACtD;UACA,MAAM+B,aAAa,CAAC,IAAI,EAAE,iBAAiB,EAAEtwD,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IACzEw2C,KAAK,CAACj9C,IAAI,CAACyG,EAAE,CACf,CAAC;UACD,OAAO;YACLq+B,OAAO,EAAEA,CAACge,EAAW,EAAEtC,QAAwB,EAAEC,MAAoB,KACnElB,kBAAkB,CAAC,IAAI,EAAEiB,QAAQ,EAAEC,MAAM,EAAE,MAAM;cAC/C,MAAM30C,MAAM,GAAG4E,QAAQ,CAAC8vC,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,EAAEr7C,GAAG,CAAC6S,QAAQ,CAAC,CAAC5D,SAAS;cAC3E,IAAI/E,MAAM,CAAC3W,GAAG,KAAKyM,GAAG,CAAC6N,iBAAiB,EAAE;gBACxC,MAAM,IAAI1gB,YAAY,CACpB,iBAAiB6S,GAAG,CAACA,GAAG,CAAC6N,iBAAiB,CAAC,SAAS7N,GAAG,CAACkK,MAAM,CAAC3W,GAAG,CAAC,UACrE,CAAC;cACH;cACA,MAAM6uD,UAAU,GACd,IAAI,CAACnd,QAAQ,CAAC8Z,IAAI,KAAK,WAAW,GAAG,aAAa,GAAG,aAAa;cACpE,MAAM7+C,KAAK,GAAG,IAAI,CAAC+kC,QAAQ,CAACmd,UAAU,CAAC;cACvCxH,WAAW,CAAC,IAAI,EAAEgE,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;cAC7C,MAAM7rD,OAAO,GAAGyQ,eAAe,CAACC,KAAK,EAAEgK,MAAM,CAACiM,KAAK,CAAC;cACpDk1B,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE77C,OAAO,CAAC;cAClCqvD,MAAM,CAACnoD,OAAO,CAAC;gBAAEmnD,QAAQ,EAAE,IAAI;gBAAEruD,OAAO;gBAAE6tD,QAAQ,EAAEuB,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD;cAAM,CAAC,CAAC;cACjF,OAAO;gBAAEnY,OAAO,EAAEwa,WAAWA;cAAC,CAAC;YACjC,CAAC,CAAC;YACJrC;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj9C;QAAK;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMikD,YAAYA,CAChB;IAAEtwD,MAAM;IAAEmiB,QAAQ;IAAEwI,QAAQ;IAAEjT;EAAgC,CAAC,EAC/DrL,IAAY,EACmD;IAC/D,OAAO,IAAI,CAACg9C,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,+BAA+B,EAAE;QAC5Cl3C,MAAM;QACNkwD,SAAS,EAAE/tC,QAAQ;QACnBouC,WAAW,EAAE5lC,QAAQ;QACrBylC,WAAW,EAAE14C;MACf,CAAC,CAAC;MACF,OAAO;QACLy5B,OAAO,EAAE,MAAAA,CACPzgB,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK;UACxB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,sBAAsB,EAAE;YAC7C,OAAOw8B,uBAAuB,CAAC,IAAI,EAAEzwD,OAAO,EAAEuuD,KAAK,CAAC;UACtD;UACA,MAAM+B,aAAa,CAAC,IAAI,EAAE,iBAAiB,EAAEtwD,OAAO,CAACod,MAAM,CAAC9O,IAAI,EAAE,MAAOyJ,EAAE,IACzEw2C,KAAK,CAACj9C,IAAI,CAACyG,EAAE,EAAE;YAAE22C,OAAO,EAAE1uD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACogD;UAAQ,CAAC,CACzD,CAAC;UACD,OAAO;YACLtY,OAAO,EAAEA,CAACge,EAAW,EAAEtC,QAAwB,EAAEC,MAAoB,KACnElB,kBAAkB,CAAC,IAAI,EAAEiB,QAAQ,EAAEC,MAAM,EAAE,MAAM;cAC/CjE,WAAW,CAAC,IAAI,EAAEgE,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD,KAAK,CAAC;cAC7CwD,MAAM,CAACnoD,OAAO,CAAC;gBAAEmnD,QAAQ,EAAE,IAAI;gBAAER,QAAQ,EAAEuB,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACigD;cAAM,CAAC,CAAC;cACxE,OAAO;gBAAEnY,OAAO,EAAEwa,WAAWA;cAAC,CAAC;YACjC,CAAC,CAAC;YACJrC;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj9C;QAAK;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmkD,aAAaA,CACjB;IACExwD,MAAM;IACNmiB,QAAQ;IACRwI,QAAQ;IACRjT,UAAU;IACV4G,QAAQ,GAAG,OAAO;IAClBvD,QAAQ,GAAGxN,aAAaA;EAI1B,CAAC,EACDlB,IAAY,EACZ;IAAEkjD;EAA+C,CAAC,GAAG,CAAC,CAAC,EAKtD;IACD,OAAO,IAAI,CAAClG,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,yBAAyB,EAAE;QACtCl3C,MAAM;QACNkwD,SAAS,EAAE/tC,QAAQ;QACnBouC,WAAW,EAAE5lC,QAAQ;QACrBylC,WAAW,EAAE14C,UAAU;QACvB+4C,SAAS,EAAE11C,QAAQ;QACnBwX,GAAG,EAAEjU;MACP,CAAC,CAAC;MACF,OAAO;QACL6yB,OAAO,EAAE,MAAAA,CACPzgB,CAAU,EACV31B,OAAuB,EACvBuuD,KAAmB,KACK;UACxB,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,iCAAiC,EAAE;YACxD,OAAOw8B,uBAAuB,CAAC,IAAI,EAAEzwD,OAAO,EAAEuuD,KAAK,CAAC;UACtD;UACA,MAAM+B,aAAa,CACjB,IAAI,EACJ,8BAA8B,EAC9BtwD,OAAO,CAACod,MAAM,CAAC9O,IAAI,EACnB,MAAOyJ,EAAE,IAAKw2C,KAAK,CAACj9C,IAAI,CAACyG,EAAE,EAAE;YAAE22C,OAAO,EAAE1uD,OAAO,CAACod,MAAM,CAAC9O,IAAI,CAACogD;UAAQ,CAAC,CACvE,CAAC;UACD,OAAO;YACLtY,OAAO,EAAEA,CAACge,EAAW,EAAEtC,QAAwB,EAAEC,MAAoB,KAAiB;cACpF,IAAID,QAAQ,CAAC79B,MAAM,KAAK,sBAAsB,EAAE;gBAC9C89B,MAAM,CAACyC,WAAW,GAAG1C,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACyJ,EAAE,CAAC;gBAC7CwmC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAEuT,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACyJ,EAAE,EAAE;kBAC/CqjB,IAAI,EAAE02B,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAAC8sB,IAAI;kBAC/B7sB,IAAI,EAAEujD,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACC;gBAC7B,CAAC,CAAC;gBACFwjD,MAAM,CAACnoD,OAAO,CAAC;kBAAEmnD,QAAQ,EAAE,IAAI;kBAAEh5C,EAAE,EAAE+5C,QAAQ,CAAC10C,MAAM,CAAC9O,IAAI,CAACyJ;gBAAG,CAAC,CAAC;gBAC/D;cACF;cACA,OAAO04C,uBAAuB,CAAC,IAAI,EAAEqB,QAAQ,EAAEC,MAAM,CAAC;YACxD,CAAC;YACDxD;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj9C,IAAI;UAAEkjD;QAAY;MAC7B,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmB,kBAAkBA,CAAC;IACvB1wD,MAAM;IACNmiB,QAAQ;IACRwI,QAAQ;IACRjT;EACmB,CAAC,EAA+B;IACnD,OAAOk2C,6BAAoB,CACzB,MAAM5vC,IAAI,CAAC,IAAI,EAAE,gCAAgC,EAAE;MACjDhe,MAAM;MACNkwD,SAAS,EAAE/tC,QAAQ;MACnBouC,WAAW,EAAE5lC,QAAQ;MACrBylC,WAAW,EAAE14C;IACf,CAAC,CACH,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMi5C,eAAeA,CAAC;IACpBjmC,MAAM;IACNC,QAAQ;IACRvG;EAKF,CAAC,EAA+B;IAC9B,OAAOwpC,6BAAoB,CACzB,MAAM5vC,IAAI,CAAC,IAAI,EAAE,4BAA4B,EAAE;MAC7C4yC,SAAS,EAAElmC,MAAM;MACjB6lC,WAAW,EAAE5lC,QAAQ;MACrBvG;IACF,CAAC,CACH,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMysC,gBAAgBA,CACpBlmC,QAAiC,EACuB;IACxD,MAAMna,MAAM,GAAG,MAAMwN,IAAI,CAAC,IAAI,EAAE,uBAAuB,EAAE;MAAE6Z,MAAM,EAAElN;IAAS,CAAC,CAAC;IAC9E,OAAOijC,6BAAoB,CAAC;MAC1B,GAAGp9C,MAAM;MACTma,QAAQ,EAAEijC,6BAAoB,CAACp9C,MAAM,CAACma,QAAQ;IAChD,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmmC,kBAAkBA,CAAA,EAAkB;IACxC,OAAO,IAAI,CAACzH,aAAa,CAAC,MAAM;MAC9BnS,MAAM,CAAC,IAAI,EAAE,+BAA+B,CAAC;MAC7C,OAAO;QACL/F,OAAOA,CAACzgB,CAAU,EAAE31B,OAAuB,EAAEuuD,KAAmB,EAAc;UAC5E,IAAIvuD,OAAO,CAACi0B,MAAM,KAAK,6BAA6B,EAAE;YACpDs6B,KAAK,CAAC3kD,OAAO,CAAC,CAAC;YACf,OAAO;cAAEwsC,OAAO,EAAEwa,WAAWA;YAAC,CAAC;UACjC;UACArC,KAAK,CAACvzC,MAAM,CAAC,IAAInX,6BAA6B,CAAC,6BAA6B,CAAC,CAAC;UAC9E,OAAO;YAAEuyC,OAAO,EAAEub,aAAaA;UAAC,CAAC;QACnC;MACF,CAAC;IACH,CAAC,CAAC;EACJ;AACF;;;;;;;;;;;;ACxdA;AACsC;AAC0C;AAAA,IAU3EsE,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA,EAANA,MAAM;AAMJ,MAAMC,yBAAyB,SAASr2D,SAAS,CAAC;EACvDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,2BAA2B;EACzC;AACF;AAEO,MAAMk2D,gCAAgC,SAASD,yBAAyB,CAAC;EAC9En2D,WAAWA,CAAUq2D,UAAgC,EAAE;IACrD,KAAK,CAAC,mBAAmB,CAAC;IAAC,KADRA,UAAgC,GAAhCA,UAAgC;IAEnD,IAAI,CAACn2D,IAAI,GAAG,kCAAkC;EAChD;AACF;;AAEA;AACA;AACA;AAFA,IAAAo2D,cAAA,oBAAAn/C,OAAA;AAAA,IAAAo/C,aAAA,oBAAAp/C,OAAA;AAAA,IAAAq/C,UAAA,oBAAAr/C,OAAA;AAAA,IAAAs/C,2BAAA,oBAAA9qC,OAAA;AAGe,MAAM+qC,oBAAoB,CAAC;EAQxC,IAAIC,SAASA,CAAA,EAA0B;IACrC,OAAO7qC,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC;EACxB;EA8BAx2D,WAAWA,CAAUq0B,GAAW,EAAE;IAAArI,+CAAA,OAAAyqC,2BAAA;IAvClCxqC,8CAAA,OAAAqqC,cAAc,EACZ,EAAE;IAEJrqC,8CAAA,OAASsqC,aAAa,EAAkD,EAAE;IAE1EtqC,8CAAA,OAAAuqC,UAAU;IAAa,KAkCFniC,GAAW,GAAXA,GAAW;EAAG;EAanC,MAAM++B,SAASA,CAAA,EAAkB;IAC/BxmC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACG,WAAU,CAAC,CAAA1zC,IAAA,CAAhB,IAAI;IACJgJ,yCAAA,CAAKsqC,UAAU,EAAf,IAAI,EAAc,MAAM,IAAI5sD,OAAO,CAAEC,OAAO,IAAK;MAC/C,MAAM8sD,SAAS,GAAG,IAAIV,kCAAS,CAAC,IAAI,CAAC5hC,GAAG,CAAC;MACzCpqB,MAAM,CAACqR,MAAM,CAACq7C,SAAS,EAAE;QACvB3G,MAAM,EAAEA,CAAA,KAAMnmD,OAAO,CAAC8sD,SAAS,CAAC;QAChC5G,OAAO,EAAG8G,UAAgC,IAAK;UAC7CjqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACK,KAAI,CAAC,CAAA5zC,IAAA,CAAV,IAAI,EAAO,MAAM,IAAI,EAAE9R,SAAS,EAAEylD,UAAU,CAACpsD,KAAK;QACpD,CAAC;QACDylD,SAAS,EAAGrd,KAA6B,IAAK;UAC5C,IAAI,OAAOA,KAAK,CAACtkC,IAAI,KAAK,QAAQ,EAAE;YAClC,MAAM,IAAI/L,aAAa,CAAC,kCAAkC,OAAOqwC,KAAK,CAACtkC,IAAI,EAAE,CAAC;UAChF;UACAqe,qCAAA,CAAA6pC,2BAAA,MAAI,EAACM,eAAc,CAAC,CAAA7zC,IAAA,CAApB,IAAI,EAAiBiR,IAAI,CAAC4Y,KAAK,CAAC8F,KAAK,CAACtkC,IAAI,CAAC;QAC7C,CAAC;QACD0hD,OAAO,EAAGpd,KAA2B,IAAK;UACxCjmB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACK,KAAI,CAAC,CAAA5zC,IAAA,CAAV,IAAI,EAAO,MAAM,IAAI,EAAE9R,SAAS,EAAE,IAAIglD,gCAAgC,CAACvjB,KAAK,CAAC;UAC7EjmB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACG,WAAU,CAAC,CAAA1zC,IAAA,CAAhB,IAAI,EAAa,IAAI;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,CAlBa,CAAC;IAmBf,MAAMtZ,OAAO,CAAConB,GAAG,CAAC,CAAC,GAAGgmC,mBAAA,CAAAP,2BAAA,MAAI,EAACQ,YAAO,CAAC,CAAC,CAACxxD,GAAG,CAAEiG,MAAM,IAAKkhB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACS,cAAa,CAAC,CAAAh0C,IAAA,CAAnB,IAAI,EAAgB,IAAI,EAAExX,MAAM,CAAC,CAAC,CAAC;EAC1F;EAqCA;;EAEAyrD,kBAAkBA,CAACC,EAAgC,EAAc;IAC/D,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,WAAW,EAAEgzC,MAAM,CAACoB,UAAU,EAAEF,EAAE;EAC3D;EAEAG,sBAAsBA,CAACH,EAAgC,EAAc;IACnE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,WAAW,EAAEgzC,MAAM,CAACxzB,IAAI,EAAE00B,EAAE;EACrD;EAEAI,qBAAqBA,CAACJ,EAAgC,EAAc;IAClE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,WAAW,EAAEgzC,MAAM,CAACuB,GAAG,EAAEL,EAAE;EACpD;EAEAM,oBAAoBA,CAACN,EAAgC,EAAc;IACjE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,aAAa,EAAEgzC,MAAM,CAACoB,UAAU,EAAEF,EAAE;EAC7D;EAEAO,wBAAwBA,CAACP,EAAgC,EAAc;IACrE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,aAAa,EAAEgzC,MAAM,CAACxzB,IAAI,EAAE00B,EAAE;EACvD;EAEAQ,uBAAuBA,CAACR,EAAgC,EAAc;IACpE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,aAAa,EAAEgzC,MAAM,CAACuB,GAAG,EAAEL,EAAE;EACtD;EAEAS,qBAAqBA,CAACT,EAAgC,EAAc;IAClE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,cAAc,EAAEgzC,MAAM,CAACoB,UAAU,EAAEF,EAAE;EAC9D;EAEAU,yBAAyBA,CAACV,EAAgC,EAAc;IACtE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,cAAc,EAAEgzC,MAAM,CAACxzB,IAAI,EAAE00B,EAAE;EACxD;EAEAW,wBAAwBA,CAACX,EAAgC,EAAc;IACrE,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAY,cAAc,EAAEgzC,MAAM,CAACuB,GAAG,EAAEL,EAAE;EACvD;EAEAY,eAAeA,CACbtsD,MAQqB,EACrB0rD,EAAgC,EACpB;IACZ,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAYxX,MAAM,EAAEwqD,MAAM,CAACoB,UAAU,EAAEF,EAAE;EACtD;EAEAa,mBAAmBA,CACjBvsD,MAQqB,EACrB0rD,EAAgC,EACpB;IACZ,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAYxX,MAAM,EAAEwqD,MAAM,CAACxzB,IAAI,EAAE00B,EAAE;EAChD;EAEAc,kBAAkBA,CAChBxsD,MAQqB,EACrB0rD,EAAgC,EACpB;IACZ,OAAOxqC,qCAAA,CAAA6pC,2BAAA,MAAI,EAACY,UAAS,CAAC,CAAAn0C,IAAA,CAAf,IAAI,EAAYxX,MAAM,EAAEwqD,MAAM,CAACuB,GAAG,EAAEL,EAAE;EAC/C;AACF;AAAC,SAAAH,aAAAkB,KAAA,EAtL6B;EAC1B,OAAO,IAAIt9C,GAAG,CAACiR,yCAAA,CAAKwqC,cAAc,EAAA6B,KAAD,CAAC,CAAC1yD,GAAG,CAAC,CAAC,CAACiG,MAAM,CAAC,KAAKA,MAAM,CAAC,CAAC;AAC/D;AAAC,SAAA0sD,aAEYn4D,OAAY,EAAQ;EAC/B,IAAI6rB,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EAAE,MAAM,IAAI/zD,iBAAiB,CAAC,CAAC;EAC1DqpB,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,CAACvR,IAAI,CAAC9wB,IAAI,CAACC,SAAS,CAACn0B,OAAO,CAAC,CAAC;AAC/C;AAAC,SAAAi3D,eAEcmB,WAAoB,EAAE3sD,MAAc,EAAQ;EACzD,IAAIogB,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EAAE;EAC7B,MAAM7nD,OAAO,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,cAAc,CAAC,CAACrP,QAAQ,CAACoM,MAAM,CAAC,GACzEA,MAAM,GACN,QAAQ;EACZkhB,qCAAA,CAAA6pC,2BAAA,MAAI,EAAC2B,YAAW,CAAC,CAAAl1C,IAAA,CAAjB,IAAI,EAAc;IAChB8U,EAAE,EAAEqgC,WAAW,GAAG,WAAW,GAAG,aAAa;IAC7C1pD,OAAO;IACP,IAAIA,OAAO,KAAK,QAAQ,IAAI;MAAEjD;IAAO,CAAC;EACxC,CAAC;EACDogB,yCAAA,CAAKyqC,aAAa,EAAlB,IAAiB,CAAC,CAAC36C,IAAI,CAAC,CAACy8C,WAAW,EAAE3sD,MAAM,CAAC,CAAC;AAChD;AAAC,SAAAorD,MAEKwB,SAAsD,EAAE7vD,CAAU,EAAEY,CAAS,EAAQ;EACzFyiB,yCAAA,CAAKwqC,cAAc,EAAnB,IAAkB,CAAC,CAChB12C,MAAM,CAAC,CAAC,CAAClU,MAAM,EAAErH,MAAM,CAAC,KAAKi0D,SAAS,CAAC5sD,MAAM,EAAErH,MAAM,CAAC,CAAC,CACvD2W,OAAO,CAAC,CAAC,IAAKo8C,EAAE,CAAC,KAAKA,EAAE,CAAC3uD,CAAC,EAAEY,CAAC,CAAC,CAAC;AACpC;AAAC,SAAAutD,YAIW2B,SAAS,GAAG,KAAK,EAAQ;EACnC,IAAIzsC,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EAAE;EAC7B,IAAI,CAAC+B,SAAS,EAAEzsC,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,CAACxH,KAAK,CAAC,CAAC;EACvC/kD,MAAM,CAACqR,MAAM,CAACwQ,yCAAA,CAAK0qC,UAAU,EAAf,IAAc,CAAC,EAAE;IAC7BxG,MAAM,EAAE5+C,SAAS;IACjB2+C,OAAO,EAAE3+C,SAAS;IAClB8+C,SAAS,EAAE9+C;EACb,CAAC,CAAC;EACF8a,yCAAA,CAAKsqC,UAAU,EAAf,IAAI,EAAcplD,SAAJ,CAAC;AACjB;AAAC,SAAA2lD,gBA0Be92D,OAAoC,EAAQ;EAC1D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAI2a,KAAK,CAAC0kC,OAAO,CAACr/C,OAAO,CAAC,EAAE;IACzD,MAAM+yB,OAAO,GAAGlH,yCAAA,CAAKyqC,aAAa,EAAlB,IAAiB,CAAC,CAACxH,KAAK,CAAC,CAAC;IAC1C,IAAI/7B,OAAO,IAAI,IAAI,EAAE,MAAM,IAAIxwB,aAAa,CAAC,wBAAwB,CAAC;IACtE,MAAM,CAAC61D,WAAW,EAAE3sD,MAAM,CAAC,GAAGsnB,OAAO;IACrC,IAAIvoB,KAAK;IACT,IAAI,OAAOxK,OAAO,KAAK,QAAQ,EAAEwK,KAAK,GAAG,IAAI0rD,yBAAyB,CAACl2D,OAAO,CAAC;IAC/E,IAAIA,OAAO,CAACX,QAAQ,CAACoM,MAAM,CAAC,KAAK2sD,WAAW,EAAE;MAC5C5tD,KAAK,GAAG,IAAIjI,aAAa,CACvB,YAAYkJ,MAAM,SAAS2sD,WAAW,GAAG,EAAE,GAAG,MAAM,kBAAkBp4D,OAAO,EAC/E,CAAC;IACH;IACA,IAAIwK,KAAK,IAAI,IAAI,EAAEmiB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACK,KAAI,CAAC,CAAA5zC,IAAA,CAAV,IAAI,EAAQ1X,CAAC,IAAKE,MAAM,KAAKF,CAAC,EAAE4F,SAAS,EAAE3G,KAAK;IACnE;EACF;EACAmiB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACK,KAAI,CAAC,CAAA5zC,IAAA,CAAV,IAAI,EACF,CAACxX,MAAM,EAAErH,MAAM,KACb,CAACqH,MAAM,KAAKzL,OAAO,CAACkhD,YAAY,IAAIz1C,MAAM,KAAKzL,OAAO,CAACyL,MAAM,MAC5DrH,MAAM,KAAKpE,OAAO,CAACoE,MAAM,IAAIA,MAAM,KAAK6xD,MAAM,CAACuB,GAAG,CAAC,EACtDx3D,OAAO,CAAC0O,OAAO;AAEnB;AAAC,SAAA0oD,WAEU3rD,MAAc,EAAErH,MAAc,EAAE+yD,EAAmC,EAAc;EAC1F,MAAMjW,YAAY,GAAG,CAACz1C,MAAM,EAAErH,MAAM,EAAE+yD,EAAE,CAAU;EAClD,IAAIJ,mBAAA,CAAAP,2BAAA,MAAI,EAACQ,YAAO,CAAC,CAAC5W,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC+S,SAAS,CAAC,CAAC;EAC9C,IAAI,CAAC4D,mBAAA,CAAAP,2BAAA,MAAI,EAACQ,YAAO,CAAC,CAACjiC,GAAG,CAACtpB,MAAM,CAAC,EAAEkhB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACS,cAAa,CAAC,CAAAh0C,IAAA,CAAnB,IAAI,EAAgB,IAAI,EAAExX,MAAM;EAChEogB,yCAAA,CAAKwqC,cAAc,EAAnB,IAAkB,CAAC,CAAC16C,IAAI,CAACulC,YAAY,CAAC;EACtC,OAAO,MAAM;IACXj1B,yCAAA,CAAKoqC,cAAc,EAAnB,IAAI,EAAkBxqC,yCAAA,CAAKwqC,cAAc,EAAnB,IAAkB,CAAC,CAAC12C,MAAM,CAAE5U,IAAI,IAAKA,IAAI,KAAKm2C,YAAY,CAA9D,CAAC;IACnB,IAAI,CAAC6V,mBAAA,CAAAP,2BAAA,MAAI,EAACQ,YAAO,CAAC,CAACjiC,GAAG,CAACtpB,MAAM,CAAC,EAAEkhB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACS,cAAa,CAAC,CAAAh0C,IAAA,CAAnB,IAAI,EAAgB,KAAK,EAAExX,MAAM;IACjE,IAAIsrD,mBAAA,CAAAP,2BAAA,MAAI,EAACQ,YAAO,CAAC,CAAC5W,IAAI,KAAK,CAAC,EAAEzzB,qCAAA,CAAA6pC,2BAAA,MAAI,EAACG,WAAU,CAAC,CAAA1zC,IAAA,CAAhB,IAAI;EACpC,CAAC;AACH;;AC3IK,MAAM2e,wBAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNnN,YAAY,EAAE,kBAAkB;IAChCgT,UAAU,EAAE,IAAI;IAChB3F,cAAc,EAAE,QAAQ;IACxB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM6hC,uBAA4B,GAAG;EAC1CD,aAAa,EAAE,OAAO;EACtBzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF,CAAC;EACD8hC,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMrb,SAAgC,GAAG;EAC9Cmb,aAAa,EAAE,WAAW;EAC1BzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,WAAW;IAC3B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMs4D,SAAkC,GAAG;EAChD12B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,YAAY;IAC5B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMmiC,oBAAkC,GAAG;EAChDP,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CACb,cAAc,EACd,MAAM,EACN,MAAM,EACN,QAAQ,EACR,UAAU,EACV,WAAW,EACX,QAAQ,EACR,OAAO;IAEX;EACF;AACF,CAAC;AAEM,MAAM0L,gBAA8B,GAAG;EAC5CN,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNnN,YAAY,EAAE,EAAE;IAChBoR,WAAW,EAAE;MACXE,gBAAgB,EAAE,GAAG;MACrBD,gBAAgB,EAAE;IACpB,CAAC;IACDhE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMu4D,KAA8B,GAAG;EAC5C32B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,oBAAoB;IAC1C,CAAC;IACDJ,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMw4D,SAAkC,GAAG;EAChD52B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMiiC,UAAmC,GAAG;EACjD72B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM7G,QAAiC,GAAG;EAC/CiS,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,UAAU;IAC1B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM04D,UAAmC,GAAG;EACjD92B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMmiC,UAAmC,GAAG;EACjD/2B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMoiC,UAAmC,GAAG;EACjDh3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMqiC,EAA2B,GAAG;EACzCj3B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCzP,MAAM,EAAE;IACNE,cAAc,EAAE,IAAI;IACpB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ;IAC9C;EACF;AACF,CAAC;AAEM,MAAM5zB,MAA+B,GAAG;EAC7Cg/B,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCzP,MAAM,EAAE;IACNE,cAAc,EAAE,QAAQ;IACxB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM84D,KAA8B,GAAG;EAC5Cl3B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM+4D,UAAmC,GAAG;EACjDn3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM3a,UAAiC,GAAG;EAC/C+lB,aAAa,EAAE,YAAY;EAC3BzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,YAAY;IAC5B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMg5D,UAAmC,GAAG;EACjDp3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMyiC,UAAiC,GAAG;EAC/Cr3B,aAAa,EAAE,YAAY;EAC3BzP,MAAM,EAAE;IACNE,cAAc,EAAE,YAAY;IAC5B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMk5D,UAAmC,GAAG;EACjDt3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM2iC,OAA8B,GAAG;EAC5Cv3B,aAAa,EAAE,SAAS;EACxBzP,MAAM,EAAE;IACNE,cAAc,EAAE,SAAS;IACzB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo5D,UAAmC,GAAG;EACjDx3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMyL,oBAAkC,GAAG;EAChDL,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMqvB,EAA2B,GAAG;EACzCuS,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,IAAI;IACpB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMoD,EAAyB,GAAG;EACvCw+B,aAAa,EAAE,IAAI;EACnBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,IAAI;IACpB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMq5D,UAAmC,GAAG;EACjDz3B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM8iC,GAA4B,GAAG;EAC1C13B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCzP,MAAM,EAAE;IACNE,cAAc,EAAE,IAAI;IACpB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ;IAC9C;EACF;AACF,CAAC;AAEM,MAAM+iC,WAAoC,GAAG;EAClD33B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMgjC,GAA4B,GAAG;EAC1C53B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCzP,MAAM,EAAE;IACNE,cAAc,EAAE,IAAI;IACpB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM82B,SAAkC,GAAG;EAChD8K,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,YAAY;IAC5B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMiR,sBAA6B,GAAG;EAC3C2wB,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMy5D,WAAoC,GAAG;EAClD73B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMkjC,WAAoC,GAAG;EAClD93B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM83B,KAA8B,GAAG;EAC5C1sB,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU;IACtC;EACF;AACF,CAAC;AAEM,MAAMmjC,GAA0B,GAAG;EACxC/3B,aAAa,EAAE,IAAI;EACnBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,IAAI;IACpB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM45D,WAAoC,GAAG;EAClDh4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMqjC,WAAoC,GAAG;EAClDj4B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM2yC,gBAA8B,GAAG;EAC5C/Q,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM85D,aAAsC,GAAG;EACpDl4B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCzP,MAAM,EAAE;IACNE,cAAc,EAAE,UAAU;IAC1B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM+5D,cAAuC,GAAG;EACrDn4B,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC;EAC5CzP,MAAM,EAAE;IACNE,cAAc,EAAE,iBAAiB;IACjC/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMqO,IAA6B,GAAG;EAC3CuzB,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMg6D,QAAiC,GAAG;EAC/Cp4B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMi6D,WAAoC,GAAG;EAClDr4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM0jC,WAAoC,GAAG;EAClDt4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM2jC,WAAoC,GAAG;EAClDv4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM4jC,WAAkC,GAAG;EAChDx4B,aAAa,EAAE,YAAY;EAC3BzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,aAAa;IAC7B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMq6D,WAAoC,GAAG;EAClDz4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM8jC,MAA+B,GAAG;EAC7C14B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,sBAAsB;IAC5C,CAAC;IACDJ,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMu6D,WAAoC,GAAG;EAClD34B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMh1B,iBAA6B,GAAG;EAC3CogC,aAAa,EAAE,QAAQ;EACvBzP,MAAM,EAAE;IACNE,cAAc,EAAE,QAAQ;IACxB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMw6D,WAAoC,GAAG;EAClD54B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMikC,SAAgC,GAAG;EAC9C74B,aAAa,EAAE,WAAW;EAC1BzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,WAAW;IAC3B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM06D,WAAoC,GAAG;EAClD94B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMmkC,WAAoC,GAAG;EAClD/4B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMokC,WAAoC,GAAG;EAClDh5B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMqkC,SAAgC,GAAG;EAC9Cj5B,aAAa,EAAE,WAAW;EAC1BzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM86D,WAAoC,GAAG;EAClDl5B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMukC,KAA4B,GAAG;EAC1Cn5B,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,MAAM;IACtB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMg7D,OAAgC,GAAG;EAC9Cp5B,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,UAAU;IAC1B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMi7D,MAA+B,GAAG;EAC7Cr5B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNE,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMk7D,WAAoC,GAAG;EAClDt5B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM2kC,WAAoC,GAAG;EAClDv5B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM4kC,GAA0B,GAAG;EACxCx5B,aAAa,EAAE,IAAI;EACnBzP,MAAM,EAAE;IACNE,cAAc,EAAE,IAAI;IACpB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMq7D,WAAoC,GAAG;EAClDz5B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM8kC,WAAoC,GAAG;EAClD15B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM+kC,WAAoC,GAAG;EAClD35B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMglC,WAAoC,GAAG;EAClD55B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMilC,WAAoC,GAAG;EAClD75B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMklC,WAAoC,GAAG;EAClD95B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMmlC,GAA0B,GAAG;EACxC/5B,aAAa,EAAE,IAAI;EACnBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,IAAI;IACpB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM47D,UAAmC,GAAG;EACjDh6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMqlC,WAAoC,GAAG;EAClDj6B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMslC,WAAoC,GAAG;EAClDl6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMulC,YAAqC,GAAG;EACnDn6B,aAAa,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC;EAC1CzP,MAAM,EAAE;IACNE,cAAc,EAAE,gBAAgB;IAChC/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMg8D,YAAqC,GAAG;EACnDp6B,aAAa,EAAE,CAAC,SAAS,EAAE,cAAc,CAAC;EAC1CzP,MAAM,EAAE;IACNE,cAAc,EAAE,gBAAgB;IAChC/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMi8D,WAAoC,GAAG;EAClDr6B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM0lC,WAAoC,GAAG;EAClDt6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAM2lC,UAAmC,GAAG;EACjDv6B,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,OAAO;IAChC;EACF;AACF,CAAC;AAEM,MAAM4lC,WAAoC,GAAG;EAClDx6B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM6lC,WAAoC,GAAG;EAClDz6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAM8lC,WAAoC,GAAG;EAClD16B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM+lC,WAAoC,GAAG;EAClD36B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMgmC,WAAoC,GAAG;EAClD56B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMimC,WAAoC,GAAG;EAClD76B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMkmC,WAAoC,GAAG;EAClD96B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMmmC,WAAoC,GAAG;EAClD/6B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMomC,WAAoC,GAAG;EAClDh7B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMqmC,WAAoC,GAAG;EAClDj7B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMsmC,WAAoC,GAAG;EAClDl7B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMumC,WAAoC,GAAG;EAClDn7B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMwmC,WAAoC,GAAG;EAClDp7B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAMymC,WAAoC,GAAG;EAClDr7B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM0mC,WAAoC,GAAG;EAClDt7B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,aAAa;IAC7B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO;IACxC;EACF;AACF,CAAC;AAEM,MAAM9V,MAA+B,GAAG;EAC7CkhB,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCzP,MAAM,EAAE;IACNE,cAAc,EAAE,SAAS;IACzB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMm9D,WAAoC,GAAG;EAClDv7B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAM4mC,UAAmC,GAAG;EACjDx7B,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCzP,MAAM,EAAE;IACNE,cAAc,EAAE,MAAM;IACtB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,UAAU;MAChB62B,OAAO,EAAE;QACPvoB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,sBAAsB,EACtB,oBAAoB,EACpB,gBAAgB,EAChB,iBAAiB,EACjB,wBAAwB,EACxB,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,uBAAuB,EACvB,kBAAkB,EAClB,eAAe,EACf,iBAAiB,EACjB,WAAW,EACX,SAAS,EACT,YAAY,EACZ,eAAe,EACf,aAAa,EACb,eAAe,EACf,aAAa,EACb,eAAe,EACf,cAAc,EACd,iBAAiB,EACjB,iBAAiB,EACjB,YAAY,EACZ,OAAO;QAEX;MACF;IACF;EACF,CAAC;EACD6mC,gBAAgB,EAAE;AACpB,CAAC;AAEM,MAAMC,SAAkC,GAAG;EAChD17B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,YAAY;IAC5B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,UAAU;MAChB62B,OAAO,EAAE;QACPvoB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,SAAS,EACT,UAAU,EACV,IAAI,EACJ,MAAM,EACN,QAAQ,EACR,YAAY,EACZ,OAAO;QAEX;MACF;IACF;EACF,CAAC;EACD6mC,gBAAgB,EAAE;AACpB,CAAC;AAEM,MAAMtxB,OAAgC,GAAG;EAC9CnK,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,SAAS;IACzB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMgtD,OAAgC,GAAG;EAC9CprB,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,SAAS;IACzB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMu9D,MAA+B,GAAG;EAC7C37B,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,QAAQ;IACxB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMwT,QAAiC,GAAG;EAC/CouB,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMumB,WAAoC,GAAG;EAClDqb,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,cAAc;IAC9B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMw9D,UAAmC,GAAG;EACjD57B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCzP,MAAM,EAAE;IACNE,cAAc,EAAE,YAAY;IAC5B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMy9D,MAA+B,GAAG;EAC7C77B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,yBAAyB;IAC/C,CAAC;IACDJ,cAAc,EAAE,OAAO;IACvB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM09D,WAAoC,GAAG;EAClD97B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMmnC,GAA4B,GAAG;EAC1C/7B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,IAAI;IACpB/jB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM49D,WAAoC,GAAG;EAClDh8B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;AAEM,MAAMqnC,KAA4B,GAAG;EAC1Cj8B,aAAa,EAAE,MAAM;EACrBzP,MAAM,EAAE;IACNiE,WAAW,EAAE;MACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;IACvC,CAAC;IACDJ,cAAc,EAAE,MAAM;IACtB8D,QAAQ,EAAE,IAAI;IACd7nB,IAAI,EAAE;MACJtO,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM89D,WAAoC,GAAG;EAClDl8B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCzP,MAAM,EAAE;IACNE,cAAc,EAAE,WAAW;IAC3B/jB,IAAI,EAAE;MACJtO,IAAI,EAAE,MAAM;MACZw2B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU;IACvC;EACF;AACF,CAAC;;ACtyCM,MAAMunC,yFAAqH,GAChI;EACEzvD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2FAA2F;IAC7FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+nC,QAAoC,GAAG;EAClD1vD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT5rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsO,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,cAAc,EACd,uBAAuB,EACvB,qBAAqB,EACrB,oBAAoB,EACpB,uBAAuB,EACvB,qBAAqB,EACrB,kBAAkB,EAClB,qBAAqB,EACrB,mBAAmB,EACnB,mBAAmB,EACnB,uBAAuB,EACvB,qBAAqB,EACrB,iBAAiB,EACjB,eAAe,EACf,sBAAsB,EACtB,uBAAuB,EACvB,wBAAwB,EACxB,6BAA6B,EAC7B,2BAA2B,EAC3B,yBAAyB,EACzB,qBAAqB,EACrB,sBAAsB,EACtB,4BAA4B,EAC5B,4BAA4B,EAC5B,wBAAwB,EACxB,+BAA+B,EAC/B,kBAAkB;QAEtB;MACF,CAAC;MACD/nB,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMioC,eAA2C,GAAG;EACzD5vD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTkU,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDjxB,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDumB,WAAW,EAAE;QACX6P,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR4iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDysC,SAAS,EAAE;QACTrW,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs+D,MAAM,EAAE;QACNloC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5D,OAAO,EAAE;QACP9mC,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu+D,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw+D,UAAU,EAAE;QACVpoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoD,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy+D,UAAU,EAAE;QACVpsC,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6d,IAAI,EAAE;QACJwU,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,qBAAqB,EACrB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,kBAAkB,EAClB,gBAAgB,EAChB,YAAY,EACZ,cAAc,EACd,mBAAmB,EACnB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,eAAe;QAEnB;MACF,CAAC;MACDkoC,SAAS,EAAE;QACTtoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+2B,UAA8B,GAAG;EAC5CzoB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,IAAI;IACfC,eAAe,EAAE;MACf3P,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg3B,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfiO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf+N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV6N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDrN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoM,MAAM,EAAE;QACNimB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDkB,aAAa,EAAE;QACb9E,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDqnB,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,QAAQ,EAAE;QACRhF,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDlO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4mB,QAAQ,EAAE;QACRwP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPszB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlB,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmB,OAAO,EAAE;QACPkQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDhQ,SAAS,EAAE;QACTmQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDonB,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP0M,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2pB,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDpM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsO,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,SAAS,EACT,iBAAiB,EACjB,kBAAkB,EAClB,mBAAmB,EACnB,wBAAwB,EACxB,sBAAsB,EACtB,oBAAoB,EACpB,gBAAgB,EAChB,iBAAiB,EACjB,uBAAuB,EACvB,uBAAuB,EACvB,kBAAkB,EAClB,gBAAgB,EAChB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,cAAc,EACd,gBAAgB,EAChB,cAAc,EACd,kBAAkB,EAClB,gBAAgB,EAChB,YAAY,EACZ,UAAU,EACV,aAAa;QAEjB;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiB,iBAAqC,GAAG;EACnDnpB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfhO,SAAS,EAAE;QACTmK,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDooB,SAAS,EAAE;QACTiK,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM03B,sBAA0C,GAAG;EACxDrF,cAAc,EAAE,gBAAgB;EAChC/jB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3B0B,UAAU,EAAE,gBAAgB;IAC5BC,wBAAwB,EAAE;MACxBvF,cAAc,EAAE,IAAI;MACpBwF,UAAU,EAAE;IACd,CAAC;IACD3B,eAAe,EAAE;MACf4B,EAAE,EAAE;QACFzF,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+3B,mBAAuC,GAAG;EACrDzpB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ0W,YAAY,EAAE,OAAO;QACrBgT,UAAU,EAAE,IAAI;QAChB3F,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2H,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi4B,WAA+B,GAAG;EAC7C3pB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,KAAK;IAChBC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,OAAO,EAAE,OAAO;QAClC;MACF,CAAC;MACD7uB,KAAK,EAAE;QACLyuB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk4B,mBAAuC,GAAG;EACrD5pB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfxvB,GAAG,EAAE;QACH2rB,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm4B,UAAU,EAAE;QACV9F,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoD,EAAE,EAAE;QACFivB,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8lB,gBAAoC,GAAG;EAClDxX,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfpe,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDje,WAAW,EAAE;QACXoe,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE,CAAC;QACrB,CAAC;QACDhE,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTmQ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2+D,iBAA6C,GAAG;EAC3DrwD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfnD,IAAI,EAAE;QACJV,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6+D,IAAI,EAAE;QACJxsC,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8+D,aAAyC,GAAG;EACvDxwD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf3rB,KAAK,EAAE;QACL8nB,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM++D,4FAAwH,GACnI;EACEzwD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8FAA8F;IAChGC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+oC,mBAA+C,GAAG;EAC7D1wD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACfra,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,OAAO,EAAE;QACPoP,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5D,OAAO,EAAE;QACP9mC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi/D,2FAAuH,GAClI;EACE3wD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6FAA6F;IAC/FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMipC,mBAA+C,GAAG;EAC7D5wD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACflxB,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm/D,QAAQ,EAAE;QACR9sC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo/D,SAAS,EAAE;QACT/sC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq/D,WAAW,EAAE;QACXhtC,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs/D,OAAO,EAAE;QACPjtC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0gB,MAAM,EAAE;QACN2R,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu/D,wFAAoH,GAC/H;EACEjxD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0FAA0F;IAC5FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMupC,OAAmC,GAAG;EACjDlxD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfupC,OAAO,EAAE;QACPptC,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDoZ,MAAM,EAAE;QACNhd,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM;QACvC;MACF,CAAC;MACD9G,MAAM,EAAE;QACN0G,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0/D,SAAS,EAAE;QACTrtC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2/D,OAAO,EAAE;QACPttC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4/D,SAAS,EAAE;QACTxpC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6/D,YAAY,EAAE;QACZzpC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8/D,UAAU,EAAE;QACV1pC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+/D,UAAU,EAAE;QACV1tC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDggE,QAAQ,EAAE;QACR3tC,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDigE,YAAY,EAAE;QACZ5tC,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkgE,UAAU,EAAE;QACV7tC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmgE,cAA0C,GAAG;EACxD7xD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfkqC,SAAS,EAAE;QACT/tC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqgE,SAAS,EAAE;QACThuC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsgE,UAAU,EAAE;QACVjuC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDugE,UAAU,EAAE;QACVluC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwgE,2FAAuH,GAClI;EACElyD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6FAA6F;IAC/FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwqC,SAAqC,GAAG;EACnDnyD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfwqC,UAAU,EAAE;QACVruC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD4qC,cAAc,EAAE;QACdxuC,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2mB,mBAAuC,GAAG;EACrDrY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfl2B,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4mB,QAAQ,EAAE;QACRwP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPszB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8gE,gBAA4C,GAAG;EAC1DxyD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf3rB,KAAK,EAAE;QACL8nB,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+gE,4FAAwH,GACnI;EACEzyD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8FAA8F;IAChGC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+qC,OAAmC,GAAG;EACjD1yD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfzH,MAAM,EAAE;QACN4D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJo2B,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,gBAAgB;QACtC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0G,GAAG,EAAE;QACH2rB,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD2qC,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT5rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6mB,oBAAwC,GAAG;EACtDvY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmB,OAAO,EAAE;QACPkQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDhQ,SAAS,EAAE;QACTmQ,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMihE,0FAAsH,GACjI;EACE3yD,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4FAA4F;IAC9FC,eAAe,EAAE;MACfgrC,gBAAgB,EAAE;QAChB7uC,cAAc,EAAE,oBAAoB;QACpC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDkrC,cAAc,EAAE;QACd9uC,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDmrC,UAAU,EAAE;QACV/uC,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD2tB,QAAQ,EAAE;QACRvxB,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDorC,oBAAoB,EAAE;QACpBhvC,cAAc,EAAE,yBAAyB;QACzC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDqrC,kBAAkB,EAAE;QAClBjvC,cAAc,EAAE,uBAAuB;QACvC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDsrC,eAAe,EAAE;QACflvC,cAAc,EAAE,mBAAmB;QACnC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDurC,gBAAgB,EAAE;QAChBnvC,cAAc,EAAE,oBAAoB;QACpC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDwrC,sBAAsB,EAAE;QACtBpvC,cAAc,EAAE,2BAA2B;QAC3C/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDyrC,qBAAqB,EAAE;QACrBrvC,cAAc,EAAE,0BAA0B;QAC1C/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD0rC,eAAe,EAAE;QACftvC,cAAc,EAAE,mBAAmB;QACnC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD2rC,cAAc,EAAE;QACdvvC,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD4rC,qBAAqB,EAAE;QACrBxvC,cAAc,EAAE,0BAA0B;QAC1C/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD6rC,iBAAiB,EAAE;QACjBzvC,cAAc,EAAE,qBAAqB;QACrC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD8rC,WAAW,EAAE;QACX1vC,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACD+rC,cAAc,EAAE;QACd3vC,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDgsC,YAAY,EAAE;QACZ5vC,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDisC,cAAc,EAAE;QACd7vC,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDksC,YAAY,EAAE;QACZ9vC,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDif,cAAc,EAAE;QACd7iB,cAAc,EAAE,kBAAkB;QAClC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDwgB,aAAa,EAAE;QACbpkB,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDgf,gBAAgB,EAAE;QAChB5iB,cAAc,EAAE,oBAAoB;QACpC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDmsC,gBAAgB,EAAE;QAChB/vC,cAAc,EAAE,oBAAoB;QACpC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDosC,WAAW,EAAE;QACXhwC,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDqsC,OAAO,EAAE;QACPjwC,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDssC,iBAAiB,EAAE;QACjBlwC,cAAc,EAAE,qBAAqB;QACrC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EACP;QACJ;MACF,CAAC;MACDgL,KAAK,EAAE;QACL5O,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwiE,+BAA2D,GAAG;EACzEl0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iCAAiC;IAC5CC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyiE,kHAA8I,GACzJ;EACEn0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oHAAoH;IACtHC,eAAe,EAAE;MACfra,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDonB,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM0iE,+GAA2I,GACtJ;EACEp0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iHAAiH;IACnHC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM2iE,4GAAwI,GACnJ;EACEr0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8GAA8G;IAChHC,eAAe,EAAE;MACfvM,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM4iE,wHAAoJ,GAC/J;EACEt0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0HAA0H;IAC5HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6iE,uHAAmJ,GAC9J;EACEv0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yHAAyH;IAC3HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM8iE,mHAA+I,GAC1J;EACEx0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qHAAqH;IACvHC,eAAe,EAAE;MACfc,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+iE,qHAAiJ,GAC5J;EACEz0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uHAAuH;IACzHC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMgjE,2HAAuJ,GAClK;EACE10D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6HAA6H;IAC/HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMijE,yHAAqJ,GAChK;EACE30D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2HAA2H;IAC7HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMkjE,mHAA+I,GAC1J;EACE50D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qHAAqH;IACvHC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMmjE,kHAA8I,GACzJ;EACE70D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oHAAoH;IACtHC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMojE,yHAAqJ,GAChK;EACE90D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2HAA2H;IAC7HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMqjE,sHAAkJ,GAC7J;EACE/0D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wHAAwH;IAC1HC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMsjE,+GAA2I,GACtJ;EACEh1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iHAAiH;IACnHC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMujE,mHAA+I,GAC1J;EACEj1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qHAAqH;IACvHC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mB,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwjE,gHAA4I,GACvJ;EACEl1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kHAAkH;IACpHC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlB,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMyjE,kHAA8I,GACzJ;EACEn1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oHAAoH;IACtHC,eAAe,EAAE;MACf3P,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlB,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM0jE,gHAA4I,GACvJ;EACEp1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kHAAkH;IACpHC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwlB,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM2jE,mHAA+I,GAC1J;EACEr1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qHAAqH;IACvHC,eAAe,EAAE;MACfziB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM4jE,kHAA8I,GACzJ;EACEt1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oHAAoH;IACtHC,eAAe,EAAE;MACf1iB,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6jE,oHAAgJ,GAC3J;EACEv1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sHAAsH;IACxHC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM8jE,qHAAiJ,GAC5J;EACEx1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uHAAuH;IACzHC,eAAe,EAAE;MACfziB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+jE,gHAA4I,GACvJ;EACEz1D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kHAAkH;IACpHC,eAAe,EAAE;MACfrM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMgkE,2GAAuI,GAClJ;EACE11D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6GAA6G;IAC/GC,eAAe,EAAE;MACf1iB,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDumB,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMikE,qHAAiJ,GAC5J;EACE31D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uHAAuH;IACzHC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMkkE,oEAAgG,GAC3G;EACE51D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sEAAsE;IACxEC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMkuC,cAA0C,GAAG;EACxD71D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfkuC,OAAO,EAAE;QACP/xC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu+D,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqkE,UAAU,EAAE;QACVhyC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDskE,MAAM,EAAE;QACNjyC,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDukE,OAAO,EAAE;QACPlyC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkE,YAAY,EAAE;QACZnyC,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMykE,uFAAmH,GAC9H;EACEn2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yFAAyF;IAC3FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMyuC,uBAAmD,GAAG;EACjEp2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,yBAAyB;IACpCC,eAAe,EAAE;MACfra,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2kE,OAAO,EAAE;QACPtyC,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi5D,UAAU,EAAE;QACV5mC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4kE,uGAAmI,GAC9I;EACEt2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yGAAyG;IAC3GC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM4uC,4BAAwD,GAAG;EACtEv2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,8BAA8B;IACzCC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPoP,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5D,OAAO,EAAE;QACP9mC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8kE,qFAAiH,GAC5H;EACEx2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM8uC,yBAAqD,GAAG;EACnEz2D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,2BAA2B;IACtCC,eAAe,EAAE;MACfra,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,OAAO,EAAE;QACPoP,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5D,OAAO,EAAE;QACP9mC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg0D,QAAQ,EAAE;QACR3hC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMglE,wFAAoH,GAC/H;EACE12D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0FAA0F;IAC5FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMgvC,mBAA+C,GAAG;EAC7D32D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACfle,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDysC,SAAS,EAAE;QACTrW,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs+D,MAAM,EAAE;QACNloC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm5D,OAAO,EAAE;QACP9mC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMklE,mEAA+F,GAC1G;EACE52D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMkvC,YAAwC,GAAG;EACtD72D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfra,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu+D,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDolE,aAAa,EAAE;QACb/yC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqlE,WAAW,EAAE;QACXhzC,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm/D,QAAQ,EAAE;QACR9sC,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqkE,UAAU,EAAE;QACVhyC,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDslE,OAAO,EAAE;QACPjzC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJqyB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+4B,MAAM,EAAE;QACN1G,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDukE,OAAO,EAAE;QACPlyC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMulE,kEAA8F,GACzG;EACEj3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwlE,oFAAgH,GAC3H;EACEl3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sFAAsF;IACxFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwvC,2BAAuD,GAAG;EACrEn3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,6BAA6B;IACxCC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT2P,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0lE,UAAU,EAAE;QACVtvC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2lE,UAAU,EAAE;QACVtzC,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4lE,sFAAkH,GAC7H;EACEt3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wFAAwF;IAC1FC,eAAe,EAAE;MACf6V,OAAO,EAAE;QACP3V,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,QAAQ,EAAE;QACRyG,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6lE,qGAAiI,GAC5I;EACEv3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uGAAuG;IACzGC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6vC,6CAAyE,GACpF;EACEx3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,+CAA+C;IAC1DC,eAAe,EAAE;MACf6V,OAAO,EAAE;QACP3V,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,QAAQ,EAAE;QACRyG,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+lE,sEAAkG,GAC7G;EACEz3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wEAAwE;IAC1EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMzoB,eAAmC,GAAG;EACjDc,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfzH,MAAM,EAAE;QACN4D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgtD,OAAO,EAAE;QACP52B,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd+J,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDkoB,SAAS,EAAE;QACTkO,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfkK,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgmE,iBAAiB,EAAE;QACjB3zC,cAAc,EAAE,qBAAqB;QACrC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDimE,iBAAiB,EAAE;QACjB5zC,cAAc,EAAE,sBAAsB;QACtC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkmE,eAAe,EAAE;QACf7zC,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmmE,iBAAiB,EAAE;QACjB/vC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,sBAAsB;QACtC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV8J,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDivB,WAAW,EAAE;QACXoD,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDooB,SAAS,EAAE;QACTgO,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACfgK,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLiJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgvB,SAAS,EAAE;QACTqD,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT0N,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDomE,YAAY,EAAE;QACZ/zC,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqmE,6EAAyG,GACpH;EACE/3D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,+EAA+E;IACjFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMlI,YAAwC,GAAG;EACtDzf,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw+D,UAAU,EAAE;QACVpoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu+D,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoD,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy+D,UAAU,EAAE;QACVpsC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDsmE,QAAQ,EAAE;QACRj0C,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMumE,4EAAwG,GACnH;EACEj4D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMuwC,WAAuC,GAAG;EACrDl4D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACf3qB,IAAI,EAAE;QACJ8mB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT5rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw+D,UAAU,EAAE;QACVpoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu+D,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqO,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymE,SAAS,EAAE;QACTp0C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs0C,SAAS,EAAE;QACTjiB,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0mE,mBAAmB,EAAE;QACnBtwC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2mE,uBAAuB,EAAE;QACvBvwC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,6BAA6B;QAC7C8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4mE,gBAAgB,EAAE;QAChBv0C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2tB,uBAAoC,GAAG;EAClDrf,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf2wC,QAAQ,EAAE;QACRx0C,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,QAAQ,EAAE;QACRyG,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8mE,QAAQ,EAAE;QACRz0C,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMlV,wBAA4C,GAAG;EAC1DzS,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,OAAO,EAAE;QACPkP,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+mE,sEAAkG,GAC7G;EACEz4D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wEAAwE;IAC1EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+wC,gFAA4G,GACvH;EACE14D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMgxC,+EAA2G,GACtH;EACE34D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMixC,SAAqC,GAAG;EACnD54D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfsF,KAAK,EAAE;QACLnJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnE,KAAK,EAAE;QACL90C,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDonE,IAAI,EAAE;QACJ/0C,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8I,MAAM,EAAE;QACNupB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsjD,IAAI,EAAE;QACJjxB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqnE,aAAa,EAAE;QACbh1C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnE,eAAe,EAAE;QACfj1C,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD07B,UAAU,EAAE;QACVrJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDunE,cAAc,EAAE;QACdl1C,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4rC,UAAU,EAAE;QACVvZ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuxC,uBAAmD,GAAG;EACjEl5D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,yBAAyB;IACpCC,eAAe,EAAE;MACfukC,SAAS,EAAE;QACTpoC,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDynE,KAAK,EAAE;QACLp1C,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0nE,gFAA4G,GACvH;EACEp5D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM0xC,QAAoC,GAAG;EAClDr5D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf10B,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4nE,MAAM,EAAE;QACNv1C,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6nE,mFAA+G,GAC1H;EACEv5D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qFAAqF;IACvFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6xC,SAAqC,GAAG;EACnDx5D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfsF,KAAK,EAAE;QACLnJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy6D,SAAS,EAAE;QACTpoC,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+nE,WAAW,EAAE;QACX11C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoE,SAAS,EAAE;QACT31C,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDioE,aAAa,EAAE;QACb51C,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkoE,cAAc,EAAE;QACd71C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAS;UAAE;QACpC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmoE,oGAAgI,GAC3I;EACE75D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sGAAsG;IACxGC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMmyC,QAAoC,GAAG;EAClD95D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfsF,KAAK,EAAE;QACLnJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoE,QAAQ,EAAE;QACRh2C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDynE,KAAK,EAAE;QACLp1C,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy6D,SAAS,EAAE;QACTpoC,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsoE,uGAAmI,GAC9I;EACEh6D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yGAAyG;IAC3GC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMsyC,uEAAmG,GAC9G;EACEj6D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yEAAyE;IAC3EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM0E,gBAAoC,GAAG;EAClDrsB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,QAAQ,EAAE;QACRvI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,WAAW,EAAE;QACXxI,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD86B,KAAK,EAAE;QACLzI,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+6B,WAAW,EAAE;QACX1I,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwL,MAAM,EAAE;QACN4qB,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg7B,GAAG,EAAE;QACH5E,WAAW,EAAE;UACX6E,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE;QACZ,CAAC;QACD7I,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXE,gBAAgB,EAAE,UAAU;cAC5BD,gBAAgB,EAAE;YACpB,CAAC;YACD/nB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsX,IAAI,EAAE;QACJ+a,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm7B,IAAI,EAAE;QACJ9I,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwoE,2FAAuH,GAClI;EACEl6D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6FAA6F;IAC/FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMkG,wBAA4C,GAAG;EAC1D7tB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACfjlB,IAAI,EAAE;QACJohB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN40B,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq7B,OAAO,EAAE;QACPhJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD46B,QAAQ,EAAE;QACRvI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD66B,WAAW,EAAE;QACXxI,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs7B,OAAO,EAAE;QACPjJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoR,SAAS,EAAE;QACTihB,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsX,IAAI,EAAE;QACJ+a,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPk0B,WAAW,EAAE;UACXE,gBAAgB,EAAE,UAAU;UAC5BD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyoE,yFAAqH,GAChI;EACEn6D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2FAA2F;IAC7FC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMvpB,WAAuC,GAAG;EACrD4B,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTkU,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyyC,mEAA+F,GAC1G;EACEp6D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM/nB,YAAgC,GAAG;EAC9CI,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,MAAM;IACjBC,eAAe,EAAE;MACfzH,MAAM,EAAE;QACN4D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0gE,UAAU,EAAE;QACVruC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2oE,yBAAyB,EAAE;QACzBt2C,cAAc,EAAE,6BAA6B;QAC7C8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4oE,qBAAqB,EAAE;QACrBv2C,cAAc,EAAE,yBAAyB;QACzC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oE,YAAY,EAAE;QACZx2C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqc,QAAQ,EAAE;QACRgW,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACD6yC,OAAO,EAAE;QACPz2C,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD8yC,cAAc,EAAE;QACd12C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgpE,SAAS,EAAE;QACT32C,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDj2B,IAAI,EAAE;QACJo2B,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,gBAAgB;QACtC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPuvB,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuvC,MAAM,EAAE;QACNld,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDgzC,WAAW,EAAE;QACX52C,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkpE,OAAmC,GAAG;EACjD56D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfizC,UAAU,EAAE;QACV92C,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopE,cAAc,EAAE;QACd/2C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4oE,qBAAqB,EAAE;QACrBv2C,cAAc,EAAE,yBAAyB;QACzC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqpE,OAAO,EAAE;QACPh3C,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDj2B,IAAI,EAAE;QACJo2B,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,gBAAgB;QACtC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8C,OAAO,EAAE;QACPuvB,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipE,WAAW,EAAE;QACX52C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMspE,cAA0C,GAAG;EACxDh7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTkU,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMszC,kEAA8F,GACzG;EACEj7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN4Q,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsO,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPmwB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMwpE,aAAyC,GAAG;EACvDl7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf8mB,OAAO,EAAE;QACP5mB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDypE,QAAQ,EAAE;QACRrzC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0pE,MAAkC,GAAG;EAChDp7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMlP,oBAAwC,GAAG;EACtDzY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2pE,gDAA4E,GACvF;EACEr7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kDAAkD;IAC7DC,eAAe,EAAE;MACf5nB,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPmwB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM4pE,4EAAwG,GACnH;EACEt7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM4zC,6EAAyG,GACpH;EACEv7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,+EAA+E;IACjFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM6zC,2EAAuG,GAClH;EACEx7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM8zC,+EAA2G,GACtH;EACEz7D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+zC,YAAwC,GAAG;EACtD17D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfwqC,UAAU,EAAE;QACVruC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD4qC,cAAc,EAAE;QACdxuC,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8mB,sBAA0C,GAAG;EACxDxY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf1Q,MAAM,EAAE;QACN6M,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDumB,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiqE,4EAAwG,GACnH;EACE37D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMi0C,UAAsC,GAAG;EACpD57D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfwqC,UAAU,EAAE;QACVruC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD4qC,cAAc,EAAE;QACdxuC,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmqE,qEAAiG,GAC5G;EACE77D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM9H,cAAkC,GAAG;EAChD7f,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfzH,MAAM,EAAE;QACN4D,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0gE,UAAU,EAAE;QACVruC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4oE,qBAAqB,EAAE;QACrBv2C,cAAc,EAAE,yBAAyB;QACzC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oE,YAAY,EAAE;QACZx2C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoqE,YAAY,EAAE;QACZ/3C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqqE,cAAc,EAAE;QACdj0C,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4Y,MAAM,EAAE;QACNyZ,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDsnC,MAAM,EAAE;QACNnnC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR6N,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDg1C,QAAQ,EAAE;QACR3iB,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMq0C,YAAwC,GAAG;EACtDh8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfxO,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuqE,QAAoC,GAAG;EAClDj8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTkU,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM1U,wBAA4C,GAAG;EAC1DjT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf7O,WAAW,EAAE;QACXgL,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsnB,cAAc,EAAE;QACd+K,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxP,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwqE,kDAA8E,GACzF;EACEl8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oDAAoD;IAC/DC,eAAe,EAAE;MACfziB,QAAQ,EAAE;QACR2iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsO,IAAI,EAAE;QACJ+jB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkC,OAAO,EAAE;QACPmwB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMyqE,8EAA0G,GACrH;EACEn8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,gFAAgF;IAClFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMy0C,YAAwC,GAAG;EACtDp8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2gE,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMzU,sBAA0C,GAAG;EACxDlT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf7T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo3B,SAAS,EAAE;QACT/E,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDxiB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2qE,+EAA2G,GACtH;EACEr8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMtpB,mBAAuC,GAAG;EACrD2B,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT5rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+nB,OAAO,EAAE;QACPqO,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD0qC,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACHgQ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLif,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR2iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR6N,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,QAAQ,EAAE;QACRhF,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDs3B,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR4iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHoa,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4M,cAA0C,GAAG;EACxD0B,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT5rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+nB,OAAO,EAAE;QACPqO,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD0qC,YAAY,EAAE;QACZvqC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4gE,YAAY,EAAE;QACZvuC,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACHgQ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLif,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR2iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDiY,GAAG,EAAE;QACHoa,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4qE,iFAA6G,GACxH;EACEt8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM40C,KAAiC,GAAG;EAC/Cv8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACf40C,WAAW,EAAE;QACXz4C,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+qE,SAAS,EAAE;QACT14C,cAAc,EAAE,YAAY;QAC5B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgrE,8BAA8B,EAAE;QAC9B34C,cAAc,EAAE,oCAAoC;QACpD/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDirE,oBAAoB,EAAE;QACpB54C,cAAc,EAAE,wBAAwB;QACxC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkrE,wBAAwB,EAAE;QACxB74C,cAAc,EAAE,6BAA6B;QAC7C/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmrE,iCAAiC,EAAE;QACjC/0C,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,wCAAwC;QACxD/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDorE,iBAAiB,EAAE;QACjB/4C,cAAc,EAAE,oBAAoB;QACpC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqrE,iFAA6G,GACxH;EACE/8D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMq1C,IAAgC,GAAG;EAC9Ch9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,MAAM;IACjBC,eAAe,EAAE;MACfmG,KAAK,EAAE;QACLhK,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDurE,SAAS,EAAE;QACTl5C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwrE,OAAO,EAAE;QACPn5C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyrE,iFAA6G,GACxH;EACEn9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMy1C,0EAAsG,GACjH;EACEp9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM01C,4EAAwG,GACnH;EACEr9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM21C,yEAAqG,GAChH;EACEt9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2EAA2E;IAC7EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM41C,SAAqC,GAAG;EACnDv9D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf10B,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8rE,eAAe,EAAE;QACfz5C,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+rE,WAAW,EAAE;QACX15C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgsE,gBAAgB,EAAE;QAChB35C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDisE,cAAc,EAAE;QACd55C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDksE,cAAc,EAAE;QACd75C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmsE,gBAAgB,EAAE;QAChB95C,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDosE,SAAS,EAAE;QACT/5C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqsE,cAAc,EAAE;QACdh6C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDssE,YAAY,EAAE;QACZj6C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDusE,YAAY,EAAE;QACZl6C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwsE,cAAc,EAAE;QACdn6C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDysE,iBAAiB,EAAE;QACjBp6C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0lE,UAAU,EAAE;QACVtvC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0sE,gBAAgB,EAAE;QAChBr6C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2sE,gBAAgB,EAAE;QAChBt6C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4sE,8EAA0G,GACrH;EACEt+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,gFAAgF;IAClFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM42C,2EAAuG,GAClH;EACEv+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM62C,yEAAqG,GAChH;EACEx+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2EAA2E;IAC7EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM82C,KAAiC,GAAG;EAC/Cz+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACf4E,KAAK,EAAE;QACL1E,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgtE,WAAW,EAAE;QACX36C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMitE,wEAAoG,GAC/G;EACE3+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMi3C,yEAAqG,GAChH;EACE5+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2EAA2E;IAC7EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMk3C,SAAqC,GAAG;EACnD7+D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf10B,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+vB,SAAS,EAAE;QACTsC,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0sE,gBAAgB,EAAE;QAChBr6C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgsE,gBAAgB,EAAE;QAChB35C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2sE,gBAAgB,EAAE;QAChBt6C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDotE,cAAc,EAAE;QACd/6C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqtE,WAAW,EAAE;QACXh7C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDstE,aAAa,EAAE;QACbj7C,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDutE,aAAa,EAAE;QACbl7C,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwtE,eAAe,EAAE;QACfn7C,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDytE,YAAY,EAAE;QACZp7C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0tE,cAAc,EAAE;QACdr7C,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD2tE,YAAY,EAAE;QACZt7C,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4tE,gBAAgB,EAAE;QAChBv7C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0lE,UAAU,EAAE;QACVtvC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6tE,gFAA4G,GACvH;EACEv/D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM63C,+EAA2G,GACtH;EACEx/D,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+G,cAAkC,GAAG;EAChD1uB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACf63C,aAAa,EAAE;QACb17C,cAAc,EAAE,iBAAiB;QACjC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD+3C,gBAAgB,EAAE;QAChB37C,cAAc,EAAE,qBAAqB;QACrC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiuE,SAAS,EAAE;QACT57C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkuE,gBAAgB,EAAE;QAChB77C,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmuE,WAAW,EAAE;QACX97C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDouE,SAAS,EAAE;QACT/7C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDquE,UAAU,EAAE;QACVh8C,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsuE,UAAU,EAAE;QACVj8C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuuE,UAAU,EAAE;QACVl8C,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwuE,UAAU,EAAE;QACVn8C,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyuE,YAAY,EAAE;QACZp8C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD29B,YAAY,EAAE;QACZtL,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0uE,WAAW,EAAE;QACXr8C,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD09B,WAAW,EAAE;QACXrL,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2uE,mBAA+C,GAAG;EAC7DrgE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACf04C,SAAS,EAAE;QACTv8C,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6uE,cAAc,EAAE;QACdx8C,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8uE,YAAY,EAAE;QACZz8C,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+uE,0EAAsG,GACjH;EACEzgE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAM+4C,iFAA6G,GACxH;EACE1gE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMg5C,kBAA8C,GAAG;EAC5D3gE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACfY,SAAS,EAAE;QACTzE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkiB,SAAS,EAAE;QACTkU,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDkvE,QAAQ,EAAE;QACR78C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiR,IAAI,EAAE;QACJmlB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqmB,UAAU,EAAE;QACVgM,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPT,WAAW,EAAE;cACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;YACjC,CAAC;YACDnkB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk5C,sEAAkG,GAC7G;EACE7gE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wEAAwE;IAC1EC,eAAe,EAAE;MACf7nB,IAAI,EAAE;QACJgkB,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE,WAAW;cACjBi2B,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEI,MAAMm5C,QAAoC,GAAG;EAClD9gE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfzP,SAAS,EAAE;QACT2P,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6d,IAAI,EAAE;QACJwU,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CAAC,YAAY,EAAE,cAAc;QAC9C;MACF,CAAC;MACD64C,YAAY,EAAE;QACZj5C,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,gBAAgB;QAChC8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0+D,SAAS,EAAE;QACTtoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsvE,SAAS,EAAE;QACTj9C,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACdyoC,QAAQ,EAAE,IAAI;QACdtwD,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuvE,iBAA6C,GAAG;EAC3DjhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACflxB,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDumB,WAAW,EAAE;QACX6P,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR4iB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6G,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwvE,oBAAgD,GAAG;EAC9DlhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACflxB,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgY,WAAW,EAAE;QACXqa,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyvE,OAAO,EAAE;QACPp9C,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq+D,MAAM,EAAE;QACNhsC,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDo+D,SAAS,EAAE;QACT/rC,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDysC,SAAS,EAAE;QACTrW,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs+D,MAAM,EAAE;QACNloC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0vE,yBAAqD,GAAG;EACnEphE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,2BAA2B;IACtCC,eAAe,EAAE;MACfqoC,cAAc,EAAE;QACdnoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVua,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDw+D,UAAU,EAAE;QACVpoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoD,QAAQ,EAAE;QACRh2B,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDy+D,UAAU,EAAE;QACVpsC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDwB,MAAM,EAAE;QACN6wB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm+D,UAAU,EAAE;QACV9rC,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD82B,SAAS,EAAE;QACTV,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2vE,qBAAiD,GAAG;EAC/DrhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACflxB,MAAM,EAAE;QACNqtB,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6d,IAAI,EAAE;QACJwU,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,MAAM;UACZw2B,aAAa,EAAE,CACb,qBAAqB,EACrB,kBAAkB,EAClB,kBAAkB,EAClB,eAAe,EACf,kBAAkB,EAClB,gBAAgB,EAChB,YAAY,EACZ,cAAc,EACd,mBAAmB,EACnB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,eAAe;QAEnB;MACF,CAAC;MACDkoC,SAAS,EAAE;QACTtoC,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4vE,cAA0C,GAAG;EACxDthE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfrvB,MAAM,EAAE;QACNuvB,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,iBAAiB;QACvC,CAAC;QACDJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,YAAY;UAClB2H,KAAK,EAAE;YAAE2G,IAAI,EAAE;cAAEtO,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMsmB,eAAmC,GAAG;EACjDhY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf3P,WAAW,EAAE;QACX8L,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMioB,uBAA2C,GAAG;EACzD3Z,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfc,WAAW,EAAE;QACX3E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmoB,eAAe,EAAE;QACfiO,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDi3B,WAAW,EAAE;QACX5E,cAAc,EAAE,cAAc;QAC9B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,eAAe,EAAE;QACf+N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,kBAAkB;QAClC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,cAAc,EAAE;QACd8N,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,iBAAiB;QACjC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDuoB,UAAU,EAAE;QACV6N,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDk3B,WAAW,EAAE;QACX7E,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM9M,wBAA4C,GAAG;EAC1D7a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqpB,yBAA6C,GAAG;EAC3D/a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDspB,IAAI,EAAE;QACJ+I,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6gB,8BAAkD,GAAG;EAChEvS,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,wBAAwB;IACnCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoM,MAAM,EAAE;QACNimB,cAAc,EAAE,QAAQ;QACxB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDvN,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDm3B,aAAa,EAAE;QACb9E,cAAc,EAAE,gBAAgB;QAChC/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2oB,4BAAgD,GAAG;EAC9Dra,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMgpB,0BAA8C,GAAG;EAC5D1a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkpB,sBAA0C,GAAG;EACxD5a,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDipB,GAAG,EAAE;QACHoJ,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMupB,uBAA2C,GAAG;EACzDjb,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8oB,oBAAoB,EAAE;QACpBsN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+oB,oBAAoB,EAAE;QACpBqN,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMypB,6BAAiD,GAAG;EAC/Dnb,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm/B,6BAAiD,GAAG;EAC/D7wB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACftN,SAAS,EAAE;QACTyJ,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6oB,MAAM,EAAE;QACNwJ,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwoB,oBAAoB,EAAE;QACpB6J,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDyoB,oBAAoB,EAAE;QACpB4J,cAAc,EAAE,wBAAwB;QACxC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE,UAAU;UAChB62B,OAAO,EAAE;YACPvoB,IAAI,EAAE;cACJtO,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD0oB,SAAS,EAAE;QACT2J,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDopB,KAAK,EAAE;QACLgN,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyO,OAAO,EAAE;QACP4jB,cAAc,EAAE,SAAS;QACzB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMyhB,qBAAyC,GAAG;EACvDnT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACfziB,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0nB,KAAK,EAAE;QACL2K,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwkB,QAAQ,EAAE;QACR4R,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDq3B,QAAQ,EAAE;QACRhF,cAAc,EAAE,WAAW;QAC3B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACDqB,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD5T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwT,QAAQ,EAAE;QACR6e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM0hB,uBAA2C,GAAG;EACzDpT,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,iBAAiB;IAC5BC,eAAe,EAAE;MACfnO,OAAO,EAAE;QACPsK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgoB,QAAQ,EAAE;QACRqK,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDs3B,WAAW,EAAE;QACXjF,cAAc,EAAE,cAAc;QAC9B/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF,CAAC;MACD5T,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDyT,QAAQ,EAAE;QACR4e,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMwmB,sBAA0C,GAAG;EACxDlY,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfxP,YAAY,EAAE;QACZ2L,cAAc,EAAE,eAAe;QAC/B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDymB,SAAS,EAAE;QACT4L,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM8d,sBAA0C,GAAG;EACxDxP,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf9O,QAAQ,EAAE;QACRiL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD6b,UAAU,EAAE;QACVwW,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDgF,MAAM,EAAE;QACNoxB,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,QAAQ;QACxB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu/B,kBAAsC,GAAG;EACpDjxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACflP,OAAO,EAAE;QACPqL,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,IAAI,EAAE;QACJoL,cAAc,EAAE,MAAM;QACtB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDwc,SAAS,EAAE;QACT4Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,YAAY;QAC5B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmnB,QAAQ,EAAE;QACRkL,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0pB,OAAO,EAAE;QACP0M,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,wBAAwB;QAC9C,CAAC;QACDJ,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw/B,gBAAoC,GAAG;EAClDlxB,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfvM,IAAI,EAAE;QACJ0I,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD0c,UAAU,EAAE;QACV0Z,WAAW,EAAE;UACXE,gBAAgB,EAAE,KAAK;UACvBD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,aAAa;QAC7B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHnB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD+f,QAAQ,EAAE;QACRqW,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDiY,GAAG,EAAE;QACHme,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD4pB,QAAQ,EAAE;QACRyI,cAAc,EAAE,WAAW;QAC3B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMhV,mBAAuC,GAAG;EACrD3S,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfrM,OAAO,EAAE;QACPwI,cAAc,EAAE,UAAU;QAC1B8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDqiB,GAAG,EAAE;QACH+T,WAAW,EAAE;UACXC,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJ;UACAtO,IAAI,EAAE;QACR;MACF,CAAC;MACDoT,KAAK,EAAE;QACLgjB,WAAW,EAAE;UACXE,gBAAgB,EAAE,oBAAoB;UACtCD,gBAAgB,EAAE;QACpB,CAAC;QACDhE,cAAc,EAAE,OAAO;QACvB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACD8X,EAAE,EAAE;QACFua,cAAc,EAAE,IAAI;QACpB/jB,IAAI,EAAE;UACJtO,IAAI,EAAE,WAAW;UACjBi2B,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM45C,oFAAgH,GAC3H;EACEvhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sFAAsF;IACxFC,eAAe,EAAE;MACf,GAAG6nC,yFAAyF,CACzFzvD,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM45C,qFAAiH,GAC5H;EACExhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf,GAAG6oC,4FAA4F,CAC5FzwD,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM65C,qFAAiH,GAC5H;EACEzhE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB,eAAe;MACzC,GAAG+oC,2FAA2F,CAC3F3wD,IAAI,CAAC4nB;IACV;EACF;AACF,CAAC;AAEI,MAAM85C,iFAA6G,GACxH;EACE1hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACf,GAAGqpC,wFAAwF,CACxFjxD,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM+5C,qFAAiH,GAC5H;EACE3hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf,GAAGsqC,2FAA2F,CAC3FlyD,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMg6C,uFAAmH,GAC9H;EACE5hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yFAAyF;IAC3FC,eAAe,EAAE;MACf,GAAG6qC,4FAA4F,CAC5FzyD,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMi6C,+DAA2F,GACtG;EACE7hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iEAAiE;IACnEC,eAAe,EAAE;MACf,GAAGguC,oEAAoE,CACpE51D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMk6C,kFAA8G,GACzH;EACE9hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oFAAoF;IACtFC,eAAe,EAAE;MACf,GAAGuuC,uFAAuF,CACvFn2D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMm6C,kGAA8H,GACzI;EACE/hE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oGAAoG;IACtGC,eAAe,EAAE;MACf,GAAG0uC,uGAAuG,CACvGt2D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMo6C,8EAA0G,GACrH;EACEhiE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,gFAAgF;IAClFC,eAAe,EAAE;MACf,GAAG4uC,qFAAqF,CACrFx2D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMq6C,kFAA8G,GACzH;EACEjiE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oFAAoF;IACtFC,eAAe,EAAE;MACf,GAAG8uC,wFAAwF,CACxF12D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMs6C,6DAAyF,GACpG;EACEliE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,+DAA+D;IACjEC,eAAe,EAAE;MACf,GAAGgvC,mEAAmE,CACnE52D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMu6C,+EAA2G,GACtH;EACEniE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf,GAAGsvC,oFAAoF,CACpFl3D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMw6C,+FAA2H,GACtI;EACEpiE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iGAAiG;IACnGC,eAAe,EAAE;MACf,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB,eAAe;MACzC,GAAG2vC,qGAAqG,CACrGv3D,IAAI,CAAC4nB;IACV;EACF;AACF,CAAC;AAEI,MAAMy6C,gEAA4F,GACvG;EACEriE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kEAAkE;IACpEC,eAAe,EAAE;MACf,GAAG6vC,sEAAsE,CACtEz3D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM06C,uEAAmG,GAC9G;EACEtiE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yEAAyE;IAC3EC,eAAe,EAAE;MACf,GAAGmwC,6EAA6E,CAC7E/3D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM26C,qEAAiG,GAC5G;EACEviE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf,GAAGqwC,4EAA4E,CAC5Ej4D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM46C,iEAA6F,GACxG;EACExiE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mEAAmE;IACrEC,eAAe,EAAE;MACf,GAAG6wC,sEAAsE,CACtEz4D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM66C,0EAAsG,GACjH;EACEziE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf,GAAG8wC,gFAAgF,CAChF14D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM86C,yEAAqG,GAChH;EACE1iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2EAA2E;IAC7EC,eAAe,EAAE;MACf,GAAG+wC,+EAA+E,CAC/E34D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM+6C,2EAAuG,GAClH;EACE3iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf,GAAGwxC,gFAAgF,CAChFp5D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMg7C,6EAAyG,GACpH;EACE5iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,+EAA+E;IACjFC,eAAe,EAAE;MACf,GAAG2xC,mFAAmF,CACnFv5D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMi7C,+FAA2H,GACtI;EACE7iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,iGAAiG;IACnGC,eAAe,EAAE;MACf,GAAGiyC,oGAAoG,CACpG75D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMk7C,kGAA8H,GACzI;EACE9iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oGAAoG;IACtGC,eAAe,EAAE;MACf,GAAGoyC,uGAAuG,CACvGh6D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMm7C,iEAA6F,GACxG;EACE/iE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mEAAmE;IACrEC,eAAe,EAAE;MACf,GAAGqyC,uEAAuE,CACvEj6D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMo7C,sFAAkH,GAC7H;EACEhjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wFAAwF;IAC1FC,eAAe,EAAE;MACf,GAAGsyC,2FAA2F,CAC3Fl6D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMq7C,oFAAgH,GAC3H;EACEjjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sFAAsF;IACxFC,eAAe,EAAE;MACf,GAAGuyC,yFAAyF,CACzFn6D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMs7C,8DAA0F,GACrG;EACEljE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,gEAAgE;IAClEC,eAAe,EAAE;MACf,GAAGwyC,mEAAmE,CACnEp6D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMu7C,qEAAiG,GAC5G;EACEnjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf,GAAG0zC,4EAA4E,CAC5Et7D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMw7C,sEAAkG,GAC7G;EACEpjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wEAAwE;IAC1EC,eAAe,EAAE;MACf,GAAG4zC,2EAA2E,CAC3Ex7D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMy7C,wEAAoG,GAC/G;EACErjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACf,GAAG6zC,+EAA+E,CAC/Ez7D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM07C,uEAAmG,GAC9G;EACEtjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,yEAAyE;IAC3EC,eAAe,EAAE;MACf,GAAG+zC,4EAA4E,CAC5E37D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM27C,gEAA4F,GACvG;EACEvjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,kEAAkE;IACpEC,eAAe,EAAE;MACf,GAAGi0C,qEAAqE,CACrE77D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM47C,yEAAqG,GAChH;EACExjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,2EAA2E;IAC7EC,eAAe,EAAE;MACf,GAAGu0C,8EAA8E,CAC9En8D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM67C,wEAAoG,GAC/G;EACEzjE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACf,GAAGy0C,+EAA+E,CAC/Er8D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM87C,0EAAsG,GACjH;EACE1jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf,GAAG00C,iFAAiF,CACjFt8D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM+7C,2EAAuG,GAClH;EACE3jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf,GAAGm1C,iFAAiF,CACjF/8D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMg8C,2EAAuG,GAClH;EACE5jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf,GAAGu1C,iFAAiF,CACjFn9D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMi8C,oEAAgG,GAC3G;EACE7jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,sEAAsE;IACxEC,eAAe,EAAE;MACf,GAAGw1C,0EAA0E,CAC1Ep9D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMk8C,sEAAkG,GAC7G;EACE9jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,wEAAwE;IAC1EC,eAAe,EAAE;MACf,GAAGy1C,4EAA4E,CAC5Er9D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMm8C,kEAA8F,GACzG;EACE/jE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf,GAAG01C,yEAAyE,CACzEt9D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMo8C,wEAAoG,GAC/G;EACEhkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACf,GAAG02C,8EAA8E,CAC9Et+D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMq8C,qEAAiG,GAC5G;EACEjkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf,GAAG22C,2EAA2E,CAC3Ev+D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMs8C,mEAA+F,GAC1G;EACElkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACf,GAAG42C,yEAAyE,CACzEx+D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMu8C,kEAA8F,GACzG;EACEnkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf,GAAG+2C,wEAAwE,CACxE3+D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMw8C,kEAA8F,GACzG;EACEpkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf,GAAGg3C,yEAAyE,CACzE5+D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAMy8C,2EAAuG,GAClH;EACErkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf,GAAG23C,gFAAgF,CAChFv/D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM08C,0EAAsG,GACjH;EACEtkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf,GAAG43C,+EAA+E,CAC/Ex/D,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM28C,qEAAiG,GAC5G;EACEvkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf,GAAG64C,0EAA0E,CAC1EzgE,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM48C,2EAAuG,GAClH;EACExkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACf,GAAG84C,iFAAiF,CACjF1gE,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM68C,iEAA6F,GACxG;EACEzkE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EACP,mEAAmE;IACrEC,eAAe,EAAE;MACf,GAAGi5C,sEAAsE,CACtE7gE,IAAI,CAAC4nB,eAAe;MACvB,GAAGyoC,iBAAiB,CAACrwD,IAAI,CAAC4nB;IAC5B;EACF;AACF,CAAC;AAEI,MAAM88C,gBAA4C,GAAG;EAC1D1kE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf,GAAGvP,mBAAW,CAACrY,IAAI,CAAC4nB,eAAe;MACnC,GAAGqzC,kEAAkE,CAACj7D,IAAI,CACvE4nB;IACL;EACF;AACF,CAAC;AAEM,MAAM+8C,gBAA4C,GAAG;EAC1D3kE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf,GAAGyE,gBAAQ,CAACrsB,IAAI,CAAC4nB,eAAe;MAChCg9C,iBAAiB,EAAE;QACjB7gD,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDouB,KAAK,EAAE;QACLgI,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDmzE,gBAAgB,EAAE;QAChB9gD,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDozE,iBAAiB,EAAE;QACjB/gD,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqzE,kBAA8C,GAAG;EAC5D/kE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACf,GAAGiG,wBAAgB,CAAC7tB,IAAI,CAAC4nB,eAAe;MACxCo9C,eAAe,EAAE;QACfjhD,cAAc,EAAE,mBAAmB;QACnC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDozE,iBAAiB,EAAE;QACjB/gD,cAAc,EAAE,oBAAoB;QACpC8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDu3B,GAAG,EAAE;QACHlF,cAAc,EAAE,KAAK;QACrB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF,CAAC;MACDouB,KAAK,EAAE;QACLgI,WAAW,EAAE;UACXoB,OAAO,EAAE,IAAI/E,MAAM,CAAC,WAAW;QACjC,CAAC;QACDJ,cAAc,EAAE,OAAO;QACvB8D,QAAQ,EAAE,IAAI;QACd7nB,IAAI,EAAE;UACJtO,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMuzE,QAAoC,GAAG;EAClDjlE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf,GAAGnP,oBAAY,CAACzY,IAAI,CAAC4nB,eAAe;MACpC,GAAGyzC,gDAAgD,CAACr7D,IAAI,CAAC4nB;IAC3D;EACF;AACF,CAAC;AAEM,MAAMs9C,UAAsC,GAAG;EACpDllE,IAAI,EAAE;IACJtO,IAAI,EAAE,WAAW;IACjBi2B,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf,GAAG3U,wBAAgB,CAACjT,IAAI,CAAC4nB,eAAe;MACxC,GAAGs0C,kDAAkD,CAACl8D,IAAI,CACvD4nB;IACL;EACF;AACF,CAAC;AAEM,IAAIsL,sBAAc,GAAG;EAC1B,+BAA+B,EAAE9J,sBAAcA;AACjD,CAAC;;ACpsT0D;AACV;AACI;AACN;AAyJxC,MAAM0/B,qBAAU,SAAS/0B,0BAAwB,CAAC;EAGvD;AACF;AACA;AACA;AACA;EACEviC,WAAWA,CAAC+hC,KAAa,EAAE/qB,OAAkC,EAAE;IAAA,IAAAb,IAAA,EAAAysB,iBAAA;IAC7D,IAAIb,KAAK,KAAK3wB,SAAS,EAAE;MACvB,MAAM,IAAIrR,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACiX,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAM6rB,QAAkC,GAAG;MACzCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAG,kCAAkC;IACzD,MAAMC,eAAe,GACnBhsB,OAAO,CAACisB,gBAAgB,IAAIjsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,GAChE,GAAGhsB,OAAO,CAACisB,gBAAgB,CAACD,eAAe,IAAID,cAAc,EAAE,GAC/D,GAAGA,cAAc,EAAE;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAG7rB,OAAO;MACVisB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAhtB,IAAA,IAAAysB,iBAAA,GAAE5rB,OAAO,CAACmsB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI5rB,OAAO,CAACosB,OAAO,cAAAjtB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAAC+sB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACnB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACE4xC,oBAAoBA,CAClBhtD,SAAyB,EACzB3P,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtB48D,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBltD,SAAyB,EACzB3P,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtB88D,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBptD,SAAyB,EACzB3P,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtBg9D,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChBttD,SAAyB,EACzB3P,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtBk9D,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBxtD,SAAyB,EACzB3P,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtBo9D,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChB1tD,SAAyB,EACzB3P,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtBs9D,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,2BAA2BA,CACzB5tD,SAAyB,EACzB3P,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE1c,SAAS;MAAE3P;IAAQ,CAAC,EACtBw9D,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtBz9D,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX09D,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxB54D,UAA0B,EAC1B/E,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE/E;IAAQ,CAAC,EACvB49D,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,uBAAuBA,CACrB94D,UAA0B,EAC1Bo9C,UAAkB,EAClBniD,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAEo9C,UAAU;MAAEniD;IAAQ,CAAC,EACnC89D,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBh5D,UAA0B,EAC1B/E,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE/E;IAAQ,CAAC,EACvBg+D,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,mBAAmBA,CACjBl5D,UAA0B,EAC1Bs9C,OAAe,EACfriD,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAEs9C,OAAO;MAAEriD;IAAQ,CAAC,EAChCk+D,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxBp5D,UAA0B,EAC1B/E,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE/E;IAAQ,CAAC,EACvBo+D,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CACjB/xE,EAAkB,EAClB0T,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfs+D,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,mBAAmBA,CACjBv+D,OAA2C,EACL;IACtC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXw+D,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBz+D,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX0+D,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrB55D,UAA0B,EAC1B/E,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE/E;IAAQ,CAAC,EACvB4+D,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,6BAA6BA,CAC3B95D,UAA0B,EAC1B4K,SAAyB,EACzB3P,OAAqD,EACL;IAChD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE4K,SAAS;MAAE3P;IAAQ,CAAC,EAClC8+D,0CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oCAAoCA,CAClCh6D,UAA0B,EAC1B4K,SAAyB,EACzB3P,OAA4D,EACL;IACvD,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE4K,SAAS;MAAE3P;IAAQ,CAAC,EAClCg/D,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CACf3yE,EAAkB,EAClB0T,OAAyC,EACL;IACpC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfk/D,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTn/D,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEo/D,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAUA,CACR/yE,EAAkB,EAClB0T,OAAkC,EACL;IAC7B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EAAEs/D,uBAAuB,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACdv/D,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXw/D,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,eAAeA,CACbz/D,OAAuC,EACL;IAClC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE0/D,4BAA4B,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;AACA;EACEz6D,WAAWA,CACT3Y,EAAkB,EAClB0T,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EAAEgtB,mCAAwB,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;EACE2yC,WAAWA,CACT3/D,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE4/D,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrB96D,UAA0B,EAC1B/E,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEtnB,UAAU;MAAE/E;IAAQ,CAAC,EACvB8/D,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAAC//D,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEggE,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTjgE,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEkgE,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVngE,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEogE,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CACT31E,MAAc,EACdsV,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE3hC,MAAM;MAAEsV;IAAQ,CAAC,EACnBsgE,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXvgE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEwgE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,YAAYA,CACV9c,SAAyB,EACzB3jD,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEs3B,SAAS;MAAE3jD;IAAQ,CAAC,EACtB0gE,yBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,qBAAqBA,CACnBhd,SAAyB,EACzB3jD,OAA6C,EACL;IACxC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEs3B,SAAS;MAAE3jD;IAAQ,CAAC,EACtB4gE,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,wBAAwBA,CACtBld,SAAyB,EACzB3jD,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAEs3B,SAAS;MAAE3jD;IAAQ,CAAC,EACtB8gE,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV/gE,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEghE,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEr+D,WAAWA,CACTohD,SAAkC,EAClC/jD,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE03B,SAAS;MAAE/jD;IAAQ,CAAC,EACtBihE,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBnd,SAAkC,EAClC/jD,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE03B,SAAS;MAAE/jD;IAAQ,CAAC,EACtBmhE,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXjnE,IAAoB,EACpB6F,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBqhE,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACE7+D,yBAAyBA,CACvBrI,IAAoB,EACpB6F,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBshE,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACvhE,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEwhE,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACdzhE,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX0hE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZr1E,EAAsC,EACtC0T,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACf4hE,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBv1E,EAAsC,EACtC0T,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACf8hE,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX/hE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEgiE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACE98D,OAAOA,CACL5Y,EAAsC,EACtC0T,OAA+B,EACL;IAC1B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EAAEiiE,oBAAoB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACX51E,EAAsC,EACtC0T,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfmiE,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACd91E,EAAsC,EACtC0T,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfqiE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZh2E,EAAsC,EACtC0T,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfuiE,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAACxiE,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEyiE,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CACPp2E,EAAkB,EAClB0T,OAAiC,EACL;IAC5B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EAAE2iE,sBAAsB,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdt2E,EAAkB,EAClB0T,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACf6iE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdx2E,EAAkB,EAClB0T,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACf+iE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,kBAAkBA,CAChB12E,EAAkB,EAClB0T,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAE//B,EAAE;MAAE0T;IAAQ,CAAC,EACfijE,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACljE,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEmjE,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBpjE,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXqjE,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,qBAAqBA,CACnBtjE,OAA6C,EACL;IACxC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXujE,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,cAAcA,CACZxjE,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEyjE,2BAA2B,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,iBAAiBA,CACf1jE,OAAyC,EACL;IACpC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX2jE,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX5jE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE6jE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChB9jE,OAA0C,EACL;IACrC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX+jE,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACdhkE,OAAwC,EACL;IACnC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXikE,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXlkE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEmkE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXpkE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEqkE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXtkE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEukE,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,qBAAqBA,CACnBxkE,OAA6C,EACL;IACxC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXykE,kCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,oBAAoBA,CAClB1kE,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX2kE,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEj1C,SAASA,CAAC1vB,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE2vB,iCAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEi1C,eAAeA,CACb5kE,OAAuC,EACL;IAClC,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAE6kE,4BAA4B,CAAC;EAC7E;;EAEA;AACF;AACA;AACA;EACEC,oBAAoBA,CAClB9kE,OAA4C,EACL;IACvC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACX+kE,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,sBAAsBA,CACpBhlE,OAA8C,EACL;IACzC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXilE,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,2BAA2BA,CACzBllE,OAAmD,EACL;IAC9C,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAErsB;IAAQ,CAAC,EACXmlE,wCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZjrE,IAAoB,EACpB6F,OAAsC,EACL;IACjC,OAAO,IAAI,CAACqsB,oBAAoB,CAC9B;MAAElyB,IAAI;MAAE6F;IAAQ,CAAC,EACjBqlE,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVtlE,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACqsB,oBAAoB,CAAC;MAAErsB;IAAQ,CAAC,EAAEulE,yBAAyB,CAAC;EAC1E;AACF;AACA;AACA,MAAMnqD,qBAAU,GAAGH,gBAAgB,CAACwQ,yCAAO,EAAE,WAAY,KAAK,CAAC;AAE/D,MAAMmxC,iCAA2D,GAAG;EAClE1mD,IAAI,EAAE,qCAAqC;EAC3Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,oFAA4FstC;IAChG,CAAC;IACD,GAAG,EAAE;MACHxoC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,SAAoB,EACpBA,oBAAoB,EACpBA,gBAAgB,EAChBA,KAAgB,EAChBA,SAAoB,CACrB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0hD,iCAA2D,GAAG;EAClE5mD,IAAI,EAAE,wCAAwC;EAC9Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qFAA6FutC;IACjG,CAAC;IACD,GAAG,EAAE;MACHzoC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,UAAqB,EACrBA,QAAmB,CACpB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4hD,mCAA6D,GAAG;EACpE9mD,IAAI,EAAE,wCAAwC;EAC9Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qFAA6FwtC;IACjG,CAAC;IACD,GAAG,EAAE;MACH1oC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8hD,+BAAyD,GAAG;EAChEhnD,IAAI,EAAE,oCAAoC;EAC1Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,iFAAyFytC;IAC7F,CAAC;IACD,GAAG,EAAE;MACH3oC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,UAAqB,CAAC;EACxCiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMgiD,iCAA2D,GAAG;EAClElnD,IAAI,EAAE,uCAAuC;EAC7Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qFAA6F0tC;IACjG,CAAC;IACD,GAAG,EAAE;MACH5oC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,UAAqB,CAAC;EAC5EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMkiD,+BAAyD,GAAG;EAChEpnD,IAAI,EAAE,yCAAyC;EAC/Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,uFAA+F2tC;IACnG,CAAC;IACD,GAAG,EAAE;MACH7oC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMoiD,wCAAkE,GAAG;EACzEtnD,IAAI,EAAE,6CAA6C;EACnDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,0FAAkG0+B;IACtG,CAAC;IACD,GAAG,EAAE;MACH55B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMsiD,qCAA+D,GAAG;EACtExnD,IAAI,EAAE,YAAY;EAClBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,+DAAuE4tC;IAC3E,CAAC;IACD,GAAG,EAAE;MACH9oC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,UAAqB,EACrBA,EAAa,EACbA,MAAiB,EACjBA,KAAgB,CACjB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwiD,uCAAiE,GAAG;EACxE1nD,IAAI,EAAE,mCAAmC;EACzCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kFAA0F6tC;IAC9F,CAAC;IACD,GAAG,EAAE;MACH/oC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,UAAqB,CAAC;EAC1DiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0iD,oCAA8D,GAAG;EACrE5nD,IAAI,EAAE,uDAAuD;EAC7Dma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kGAA0G8tC;IAC9G,CAAC;IACD,GAAG,EAAE;MACHhpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,UAAqB,CAAC;EAC1DiF,aAAa,EAAE,CACbjF,uBAAgB,EAChBA,UAAqB,EACrBA,UAAqB,CACtB;EACDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4iD,oCAA8D,GAAG;EACrE9nD,IAAI,EAAE,gCAAgC;EACtCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,8EAAsF+tC;IAC1F,CAAC;IACD,GAAG,EAAE;MACHjpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,UAAqB,CAAC;EAC1DiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8iD,gCAA0D,GAAG;EACjEhoD,IAAI,EAAE,0CAA0C;EAChDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,yBAAiCwiC;IAC/C,CAAC;IACD,GAAG,EAAE;MACH19B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,UAAqB,EAAEA,OAAkB,CAAC;EAC5EkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMgjD,uCAAiE,GAAG;EACxEloD,IAAI,EAAE,mCAAmC;EACzCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kFAA0FguC;IAC9F,CAAC;IACD,GAAG,EAAE;MACHlpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,UAAqB,EACrBA,oBAAoB,EACpBA,EAAa,CACd;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMkjD,gCAA0D,GAAG;EACjEpoD,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAsB4hC;IACpC,CAAC;IACD,GAAG,EAAE;MACH98B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,EAAa,CAAC;EAChDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMojD,gCAA0D,GAAG;EACjEtoD,IAAI,EAAE,UAAU;EAChBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,6DAAqEiuC;IACzE,CAAC;IACD,GAAG,EAAE;MACHnpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,KAAgB,EAChBA,UAAqB,EACrBA,GAAc,CACf;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMsjD,+BAAyD,GAAG;EAChExoD,IAAI,EAAE,gBAAgB;EACtBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kEAA0EgjC;IAC9E;EACF,CAAC;EACDh+B,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwjD,oCAA8D,GAAG;EACrE1oD,IAAI,EAAE,gCAAgC;EACtCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,+EAAuFkuC;IAC3F,CAAC;IACD,GAAG,EAAE;MACHppC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,WAAsB,EACtBA,GAAc,EACdA,SAAoB,CACrB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0jD,0CAAoE,GAAG;EAC3E5oD,IAAI,EAAE,4CAA4C;EAClDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,sFAA8FqjC;IAClG,CAAC;IACD,GAAG,EAAE;MACHv+B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,sBAAe,CAAC;EAClCiF,aAAa,EAAE,CACbjF,uBAAgB,EAChBA,SAAoB,EACpBA,UAAqB,CACtB;EACDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4jD,iDAA2E,GAC/E;EACE9oD,IAAI,EAAE,oDAAoD;EAC1Dma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,+FAAuGmuC;IAC3G,CAAC;IACD,GAAG,EAAE;MACHrpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,KAAgB,EAChBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CACbjF,uBAAgB,EAChBA,SAAoB,EACpBA,UAAqB,CACtB;EACDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACH,MAAM8jD,8BAAwD,GAAG;EAC/DhpD,IAAI,EAAE,eAAe;EACrBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,YAAoB4iC;IAClC,CAAC;IACD,GAAG,EAAE;MACH99B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,EAAa,CAAC;EAChDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMgkD,wBAAkD,GAAG;EACzDlpD,IAAI,EAAE,cAAc;EACpBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,gEAAwEouC;IAC5E,CAAC;IACD,GAAG,EAAE;MACHtpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,KAAgB,EAChBA,WAAsB,EACtBA,KAAgB,CACjB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMkkD,uBAAiD,GAAG;EACxDppD,IAAI,EAAE,mBAAmB;EACzBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,eAAe/0B;IAC7B,CAAC;IACD,GAAG,EAAE;MACH65B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMokD,6BAAuD,GAAG;EAC9DtpD,IAAI,EAAE,qBAAqB;EAC3Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,uEAA+EquC;IACnF,CAAC;IACD,GAAG,EAAE;MACHvpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMskD,4BAAsD,GAAG;EAC7DxpD,IAAI,EAAE,oBAAoB;EAC1Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qEAA6EsuC;IACjF,CAAC;IACD,GAAG,EAAE;MACHxpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,KAAgB,EAChBA,WAAsB,EACtBA,gBAAgB,EAChBA,aAAwB,EACxBA,cAAyB,EACzBA,IAAe,EACfA,QAAmB,EACnBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4R,mCAAkD,GAAG;EACzD9W,IAAI,EAAE,oBAAoB;EAC1Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,uBAAgB5U;IAC9B,CAAC;IACD,GAAG,EAAE;MACH0Z,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,EAAa,CAAC;EAChDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwkD,wBAAkD,GAAG;EACzD1pD,IAAI,EAAE,eAAe;EACrBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,iEAAyEuuC;IAC7E,CAAC;IACD,GAAG,EAAE;MACHzpC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,WAAsB,CAAC;EACzCiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0kD,oCAA8D,GAAG;EACrE5pD,IAAI,EAAE,6BAA6B;EACnCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,0EAAkFwuC;IACtF,CAAC;IACD,GAAG,EAAE;MACH1pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,WAAsB,CAAC;EACzCiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,WAAsB,CAAC;EACzDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4kD,sBAAgD,GAAG;EACvD9pD,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,yEAAiFyuC;IACrF,CAAC;IACD,GAAG,EAAE;MACH3pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,WAAsB,EACtBA,MAAiB,CAClB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8kD,wBAAkD,GAAG;EACzDhqD,IAAI,EAAE,2BAA2B;EACjCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiB2kC;IAC/B,CAAC;IACD,GAAG,EAAE;MACH7/B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMglD,yBAAmD,GAAG;EAC1DlqD,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,2EAAmF0uC;IACvF,CAAC;IACD,GAAG,EAAE;MACH5pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMklD,wBAAkD,GAAG;EACzDpqD,IAAI,EAAE,yCAAyC;EAC/Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,QAAgBolC;IAC9B,CAAC;IACD,GAAG,EAAE;MACHtgC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,iBAAiB,CAAC;EACpDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMolD,0BAAoD,GAAG;EAC3DtqD,IAAI,EAAE,2BAA2B;EACjCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,6EAAqF2uC;IACzF,CAAC;IACD,GAAG,EAAE;MACH7pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMslD,yBAAmD,GAAG;EAC1DxqD,IAAI,EAAE,uCAAuC;EAC7Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,SAAiBulC;IAC/B,CAAC;IACD,GAAG,EAAE;MACHzgC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwlD,kCAA4D,GAAG;EACnE1qD,IAAI,EAAE,iDAAiD;EACvDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,+FAAuG4uC;IAC3G,CAAC;IACD,GAAG,EAAE;MACH9pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0lD,qCAA+D,GAAG;EACtE5qD,IAAI,EAAE,qDAAqD;EAC3Dma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kGAA0G6uC;IAC9G,CAAC;IACD,GAAG,EAAE;MACH/pC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4lD,yBAAmD,GAAG;EAC1D9qD,IAAI,EAAE,gBAAgB;EACtBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,iEAAyE8uC;IAC7E,CAAC;IACD,GAAG,EAAE;MACHhqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6lD,wBAAkD,GAAG;EACzD/qD,IAAI,EAAE,8BAA8B;EACpCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,gBAAwB0wC;IACtC,CAAC;IACD,GAAG,EAAE;MACH5rC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+lD,mCAA6D,GAAG;EACpEjrD,IAAI,EAAE,2CAA2C;EACjDma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,sFAA8F+uC;IAClG,CAAC;IACD,GAAG,EAAE;MACHjqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMimD,0BAAoD,GAAG;EAC3DnrD,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,kBAA0B8wC;IACxC,CAAC;IACD,GAAG,EAAE;MACHhsC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,KAAgB,CAAC;EACnDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMkmD,sCAAgE,GAAG;EACvEprD,IAAI,EAAE,sCAAsC;EAC5Cma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,oFAA4FgvC;IAChG,CAAC;IACD,GAAG,EAAE;MACHlqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,KAAgB,CAAC;EACnDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMomD,qBAA+C,GAAG;EACtDtrD,IAAI,EAAE,WAAW;EACjBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,8DAAsEivC;IAC1E,CAAC;IACD,GAAG,EAAE;MACHnqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,MAAiB,EACjBA,GAAc,EACdA,OAAkB,EAClBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMsmD,6BAAuD,GAAG;EAC9DxrD,IAAI,EAAE,oBAAoB;EAC1Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qEAA6EkvC;IACjF,CAAC;IACD,GAAG,EAAE;MACHpqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwmD,2BAAqD,GAAG;EAC5D1rD,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,OAAe2mC;IAC7B,CAAC;IACD,GAAG,EAAE;MACH7hC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0mD,iCAA2D,GAAG;EAClE5rD,IAAI,EAAE,gCAAgC;EACtCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,6EAAqFsnC;IACzF,CAAC;IACD,GAAG,EAAE;MACHxiC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4mD,0BAAoD,GAAG;EAC3D9rD,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHqnC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,OAAkB,CAAC;EACrCiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6mD,oBAA8C,GAAG;EACrD/rD,IAAI,EAAE,gBAAgB;EACtBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,YAAYr0B;IAC1B,CAAC;IACD,GAAG,EAAE;MACHm5B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+mD,0BAAoD,GAAG;EAC3DjsD,IAAI,EAAE,uBAAuB;EAC7Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,sEAA8EmvC;IAClF,CAAC;IACD,GAAG,EAAE;MACHrqC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMinD,6BAAuD,GAAG;EAC9DnsD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,wEAAgFovC;IACpF,CAAC;IACD,GAAG,EAAE;MACHtqC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmnD,2BAAqD,GAAG;EAC5DrsD,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,uEAA+EqvC;IACnF,CAAC;IACD,GAAG,EAAE;MACHvqC,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqnD,uBAAiD,GAAG;EACxDvsD,IAAI,EAAE,aAAa;EACnBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,gEAAwEsvC;IAC5E,CAAC;IACD,GAAG,EAAE;MACHxqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,KAAgB,EAChBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMunD,sBAAgD,GAAG;EACvDzsD,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAcpU;IAC5B,CAAC;IACD,GAAG,EAAE;MACHkZ,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMynD,6BAAuD,GAAG;EAC9D3sD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,yEAAiFuvC;IACrF,CAAC;IACD,GAAG,EAAE;MACHzqC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2nD,6BAAuD,GAAG;EAC9D7sD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,wEAAgFwvC;IACpF,CAAC;IACD,GAAG,EAAE;MACH1qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6nD,+BAAyD,GAAG;EAChE/sD,IAAI,EAAE,4BAA4B;EAClCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,0EAAkFyvC;IACtF,CAAC;IACD,GAAG,EAAE;MACH3qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,GAAc,CAAC;EACjDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+nD,qBAA+C,GAAG;EACtDjtD,IAAI,EAAE,WAAW;EACjBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,KAAasoC;IAC3B,CAAC;IACD,GAAG,EAAE;MACHxjC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMioD,mCAA6D,GAAG;EACpEntD,IAAI,EAAE,2BAA2B;EACjCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,2EAAmF0vC;IACvF,CAAC;IACD,GAAG,EAAE;MACH5qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,UAAqB,EACrBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmoD,kCAA4D,GAAG;EACnErtD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,2EAAmF2vC;IACvF,CAAC;IACD,GAAG,EAAE;MACH7qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,WAAsB,EACtBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqoD,2BAAqD,GAAG;EAC5DvtD,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,oEAA4E4vC;IAChF,CAAC;IACD,GAAG,EAAE;MACH9qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,UAAqB,EACrBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMuoD,8BAAwD,GAAG;EAC/DztD,IAAI,EAAE,qBAAqB;EAC3Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,sEAA8E6vC;IAClF,CAAC;IACD,GAAG,EAAE;MACH/qC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMyoD,0BAAoD,GAAG;EAC3D3tD,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kEAA0E8vC;IAC9E,CAAC;IACD,GAAG,EAAE;MACHhrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2oD,+BAAyD,GAAG;EAChE7tD,IAAI,EAAE,sBAAsB;EAC5Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,wEAAgF+vC;IACpF,CAAC;IACD,GAAG,EAAE;MACHjrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6oD,6BAAuD,GAAG;EAC9D/tD,IAAI,EAAE,oBAAoB;EAC1Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qEAA6EgwC;IACjF,CAAC;IACD,GAAG,EAAE;MACHlrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+oD,0BAAoD,GAAG;EAC3DjuD,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,mEAA2EiwC;IAC/E,CAAC;IACD,GAAG,EAAE;MACHnrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,WAAsB,CAAC;EAC3DiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMipD,0BAAoD,GAAG;EAC3DnuD,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kEAA0EkwC;IAC9E,CAAC;IACD,GAAG,EAAE;MACHprC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmpD,0BAAoD,GAAG;EAC3DruD,IAAI,EAAE,iBAAiB;EACvBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,kEAA0EmwC;IAC9E,CAAC;IACD,GAAG,EAAE;MACHrrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqpD,kCAA4D,GAAG;EACnEvuD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,2EAAmFowC;IACvF,CAAC;IACD,GAAG,EAAE;MACHtrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,WAAsB,EACtBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMupD,iCAA2D,GAAG;EAClEzuD,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,0EAAkFqwC;IACtF,CAAC;IACD,GAAG,EAAE;MACHvrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,YAAuB,EACvBA,YAAuB,EACvBA,WAAsB,EACtBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMuU,iCAAgD,GAAG;EACvDzZ,IAAI,EAAE,YAAY;EAClBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,cAAcvF;IAC5B;EACF,CAAC;EACDuK,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMypD,4BAAsD,GAAG;EAC7D3uD,IAAI,EAAE,kBAAkB;EACxBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,qEAA6EswC;IACjF,CAAC;IACD,GAAG,EAAE;MACHxrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CACfnF,gBAAgB,EAChBA,QAAmB,EACnBA,UAAqB,EACrBA,SAAoB,EACpBA,OAAkB,EAClBA,OAAkB,EAClBA,MAAiB,EACjBA,QAAmB,EACnBA,WAAsB,EACtBA,UAAqB,EACrBA,MAAiB,EACjBA,WAAsB,CACvB;EACDiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2pD,iCAA2D,GAAG;EAClE7uD,IAAI,EAAE,wBAAwB;EAC9Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDynC,eAAe,EAAE,CAACnF,KAAgB,EAAEA,MAAiB,EAAEA,GAAc,CAAC;EACtEiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6pD,mCAA6D,GAAG;EACpE/uD,IAAI,EAAE,0BAA0B;EAChCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,2EAAmFuwC;IACvF,CAAC;IACD,GAAG,EAAE;MACHzrC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,WAAsB,CAAC;EAC3DiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+pD,wCAAkE,GAAG;EACzEjvD,IAAI,EAAE,gCAAgC;EACtCma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAE/4B,IAAI,EAAE;UAAEtO,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHqnC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMiqD,2BAAqD,GAAG;EAC5DnvD,IAAI,EAAE,yBAAyB;EAC/Bma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE9E,WAAmB71B;IACjC,CAAC;IACD,GAAG,EAAE;MACH26B,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE9E,gBAAwB;MACpC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDC,aAAa,EAAE,CAACjF,uBAAgB,EAAEA,KAAgB,CAAC;EACnDkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmqD,yBAAmD,GAAG;EAC1DrvD,IAAI,EAAE,eAAe;EACrBma,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR9E,iEAAyEwwC;IAC7E,CAAC;IACD,GAAG,EAAE;MACH1rC,UAAU,EAAE9E,aAAqB;MACjC+E,OAAO,EAAE;IACX;EACF,CAAC;EACDG,eAAe,EAAE,CAACnF,gBAAgB,EAAEA,KAAgB,EAAEA,WAAsB,CAAC;EAC7EiF,aAAa,EAAE,CAACjF,uBAAgB,CAAC;EACjCkF,gBAAgB,EAAE,CAAClF,wBAAiB,CAAC;EACrCpQ,UAAUA,uBAAAA;AACZ,CAAC;AAEM,MAAMoqD,cAAc,GAAG,CAC5B5I,iCAAiC,EACjCE,iCAAiC,EACjCE,mCAAmC,EACnCE,+BAA+B,EAC/BE,iCAAiC,EACjCE,+BAA+B,EAC/BE,wCAAwC,EACxCE,qCAAqC,EACrCE,uCAAuC,EACvCE,oCAAoC,EACpCE,oCAAoC,EACpCE,gCAAgC,EAChCE,uCAAuC,EACvCE,gCAAgC,EAChCE,gCAAgC,EAChCE,+BAA+B,EAC/BE,oCAAoC,EACpCE,0CAA0C,EAC1CI,8BAA8B,EAC9BE,wBAAwB,EACxBE,uBAAuB,EACvBE,6BAA6B,EAC7BE,4BAA4B,EAC5B1yC,mCAAwB,EACxB4yC,wBAAwB,EACxBE,oCAAoC,EACpCE,sBAAsB,EACtBE,wBAAwB,EACxBE,yBAAyB,EACzBE,wBAAwB,EACxBE,0BAA0B,EAC1BE,yBAAyB,EACzBE,kCAAkC,EAClCE,qCAAqC,EACrCE,yBAAyB,EACzBC,wBAAwB,EACxBE,mCAAmC,EACnCE,0BAA0B,EAC1BC,sCAAsC,EACtCE,qBAAqB,EACrBE,6BAA6B,EAC7BE,2BAA2B,EAC3BE,iCAAiC,EACjCE,0BAA0B,EAC1BC,oBAAoB,EACpBE,0BAA0B,EAC1BE,6BAA6B,EAC7BE,2BAA2B,EAC3BE,uBAAuB,EACvBE,sBAAsB,EACtBE,6BAA6B,EAC7BE,6BAA6B,EAC7BE,+BAA+B,EAC/BE,qBAAqB,EACrBE,mCAAmC,EACnCE,kCAAkC,EAClCE,2BAA2B,EAC3BE,8BAA8B,EAC9BE,0BAA0B,EAC1BE,+BAA+B,EAC/BE,6BAA6B,EAC7BE,0BAA0B,EAC1BE,0BAA0B,EAC1BE,0BAA0B,EAC1BE,kCAAkC,EAClCE,iCAAiC,EACjCh1C,iCAAsB,EACtBk1C,4BAA4B,EAC5BE,iCAAiC,EACjCE,mCAAmC,EACnCE,wCAAwC,EACxCE,2BAA2B,EAC3BE,yBAAyB,CACjB;;;;;;;AClqFV;;AAEwC;AAQjC,SAASE,mBAAmBA,CAACC,SAAkB,EAAkC;EACtF,MAAMC,QAAQ,GAAGD,SAA8B;EAC/C,OACEC,QAAQ,EAAEpuE,IAAI,IAAI,IAAI,IACtBqM,KAAK,CAAC0kC,OAAO,CAACq9B,QAAQ,CAACpuE,IAAI,CAAC,IAC5B,MAAM,IAAIouE,QAAQ,IAClB,MAAM,IAAIA,QAAQ;AAEtB;;AAEA;AACA;AACA;AACO,MAAMC,oBAAoB,SAAS98E,SAAS,CAAC;EAClDE,WAAWA,CAAC68E,MAAe,EAAE;IAC3B,KAAK,CAAC,eAAeA,MAAM,GAAG,MAAM,GAAG,UAAU,OAAO,CAAC;IACzD,IAAI,CAAC38E,IAAI,GAAG,sBAAsB;EACpC;AACF;;AAEA;AACA;AACA;AAFA,IAAA48E,WAAA,oBAAA3lE,OAAA;AAGO,MAAM4lE,cAAc,CAAO;EAShC/8E,WAAWA,CAACg9E,OAAgC,EAAEC,UAAsB,EAAE;IAFtEhxD,wCAAA,OAAS6wD,WAAW;IAGlB,IAAI,CAACvuE,IAAI,GAAGyuE,OAAO,CAACzuE,IAAI;IACxB,IAAI,CAAC2uE,QAAQ,GAAGF,OAAO,CAAC/pD,IAAI;IAC5B,IAAI,CAACkqD,QAAQ,GAAGH,OAAO,CAACje,IAAI;IAC5B7yC,mCAAA,CAAK4wD,WAAW,EAAhB,IAAI,EAAeG,UAAJ,CAAC;EAClB;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMhqD,IAAIA,CAAA,EAAkC;IAC1C,IAAI,IAAI,CAACiqD,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIN,oBAAoB,CAAC,IAAI,CAAC;IAC/D,OAAO9wD,mCAAA,CAAKgxD,WAAW,EAAhB,IAAe,CAAC,CAACM,aAAa,CAAC,IAAI,CAACF,QAAQ,CAAC;EACtD;;EAEA;AACF;AACA;AACA;AACA;EACE,MAAMne,IAAIA,CAAA,EAAkC;IAC1C,IAAI,IAAI,CAACoe,QAAQ,IAAI,IAAI,EAAE,MAAM,IAAIP,oBAAoB,CAAC,KAAK,CAAC;IAChE,OAAO9wD,mCAAA,CAAKgxD,WAAW,EAAhB,IAAe,CAAC,CAACM,aAAa,CAAC,IAAI,CAACD,QAAQ,CAAC;EACtD;AACF;;ACnE8F;AAQjE;AAKO;AAC6B;AACO;AACQ;;AAEhF;AACA;AACA;AACe,MAAM7lB,UAAU,SAAS+lB,qBAAa,CAAC;EACpD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEr9E,WAAWA,CACTq0B,GAAW,EACX;IACEU,aAAa,GAAG,KAAK;IACrBK,UAAU,GAAG,CAAC;IACdC,iBAAiB,GAAG,GAAG;IACvB,GAAGre;EAKL,CAAC,GAAG,CAAC,CAAC,EACN;IACA,IAAI5U,OAA2B;IAC/B,MAAMgmC,UAAU,GAAG,MAAOC,IAAsB,IAAsB;MACpE,IAAIjmC,OAAO,IAAI,IAAI,EAAE,OAAOA,OAAO;MACnCA,OAAO,GAAG,CAAC,MAAM,IAAI,CAACskC,SAAS,CAAC2B,IAAI,CAAC,EAAEomC,UAAU;MACjD,OAAOrsE,OAAO;IAChB,CAAC;;IAED;IACA,KAAK,CAACiyB,GAAG,EAAE;MACTkU,uBAAuB,EAAE,IAAI;MAC7BC,kBAAkB,EAAE,CAClB3T,qBAAqB,CAAC,YAAY,EAAEuT,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAErT,aAAa,CAAC,EACjFxB,sBAAsB,CAAC,CAAC,EACxBQ,2BAA2B,CAAC,CAAC,EAC7BoB,uBAAuB,CAACC,UAAU,EAAEC,iBAAiB,CAAC,EACtDX,uBAAuB,CAAEJ,IAAmB,IAAK,IAAIA,IAAI,CAAC7pB,KAAK,EAAE,CAAC,CACnE;MACD,GAAGuM;IACL,CAAC,CAAC;IACF,IAAI,CAACyxB,QAAQ,CAACC,SAAS,CAAC5V,iBAAiB,EAAE;MAAE6V,KAAK,EAAE;IAAc,CAAC,CAAC;IACpE,IAAI,CAACF,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE4nC,uCAAmBA;IAAC,CAAC,CAAC;IACzD,IAAI,CAACW,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE6nC,gDAA4BA;IAAC,CAAC,CAAC;IAClE;IACA,IAAI,CAACU,QAAQ,CAACG,YAAY,CAAC;MAAE1oC,IAAI,EAAE;IAAqB,CAAC,CAAC;EAC5D;;EAEA;AACF;AACA;AACA;EACE,MAAMk9E,aAAaA,CAAqBE,aAAqB,EAAqB;IAChF,MAAMC,QAAQ,GAAGD,aAAa,CAAC/+D,OAAO,CAAC,GAAG,CAAC;IAC3C,MAAM2O,IAAI,GAAGowD,aAAa,CAAC1uE,KAAK,CAAC,CAAC,EAAE2uE,QAAQ,KAAK,CAAC,CAAC,GAAGD,aAAa,CAACt0E,MAAM,GAAGu0E,QAAQ,CAAC;IACtF,MAAM31D,KAAK,GAAG01D,aAAa,CAAC1uE,KAAK,CAAC2uE,QAAQ,KAAK,CAAC,CAAC,GAAGD,aAAa,CAACt0E,MAAM,GAAGu0E,QAAQ,GAAG,CAAC,CAAC;IAExF,MAAMC,aAAa,GAAGhB,cAAc,CAACzzE,IAAI,CAAE00E,EAAE,IAAK;MAChD,IAAIh1E,CAAC,GAAGykB,IAAI;MACZ,IAAIuwD,EAAE,CAACvwD,IAAI,IAAI,IAAI,EAAE,OAAO,KAAK;MACjC,MAAMwwD,MAAM,GAAGD,EAAE,CAACvwD,IAAI,CAAClK,OAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAACpT,KAAK,CAAC,SAAS,CAAC;MACpE,OAAO8tE,MAAM,CAAC10E,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM20E,IAAI,GAAGD,MAAM,CAAC3uB,KAAK,CAAC,CAAC;QAC3B,IAAI4uB,IAAI,IAAI,IAAI,EAAE,MAAM,IAAIn7E,aAAa,CAAC,mCAAmCi7E,EAAE,CAACvwD,IAAI,EAAE,CAAC;QACvF,IAAI,CAACzkB,CAAC,CAACuQ,UAAU,CAAC2kE,IAAI,CAAC,EAAE,OAAO,KAAK;QACrCl1E,CAAC,GAAGA,CAAC,CAACua,OAAO,CAAC26D,IAAI,EAAE,EAAE,CAAC;QACvB,IAAID,MAAM,CAAC10E,MAAM,GAAG,CAAC,EAAEP,CAAC,GAAGA,CAAC,CAACua,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;MACrD;MACA,OAAOva,CAAC,KAAK,EAAE;IACjB,CAAC,CAAC;IACF,IAAI+0E,aAAa,IAAI,IAAI,EAAE;MACzB,MAAM,IAAIv8E,oBAAoB,CAAC,8CAA8CisB,IAAI,EAAE,CAAC;IACtF;IAEA,OAAO,IAAI,CAACmW,oBAAoB,CAC9B,CAAC,CAAC,EACF;MACE,GAAGm6C,aAAa;MAChBtwD,IAAI;MACJua,aAAa,EAAE+1C,aAAa,CAAC/1C,aAAa,EAAE7nB,MAAM,CAChD,CAAC;QAAEkiB;MAAc,CAAC,KAAKA,aAAa,KAAK,OAC3C,CAAC;MACD6F,eAAe,EAAE/sB,KAAK,CAACpQ,IAAI,CAAC,IAAIozE,eAAe,CAACh2D,KAAK,CAAC,CAAC,CAACniB,GAAG,CAAC,CAAC,CAACmB,GAAG,EAAEiB,KAAK,CAAC,MAAM;QAC7Ei6B,aAAa,EAAE,CAAC,SAAS,EAAEl7B,GAAG,CAAC;QAC/ByrB,MAAM,EAAE;UACNnN,YAAY,EAAErd,KAAK,CAAC3E,QAAQ,CAAC,CAAC;UAC9BqvB,cAAc,EAAE3rB,GAAG;UACnB4H,IAAI,EAAE;YACJtO,IAAI,EAAE;UACR;QACF;MACF,CAAC,CAAC;IACJ,CACF,CAAC;EACH;EAEA,MAAemjC,oBAAoBA,CACjCw6C,kBAAsC,EACtCL,aAA4B,EAChB;IACZ,MAAMt1D,QAAQ,GAAG,MAAM,KAAK,CAACmb,oBAAoB,CAACw6C,kBAAkB,EAAEL,aAAa,CAAC;IACpF,IAAI,CAACf,mBAAmB,CAACv0D,QAAQ,CAAC,EAAE,OAAOA,QAAQ;IACnD,OAAO,IAAI60D,cAAc,CAAC70D,QAAQ,EAAE,IAAI,CAAC;EAC3C;AACF;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAe,CAAC41D,IAAuB,EAAEC,IAAuB,KAAmB;EACjFD,IAAI,CAAC7hC,OAAO,CACTjqC,GAAQ,IAAK+rE,IAAI,CAACrhC,WAAW,CAAC1qC,GAAG,CAAC,EACnC,MAAM+rE,IAAI,CAACrgC,UAAU,CAAC,CACxB,CAAC;EACDqgC,IAAI,CAAC9hC,OAAO,CACTjqC,GAAQ,IAAK8rE,IAAI,CAACphC,WAAW,CAAC1qC,GAAG,CAAC,EACnC,MAAM8rE,IAAI,CAACpgC,UAAU,CAAC,CACxB,CAAC;EAED,OAAO,MAAM;IACXogC,IAAI,CAACpgC,UAAU,CAAC,CAAC;IACjBqgC,IAAI,CAACrgC,UAAU,CAAC,CAAC;EACnB,CAAC;AACH,CAAC;;ACxBqF;;AAEtF;AACA;AACA;AACA;AACe,MAAesgC,iBAAiB,CAAC;EAGpCh+E,WAAWA,CAAC;IAAE6tD,KAAK,GAAG;EAA2B,CAAC,EAAE;IAC5D,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACE5R,OAAOA;EACL;EACAmT,SAA8D;EAC9D;EACApT,YAAwB,EAClB;IACN,IAAI,IAAI,CAACqC,WAAW,CAAC,CAAC,EAAE,MAAM,IAAIr3C,qBAAqB,CAAC,uBAAuB,CAAC;EAClF;;EAEA;AACF;AACA;EACE02C,UAAUA,CAAA,EAAS;IACjB,IAAI,CAAC,IAAI,CAACW,WAAW,CAAC,CAAC,EACrB,MAAM,IAAIp3C,sBAAsB,CAAC,iDAAiD,CAAC;EACvF;;EAEA;AACF;AACA;EACYg3E,cAAcA,CAACh+E,OAAY,EAAQ;IAC3C,IAAI,IAAI,CAAC4tD,KAAK,EAAEvtC,OAAO,CAACoO,GAAG,CAAC,kBAAkB,EAAEzuB,OAAO,CAAC;EAC1D;;EAEA;AACF;AACA;EACEy8C,WAAWA,CAACz8C,OAAY,EAAQ;IAC9B,IAAI,IAAI,CAAC4tD,KAAK,EAAEvtC,OAAO,CAACoO,GAAG,CAAC,eAAe,EAAEzuB,OAAO,CAAC;EACvD;;EAEA;AACF;AACA;AACA;AAEA;;;;;;;ACtD6C;AACI;AACyB;AAAA,IAAAi+E,aAAA,oBAAA/mE,OAAA;AAAA,IAAAgnE,OAAA,oBAAAhnE,OAAA;AAAA,IAAAinE,KAAA,oBAAAjnE,OAAA;AAO1E;AACA;AACA;AACA;AACe,MAAMknE,8BAA8B,SAASL,iBAAiB,CAAC;EAe5E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEh+E,WAAWA,CAAC;IACV0L,MAAM;IACN4yE,IAAI,GAAG98B,MAAM;IACbnF,MAAM;IACNkiC,aAAa;IACbC,gBAAgB,GAAGzkC,iBAAiB,CAAC0kC,OAAO;IAC5C,GAAGznE;EAQL,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,KAAK,CAACA,OAAO,CAAC;IA/BhBiV,8CAAA,OAAAiyD,aAAa;IAEbjyD,8CAAA,OAASkyD,OAAO;IAEhBlyD,8CAAA,OAASmyD,KAAK;IA4BZlyD,yCAAA,CAAKiyD,OAAO,EAAZ,IAAI,EAAWzyE,MAAJ,CAAC;IACZwgB,yCAAA,CAAKkyD,KAAK,EAAV,IAAI,EAASE,IAAJ,CAAC;IACV,IAAI,CAACjiC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACkiC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EAC1C;EAEAngC,WAAWA,CAAA,EAAY;IACrB,OAAO,IAAI,CAACqgC,QAAQ,IAAI,IAAI;EAC9B;EAESziC,OAAOA,CACdmT,SAAoF,EACpFpT,YAAwB,EAClB;IACN,KAAK,CAACC,OAAO,CAACmT,SAAS,EAAEpT,YAAY,CAAC;IACtC,IAAI,CAAC0iC,QAAQ,GAAIz+E,OAA0B,IAAK;MAAA,IAAA0+E,qBAAA;MAC9C;MACA,IACE,OAAO1+E,OAAO,CAACsO,IAAI,KAAK,QAAQ,IAChC,EAAAowE,qBAAA,GAAC1+E,OAAO,CAACsO,IAAI,CAAC+tC,OAAO,cAAAqiC,qBAAA,cAAAA,qBAAA,GAAI1+E,OAAO,CAACsO,IAAI,CAACA,IAAI,EAAE+tC,OAAO,MAAM,KAAK,EAE9D;MACF,IAAI,IAAI,CAACD,MAAM,IAAI,IAAI,IAAI,IAAI,CAACA,MAAM,KAAKp8C,OAAO,CAACo8C,MAAM,EAAE;MAC3D,IAAIvwB,yCAAA,CAAKqyD,OAAO,EAAZ,IAAW,CAAC,IAAI,IAAI,IAAIryD,yCAAA,CAAKqyD,OAAO,EAAZ,IAAW,CAAC,KAAKl+E,OAAO,CAACoE,MAAM,EAAE;MAC7D,IAAI,CAAC45E,cAAc,CAACh+E,OAAO,CAAC;MAC5B,IAAI;QAAEsO;MAAK,CAAC,GAAGtO,OAAO;MACtB,IAAIsO,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;QACrB,IAAIvO,OAAO,CAACsO,IAAI,CAACC,IAAI,KAAK,IAAI,CAACgwE,gBAAgB,EAAE;QACjDjwE,IAAI,GAAGA,IAAI,CAACA,IAAI;MAClB;MACA6gD,SAAS,CAAC7gD,IAAI,EAAEtO,OAAO,CAACo8C,MAAM,EAAEp8C,OAAO,CAACoE,MAAM,CAAC;IACjD,CAAC;IACDynB,yCAAA,CAAKsyD,KAAK,EAAV,IAAS,CAAC,CAAC32B,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACi3B,QAAQ,CAAC;IACrDxyD,yCAAA,CAAKgyD,aAAa,EAAlB,IAAI,EAAiBliC,YAAJ,CAAC;EACpB;EAES0B,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,IAAI,CAACghC,QAAQ,IAAI,IAAI,IAAI5yD,yCAAA,CAAKoyD,aAAa,EAAlB,IAAiB,CAAC,IAAI,IAAI,EAAE;MACvD,MAAM,IAAI17E,aAAa,CAAC,yCAAyC,CAAC;IACpE;IACAspB,yCAAA,CAAKsyD,KAAK,EAAV,IAAS,CAAC,CAAC52B,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACk3B,QAAQ,CAAC;IACxD,OAAO,IAAI,CAACA,QAAQ;IACpB5yD,yCAAA,CAAKoyD,aAAa,EAAlB,IAAiB,CAAC,CAAAh7D,IAAA,CAAlB,IAAI;IACJgJ,yCAAA,CAAKgyD,aAAa,EAAlB,IAAI,EAAiB9sE,SAAJ,CAAC;EACpB;EAESsrC,WAAWA,CAAC1qC,GAAQ,EAAQ;IAAA,IAAA4sE,YAAA;IACnC,IAAI9yD,yCAAA,CAAKqyD,OAAO,EAAZ,IAAW,CAAC,IAAI,IAAI,EAAE,MAAM,IAAIj3E,kBAAkB,CAAC,oCAAoC,CAAC;IAC5F,MAAMjH,OAAO,GAAG,IAAI,CAACs+E,aAAa,IAAI,IAAI,GAAG;MAAE/vE,IAAI,EAAE,IAAI,CAAC+vE,aAAa;MAAEhwE,IAAI,EAAEyD;IAAI,CAAC,GAAGA,GAAG;IAC1F,KAAK,CAAC0qC,WAAW,CAACz8C,OAAO,CAAC;IAC1B6rB,yCAAA,CAAKqyD,OAAO,EAAZ,IAAW,CAAC,CAACU,WAAW,CAAC5+E,OAAO,GAAA2+E,YAAA,GAAE,IAAI,CAACviC,MAAM,cAAAuiC,YAAA,cAAAA,YAAA,GAAI,GAAG,CAAC;EACvD;AACF;;AC3GkF;AACzB;AAEK;AAU9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAe,CACb7iC,UAA6B,EAC7B+iC,UAAqF,KACpE;EACjB,IAAIt9B,MAAM,IAAI,IAAI,EAChB,MAAM,IAAIz/C,wBAAwB,CAChC,sEACF,CAAC;EACH,MAAMg9E,OAAgB,GAAG,CAAC,CAAC;EAE3BhjC,UAAU,CAACE,OAAO,CAChB,CACE;IAAE/nB,MAAM;IAAE7W;EAA+C,CAAC,EAC1Dg/B,MAAc,EACdh4C,MAAc,KACX;IACH,IAAI6vB,MAAM,KAAKgmB,OAAO,CAACyD,cAAc,IAAIohC,OAAO,CAAC1hE,MAAM,CAAC/Z,EAAE,CAAC,IAAI,IAAI,EAAE;IAErE,MAAM6/C,MAAM,GAAG;MACb9nB,IAAI,EAAEhe,MAAM;MACZ2hE,aAAaA,CAAA,EAAG;QACd,OAAO,IAAIX,8BAA8B,CAAC;UACxC3yE,MAAM,EAAErH,MAAM;UACd,IAAIgZ,MAAM,CAAC7O,IAAI,KAAK,WAAW,GAC3B;YACE+vE,aAAa,EAAExkC,iBAAiB,CAACklC,UAAU;YAC3CT,gBAAgB,EAAEzkC,iBAAiB,CAAC0kC,OAAO;YAC3C,IAAIj9B,MAAM,CAACnF,MAAM,KAAK,MAAM,IAAI;cAAEA,MAAM,EAAEmF,MAAM,CAACnF;YAAO,CAAC;UAC3D,CAAC,GACD;YACEA,MAAM,EAAEh/B,MAAM,CAACg/B;UACjB,CAAC;QACP,CAAC,CAAC;MACJ;IACF,CAAC;IACD0iC,OAAO,CAAC57B,MAAM,CAAC9nB,IAAI,CAAC/3B,EAAE,CAAC,GAAG6/C,MAAM;IAChC27B,UAAU,CAAC;MAAEC,OAAO;MAAEG,SAAS,EAAE/7B;IAAO,CAAC,CAAC;EAC5C,CAAC,EACD,MAAM,CAAC,CACT,CAAC;EAED,OAAO,MAAMpH,UAAU,CAAC2B,UAAU,CAAC,CAAC;AACtC,CAAC;;;;;;;AC9D4C;AACa;;AAE1D;AACA;AACA;AACA;AACA;AAJA,IAAAyhC,UAAA,oBAAAhoE,OAAA;AAKe,MAAMioE,wBAAwB,SAASpB,iBAAiB,CAAC;EAKtE;AACF;AACA;EACEh+E,WAAWA,CAAC;IAAE2U,IAAI;IAAE,GAAGqC;EAAiD,CAAC,EAAE;IACzE,KAAK,CAACA,OAAO,CAAC;IANhBiV,wCAAA,OAAAkzD,UAAU;IAOR,IAAI,CAACxqE,IAAI,GAAGA,IAAI;EAClB;EAES+oC,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,CAAC/oC,IAAI,CAAC+oC,UAAU,CAAC,CAAC;IACtB,IAAI5xB,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI,EAAE,MAAM,IAAI18E,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAACkS,IAAI,CAACy6C,SAAS,CAACuE,cAAc,CAAC7nC,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,CAACxqE,IAAI,CAACqnC,YAAY,CAAC2X,cAAc,CAAC7nC,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACzDjzD,mCAAA,CAAKizD,UAAU,EAAf,IAAI,EAAc/tE,SAAJ,CAAC;EACjB;EAES6qC,OAAOA,CACdmT,SAAuE,EACvEpT,YAAwB,EAClB;IACN,KAAK,CAACC,OAAO,CAACmT,SAAS,EAAEpT,YAAY,CAAC;IACtC9vB,mCAAA,CAAKizD,UAAU,EAAf,IAAI,EAAc,CAChB,CAACl/E,OAAO,EAAE0U,IAAI,KAAK;MAAA,IAAA0qE,gBAAA;MACjB,IAAI,CAACpB,cAAc,CAACh+E,OAAO,CAAC;MAC5B;MACAmvD,SAAS,CAACnvD,OAAO,GAAAo/E,gBAAA,GAAE1qE,IAAI,CAAC6pD,MAAM,EAAEnqC,GAAG,cAAAgrD,gBAAA,cAAAA,gBAAA,GAAI,EAAE,EAAE1qE,IAAI,CAAC;IAClD,CAAC,EACDqnC,YAAY,CANA,CAAC;IAQf,IAAI,CAACrnC,IAAI,CAACy6C,SAAS,CAACkwB,WAAW,CAACxzD,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,IAAI,CAACxqE,IAAI,CAACqnC,YAAY,CAACsjC,WAAW,CAACxzD,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD;EAESziC,WAAWA,CAACz8C,OAAY,EAAQ;IACvC,KAAK,CAACy8C,WAAW,CAACz8C,OAAO,CAAC;IAC1B,IAAI,CAAC0U,IAAI,CAACkqE,WAAW,CAAC5+E,OAAO,CAAC;EAChC;EAEAo+C,WAAWA,CAAA,EAAY;IACrB,OAAOvyB,mCAAA,CAAKqzD,UAAU,EAAf,IAAc,CAAC,IAAI,IAAI;EAChC;AACF;;ACtCoB;AACoD;AAW7C;AAC3B;AACA;AACA;AACA;AAC8D;AAC9D;AACA;AACA;AACA;AACiE;AACjE;AACA;AACA;AACA;AAC4E;AACK;AAEtC;AAOZ;AAcE;AACjC;AACA;AACA;AACA;AACmF;AACnF;AACA;AACA;AACA;AACgE;AAc7B;AAEnC;AAC0D;AACQ;AACkB;AACT;AACN;AAKrC;AACoD;AAO/C;AACkC;AACK;AAChC;AACiB;AAEN;AACY;AACE;AAK3C;AAEkC;AACN;AACR;AACQ;AACgD;AACgB;AAC5D;AACd;AACqB;AACN;AACI;AAC/D;AACA;AACA;AACA;AAC+D;AACkB;AACR;AACV;AACc;AACV;AACc;AACX;AACA;AACX;AAKxB;AACqB;AACS;AAE4B;AAiB9C;AAC4C;AACoB;AACY;;;ACrL3H,MAAM,sCAA4B;;ACAlC,MAAM,2BAA4B;;ACAlC,MAAM,6BAA4B;;ACAlC,MAAM,wBAA4B;;;;;;;;;;ACAO;AACb;AACsB;AACC;AACf;AACyB;AAEiC;AAChC;AACX;AAE5C,MAAMmB,cAAc,GAAGA,CAAA,KAAc;EAC1C,MAAMpzD,IAAI,GAAG8yD,yCAAO,CAACK,+BAAa,CAAAE,yCAAA,CAAAE,UAAA,EAAAv9E,QAAA,EAAgB,CAAC,CAAC;EACpD,IAAI+8E,0CAAQ,CAAC/yD,IAAI,CAAC,KAAK,MAAM,EAAE,OAAOrjB,yCAAO,CAACqjB,IAAI,EAAE,IAAI,CAAC;EACzD,IAAI+yD,0CAAQ,CAAC/yD,IAAI,CAAC,KAAK,UAAU,EAAE,OAAOrjB,yCAAO,CAACqjB,IAAI,EAAE,UAAU,CAAC;EACnE,MAAM,IAAI1qB,aAAa,CAAC,wBAAwB,CAAC;AACnD,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,IAAAk+E,KAAA,oBAAAvpE,OAAA;AAAA,IAAAwpE,wBAAA,oBAAAxpE,OAAA;AAAA,IAAAypE,kBAAA,oBAAAj1D,OAAA;AAKe,MAAMk1D,WAAW,SAASj5B,YAAY,CAAC;EAKpD;AACF;AACA;AACA;AACA;AACA;EACE5nD,WAAWA,CACT8gF,YAAY,GAAGj3E,yCAAO,CAACy2E,cAAc,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAC9D;IAAEvrD,aAAa,GAAG;EAAmC,CAAC,GAAG,CAAC,CAAC,EAC3D;IACA,KAAK,CAAC,CAAC;IAAC/I,8BAAA,OAAA40D,kBAAA;IAdV30D,6BAAA,OAASy0D,KAAK;IAEdz0D,6BAAA,OAAS00D,wBAAwB;IAa/Bz0D,wBAAA,CAAKw0D,KAAK,EAAV,IAAI,EAASI,YAAJ,CAAC;IACV50D,wBAAA,CAAKy0D,wBAAwB,EAA7B,IAAI,EAA4B,IAAI,CAACv+E,OAAO,CAAC,CAAC,CAACyxB,IAAI,CAAEzxB,OAAO,IAAK;MAC/D,MAAM2mC,QAAQ,GAAG,CAAC3mC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;MACrD,IAAI,CAAC4vB,eAAe,CAAC,GAAG+W,QAAQ,CAAC,EAAE;QACjC,MAAMt+B,KAAK,GAAG,IAAIvI,uBAAuB,CAAC,UAAU,EAAE,GAAG6mC,QAAQ,CAAC;QAClE,IAAIhU,aAAa,EAAEzU,OAAO,CAACC,IAAI,CAAC9V,KAAK,CAACxK,OAAO,CAAC,CAAC,KAC1C,MAAMwK,KAAK;MAClB;IACF,CAAC,CAP2B,CAAC;EAQ/B;EAoCA,MAAM4mC,OAAOA,CAACnkB,IAAY,EAAiB;IACzC,MAAMpB,wBAAA,CAAK60D,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,MAAM,CAACI,UAAU,EAAE92C,GAAG,CAAC,GAAG,MAAMrgC,OAAO,CAAConB,GAAG,CAAC,CAC1CpE,oBAAA,CAAAg0D,kBAAA,MAAI,EAACI,cAAa,CAAC,CAAA99D,IAAA,CAAnB,IAAI,EAAgBgK,IAAI,GACxB,IAAI,CAACq/B,WAAW,CAACr/B,IAAI,CAAC,CACvB,CAAC;MACF,OAAO;QACL4L,QAAQ,EAAEioD,UAAU,CAACE,MAAM,CAACC,OAAO,CAAC,CAA8B;QAClEj3C,GAAG;QACHoe,QAAQ,EAAE04B,UAAU,CAACI,MAAM,CACxBvxE,KAAK,CAAC,aAAa,CAAC,CACpBhB,KAAK,CAAC,CAAC,CAAC,CACRnJ,GAAG,CAAE4mD,OAAO,IAAK;UAChB,MAAM+0B,GAAG,GAAG,2CAA2C;UACvD,MAAM/tD,KAAK,GAAGg5B,OAAO,CAACh5B,KAAK,CAAC+tD,GAAG,CAAC;UAChC,IAAI/tD,KAAK,IAAI,IAAI,EAAE,MAAM,IAAI7wB,aAAa,CAAC,iCAAiC6pD,OAAO,GAAG,CAAC;UACvF,OAAO;YACLpsD,OAAO,EAAEozB,KAAK,CAAC,CAAC,CAAC,CAAC6tD,OAAO,CAAC,CAAC;YAC3Bn5B,GAAG,EAAE;cACH,IAAI10B,KAAK,CAAC,CAAC,CAAC,KAAKnG,IAAI,IAAI;gBAAE+6B,IAAI,EAAE50B,KAAK,CAAC,CAAC;cAAE,CAAC,CAAC;cAC5C60B,IAAI,EAAE,CAAC70B,KAAK,CAAC,CAAC,CAAC;cACf80B,GAAG,EAAE,CAAC90B,KAAK,CAAC,CAAC;YACf;UACF,CAAC;QACH,CAAC;MACL,CAAC;IACH,CAAC,CAAC,OAAO5oB,KAAK,EAAE;MACdW,WAAW,CAACX,KAAK,CAAC;MAClB,MAAM,IAAIlK,aAAa,CAACkK,KAAK,CAACxK,OAAO,CAAC;IACxC;EACF;EAEA,MAAMixC,mBAAmBA,CACvBD,UAAkB,EAClBE,UAAmC,EACpB;IACf,MAAMkwC,GAAG,GAAG,MAAMC,qBAAiC,CAAAp+D,IAAA,CAAjC29D,WAAW,EAAuB5vC,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACE,OAAO,CAACgwC,GAAG,CAAC;IAChC,CAAC,SAAS;MACR,MAAMjB,+BAAE,CAACJ,yCAAO,CAACqB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMh1B,WAAWA,CAACr/B,IAAY,EAAgB;IAC5C,MAAMpB,wBAAA,CAAK60D,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,OAAOxsD,IAAI,CAAC4Y,KAAK,CAAC,MAAMngB,oBAAA,CAAAg0D,kBAAA,MAAI,EAACY,IAAG,CAAC,CAAAt+D,IAAA,CAAT,IAAI,EAAM,WAAW,EAAE,mBAAmB,EAAEgK,IAAI,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOziB,KAAK,EAAE;MACdW,WAAW,CAACX,KAAK,CAAC;MAClB,MAAM,IAAIlK,aAAa,CAACkK,KAAK,CAACxK,OAAO,CAAC;IACxC;EACF;EAEA,MAAMqsD,uBAAuBA,CAC3Brb,UAAkB,EAClBE,UAAmC,EACrB;IACd,MAAMkwC,GAAG,GAAG,MAAMC,qBAAiC,CAAAp+D,IAAA,CAAjC29D,WAAW,EAAuB5vC,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACob,WAAW,CAAC80B,GAAG,CAAC;IACpC,CAAC,SAAS;MACR,MAAMjB,+BAAE,CAACJ,yCAAO,CAACqB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAM/tC,QAAQA,CAAC1a,QAAmC,EAAE5L,IAAY,EAAoB;IAClF,MAAMpB,wBAAA,CAAK60D,wBAAwB,EAA7B,IAA4B,CAAC;IACnC,IAAI;MACF,OAAO,CAAC,MAAM/zD,oBAAA,CAAAg0D,kBAAA,MAAI,EAACY,IAAG,CAAC,CAAAt+D,IAAA,CAAT,IAAI,EAAMgK,IAAI,EAAE,YAAY,EAAE4L,QAAQ,CAAC,EAAEx5B,QAAQ,CAAC,wBAAwB,CAAC;IAC3F,CAAC,CAAC,OAAOmL,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;EAEA,MAAM8oC,oBAAoBA,CACxBza,QAAmC,EACnCmY,UAAkB,EAClBE,UAAmC,EACjB;IAClB,MAAMkwC,GAAG,GAAG,MAAMC,qBAAiC,CAAAp+D,IAAA,CAAjC29D,WAAW,EAAuB5vC,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACqC,QAAQ,CAAC1a,QAAQ,EAAEuoD,GAAG,CAAC;IAC3C,CAAC,SAAS;MACR,MAAMjB,+BAAE,CAACJ,yCAAO,CAACqB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMn/E,OAAOA,CAAA,EAAoB;IAC/B,MAAMq/E,UAAU,GAAG,MAAM70D,oBAAA,CAAAg0D,kBAAA,MAAI,EAACY,IAAG,CAAC,CAAAt+D,IAAA,CAAT,IAAI,EAAM,WAAW,CAAC;IAC/C,MAAMw+D,GAAG,GAAGD,UAAU,CAACpuD,KAAK,CAAC,sCAAsC,CAAC,GAAG,CAAC,CAAC;IACzE,IAAIquD,GAAG,IAAI,IAAI,EAAE,MAAM,IAAInhF,aAAa,CAAC,4BAA4B,CAAC;IACtE,OAAOmhF,GAAG;EACZ;AACF;AAAC,eAAAV,eAjIsB,GAAGr9D,UAAoB,EAA+C;EACzF,OAAO,IAAI/Z,OAAO,CAAC,CAAC+3E,QAAQ,EAAEC,OAAO,KAAK;IACxC9B,mDAAQ,CAAC,SAAS,EAAE,CAACh0D,wBAAA,CAAK40D,KAAK,EAAV,IAAS,CAAC,EAAE,GAAG/8D,UAAU,CAAC,EAAE,CAAClZ,KAAK,EAAEw2E,MAAM,EAAEE,MAAM,KAAK;MAC1E,IAAI12E,KAAK,IAAI,IAAI,EAAEm3E,OAAO,CAACn3E,KAAK,CAAC,CAAC,KAC7Bk3E,QAAQ,CAAC;QAAEV,MAAM;QAAEE;MAAO,CAAC,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAAC,eAAAK,KAEU,GAAG79D,UAAoB,EAAmB;EACnD,MAAM;IAAEw9D,MAAM;IAAEF;EAAO,CAAC,GAAG,MAAMr0D,oBAAA,CAAAg0D,kBAAA,MAAI,EAACI,cAAa,CAAC,CAAA99D,IAAA,CAAnB,IAAI,EAAgB,GAAGS,UAAU,CAAC;EACnE,IAAIw9D,MAAM,KAAK,EAAE,EAAE,MAAM,IAAI5gF,aAAa,CAAC4gF,MAAM,CAAC;EAClD,OAAOF,MAAM;AACf;AAAC,eAAAK,sBAGCrwC,UAAkB,EAClBE,UAAkC,GAAG,CAAC,CAAC,EACtB;EACjB,MAAM0wC,UAAU,GAAGA,CAAA,KAAcl5E,IAAI,CAAC4H,MAAM,CAAC,CAAC,CAACrN,QAAQ,CAAC,EAAE,CAAC,CAAC0L,KAAK,CAAC,CAAC,CAAC;EACpE,MAAMse,IAAI,GAAGrjB,yCAAO,CAACk2E,sCAAM,CAAC,CAAC,EAAE,eAAe8B,UAAU,CAAC,CAAC,EAAE,CAAC;EAC7D,MAAM3B,kCAAK,CAAChzD,IAAI,CAAC;EACjB,MAAMkkB,cAAc,GAAGvnC,yCAAO,CAACqjB,IAAI,EAAE,GAAG20D,UAAU,CAAC,CAAC,MAAM,CAAC;EAC3D,MAAM1B,sCAAS,CAAC/uC,cAAc,EAAEH,UAAU,CAAC;EAC3C,MAAMrnC,OAAO,CAAConB,GAAG,CACf/mB,MAAM,CAACE,OAAO,CAACgnC,UAAU,CAAC,CAAC1rC,GAAG,CAAC,OAAO,CAACvF,IAAI,EAAE4hF,GAAG,CAAC,KAAK;IACpD,MAAMr5E,CAAC,GAAGoB,yCAAO,CAACqjB,IAAI,EAAEhtB,IAAI,CAAC;IAC7B,MAAMggF,kCAAK,CAACF,yCAAO,CAACv3E,CAAC,CAAC,EAAE;MAAE84E,SAAS,EAAE;IAAK,CAAC,CAAC;IAC5C,OAAOpB,sCAAS,CAAC13E,CAAC,EAAEq5E,GAAG,CAAC;EAC1B,CAAC,CACH,CAAC;EACD,OAAO1wC,cAAc;AACvB;;;;;;AClFqC;AACW;AACI;AAEtD,MAAM4wC,eAAe,GAAG,CACtB,UAAU,EACV,YAAY,EACZ,YAAY,EACZ,UAAU,EACV,UAAU,EACV,YAAY,EACZ,eAAe,EACf,UAAU,EACV,SAAS,EACT,aAAa,CACd;AACD,MAAMC,aAAa,GAAG,2BAA2B;AACjD,MAAMC,cAAc,GAAG,IAAIvvD,MAAM,CAACsvD,aAAa,CAAC59E,MAAM,EAAE,GAAA89E,eAAA,CAAGF,aAAa,IAAS,CAAC;AAElF,eAAeG,gBAAgBA,CAACC,IAAY,EAAEC,QAAgB,EAAmC;EAAA,IAAAC,iBAAA;EAC/F,MAAMtxC,UAAU,GAAG,MAAM8wC,qCAAQ,CAACl4E,yCAAO,CAACw4E,IAAI,EAAEC,QAAQ,CAAC,EAAE,MAAM,CAAC;EAClE,MAAME,UAAkC,GAAG,CAAC,CAAC;EAC7C,MAAM54E,OAAO,CAAConB,GAAG,CACf,EAAAuxD,iBAAA,GAACtxC,UAAU,CAAC5d,KAAK,CAAC6uD,cAAc,CAAC,cAAAK,iBAAA,cAAAA,iBAAA,GAAI,EAAE,EACpC98E,GAAG,CAAEg9E,OAAO,IAAK;IAChB,MAAMC,CAAC,GAAGD,OAAO,CAACpvD,KAAK,CAAC4uD,aAAa,CAAC;IACtC,IAAIS,CAAC,EAAE15E,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIxG,aAAa,CAAC,yBAAyB,CAAC;IACvE,OAAOkgF,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CACD9iE,MAAM,CAAE6iE,OAAO,IAAK,CAACT,eAAe,CAAC1iF,QAAQ,CAACmjF,OAAO,CAAC,CAAC,CACvDh9E,GAAG,CAAC,MAAOg9E,OAAO,IAAK;IACtB,MAAME,WAAW,GAAG94E,yCAAO,CAACw4E,IAAI,EAAEI,OAAO,CAAC;IAC1CD,UAAU,CAACC,OAAO,CAAC,GAAG,MAAMV,qCAAQ,CAACY,WAAW,EAAE,MAAM,CAAC;IACzD14E,MAAM,CAACqR,MAAM,CAACknE,UAAU,EAAE,MAAMJ,gBAAgB,CAACC,IAAI,EAAEI,OAAO,CAAC,CAAC;EAClE,CAAC,CACL,CAAC;EACD,OAAOD,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACe,eAAeI,aAAaA,CAAC11D,IAAY,EAAmC;EACzF,OAAOk1D,gBAAgB,CAACpC,yCAAO,CAAC9yD,IAAI,CAAC,EAAE+yD,0CAAQ,CAAC/yD,IAAI,CAAC,CAAC;AACxD;;AC/CuC;AACH;AAGW;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAM41D,gBAAgB,SAASD,YAAW,CAAC;EACxD,MAAexxC,OAAOA,CAACnkB,IAAY,EAAiB;IAClD,MAAMikB,UAAU,GAAG,MAAMyxC,aAAa,CAAC11D,IAAI,CAAC;IAC5C,MAAM+jB,UAAU,GAAG,MAAM8wC,qCAAQ,CAAC70D,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAACgkB,mBAAmB,CAACD,UAAU,EAAEE,UAAU,CAAC;EACzD;EAEA,MAAeob,WAAWA,CAACr/B,IAAY,EAAgB;IACrD,MAAMikB,UAAU,GAAG,MAAMyxC,aAAa,CAAC11D,IAAI,CAAC;IAC5C,MAAM+jB,UAAU,GAAG,MAAM8wC,qCAAQ,CAAC70D,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAACo/B,uBAAuB,CAACrb,UAAU,EAAEE,UAAU,CAAC;EAC7D;EAEA,MAAeqC,QAAQA,CAAC1a,QAAmC,EAAE5L,IAAY,EAAoB;IAC3F,MAAMikB,UAAU,GAAG,MAAMyxC,aAAa,CAAC11D,IAAI,CAAC;IAC5C,MAAM+jB,UAAU,GAAG,MAAM8wC,qCAAQ,CAAC70D,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAACqmB,oBAAoB,CAACza,QAAQ,EAAEmY,UAAU,EAAEE,UAAU,CAAC;EACpE;AACF;;AC/BmC;AAEiC;AACY","sources":["webpack://Aeternity/webpack/universalModuleDefinition","webpack://Aeternity/external umd \"buffer\"","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-define.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/enum-bug-keys.js","webpack://Aeternity/./node_modules/sha.js/hash.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-property-key.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/defineProperty.js","webpack://Aeternity/./node_modules/core-js-pure/internals/weak-map-basic-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-wrapped.js","webpack://Aeternity/./node_modules/core-js-pure/internals/length-of-array-like.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/features/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-get-flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-iteration.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.key-for.js","webpack://Aeternity/external umd \"events\"","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.function.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/internals/environment-v8-version.js","webpack://Aeternity/./node_modules/blakejs/util.js","webpack://Aeternity/external umd \"@azure/core-rest-pipeline\"","webpack://Aeternity/./node_modules/core-js-pure/es/instance/flags.js","webpack://Aeternity/external umd \"@azure/core-client\"","webpack://Aeternity/./node_modules/core-js-pure/internals/export.js","webpack://Aeternity/./node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/math-trunc.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/typeof.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/internals/string-multibyte.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-native.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://Aeternity/external umd \"tweetnacl\"","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.species.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.custom-matcher.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-array.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-accessor.js","webpack://Aeternity/external umd \"eventemitter3\"","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://Aeternity/./node_modules/core-js-pure/es/object/define-property.js","webpack://Aeternity/./node_modules/inherits/inherits.js","webpack://Aeternity/./node_modules/core-js-pure/internals/path.js","webpack://Aeternity/./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-properties.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.replace.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-callable.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-clause.js","webpack://Aeternity/./node_modules/core-js-pure/internals/html.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-global-property.js","webpack://Aeternity/./node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/inspect-source.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/core-js-stable/instance/flags.js","webpack://Aeternity/external umd \"@aeternity/aepp-calldata\"","webpack://Aeternity/./node_modules/safe-buffer/index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys-internal.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-length.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-define-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-call.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/stable/instance/flags.js","webpack://Aeternity/./node_modules/sha.js/sha256.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/index.js","webpack://Aeternity/external umd \"json-bigint\"","webpack://Aeternity/./node_modules/blakejs/blake2b.js","webpack://Aeternity/./node_modules/core-js-pure/internals/require-object-coercible.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-registry-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-includes.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/iterator.js","webpack://Aeternity/external umd \"bs58\"","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.split.js","webpack://Aeternity/./node_modules/core-js-pure/internals/try-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPropertyKey.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/internals/set-to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-absolute-index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/internal-state.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/full/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.description.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators-core.js","webpack://Aeternity/external umd \"tweetnacl-auth\"","webpack://Aeternity/./node_modules/core-js-pure/modules/es.reflect.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.search.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-flags.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof-raw.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/global-this.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack://Aeternity/external umd \"canonicalize\"","webpack://Aeternity/./node_modules/core-js-pure/internals/function-apply.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/actual/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-store.js","webpack://Aeternity/external umd \"bignumber.js\"","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/uid.js","webpack://Aeternity/external umd \"rlp\"","webpack://Aeternity/./node_modules/core-js-pure/internals/an-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-json-replacer-function.js","webpack://Aeternity/./node_modules/inherits/inherits_browser.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/environment-user-agent.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-name.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-create.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPrimitive.js","webpack://Aeternity/external node-commonjs \"url\"","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.string.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-null-or-undefined.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-create-constructor.js","webpack://Aeternity/external umd \"isomorphic-ws\"","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-pure.js","webpack://Aeternity/./node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-forced.js","webpack://Aeternity/./node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-create.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.math.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/stable/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-context.js","webpack://Aeternity/external umd \"@scure/bip39\"","webpack://Aeternity/./node_modules/core-js-pure/internals/hidden-keys.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.date.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.concat.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack://Aeternity/./node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.matcher.js","webpack://Aeternity/./node_modules/core-js-pure/es/regexp/flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/fails.js","webpack://Aeternity/external umd \"websocket\"","webpack://Aeternity/external node-commonjs \"util\"","webpack://Aeternity/./node_modules/core-js-pure/modules/es.regexp.flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/dom-iterables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-object.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-method.js","webpack://Aeternity/./node_modules/core-js-pure/internals/descriptors.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-iter-result-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-create-element.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.stringify.js","webpack://Aeternity/./node_modules/core-js-pure/internals/has-own-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-constructor-detection.js","webpack://Aeternity/webpack/bootstrap","webpack://Aeternity/webpack/runtime/compat get default export","webpack://Aeternity/webpack/runtime/define property getters","webpack://Aeternity/webpack/runtime/hasOwnProperty shorthand","webpack://Aeternity/webpack/runtime/make namespace object","webpack://Aeternity/./src/utils/bignumber.ts","webpack://Aeternity/./src/utils/errors.ts","webpack://Aeternity/./src/utils/amount-formatter.ts","webpack://Aeternity/./src/utils/other.ts","webpack://Aeternity/./src/utils/wrap-proxy.ts","webpack://Aeternity/./src/utils/encoder-types.ts","webpack://Aeternity/./src/utils/encoder.ts","webpack://Aeternity/./src/utils/crypto.ts","webpack://Aeternity/./src/utils/bytes.ts","webpack://Aeternity/./src/tx/builder/constants.ts","webpack://Aeternity/./src/tx/builder/helpers.ts","webpack://Aeternity/./src/chain.ts","webpack://Aeternity/./src/tx/builder/field-types/ct-version.ts","webpack://Aeternity/./src/tx/builder/field-types/abi-version.ts","webpack://Aeternity/./src/tx/builder/field-types/address.ts","webpack://Aeternity/./src/tx/builder/field-types/array.ts","webpack://Aeternity/./src/tx/builder/field-types/u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/coin-amount.ts","webpack://Aeternity/./src/tx/builder/field-types/encoded.ts","webpack://Aeternity/./src/tx/builder/field-types/entry.ts","webpack://Aeternity/./src/tx/builder/field-types/enumeration.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-price.ts","webpack://Aeternity/./src/tx/builder/field-types/fee.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-limit.ts","webpack://Aeternity/./src/tx/builder/field-types/field.ts","webpack://Aeternity/./src/tx/builder/field-types/name.ts","webpack://Aeternity/./src/tx/builder/field-types/name-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/name-id.ts","webpack://Aeternity/./src/tx/builder/field-types/nonce.ts","webpack://Aeternity/./src/tx/builder/field-types/pointers.ts","webpack://Aeternity/./src/tx/builder/field-types/query-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/raw.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int-const.ts","webpack://Aeternity/./src/tx/builder/field-types/string.ts","webpack://Aeternity/./src/tx/builder/field-types/transaction.ts","webpack://Aeternity/./src/tx/builder/field-types/ttl.ts","webpack://Aeternity/./src/tx/builder/field-types/with-default.ts","webpack://Aeternity/./src/tx/builder/field-types/with-formatting.ts","webpack://Aeternity/./src/tx/builder/entry/constants.ts","webpack://Aeternity/./src/tx/builder/schema.ts","webpack://Aeternity/./src/tx/builder/common.ts","webpack://Aeternity/./src/tx/builder/field-types/boolean.ts","webpack://Aeternity/./src/tx/builder/field-types/map.ts","webpack://Aeternity/./src/tx/builder/field-types/mptree.ts","webpack://Aeternity/./src/tx/builder/field-types/wrapped.ts","webpack://Aeternity/./src/tx/builder/entry/schema.ts","webpack://Aeternity/./src/tx/builder/entry/index.ts","webpack://Aeternity/./src/tx/builder/index.ts","webpack://Aeternity/./src/utils/semver-satisfies.ts","webpack://Aeternity/./src/utils/autorest.ts","webpack://Aeternity/./src/apis/node/models/mappers.ts","webpack://Aeternity/./src/apis/node/models/parameters.ts","webpack://Aeternity/./src/apis/node/node.ts","webpack://Aeternity/./src/Node.ts","webpack://Aeternity/./src/tx/transaction-signer.ts","webpack://Aeternity/./src/account/Base.ts","webpack://Aeternity/./src/utils/typed-data.ts","webpack://Aeternity/./src/account/Memory.ts","webpack://Aeternity/./src/tx/execution-cost.ts","webpack://Aeternity/./src/tx/validator.ts","webpack://Aeternity/./src/send-transaction.ts","webpack://Aeternity/./src/utils/jwt.ts","webpack://Aeternity/./src/tx/builder/delegation/schema.ts","webpack://Aeternity/./src/tx/builder/delegation/index.ts","webpack://Aeternity/./src/aens.ts","webpack://Aeternity/./src/contract/Contract.ts","webpack://Aeternity/./src/oracle/OracleBase.ts","webpack://Aeternity/./src/oracle/Oracle.ts","webpack://Aeternity/./src/oracle/OracleClient.ts","webpack://Aeternity/./src/spend.ts","webpack://Aeternity/./src/contract/ga.ts","webpack://Aeternity/./src/AeSdkMethods.ts","webpack://Aeternity/./src/AeSdkBase.ts","webpack://Aeternity/./src/AeSdk.ts","webpack://Aeternity/./src/aepp-wallet-communication/schema.ts","webpack://Aeternity/./src/account/Rpc.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/types.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/RpcClient.ts","webpack://Aeternity/./src/AeSdkAepp.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrameBase.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrame.ts","webpack://Aeternity/./src/aepp-wallet-communication/WalletConnectorFrameWithNode.ts","webpack://Aeternity/./src/utils/json-big.ts","webpack://Aeternity/./src/AeSdkWallet.ts","webpack://Aeternity/./src/account/BaseFactory.ts","webpack://Aeternity/./src/account/MnemonicFactory.ts","webpack://Aeternity/./src/account/Generalized.ts","webpack://Aeternity/./src/account/Ledger.ts","webpack://Aeternity/./src/account/LedgerFactory.ts","webpack://Aeternity/./src/account/Metamask.ts","webpack://Aeternity/./src/account/MetamaskFactory.ts","webpack://Aeternity/./src/contract/compiler/Base.ts","webpack://Aeternity/./src/apis/compiler/models/mappers.ts","webpack://Aeternity/./src/apis/compiler/models/parameters.ts","webpack://Aeternity/./src/apis/compiler/compiler.ts","webpack://Aeternity/./src/contract/compiler/Http.ts","webpack://Aeternity/./src/utils/string.ts","webpack://Aeternity/./src/channel/internal.ts","webpack://Aeternity/./src/channel/handlers.ts","webpack://Aeternity/./src/channel/Base.ts","webpack://Aeternity/./src/channel/Spend.ts","webpack://Aeternity/./src/channel/Contract.ts","webpack://Aeternity/./src/MiddlewareSubscriber.ts","webpack://Aeternity/./src/apis/middleware/models/parameters.ts","webpack://Aeternity/./src/apis/middleware/models/mappers.ts","webpack://Aeternity/./src/apis/middleware/middleware.ts","webpack://Aeternity/./src/utils/MiddlewarePage.ts","webpack://Aeternity/./src/Middleware.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection-proxy.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/Browser.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserWindowMessage.ts","webpack://Aeternity/./src/aepp-wallet-communication/wallet-detector.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserRuntime.ts","webpack://Aeternity/./src/index-browser.ts","webpack://Aeternity/external node-commonjs \"child_process\"","webpack://Aeternity/external node-commonjs \"os\"","webpack://Aeternity/external node-commonjs \"path\"","webpack://Aeternity/external node-commonjs \"fs/promises\"","webpack://Aeternity/./src/contract/compiler/Cli.ts","webpack://Aeternity/./src/contract/compiler/getFileSystem.ts","webpack://Aeternity/./src/contract/compiler/HttpNode.ts","webpack://Aeternity/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bignumber.js\"), require(\"@azure/core-rest-pipeline\"), require(\"tweetnacl\"), require(\"bs58\"), require(\"buffer\"), require(\"rlp\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"eventemitter3\"), require(\"json-bigint\"), require(\"@scure/bip39\"), require(\"tweetnacl-auth\"), require(\"websocket\"), require(\"events\"), require(\"isomorphic-ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"bignumber.js\", \"@azure/core-rest-pipeline\", \"tweetnacl\", \"bs58\", \"buffer\", \"rlp\", \"@azure/core-client\", \"@aeternity/aepp-calldata\", \"canonicalize\", \"eventemitter3\", \"json-bigint\", \"@scure/bip39\", \"tweetnacl-auth\", \"websocket\", \"events\", \"isomorphic-ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Aeternity\"] = factory(require(\"bignumber.js\"), require(\"@azure/core-rest-pipeline\"), require(\"tweetnacl\"), require(\"bs58\"), require(\"buffer\"), require(\"rlp\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"eventemitter3\"), require(\"json-bigint\"), require(\"@scure/bip39\"), require(\"tweetnacl-auth\"), require(\"websocket\"), require(\"events\"), require(\"isomorphic-ws\"));\n\telse\n\t\troot[\"Aeternity\"] = factory(root[\"bignumber.js\"], root[\"@azure/core-rest-pipeline\"], root[\"tweetnacl\"], root[\"bs58\"], root[\"buffer\"], root[\"rlp\"], root[\"@azure/core-client\"], root[\"@aeternity/aepp-calldata\"], root[\"canonicalize\"], root[\"eventemitter3\"], root[\"json-bigint\"], root[\"@scure/bip39\"], root[\"tweetnacl-auth\"], root[\"websocket\"], root[\"events\"], root[\"isomorphic-ws\"]);\n})(global, (__WEBPACK_EXTERNAL_MODULE__6168__, __WEBPACK_EXTERNAL_MODULE__833__, __WEBPACK_EXTERNAL_MODULE__1655__, __WEBPACK_EXTERNAL_MODULE__4578__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__6514__, __WEBPACK_EXTERNAL_MODULE__1081__, __WEBPACK_EXTERNAL_MODULE__2853__, __WEBPACK_EXTERNAL_MODULE__6016__, __WEBPACK_EXTERNAL_MODULE__1891__, __WEBPACK_EXTERNAL_MODULE__4146__, __WEBPACK_EXTERNAL_MODULE__8380__, __WEBPACK_EXTERNAL_MODULE__5196__, __WEBPACK_EXTERNAL_MODULE__8963__, __WEBPACK_EXTERNAL_MODULE__761__, __WEBPACK_EXTERNAL_MODULE__7250__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\n  isWellKnown: isWellKnownSymbol\n});\n","'use strict';\nvar isPossiblePrototype = require('../internals/is-possible-prototype');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (isPossiblePrototype(argument)) return argument;\n  throw new $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nvar parent = require('../../es/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    }\n\n    return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n","'use strict';\nvar path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var _Object$defineProperty = require(\"core-js-pure/features/object/define-property.js\");\nvar toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? _Object$defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = globalThis.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw new $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nmodule.exports = require('../../full/object/define-property');\n","'use strict';\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE === 1;\n  var IS_FILTER = TYPE === 2;\n  var IS_SOME = TYPE === 3;\n  var IS_EVERY = TYPE === 4;\n  var IS_FIND_INDEX = TYPE === 6;\n  var IS_FILTER_REJECT = TYPE === 7;\n  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike(self);\n    var boundFunction = bind(callbackfn, that);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw new TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__761__;","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar METADATA = wellKnownSymbol('metadata');\nvar FunctionPrototype = Function.prototype;\n\n// Function.prototype[@@metadata]\n// https://github.com/tc39/proposal-decorator-metadata\nif (FunctionPrototype[METADATA] === undefined) {\n  defineProperty(FunctionPrototype, METADATA, {\n    value: null\n  });\n}\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar userAgent = require('../internals/environment-user-agent');\n\nvar process = globalThis.process;\nvar Deno = globalThis.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__833__;","'use strict';\nvar isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1081__;","'use strict';\nvar globalThis = require('../internals/global-this');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n// add debugging info\nrequire('../internals/shared-store');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? globalThis : STATIC ? globalThis[TARGET] : globalThis[TARGET] && globalThis[TARGET].prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (!FORCED && !PROTO && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, globalThis);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL &&\n  !Symbol.sham &&\n  typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","var _Symbol = require(\"core-js-pure/features/symbol/index.js\");\nvar _Symbol$iterator = require(\"core-js-pure/features/symbol/iterator.js\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1655__;","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","'use strict';\nrequire('../../modules/es.date.to-primitive');\nrequire('../../modules/es.symbol.to-primitive');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('toPrimitive');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.customMatcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('customMatcher');\n","'use strict';\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/es.symbol.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1891__;","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\n// eslint-disable-next-line es/no-function-prototype-bind -- safe\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nrequire('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","'use strict';\nmodule.exports = {};\n","'use strict';\nmodule.exports = function () { /* empty */ };\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw new $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","'use strict';\nvar parent = require('../../actual/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\nvar documentAll = typeof document == 'object' && document.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nmodule.exports = typeof documentAll == 'undefined' && documentAll !== undefined ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.is-registered-symbol');\nrequire('../../modules/esnext.symbol.is-well-known-symbol');\nrequire('../../modules/esnext.symbol.custom-matcher');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.is-registered');\nrequire('../../modules/esnext.symbol.is-well-known');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(globalThis, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    globalThis[key] = value;\n  } return value;\n};\n","'use strict';\nrequire('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar globalThis = require('../internals/global-this');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  setToStringTag(globalThis[COLLECTION_NAME], COLLECTION_NAME);\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar Symbol = getBuiltIn('Symbol');\nvar keyFor = Symbol.keyFor;\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\nmodule.exports = Symbol.isRegisteredSymbol || function isRegisteredSymbol(value) {\n  try {\n    return keyFor(thisSymbolValue(value)) !== undefined;\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","module.exports = require(\"core-js-pure/stable/instance/flags\");","module.exports = __WEBPACK_EXTERNAL_MODULE__2853__;","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nmodule.exports = require('../../full/symbol');\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  var len = toIntegerOrInfinity(argument);\n  return len > 0 ? min(len, 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegistered` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true, name: 'isRegisteredSymbol' }, {\n  isRegistered: isRegisteredSymbol\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n","// empty\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n","'use strict';\nvar $ = require('../internals/export');\nvar globalThis = require('../internals/global-this');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = globalThis.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar RangeError = globalThis.RangeError;\nvar TypeError = globalThis.TypeError;\nvar QObject = globalThis.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar fallbackDefineProperty = function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n};\n\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a !== 7;\n}) ? fallbackDefineProperty : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, nativeObjectCreate(null)));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw new TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      var $this = this === undefined ? globalThis : this;\n      if ($this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn($this, HIDDEN) && hasOwn($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;\n      var descriptor = createPropertyDescriptor(1, value);\n      try {\n        setSymbolDescriptor($this, tag, descriptor);\n      } catch (error) {\n        if (!(error instanceof RangeError)) throw error;\n        fallbackDefineProperty($this, tag, descriptor);\n      }\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    defineBuiltInAccessor(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","'use strict';\nmodule.exports = {};\n","'use strict';\nrequire('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n// eslint-disable-next-line es/no-function-prototype-bind -- safe\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true }, {\n  isRegisteredSymbol: isRegisteredSymbol\n});\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nmodule.exports = function (argument) {\n  return isObject(argument) || argument === null;\n};\n","'use strict';\nvar parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","'use strict';\nvar parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4146__;","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw new $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    if (length === 0) return !IS_INCLUDES && -1;\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nmodule.exports = require('../../full/symbol/iterator');\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4578__;","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  var target = STATIC ? it : it && it.prototype;\n  if (target) {\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = globalThis.TypeError;\nvar WeakMap = globalThis.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\nvar parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","// empty\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5196__;","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","'use strict';\n/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) === 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.test(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, [], argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  if (DESCRIPTORS) definePropertyModule.f(object, key, createPropertyDescriptor(0, value));\n  else object[key] = value;\n};\n","'use strict';\nvar path = require('../internals/path');\nvar globalThis = require('../internals/global-this');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(globalThis[namespace])\n    : path[namespace] && path[namespace][method] || globalThis[namespace] && globalThis[namespace][method];\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar parent = require('../../stable/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar store = require('../internals/shared-store');\n\nmodule.exports = function (key, value) {\n  return store[key] || (store[key] = value || {});\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  check(typeof this == 'object' && this) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6016__;","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-function-prototype-bind, es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw new $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar globalThis = require('../internals/global-this');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = module.exports = globalThis[SHARED] || defineGlobalProperty(SHARED, {});\n\n(store.versions || (store.versions = [])).push({\n  version: '3.41.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2025 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.41.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6168__;","'use strict';\nvar globalThis = require('../internals/global-this');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = globalThis.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6514__;","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw new $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar toString = require('../internals/to-string');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (replacer) {\n  if (isCallable(replacer)) return replacer;\n  if (!isArray(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push(keys, element);\n    else if (typeof element == 'number' || classof(element) === 'Number' || classof(element) === 'String') push(keys, toString(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","'use strict';\nvar globalThis = require('../internals/global-this');\n\nvar navigator = globalThis.navigator;\nvar userAgent = navigator && navigator.userAgent;\n\nmodule.exports = userAgent ? String(userAgent) : '';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\n// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) === 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","var _Symbol$toPrimitive = require(\"core-js-pure/features/symbol/to-primitive.js\");\nvar _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[_Symbol$toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","module.exports = require(\"url\");","'use strict';\nvar globalThis = require('../internals/global-this');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(globalThis.JSON, 'JSON', true);\n","'use strict';\nvar parent = require('../../es/symbol/iterator');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/environment-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7250__;","'use strict';\nvar parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.function.metadata');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.dispose');\nrequire('../../modules/esnext.symbol.metadata');\n\nmodule.exports = parent;\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nmodule.exports = true;\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  // eslint-disable-next-line no-useless-assignment -- avoid memory leak\n  activeXDocument = null;\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\nmodule.exports = require('../../full/symbol/to-primitive');\n","// empty\n","'use strict';\nvar parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8380__;","'use strict';\nmodule.exports = {};\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/environment-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n","'use strict';\nrequire('../../modules/es.regexp.flags');\nvar getRegExpFlags = require('../../internals/regexp-get-flags');\n\nmodule.exports = getRegExpFlags;\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__8963__;","module.exports = require(\"util\");","// empty\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar isObject = require('../internals/is-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    requireObjectCoercible(O);\n    aPossiblePrototype(proto);\n    if (!isObject(O)) return O;\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar shared = require('../internals/shared');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isSymbol = require('../internals/is-symbol');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar Symbol = getBuiltIn('Symbol');\nvar $isWellKnownSymbol = Symbol.isWellKnownSymbol;\nvar getOwnPropertyNames = getBuiltIn('Object', 'getOwnPropertyNames');\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\nvar WellKnownSymbolsStore = shared('wks');\n\nfor (var i = 0, symbolKeys = getOwnPropertyNames(Symbol), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {\n  // some old engines throws on access to some keys like `arguments` or `caller`\n  try {\n    var symbolKey = symbolKeys[i];\n    if (isSymbol(Symbol[symbolKey])) wellKnownSymbol(symbolKey);\n  } catch (error) { /* empty */ }\n}\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\nmodule.exports = function isWellKnownSymbol(value) {\n  if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n  try {\n    var symbol = thisSymbolValue(value);\n    for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n      // eslint-disable-next-line eqeqeq -- polyfilled symbols case\n      if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n    }\n  } catch (error) { /* empty */ }\n  return false;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar parent = require('../../actual/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = null;\n    return createIterResultObject(undefined, true);\n  }\n  switch (state.kind) {\n    case 'keys': return createIterResultObject(index, false);\n    case 'values': return createIterResultObject(target[index], false);\n  } return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar globalThis = require('../internals/global-this');\nvar isObject = require('../internals/is-object');\n\nvar document = globalThis.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","'use strict';\nvar parent = require('../../stable/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar getReplacerFunction = require('../internals/get-json-replacer-function');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $String = String;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')('stringify detection');\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) !== '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) !== '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) !== '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);\n    if (!isSymbol(value)) return value;\n  };\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/environment-v8-version');\nvar fails = require('../internals/fails');\nvar globalThis = require('../internals/global-this');\n\nvar $String = globalThis.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Big Number Helpers\n */\nimport BigNumber from 'bignumber.js';\n\n/**\n * Check if value is BigNumber, Number, BigInt or number string representation\n * @param number - number to check\n */\nexport const isBigNumber = (number: string | number | bigint | BigNumber): boolean => {\n  if (typeof number === 'bigint') return true;\n  return (\n    ['number', 'object', 'string'].includes(typeof number) &&\n    // eslint-disable-next-line no-restricted-globals\n    (!isNaN(number as number) || Number.isInteger(number) || BigNumber.isBigNumber(number))\n  );\n};\n\n/**\n * BigNumber ceil operation\n */\nexport const ceil = (bigNumber: BigNumber): BigNumber =>\n  bigNumber.integerValue(BigNumber.ROUND_CEIL);\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { AensName, Int } from '../tx/builder/constants.js';\nimport * as Encoded from './encoder-types.js';\n\n/**\n * aepp-sdk originated error\n * @category exception\n */\nexport abstract class BaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'BaseError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AccountError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AensError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AeppError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AeppError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CompilerError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CompilerError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ContractError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CryptographyError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CryptographyError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TransactionError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TransactionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class WalletError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'WalletError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentError extends BaseError {\n  constructor(argumentName: string, requirement: unknown, argumentValue: unknown) {\n    super(`${argumentName} should be ${requirement}, got ${argumentValue} instead`);\n    this.name = 'ArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalArgumentError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentCountMismatchError extends BaseError {\n  constructor(functionName: string, requiredCount: number, providedCount: number) {\n    super(`${functionName} expects ${requiredCount} arguments, got ${providedCount} instead`);\n    this.name = 'ArgumentCountMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientBalanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InsufficientBalanceError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingParamError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingParamError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSerializerFoundError extends BaseError {\n  constructor() {\n    super('Byte serialization not supported');\n    this.name = 'NoSerializerFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RequestTimedOutError extends BaseError {\n  constructor(height: number) {\n    super(`Giving up at height ${height}`);\n    this.name = 'RequestTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxTimedOutError extends BaseError {\n  constructor(blocks: number, th: Encoded.TxHash) {\n    super(`Giving up after ${blocks} blocks mined, transaction hash: ${th}`);\n    this.name = 'TxTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TypeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TypeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedPlatformError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedPlatformError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedProtocolError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedProtocolError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotImplementedError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NotImplementedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVersionError extends BaseError {\n  constructor(dependency: string, version: string, geVersion: string, ltVersion?: string) {\n    super(\n      `Unsupported ${dependency} version ${version}. Supported: >= ${geVersion}` +\n        (ltVersion == null ? '' : ` < ${ltVersion}`),\n    );\n    this.name = 'UnsupportedVersionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class LogicError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'LogicError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InternalError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InternalError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedTsError extends InternalError {\n  constructor(message = 'Expected to not happen, required for TS') {\n    super(message);\n    this.name = 'UnexpectedTsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnavailableAccountError extends AccountError {\n  constructor(address: Encoded.AccountAddress) {\n    super(`Account for ${address} not available`);\n    this.name = 'UnavailableAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensPointerContextError extends AensError {\n  constructor(nameOrId: AensName | Encoded.Name, prefix: string) {\n    super(`Name ${nameOrId} don't have pointers for ${prefix}`);\n    this.name = 'AensPointerContextError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientNameFeeError extends AensError {\n  constructor(nameFee: BigNumber, minNameFee: BigNumber) {\n    super(\n      `the provided fee ${nameFee.toString()} is not enough to execute the claim, required: ${minNameFee.toString()}`,\n    );\n    this.name = 'InsufficientNameFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAensNameError extends AensError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAensNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidRpcMessageError extends AeppError {\n  constructor(message: string) {\n    super(`Received invalid message: ${message}`);\n    this.name = 'InvalidRpcMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingCallbackError extends AeppError {\n  constructor(id: number) {\n    super(`Can't find callback for this messageId ${id}`);\n    this.name = 'MissingCallbackError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnAuthorizedAccountError extends AeppError {\n  constructor(onAccount: Encoded.AccountAddress) {\n    super(`You do not have access to account ${onAccount}`);\n    this.name = 'UnAuthorizedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownRpcClientError extends AeppError {\n  constructor(id: string) {\n    super(`RpcClient with id ${id} do not exist`);\n    this.name = 'UnknownRpcClientError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsubscribedAccountError extends AeppError {\n  constructor() {\n    super('You are not subscribed for an account.');\n    this.name = 'UnsubscribedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelCallError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelCallError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelConnectionError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelConnectionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelPingTimedOutError extends ChannelError {\n  constructor() {\n    super('Server pong timed out');\n    this.name = 'ChannelPingTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedChannelMessageError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnexpectedChannelMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelIncomingMessageError extends ChannelError {\n  handlerError: Error;\n\n  incomingMessage: { [key: string]: any };\n\n  constructor(handlerError: Error, incomingMessage: { [key: string]: any }) {\n    super(handlerError.message);\n    this.handlerError = handlerError;\n    this.incomingMessage = incomingMessage;\n    this.name = 'ChannelIncomingMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownChannelStateError extends ChannelError {\n  constructor() {\n    super('State Channels FSM entered unknown state');\n    this.name = 'UnknownChannelStateError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAuthDataError extends CompilerError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuthDataError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class BytecodeMismatchError extends ContractError {\n  constructor(source: 'source code' | 'bytecode' | 'ACI', details: string = '') {\n    super(`Contract ${source} do not correspond to the bytecode deployed on the chain` + details);\n    this.name = 'BytecodeMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateContractError extends ContractError {\n  constructor() {\n    super('Contract already deployed');\n    this.name = 'DuplicateContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InactiveContractError extends ContractError {\n  constructor(contractAddress: Encoded.ContractAddress) {\n    super(`Contract with address ${contractAddress} not active`);\n    this.name = 'InactiveContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidMethodInvocationError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidMethodInvocationError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractAddressError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingContractAddressError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractDefError extends ContractError {\n  constructor() {\n    super('Either ACI or sourceCode or sourceCodePath is required');\n    this.name = 'MissingContractDefError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingFunctionNameError extends ContractError {\n  constructor() {\n    super('Function name is required');\n    this.name = 'MissingFunctionNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeInvocationError extends ContractError {\n  transaction?: Encoded.Transaction;\n\n  constructor(message: string, transaction?: Encoded.Transaction) {\n    super(`Invocation failed${message == null ? '' : `: \"${message}\"`}`);\n    this.name = 'NodeInvocationError';\n    this.transaction = transaction;\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSuchContractFunctionError extends ContractError {\n  constructor(name: string) {\n    super(`Function ${name} doesn't exist in contract`);\n    this.name = 'NoSuchContractFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotPayableFunctionError extends ContractError {\n  constructor(amount: Int, fn: string) {\n    super(\n      `You try to pay \"${amount}\" to function \"${fn}\" which is not payable. ` +\n        'Only payable function can accept coins',\n    );\n    this.name = 'NotPayableFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingEventDefinitionError extends ContractError {\n  constructor(eventNameHash: string, eventAddress: Encoded.ContractAddress) {\n    super(\n      `Can't find definition of ${eventNameHash} event emitted by ${eventAddress}` +\n        ' (use omitUnknown option to ignore events like this)',\n    );\n    this.name = 'MissingEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AmbiguousEventDefinitionError extends ContractError {\n  constructor(eventAddress: Encoded.ContractAddress, matchedEvents: Array<[string, string]>) {\n    super(\n      `Found multiple definitions of \"${matchedEvents[0][1]}\" event with different types emitted by` +\n        ` ${eventAddress} in ${matchedEvents.map(([name]) => `\"${name}\"`).join(', ')} contracts` +\n        ' (use contractAddressToName option to specify contract name corresponding to address)',\n    );\n    this.name = 'AmbiguousEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidChecksumError extends CryptographyError {\n  constructor() {\n    super('Invalid checksum');\n    this.name = 'InvalidChecksumError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MerkleTreeHashMismatchError extends CryptographyError {\n  constructor() {\n    super('Node hash is not equal to provided one');\n    this.name = 'MerkleTreeHashMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingNodeInTreeError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingNodeInTreeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownNodeLengthError extends CryptographyError {\n  constructor(nodeLength: number) {\n    super(`Unknown node length: ${nodeLength}`);\n    this.name = 'UnknownNodeLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownPathNibbleError extends CryptographyError {\n  constructor(nibble: number) {\n    super(`Unknown path nibble: ${nibble}`);\n    this.name = 'UnknownPathNibbleError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateNodeError extends NodeError {\n  constructor(name: string) {\n    super(`Node with name ${name} already exist`);\n    this.name = 'DuplicateNodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeNotFoundError extends NodeError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DecodeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PayloadLengthError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PayloadLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DryRunError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DryRunError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalBidFeeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalBidFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidSignatureError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidSignatureError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PrefixNotFoundError extends TransactionError {\n  constructor(tag: number) {\n    super(`Prefix for id-tag ${tag} not found.`);\n    this.name = 'PrefixNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class SchemaNotFoundError extends TransactionError {\n  constructor(key: string, version: number) {\n    super(`Transaction schema not implemented for tag ${key} version ${version}`);\n    this.name = 'SchemaNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TagNotFoundError extends TransactionError {\n  constructor(prefix: string) {\n    super(`Id tag for prefix ${prefix} not found.`);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxNotInChainError extends TransactionError {\n  constructor(txHash: Encoded.TxHash) {\n    super(`Transaction ${txHash} is removed from chain`);\n    this.name = 'TxNotInChainError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AlreadyConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AlreadyConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoWalletConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NoWalletConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcConnectionError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RpcConnectionError';\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { isBigNumber } from './bignumber.js';\nimport { ArgumentError } from './errors.js';\n\n/**\n * @deprecated no replacement implemented yet\n * @category utils\n */\nexport enum AE_AMOUNT_FORMATS {\n  AE = 'ae',\n  MILI_AE = 'miliAE',\n  MICRO_AE = 'microAE',\n  NANO_AE = 'nanoAE',\n  PICO_AE = 'picoAE',\n  FEMTO_AE = 'femtoAE',\n  AETTOS = 'aettos',\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nconst DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18,\n} as const;\n\n/**\n * Convert amount from one to other denomination\n * @deprecated no replacement implemented yet\n * @category utils\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n * @param options.targetDenomination - target denomination,\n * can be ['ae', 'aettos']\n */\nexport const formatAmount = (\n  value: string | number | bigint | BigNumber,\n  {\n    denomination = AE_AMOUNT_FORMATS.AETTOS,\n    targetDenomination = AE_AMOUNT_FORMATS.AETTOS,\n  }: { denomination?: AE_AMOUNT_FORMATS; targetDenomination?: AE_AMOUNT_FORMATS },\n): string => {\n  if (!isBigNumber(value)) throw new ArgumentError('value', 'a number', value);\n\n  return new BigNumber(typeof value === 'bigint' ? value.toString() : value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed();\n};\n\n/**\n * Convert amount to AE\n * @deprecated no replacement implemented yet\n * @category utils\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAe = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE });\n\n/**\n * Convert amount to aettos\n * @deprecated no replacement implemented yet\n * @category utils\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAettos = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AE }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination });\n\ninterface Prefix {\n  name: string;\n  magnitude: number;\n}\n\nconst prefixes: Prefix[] = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 },\n];\n\nconst getNearestPrefix = (exponent: number): Prefix =>\n  prefixes.reduce((p, n) =>\n    Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p,\n  );\n\nconst getLowerBoundPrefix = (exponent: number): Prefix =>\n  prefixes.find((p) => p.magnitude <= exponent) ?? prefixes[prefixes.length - 1];\n\n/**\n * @deprecated no replacement implemented yet\n * @category utils\n */\nexport const prefixedAmount = (rawValue: string | number | BigNumber): string => {\n  const value: BigNumber = new BigNumber(rawValue);\n\n  const exp = value.e ?? 0;\n  const { name, magnitude } = (exp < 0 ? getNearestPrefix : getLowerBoundPrefix)(exp);\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(exp - magnitude, 0))\n    .toFixed();\n  return `${v}${name !== '' ? ' ' : ''}${name}`;\n};\n","import { RestError } from '@azure/core-rest-pipeline';\n\nexport const pause = async (duration: number): Promise<void> =>\n  new Promise((resolve) => {\n    setTimeout(resolve, duration);\n  });\n\nexport const mapObject = <InputV, OutputV>(\n  object: { [k: string]: InputV },\n  fn: (\n    value: [string, InputV],\n    index: number,\n    array: Array<[string, InputV]>,\n  ) => [number | string, OutputV],\n): { [k: string]: OutputV } => Object.fromEntries(Object.entries(object).map(fn));\n\n// remove after dropping webpack4 support\nconst isWebpack4Buffer = (() => {\n  try {\n    Buffer.concat([Uint8Array.from([])]);\n    return false;\n  } catch (error) {\n    return true;\n  }\n})();\n\nexport const concatBuffers = isWebpack4Buffer\n  ? (list: readonly Uint8Array[], totalLength?: number): Buffer =>\n      Buffer.concat(\n        list.map((el) => Buffer.from(el)),\n        totalLength,\n      )\n  : Buffer.concat;\n\n/**\n * Object key type guard\n * @param key - Maybe object key\n * @param object - Object\n */\nexport function isKeyOfObject<T extends object>(\n  key: string | number | symbol,\n  object: T,\n): key is keyof T {\n  return key in object;\n}\n\n/**\n * Array item type guard\n * @param item - Maybe array item\n * @param array - Array\n */\nexport function isItemOfArray<T>(item: any, array: readonly T[]): item is T {\n  return array.includes(item);\n}\n\nexport function isAccountNotFoundError(error: Error): boolean {\n  return (\n    error instanceof RestError &&\n    error.statusCode === 404 &&\n    error.message.includes('Account not found')\n  );\n}\n\n// based on https://stackoverflow.com/a/50375286\nexport type UnionToIntersection<Union> = (Union extends any ? (k: Union) => void : never) extends (\n  k: infer Intersection,\n) => void\n  ? Intersection\n  : never;\n\n// based on https://stackoverflow.com/a/61108377\nexport type Optional<T, K extends keyof T> = Pick<Partial<T>, K> & Omit<T, K>;\n\nexport function ensureError(error: unknown): asserts error is Error {\n  if (error instanceof Error) return;\n  throw error;\n}\n","import { ArgumentError } from './errors.js';\n\nexport function wrapWithProxy<Value extends object | undefined>(\n  valueCb: () => Value,\n): NonNullable<Value> {\n  return new Proxy(\n    {},\n    Object.fromEntries(\n      (\n        [\n          'apply',\n          'construct',\n          'defineProperty',\n          'deleteProperty',\n          'getOwnPropertyDescriptor',\n          'getPrototypeOf',\n          'isExtensible',\n          'ownKeys',\n          'preventExtensions',\n          'set',\n          'setPrototypeOf',\n          'get',\n          'has',\n        ] as const\n      ).map((name) => [\n        name,\n        (t: {}, ...args: unknown[]) => {\n          const target = valueCb();\n          if (target == null) throw new ArgumentError('wrapped value', 'defined', target);\n          if (name === 'get' && args[0] === '_wrappedValue') return target;\n          const res = (Reflect[name] as any)(target, ...args);\n          return typeof res === 'function' && name === 'get' ? res.bind(target) : res;\n        },\n      ]),\n    ),\n  ) as NonNullable<Value>;\n}\n\nexport function unwrapProxy<Value extends object>(value: Value): Value {\n  return (value as { _wrappedValue?: Value })._wrappedValue ?? value;\n}\n","/**\n * @category utils\n * @see {@link https://github.com/aeternity/protocol/blob/master/node/api/api_encoding.md}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L205-L230}\n */\nexport enum Encoding {\n  KeyBlockHash = 'kh',\n  MicroBlockHash = 'mh',\n  BlockPofHash = 'bf',\n  BlockTxHash = 'bx',\n  BlockStateHash = 'bs',\n  Channel = 'ch',\n  ContractAddress = 'ct',\n  ContractBytearray = 'cb',\n  ContractStoreKey = 'ck',\n  ContractStoreValue = 'cv',\n  Transaction = 'tx',\n  TxHash = 'th',\n  OracleAddress = 'ok',\n  OracleQuery = 'ov',\n  OracleQueryId = 'oq',\n  OracleResponse = 'or',\n  AccountAddress = 'ak',\n  AccountSecretKey = 'sk',\n  Signature = 'sg',\n  Commitment = 'cm',\n  PeerPubkey = 'pp',\n  Name = 'nm',\n  State = 'st',\n  Poi = 'pi',\n  StateTrees = 'ss',\n  CallStateTree = 'cs',\n  Bytearray = 'ba',\n}\n\nexport type KeyBlockHash = `${Encoding.KeyBlockHash}_${string}`;\nexport type MicroBlockHash = `${Encoding.MicroBlockHash}_${string}`;\nexport type BlockPofHash = `${Encoding.BlockPofHash}_${string}`;\nexport type BlockTxHash = `${Encoding.BlockTxHash}_${string}`;\nexport type BlockStateHash = `${Encoding.BlockStateHash}_${string}`;\nexport type Channel = `${Encoding.Channel}_${string}`;\nexport type ContractAddress = `${Encoding.ContractAddress}_${string}`;\nexport type ContractBytearray = `${Encoding.ContractBytearray}_${string}`;\nexport type ContractStoreKey = `${Encoding.ContractStoreKey}_${string}`;\nexport type ContractStoreValue = `${Encoding.ContractStoreValue}_${string}`;\nexport type Transaction = `${Encoding.Transaction}_${string}`;\nexport type TxHash = `${Encoding.TxHash}_${string}`;\nexport type OracleAddress = `${Encoding.OracleAddress}_${string}`;\nexport type OracleQuery = `${Encoding.OracleQuery}_${string}`;\nexport type OracleQueryId = `${Encoding.OracleQueryId}_${string}`;\nexport type OracleResponse = `${Encoding.OracleResponse}_${string}`;\nexport type AccountAddress = `${Encoding.AccountAddress}_${string}`;\nexport type AccountSecretKey = `${Encoding.AccountSecretKey}_${string}`;\nexport type Signature = `${Encoding.Signature}_${string}`;\nexport type Commitment = `${Encoding.Commitment}_${string}`;\nexport type PeerPubkey = `${Encoding.PeerPubkey}_${string}`;\nexport type Name = `${Encoding.Name}_${string}`;\nexport type State = `${Encoding.State}_${string}`;\nexport type Poi = `${Encoding.Poi}_${string}`;\nexport type StateTrees = `${Encoding.StateTrees}_${string}`;\nexport type CallStateTree = `${Encoding.CallStateTree}_${string}`;\nexport type Bytearray = `${Encoding.Bytearray}_${string}`;\n\nexport type Generic<Type extends Encoding> = `${Type}_${string}`;\nexport type Any = `${Encoding}_${string}`;\n","import bs58 from 'bs58';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport Sha256 from 'sha.js/sha256.js';\nimport { DecodeError, ArgumentError, InvalidChecksumError, PayloadLengthError } from './errors.js';\nimport { concatBuffers, isKeyOfObject } from './other.js';\nimport * as Encoded from './encoder-types.js';\nimport { Encoding } from './encoder-types.js';\n\nexport { Encoded, Encoding };\n\n/**\n * Calculate SHA256 hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function sha256hash(input: Uint8Array | string): Buffer {\n  return new Sha256().update(input).digest();\n}\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L177-L202}\n */\nconst base64Types = [\n  Encoding.ContractBytearray,\n  Encoding.ContractStoreKey,\n  Encoding.ContractStoreValue,\n  Encoding.Transaction,\n  Encoding.OracleQuery,\n  Encoding.OracleResponse,\n  Encoding.State,\n  Encoding.Poi,\n  Encoding.StateTrees,\n  Encoding.CallStateTree,\n  Encoding.Bytearray,\n] as const;\nconst base58Types = [\n  Encoding.KeyBlockHash,\n  Encoding.MicroBlockHash,\n  Encoding.BlockPofHash,\n  Encoding.BlockTxHash,\n  Encoding.BlockStateHash,\n  Encoding.Channel,\n  Encoding.ContractAddress,\n  Encoding.TxHash,\n  Encoding.OracleAddress,\n  Encoding.OracleQueryId,\n  Encoding.AccountAddress,\n  Encoding.AccountSecretKey,\n  Encoding.Signature,\n  Encoding.Commitment,\n  Encoding.PeerPubkey,\n  Encoding.Name,\n] as const;\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L261-L286}\n */\nconst byteSizeForType = {\n  [Encoding.KeyBlockHash]: 32,\n  [Encoding.MicroBlockHash]: 32,\n  [Encoding.BlockPofHash]: 32,\n  [Encoding.BlockTxHash]: 32,\n  [Encoding.BlockStateHash]: 32,\n  [Encoding.Channel]: 32,\n  [Encoding.ContractAddress]: 32,\n  [Encoding.TxHash]: 32,\n  [Encoding.OracleAddress]: 32,\n  [Encoding.OracleQueryId]: 32,\n  [Encoding.AccountAddress]: 32,\n  [Encoding.AccountSecretKey]: 32,\n  [Encoding.Signature]: 64,\n  [Encoding.Commitment]: 32,\n  [Encoding.PeerPubkey]: 32,\n  [Encoding.State]: 32,\n} as const;\n\nfunction ensureValidLength(data: Uint8Array, type: Encoding): void {\n  if (!isKeyOfObject(type, byteSizeForType)) return;\n  const reqLen = byteSizeForType[type];\n  if (reqLen == null || data.length === reqLen) return;\n  throw new PayloadLengthError(`Payload should be ${reqLen} bytes, got ${data.length} instead`);\n}\n\nconst getChecksum = (payload: Uint8Array): Buffer => sha256hash(sha256hash(payload)).slice(0, 4);\n\nconst addChecksum = (payload: Uint8Array): Buffer => concatBuffers([payload, getChecksum(payload)]);\n\nfunction getPayload(buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4);\n  if (!getChecksum(payload).equals(buffer.slice(-4))) throw new InvalidChecksumError();\n  return payload;\n}\n\nconst base64 = {\n  encode: (buffer: Uint8Array) => addChecksum(buffer).toString('base64'),\n  decode: (string: string) => getPayload(Buffer.from(string, 'base64')),\n};\n\nconst base58 = {\n  encode: (buffer: Uint8Array) => bs58.encode(addChecksum(buffer)),\n  decode: (string: string) => getPayload(Buffer.from(bs58.decode(string))),\n};\n\nconst parseType = (maybeType: unknown): [Encoding, typeof base64] => {\n  const base64Type = base64Types.find((t) => t === maybeType);\n  if (base64Type != null) return [base64Type, base64];\n  const base58Type = base58Types.find((t) => t === maybeType);\n  if (base58Type != null) return [base58Type, base58];\n  throw new ArgumentError(\n    'prefix',\n    `one of ${[...base58Types, ...base64Types].join(', ')}`,\n    maybeType,\n  );\n};\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @param data - An Base58/64check encoded and prefixed string\n * (ex tx_..., sg_..., ak_....)\n * @returns Decoded data\n * @category utils\n */\nexport function decode(data: Encoded.Any): Buffer {\n  const [prefix, encodedPayload, extra] = data.split('_');\n  if (encodedPayload == null) throw new DecodeError(`Encoded string missing payload: ${data}`);\n  if (extra != null) throw new DecodeError(`Encoded string have extra parts: ${data}`);\n  const [type, encoder] = parseType(prefix);\n  const payload = encoder.decode(encodedPayload);\n  ensureValidLength(payload, type);\n  return payload;\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @param data - An decoded data\n * @param type - Prefix of Transaction\n * @returns Encoded string Base58check or Base64check data\n * @category utils\n */\nexport function encode<Type extends Encoding>(data: Uint8Array, type: Type): Encoded.Generic<Type> {\n  const [, encoder] = parseType(type);\n  ensureValidLength(data, type);\n  return `${type}_${encoder.encode(data)}`;\n}\n","import nacl from 'tweetnacl';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport { blake2b } from 'blakejs/blake2b.js';\n\nimport { concatBuffers, isItemOfArray } from './other.js';\nimport { decode, Encoded, Encoding } from './encoder.js';\nimport { ArgumentError } from './errors.js';\n\n/**\n * Check if address is valid\n * @param maybeAddress - Address to check\n * @category utils\n * @deprecated Use {@link isEncoded} instead\n */\nexport function isAddressValid(maybeAddress: string): maybeAddress is Encoded.AccountAddress;\n/**\n * Check if data is encoded in one of provided encodings\n * @param maybeEncoded - Data to check\n * @param encodings - Rest parameters with encodings to check against\n * @deprecated Use {@link isEncoded} instead\n */\nexport function isAddressValid<E extends Encoding>(\n  maybeEncoded: string,\n  ...encodings: E[]\n): maybeEncoded is Encoded.Generic<E>;\nexport function isAddressValid(maybeEncoded: string, ...encodings: Encoding[]): boolean {\n  if (encodings.length === 0) encodings = [Encoding.AccountAddress];\n  try {\n    decode(maybeEncoded as Encoded.Any);\n    const encoding = maybeEncoded.split('_')[0];\n    if (!isItemOfArray(encoding, encodings)) {\n      throw new ArgumentError(\n        'Encoded string type',\n        encodings.length > 1 ? `one of ${encodings.join(', ')}` : encodings[0],\n        encoding,\n      );\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Check if data is encoded in any encoding\n * @param maybeEncoded - Data to check\n * @category utils\n */\nexport function ensureEncoded(maybeEncoded: string): asserts maybeEncoded is Encoded.Any;\n/**\n * Check if data is encoded in one of provided encodings\n * @param maybeEncoded - Data to check\n * @param encodings - Rest parameters with encodings to check against\n */\nexport function ensureEncoded<E extends Encoding>(\n  maybeEncoded: string,\n  ...encodings: E[]\n): asserts maybeEncoded is Encoded.Generic<E>;\nexport function ensureEncoded(maybeEncoded: string, ...encodings: Encoding[]): void {\n  decode(maybeEncoded as Encoded.Any);\n  if (encodings.length === 0) return;\n  const encoding = maybeEncoded.split('_')[0];\n  if (isItemOfArray(encoding, encodings)) return;\n  throw new ArgumentError(\n    'Encoded string type',\n    encodings.length > 1 ? `one of ${encodings.join(', ')}` : encodings[0],\n    encoding,\n  );\n}\n\n/**\n * Check if data is encoded in any encoding\n * @param maybeEncoded - Data to check\n * @category utils\n */\nexport function isEncoded(maybeEncoded: string): maybeEncoded is Encoded.Any;\n/**\n * Check if data is encoded in one of provided encodings\n * @param maybeEncoded - Data to check\n * @param encodings - Rest parameters with encodings to check against\n */\nexport function isEncoded<E extends Encoding>(\n  maybeEncoded: string,\n  ...encodings: E[]\n): maybeEncoded is Encoded.Generic<E>;\nexport function isEncoded(maybeEncoded: string, ...encodings: Encoding[]): boolean {\n  try {\n    ensureEncoded(maybeEncoded, ...encodings);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Generate a random salt (positive integer)\n * @returns random salt\n * @category utils\n */\nexport function genSalt(): number {\n  const [random] = new BigUint64Array(nacl.randomBytes(8).buffer);\n  return Number(random % BigInt(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @param value - Value to encode\n * @returns Encoded number\n * @category utils\n * @deprecated This function is out of the sdk scope. Copy implementation from sdk if necessary.\n */\nexport function encodeUnsigned(value: number): Buffer {\n  const binary = Buffer.allocUnsafe(4);\n  binary.writeUInt32BE(value);\n  return binary.subarray(binary.findIndex((i) => i !== 0));\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @param input - Data to hash\n * @returns Hash\n * @category utils\n * @deprecated use \"blakejs\" package directly\n */\nexport function hash(input: string | Uint8Array): Buffer {\n  return Buffer.from(blake2b(input, undefined, 32)); // 256 bits\n}\n\n/**\n * Verify that data was signed by account\n * @param data - Data that was signed\n * @param signature - Signature of data\n * @param address - Address of account to verify against\n * @returns is data was signed by account\n * @category utils\n */\nexport function verifySignature(\n  data: Uint8Array,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return nacl.sign.detached.verify(data, signature, decode(address));\n}\n\nexport function encodeVarUInt(value: number): Buffer {\n  if (value < 0xfd) {\n    return Buffer.from([value]);\n  }\n  if (value <= 0xffff) {\n    return concatBuffers([Buffer.from([0xfd]), Buffer.from(new Uint16Array([value]).buffer)]);\n  }\n  if (value <= 0xffffffff) {\n    return concatBuffers([Buffer.from([0xfe]), Buffer.from(new Uint32Array([value]).buffer)]);\n  }\n  return concatBuffers([\n    Buffer.from([0xff]),\n    Buffer.from(new BigUint64Array([BigInt(value)]).buffer),\n  ]);\n}\n\nconst messagePrefix = Buffer.from('aeternity Signed Message:\\n', 'utf8');\nexport const messagePrefixLength = encodeVarUInt(messagePrefix.length);\n\n/**\n * Hash message\n * @param message - Message to hash\n * @returns Hash of message\n * @category utils\n */\nexport function hashMessage(message: string): Buffer {\n  const msg = Buffer.from(message, 'utf8');\n  return hash(concatBuffers([messagePrefixLength, messagePrefix, encodeVarUInt(msg.length), msg]));\n}\n\n/**\n * Verify that message was signed by address\n * @param message - Message that was signed\n * @param signature - Signature of message\n * @param address - Address to verify against\n * @returns is data was signed by address\n * @category utils\n */\nexport function verifyMessageSignature(\n  message: string,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return verifySignature(hashMessage(message), signature, address);\n}\n","import BigNumber from 'bignumber.js';\nimport { NoSerializerFoundError, TypeError } from './errors.js';\n\n/**\n * Convert string, number, or BigNumber to byte array\n * @param val - value to convert\n * @param big - enables force conversion to BigNumber\n * @returns Buffer\n * @category utils\n * @deprecated use `Buffer.from(<string>)` or `Buffer.from(<number>.toString(16), 'hex')` instead\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function toBytes(val?: null | string | number | BigNumber, big = false): Buffer {\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val == null) return Buffer.from([]);\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = new BigNumber(val);\n    if (!val.isInteger()) throw new TypeError(`Unexpected not integer value: ${val.toFixed()}`);\n    let hexString = val.toString(16);\n    if (hexString.length % 2 === 1) hexString = `0${hexString}`;\n    return Buffer.from(hexString, 'hex');\n  }\n  if (typeof val === 'string') {\n    return Buffer.from(val);\n  }\n  throw new NoSerializerFoundError();\n}\n","import BigNumber from 'bignumber.js';\nimport { mapObject } from '../../utils/other.js';\n\n/**\n * @category transaction builder\n */\nexport const DRY_RUN_ACCOUNT = {\n  pub: 'ak_11111111111111111111111111111111273Yts',\n  amount: 100000000000000000000000000000000000n,\n} as const;\n\n/**\n * @category account generalized\n * @deprecated transaction builder will ensure that gas doesn't exceed the maximum value by itself\n */\nexport const MAX_AUTH_FUN_GAS = 50000;\n/**\n * @category utils\n */\nexport type Int = number | string | BigNumber;\n/**\n * @category AENS\n */\nexport type AensName = `${string}.chain`;\n/**\n * @category transaction builder\n */\nexport const MIN_GAS_PRICE = 1e9; // TODO: don't use number for ae\n/**\n * @category AENS\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67}\n * @deprecated use {@link getMinimumNameFee} instead\n */\nexport const NAME_FEE_MULTIPLIER = 1e14;\n/**\n * The next bid should be at least 5% bigger than the previous one\n * @category AENS\n * @deprecated use {@link computeBidFee} instead\n */\nexport const NAME_FEE_BID_INCREMENT = 0.05;\n/**\n * Approximately 1 day\n * @category AENS\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272}\n * @deprecated use {@link computeAuctionEndBlock} instead\n */\nexport const NAME_BID_TIMEOUT_BLOCKS = 480;\n/**\n * This is the max length for a domain that requires a base fee to be paid\n * @category AENS\n * @deprecated use {@link getMinimumNameFee} instead\n */\nexport const NAME_MAX_LENGTH_FEE = 31;\n/**\n * @category AENS\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290}\n * @see {@link https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times}\n * @deprecated use {@link getMinimumNameFee} instead\n */\nexport const NAME_BID_RANGES = mapObject(\n  {\n    31: 3,\n    30: 5,\n    29: 8,\n    28: 13,\n    27: 21,\n    26: 34,\n    25: 55,\n    24: 89,\n    23: 144,\n    22: 233,\n    21: 377,\n    20: 610,\n    19: 987,\n    18: 1597,\n    17: 2584,\n    16: 4181,\n    15: 6765,\n    14: 10946,\n    13: 17711,\n    12: 28657,\n    11: 46368,\n    10: 75025,\n    9: 121393,\n    8: 196418,\n    7: 317811,\n    6: 514229,\n    5: 832040,\n    4: 1346269,\n    3: 2178309,\n    2: 3524578,\n    1: 5702887,\n  },\n  ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)],\n);\n\n/**\n * @category chain\n */\nexport enum ConsensusProtocolVersion {\n  Ceres = 6,\n}\n\n/**\n * @category contract\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum VmVersion {\n  NoVm = 0,\n  Sophia = 1,\n  SophiaImprovementsMinerva = 3,\n  SophiaImprovementsFortuna = 4,\n  Fate = 5,\n  SophiaImprovementsLima = 6,\n  Fate2 = 7,\n  Fate3 = 8,\n}\n\n/**\n * @category contract\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum AbiVersion {\n  NoAbi = 0,\n  Sophia = 1,\n  Fate = 3,\n}\n\n/**\n * Enum with tag types\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/serializations.md#binary-serialization}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_chain_objects.erl#L39-L97}\n */\n// TODO: implement serialisation for commented-out tags\nexport enum Tag {\n  SignedTx = 11,\n  SpendTx = 12,\n  OracleRegisterTx = 22,\n  OracleQueryTx = 23,\n  /**\n   * @deprecated use `OracleRespondTx` instead\n   */\n  OracleResponseTx = 24,\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  OracleRespondTx = 24,\n  OracleExtendTx = 25,\n  NameClaimTx = 32,\n  NamePreclaimTx = 33,\n  NameUpdateTx = 34,\n  NameRevokeTx = 35,\n  NameTransferTx = 36,\n  ContractCreateTx = 42,\n  ContractCallTx = 43,\n  ChannelCreateTx = 50,\n  ChannelDepositTx = 51,\n  ChannelWithdrawTx = 52,\n  ChannelForceProgressTx = 521,\n  ChannelCloseMutualTx = 53,\n  ChannelCloseSoloTx = 54,\n  ChannelSlashTx = 55,\n  ChannelSettleTx = 56,\n  ChannelOffChainTx = 57,\n  ChannelSnapshotSoloTx = 59,\n  GaAttachTx = 80,\n  GaMetaTx = 81,\n  PayingForTx = 82,\n}\n","import BigNumber from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto.js';\nimport { decode, encode, Encoded, Encoding } from '../../utils/encoder.js';\nimport { toBytes } from '../../utils/bytes.js';\nimport { concatBuffers } from '../../utils/other.js';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants.js';\nimport { ceil } from '../../utils/bignumber.js';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors.js';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract address\n * @category contract\n * @param owner - Address of contract owner\n * @param nonce - Nonce of ContractCreateTx or state channel round when contract was created\n * @returns Contract address\n */\nexport function buildContractId(\n  owner: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(owner), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n// TODO: add `build` prefix the same as others\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]));\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\nconst AENS_SUFFIX = '.chain';\n\nexport function nameToPunycode(maybeName: string): AensName {\n  const [name, suffix, ...other] = maybeName.split('.');\n  if (other.length !== 0) throw new ArgumentError('aens name', 'including only one dot', maybeName);\n  if (suffix !== AENS_SUFFIX.slice(1)) {\n    throw new ArgumentError('aens name', `suffixed with ${AENS_SUFFIX}`, maybeName);\n  }\n  if (/\\p{Emoji_Presentation}/u.test(name)) {\n    throw new ArgumentError('aens name', 'not containing emoji', maybeName);\n  }\n  if (name[2] === '-' && name[3] === '-') {\n    throw new ArgumentError(\n      'aens name',\n      'without \"-\" char in both the third and fourth positions',\n      maybeName,\n    );\n  }\n  if (name[0] === '-') {\n    throw new ArgumentError('aens name', 'starting with no \"-\" char', maybeName);\n  }\n  if (name.at(-1) === '-') {\n    throw new ArgumentError('aens name', 'ending with no \"-\" char', maybeName);\n  }\n  let punycode;\n  try {\n    const u = new URL(`http://${name}.${suffix}`);\n    if (u.username + u.password + u.port + u.search + u.hash !== '' || u.pathname !== '/') {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    punycode = u.host;\n  } catch (error) {\n    if (error instanceof TypeError && error.message.includes('Invalid URL')) {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    throw error;\n  }\n  if (!/^[a-z0-9.-]+$/i.test(punycode)) {\n    throw new ArgumentError('aens name', 'without illegal chars', maybeName);\n  }\n  if (punycode.length > 63 + AENS_SUFFIX.length) {\n    throw new ArgumentError('aens name', 'not too long', maybeName);\n  }\n  return punycode as AensName;\n}\n\n// TODO: replace `produce` with `build` the same as others\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(nameToPunycode(name)), Encoding.Name);\n}\n\n// TODO: add `build` the same as others\n/**\n * Generate the commitment hash by hashing the salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random number\n * @returns Commitment hash\n */\nexport function commitmentHash(name: AensName, salt: number = genSalt()): Encoded.Commitment {\n  return encode(\n    hash(\n      concatBuffers([\n        Buffer.from(nameToPunycode(name)),\n        Buffer.from(salt.toString(16).padStart(64, '0'), 'hex'),\n      ]),\n    ),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert bytes to int\n * @category utils\n * @param buffer - Value\n * @returns Buffer Buffer from number(BigEndian)\n * @deprecated use `BigInt('0x' + <buffer>.toString('hex')).toString()` instead\n */\nexport function readInt(buffer: Uint8Array = Buffer.from([])): string {\n  return BigInt('0x' + Buffer.from(buffer).toString('hex')).toString();\n}\n\n/**\n * Ensure that name is valid AENS name, would throw an exception otherwise\n * @category AENS\n * @param maybeName - AENS name\n */\nexport function ensureName(maybeName: string): asserts maybeName is AensName {\n  nameToPunycode(maybeName);\n}\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param maybeName - AENS name\n */\nexport function isName(maybeName: string): maybeName is AensName {\n  try {\n    ensureName(maybeName);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<(typeof encodingToPointerKey)[number][0]>,\n): (typeof encodingToPointerKey)[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = nameToPunycode(name).length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  {\n    startFee,\n    increment = NAME_FEE_BID_INCREMENT,\n  }: { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0))\n    throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT)\n    throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name)).times(\n      new BigNumber(NAME_FEE_BID_INCREMENT).plus(1),\n    ),\n  );\n}\n\n/**\n * Compute approximate auction end height.\n *\n * From Ceres, each time a new (successful!) bid is made for a name the auction is extended for up\n * to 120 key-blocks/generations. I.e. after the bid there is always at least 120 generations to\n * make a higher bid.\n *\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/protocol/blob/cfb19ce/AENS.md#from-ceres-protocol-upgrade}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = nameToPunycode(name).length - AENS_SUFFIX.length;\n  const h =\n    (length <= 4 ? 2400 : null) ?? (length <= 8 ? 960 : null) ?? (length <= 12 ? 480 : null) ?? 0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return nameToPunycode(name).length < 13 + AENS_SUFFIX.length;\n}\n","import { AE_AMOUNT_FORMATS, formatAmount } from './utils/amount-formatter.js';\nimport { isAccountNotFoundError, pause } from './utils/other.js';\nimport { unwrapProxy } from './utils/wrap-proxy.js';\nimport { isName, produceNameId } from './tx/builder/helpers.js';\nimport { AensName, DRY_RUN_ACCOUNT } from './tx/builder/constants.js';\nimport {\n  AensPointerContextError,\n  DryRunError,\n  InvalidAensNameError,\n  TxTimedOutError,\n  TxNotInChainError,\n  InternalError,\n} from './utils/errors.js';\nimport Node from './Node.js';\nimport { DryRunResult, DryRunResults, SignedTx } from './apis/node/index.js';\nimport { decode, encode, Encoded, Encoding } from './utils/encoder.js';\n\nasync function getEventInterval(\n  type: 'key-block' | 'micro-block',\n  {\n    _expectedMineRate,\n    _microBlockCycle,\n    onNode,\n  }: { _expectedMineRate?: number; _microBlockCycle?: number; onNode: Node },\n): Promise<number> {\n  if (_expectedMineRate != null && type === 'key-block') return _expectedMineRate;\n  if (_microBlockCycle != null && type === 'micro-block') return _microBlockCycle;\n\n  const networkId = await onNode.getNetworkId();\n  if (networkId === 'ae_dev') return 0;\n  if (!['ae_mainnet', 'ae_uat'].includes(networkId) && (await onNode._isHyperchain())) return 3000;\n\n  if (type === 'key-block') return 180000;\n  else return 3000;\n}\n\n/**\n * @category chain\n * @param type - Type\n * @param options - Options\n */\nexport async function _getPollInterval(\n  type: Parameters<typeof getEventInterval>[0],\n  options: Parameters<typeof getEventInterval>[1],\n): Promise<number> {\n  return Math.floor((await getEventInterval(type, options)) / 3);\n}\n\nconst heightCache: WeakMap<Node, { time: number; height: number }> = new WeakMap();\n\n/**\n * Obtain current height of the chain\n * @category chain\n * @param options - Options\n * @param options.cached - Get height from the cache. The lag behind the actual height shouldn't\n * be more than 1 block. Use if needed to reduce requests count, and approximate value can be used.\n * For example, for timeout check in transaction status polling.\n * @returns Current chain height\n */\nexport async function getHeight({\n  cached = false,\n  ...options\n}: {\n  onNode: Node;\n  cached?: boolean;\n} & Parameters<typeof _getPollInterval>[1]): Promise<number> {\n  const onNode = unwrapProxy(options.onNode);\n  if (cached) {\n    const cache = heightCache.get(onNode);\n    if (cache != null && cache.time > Date.now() - (await _getPollInterval('key-block', options))) {\n      return cache.height;\n    }\n  }\n  const { height } = await onNode.getCurrentKeyBlockHeight();\n  heightCache.set(onNode, { height, time: Date.now() });\n  return height;\n}\n\n/**\n * Return transaction details if it is mined, fail otherwise.\n * If the transaction has ttl specified then would wait till it leaves the mempool.\n * Otherwise would fail if a specified amount of blocks were mined.\n * @category chain\n * @param th - The hash of transaction to poll\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.blocks - Number of blocks mined after which to fail if transaction ttl is not set\n * @param options.onNode - Node to use\n * @returns The transaction as it was mined\n */\nexport async function poll(\n  th: Encoded.TxHash,\n  {\n    blocks = 5,\n    interval,\n    ...options\n  }: { blocks?: number; interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): ReturnType<Node['getTransactionByHash']> {\n  interval ??= await _getPollInterval('micro-block', options);\n  let max;\n  do {\n    const tx = await options.onNode.getTransactionByHash(th);\n    if (tx.blockHeight !== -1) return tx;\n    if (max == null) {\n      max = tx.tx.ttl !== 0 ? -1 : (await getHeight({ ...options, cached: true })) + blocks;\n    }\n    await pause(interval);\n  } while (max === -1 ? true : (await getHeight({ ...options, cached: true })) < max);\n  throw new TxTimedOutError(blocks, th);\n}\n\n/**\n * Wait for the chain to reach a specific height\n * @category chain\n * @param height - Height to wait for\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.onNode - Node to use\n * @returns Current chain height\n */\nexport async function awaitHeight(\n  height: number,\n  {\n    interval,\n    ...options\n  }: { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<number> {\n  interval ??= Math.min(await _getPollInterval('key-block', options), 5000);\n  let currentHeight;\n  do {\n    if (currentHeight != null) await pause(interval);\n    currentHeight = await getHeight(options);\n  } while (currentHeight < height);\n  return currentHeight;\n}\n\n/**\n * Wait for transaction confirmation\n * @category chain\n * @param txHash - Transaction hash\n * @param options - Options\n * @param options.confirm - Number of micro blocks to wait for transaction confirmation\n * @param options.onNode - Node to use\n * @returns Current Height\n */\nexport async function waitForTxConfirm(\n  txHash: Encoded.TxHash,\n  {\n    confirm = 3,\n    onNode,\n    ...options\n  }: { confirm?: number; onNode: Node } & Parameters<typeof awaitHeight>[1],\n): Promise<number> {\n  const { blockHeight } = await onNode.getTransactionByHash(txHash);\n  const height = await awaitHeight(blockHeight + confirm, { onNode, ...options });\n  const { blockHeight: newBlockHeight } = await onNode.getTransactionByHash(txHash);\n  switch (newBlockHeight) {\n    case -1:\n      throw new TxNotInChainError(txHash);\n    case blockHeight:\n      return height;\n    default:\n      return waitForTxConfirm(txHash, { onNode, confirm, ...options });\n  }\n}\n\n/**\n * Get account by account public key\n * @category chain\n * @param address - Account address (public key)\n * @param options - Options\n * @param options.height - Get account on specific block by block height\n * @param options.hash - Get account on specific block by micro block hash or key block hash\n * @param options.onNode - Node to use\n */\nexport async function getAccount(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  {\n    height,\n    hash,\n    onNode,\n  }: { height?: number; hash?: Encoded.KeyBlockHash | Encoded.MicroBlockHash; onNode: Node },\n): ReturnType<Node['getAccountByPubkey']> {\n  if (height != null) return onNode.getAccountByPubkeyAndHeight(address, height);\n  if (hash != null) return onNode.getAccountByPubkeyAndHash(address, hash);\n  return onNode.getAccountByPubkey(address);\n}\n\n/**\n * Request the balance of specified account\n * @category chain\n * @param address - The public account address to obtain the balance for\n * @param options - Options\n * @param options.format\n * @param options.height - The chain height at which to obtain the balance for\n * (default: top of chain)\n * @param options.hash - The block hash on which to obtain the balance for (default: top of chain)\n */\nexport async function getBalance(\n  address: Encoded.AccountAddress | Encoded.ContractAddress | Encoded.OracleAddress,\n  {\n    /**\n     * @deprecated no replacement implemented yet\n     */\n    format = AE_AMOUNT_FORMATS.AETTOS,\n    ...options\n  }: { format?: AE_AMOUNT_FORMATS } & Parameters<typeof getAccount>[1],\n): Promise<string> {\n  const addr = address.startsWith('ok_')\n    ? encode(decode(address), Encoding.AccountAddress)\n    : (address as Encoded.AccountAddress | Encoded.ContractAddress);\n\n  const { balance } = await getAccount(addr, options).catch((error) => {\n    if (!isAccountNotFoundError(error)) throw error;\n    return { balance: 0n };\n  });\n\n  return formatAmount(balance, { targetDenomination: format });\n}\n\n/**\n * Obtain current generation\n * @category chain\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Current Generation\n * @deprecated Use {@link Node.getCurrentGeneration} instead\n */\nexport async function getCurrentGeneration({\n  onNode,\n}: {\n  onNode: Node;\n}): ReturnType<Node['getCurrentGeneration']> {\n  return onNode.getCurrentGeneration();\n}\n\n/**\n * Get generation by hash or height\n * @category chain\n * @param hashOrHeight - Generation hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Generation\n * @deprecated Use {@link Node.getGenerationByHash} or {@link Node.getGenerationByHeight} instead\n */\nexport async function getGeneration(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getGenerationByHash']> {\n  if (typeof hashOrHeight === 'number') return onNode.getGenerationByHeight(hashOrHeight);\n  return onNode.getGenerationByHash(hashOrHeight);\n}\n\n/**\n * Get micro block transactions\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transactions\n * @deprecated Use {@link Node.getMicroBlockTransactionsByHash} instead\n */\nexport async function getMicroBlockTransactions(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<SignedTx[]> {\n  return (await onNode.getMicroBlockTransactionsByHash(hash)).transactions;\n}\n\n/**\n * Get key block\n * @category chain\n * @param hashOrHeight - Key block hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Key Block\n * @deprecated Use {@link Node.getKeyBlockByHeight} or {@link Node.getKeyBlockByHash} instead\n */\nexport async function getKeyBlock(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getKeyBlockByHash']> {\n  if (typeof hashOrHeight === 'number') return onNode.getKeyBlockByHeight(hashOrHeight);\n  return onNode.getKeyBlockByHash(hashOrHeight);\n}\n\n/**\n * Get micro block header\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Micro block header\n * @deprecated Use {@link Node.getMicroBlockHeaderByHash} instead\n */\nexport async function getMicroBlockHeader(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getMicroBlockHeaderByHash']> {\n  return onNode.getMicroBlockHeaderByHash(hash);\n}\n\ninterface TxDryRunArguments {\n  tx: Encoded.Transaction;\n  accountAddress: Encoded.AccountAddress;\n  top?: number | Encoded.KeyBlockHash | Encoded.MicroBlockHash;\n  txEvents?: any;\n  resolve: Function;\n  reject: Function;\n}\nconst txDryRunRequests: Map<string, TxDryRunArguments[] & { timeout?: NodeJS.Timeout }> = new Map();\n\nasync function txDryRunHandler(key: string, onNode: Node): Promise<void> {\n  const rs = txDryRunRequests.get(key);\n  txDryRunRequests.delete(key);\n  if (rs == null) throw new InternalError(\"Can't get dry-run request\");\n\n  let dryRunRes;\n  try {\n    const top =\n      typeof rs[0].top === 'number'\n        ? (await onNode.getKeyBlockByHeight(rs[0].top)).hash\n        : rs[0].top;\n    dryRunRes = await onNode.protectedDryRunTxs({\n      top,\n      txEvents: rs[0].txEvents,\n      txs: rs.map((req) => ({ tx: req.tx })),\n      accounts: Array.from(new Set(rs.map((req) => req.accountAddress))).map((pubKey) => ({\n        pubKey,\n        amount: DRY_RUN_ACCOUNT.amount,\n      })),\n    });\n  } catch (error) {\n    rs.forEach(({ reject }) => reject(error));\n    return;\n  }\n\n  const { results, txEvents } = dryRunRes;\n  results.forEach(({ result, reason, ...resultPayload }, idx) => {\n    const { resolve, reject, tx, accountAddress } = rs[idx];\n    if (result === 'ok') resolve({ ...resultPayload, txEvents });\n    else reject(Object.assign(new DryRunError(reason as string), { tx, accountAddress }));\n  });\n}\n\n/**\n * Transaction dry-run\n * @category chain\n * @param tx - transaction to execute\n * @param accountAddress - address that will be used to execute transaction\n * @param options - Options\n * @param options.top - hash of block on which to make dry-run\n * @param options.txEvents - collect and return on-chain tx events that would result from the call\n * @param options.combine - Enables combining of similar requests to a single dry-run call\n * @param options.onNode - Node to use\n */\nexport async function txDryRun(\n  tx: Encoded.Transaction,\n  accountAddress: Encoded.AccountAddress,\n  {\n    top,\n    txEvents,\n    combine,\n    onNode,\n  }: { top?: TxDryRunArguments['top']; txEvents?: boolean; combine?: boolean; onNode: Node },\n): Promise<{ txEvents?: DryRunResults['txEvents'] } & DryRunResult> {\n  const key = combine === true ? [top, txEvents].join() : 'immediate';\n  const requests = txDryRunRequests.get(key) ?? [];\n  txDryRunRequests.set(key, requests);\n  return new Promise((resolve, reject) => {\n    requests.push({\n      tx,\n      accountAddress,\n      top,\n      txEvents,\n      resolve,\n      reject,\n    });\n    if (combine !== true) {\n      void txDryRunHandler(key, onNode);\n      return;\n    }\n    requests.timeout ??= setTimeout(() => {\n      void txDryRunHandler(key, onNode);\n    });\n  });\n}\n\n/**\n * Get contract byte code\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n * @deprecated Use {@link Node.getContractCode} instead\n */\nexport async function getContractByteCode(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getContractCode']> {\n  return onNode.getContractCode(contractId);\n}\n\n/**\n * Get contract entry\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n * @deprecated Use {@link Node.getContract} instead\n */\nexport async function getContract(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getContract']> {\n  return onNode.getContract(contractId);\n}\n\n/**\n * Get name entry\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onNode - Node to use\n * @deprecated Use {@link Node.getNameEntryByName} or {@link Name.getState} instead\n */\nexport async function getName(\n  name: AensName,\n  { onNode }: { onNode: Node },\n): ReturnType<Node['getNameEntryByName']> {\n  return onNode.getNameEntryByName(name);\n}\n\n/**\n * Resolve AENS name and return name hash\n * @category AENS\n * @param nameOrId - AENS name or address\n * @param key - in AENS pointers record\n * @param options - Options\n * @param options.verify - To ensure that name exist and have a corresponding pointer\n * // TODO: avoid that to don't trust to current api gateway\n * @param options.resolveByNode - Enables pointer resolving using node\n * @param options.onNode - Node to use\n * @returns Address or AENS name hash\n */\nexport async function resolveName<Type extends Encoding.AccountAddress | Encoding.ContractAddress>(\n  nameOrId: AensName | Encoded.Generic<Type>,\n  key: string,\n  {\n    verify = true,\n    resolveByNode = false,\n    onNode,\n  }: { verify?: boolean; resolveByNode?: boolean; onNode: Node },\n): Promise<Encoded.Generic<Type | Encoding.Name>> {\n  if (isName(nameOrId)) {\n    if (verify || resolveByNode) {\n      const name = await onNode.getNameEntryByName(nameOrId);\n      const pointer = name.pointers.find((p) => p.key === key);\n      if (pointer == null) throw new AensPointerContextError(nameOrId, key);\n      if (resolveByNode) return pointer.id as Encoded.Generic<Type>;\n    }\n    return produceNameId(nameOrId);\n  }\n  try {\n    decode(nameOrId);\n    return nameOrId;\n  } catch (error) {\n    throw new InvalidAensNameError(`Invalid name or address: ${nameOrId}`);\n  }\n}\n","import { ConsensusProtocolVersion, VmVersion, AbiVersion } from '../constants.js';\nimport Node from '../../../Node.js';\n\n/*\n * First abi/vm by default\n * @see {@link https://github.com/aeternity/protocol/blob/71cf111/contracts/contract_vms.md#virtual-machines-on-the-æternity-blockchain}\n */\nexport const ProtocolToVmAbi = {\n  [ConsensusProtocolVersion.Ceres]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate3],\n      abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [],\n      abiVersion: [AbiVersion.Fate],\n    },\n    'oracle-call': {\n      vmVersion: [],\n      abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n} as const;\n\nexport interface CtVersion {\n  vmVersion: VmVersion;\n  abiVersion: AbiVersion;\n}\n\nexport function getProtocolDetails(\n  protocolVersion: ConsensusProtocolVersion,\n  type: 'contract-create' | 'contract-call' | 'oracle-call',\n): CtVersion {\n  const protocol = ProtocolToVmAbi[protocolVersion][type];\n  return {\n    vmVersion: protocol.vmVersion[0] ?? VmVersion.Fate2,\n    abiVersion: protocol.abiVersion[0],\n  };\n}\n\nexport default {\n  serialize(\n    value: CtVersion | undefined,\n    params: {},\n    {\n      consensusProtocolVersion = ConsensusProtocolVersion.Ceres,\n    }: { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    value ??= getProtocolDetails(consensusProtocolVersion, 'contract-create');\n\n    return Buffer.from([value.vmVersion, 0, value.abiVersion]);\n  },\n\n  async prepare(\n    value: CtVersion | undefined,\n    params: {},\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<CtVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        'contract-create',\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): CtVersion {\n    const [vm, , abi] = buffer;\n    return { vmVersion: +vm, abiVersion: +abi };\n  },\n};\n","import { Tag, ConsensusProtocolVersion, AbiVersion } from '../constants.js';\nimport { getProtocolDetails } from './ct-version.js';\nimport Node from '../../../Node.js';\n\nexport default {\n  _getProtocolDetails(c: ConsensusProtocolVersion, tag: Tag): AbiVersion {\n    const kind =\n      Tag.ContractCallTx === tag || Tag.GaMetaTx === tag ? 'contract-call' : 'oracle-call';\n    return getProtocolDetails(c, kind).abiVersion;\n  },\n\n  serialize(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    {\n      consensusProtocolVersion = ConsensusProtocolVersion.Ceres,\n    }: { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    const result = value ?? this._getProtocolDetails(consensusProtocolVersion, tag);\n\n    return Buffer.from([result]);\n  },\n\n  async prepare(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<AbiVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return this._getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        tag,\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): AbiVersion {\n    return buffer[0];\n  },\n};\n","import { ArgumentError, PrefixNotFoundError, TagNotFoundError } from '../../../utils/errors.js';\nimport { toBytes } from '../../../utils/bytes.js';\nimport { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { isItemOfArray } from '../../../utils/other.js';\n\n/**\n * Map of prefix to ID tag constant\n * @see {@link https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_id.erl#L97-L102}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L163-L168}\n */\nexport const idTagToEncoding = [\n  Encoding.AccountAddress,\n  Encoding.Name,\n  Encoding.Commitment,\n  Encoding.OracleAddress,\n  Encoding.ContractAddress,\n  Encoding.Channel,\n] as const;\n\nexport type AddressEncodings = (typeof idTagToEncoding)[number];\n\nexport default function genAddressField<Encoding extends AddressEncodings>(\n  ...encodings: Encoding[]\n): {\n  serialize: (value: Encoded.Generic<Encoding>) => Buffer;\n  deserialize: (value: Buffer) => Encoded.Generic<Encoding>;\n} {\n  return {\n    /**\n     * Utility function to create and _id type\n     * @param hashId - Encoded hash\n     * @returns Buffer Buffer with ID tag and decoded HASh\n     */\n    serialize(hashId) {\n      const enc = hashId.slice(0, 2);\n      if (!isItemOfArray(enc, idTagToEncoding)) throw new TagNotFoundError(enc);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      const idTag = idTagToEncoding.indexOf(enc) + 1;\n      return Buffer.from([...toBytes(idTag), ...decode(hashId)]);\n    },\n\n    /**\n     * Utility function to read and _id type\n     * @param buf - Data\n     * @returns Encoded hash string with prefix\n     */\n    deserialize(buf) {\n      const idTag = Buffer.from(buf).readUIntBE(0, 1);\n      const enc = idTagToEncoding[idTag - 1];\n      if (enc == null) throw new PrefixNotFoundError(idTag);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      return encode(buf.subarray(1), enc) as Encoded.Generic<Encoding>;\n    },\n  };\n}\n","export default function genArrayField<Input, Output, Binary>(itemHandler: {\n  serialize: (value: Input, params: unknown) => Binary;\n  deserialize: (value: Binary, params: unknown) => Output;\n}): {\n  serialize: (value: readonly Input[], params: unknown) => Binary[];\n  deserialize: (value: Binary[], params: unknown) => Output[];\n} {\n  return {\n    serialize(items, params) {\n      return items.map((item) => itemHandler.serialize(item, params));\n    },\n\n    deserialize(buffers, params) {\n      return buffers.map((buffer) => itemHandler.deserialize(buffer, params));\n    },\n  };\n}\n","import { readInt } from '../helpers.js';\nimport { Int } from '../constants.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { toBytes } from '../../../utils/bytes.js';\n\nexport default {\n  serialize(value: Int): Buffer {\n    if (Number(value) < 0) throw new ArgumentError('value', 'greater or equal to 0', value);\n    return toBytes(value, true);\n  },\n\n  deserialize(value: Buffer): string {\n    return readInt(value);\n  },\n};\n","import uInt from './u-int.js';\nimport { Int } from '../constants.js';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter.js';\n\nexport default {\n  ...uInt,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  serializeAettos(value: string | undefined, params: {}, options: {}): string {\n    return value ?? '0';\n  },\n\n  serialize(\n    value: Int | undefined,\n    params: {},\n    { denomination = AE_AMOUNT_FORMATS.AETTOS, ...options }: { denomination?: AE_AMOUNT_FORMATS },\n  ): Buffer {\n    return uInt.serialize(\n      this.serializeAettos(\n        value != null ? formatAmount(value, { denomination }) : value,\n        params,\n        options,\n      ),\n    );\n  },\n};\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { ArgumentError } from '../../../utils/errors.js';\n\nexport default function genEncodedField<E extends Encoding, Optional extends boolean = false>(\n  encoding: E,\n  optional?: Optional,\n): {\n  serialize: Optional extends true\n    ? (value?: Encoded.Generic<E>) => Buffer\n    : (value: Encoded.Generic<E>) => Buffer;\n  deserialize: (value: Buffer) => Encoded.Generic<E>;\n} {\n  return {\n    serialize(encodedData?: Encoded.Generic<E>) {\n      if (encodedData == null) {\n        if (optional === true) return Buffer.from([]);\n        throw new ArgumentError('Encoded data', 'provided', encodedData);\n      }\n      return decode(encodedData);\n    },\n\n    deserialize(buffer) {\n      return encode(buffer, encoding);\n    },\n  };\n}\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { EntryTag } from '../entry/constants.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\nexport default function genEntryField<T extends EntryTag = EntryTag>(\n  tag?: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { packEntry }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(packEntry({ ...txParams, ...(tag != null && { tag }) }));\n    },\n\n    deserialize(buf, { unpackEntry }) {\n      return unpackEntry(encode(buf, Encoding.Bytearray), tag);\n    },\n  };\n}\n","import { ArgumentError } from '../../../utils/errors.js';\nimport { isItemOfArray } from '../../../utils/other.js';\n\nexport default function genEnumerationField<Enum extends { [key: string]: number | string }>(\n  enm: Enum,\n): {\n  serialize: (value: Enum[keyof Enum]) => Buffer;\n  deserialize: (value: Buffer) => Enum[keyof Enum];\n} {\n  const values = Object.values(enm).filter((v) => typeof v === 'number');\n  return {\n    serialize(value) {\n      if (typeof value !== 'number') throw new ArgumentError('value', 'to be a number', value);\n      if (value > 0xff) throw new ArgumentError('value', 'to be less than 256', value);\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return Buffer.from([value]);\n    },\n\n    deserialize(buffer) {\n      if (buffer.length !== 1) {\n        throw new ArgumentError('buffer', 'to have single element', buffer.length);\n      }\n      const value = buffer[0];\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return value as Enum[keyof Enum];\n    },\n  };\n}\n","import BigNumber from 'bignumber.js';\nimport coinAmount from './coin-amount.js';\nimport { ArgumentError, IllegalArgumentError } from '../../../utils/errors.js';\nimport { Int, MIN_GAS_PRICE } from '../constants.js';\nimport Node from '../../../Node.js';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter.js';\n\nconst gasPriceCache: WeakMap<Node, { time: number; gasPrice: bigint }> = new WeakMap();\n\nexport async function getCachedIncreasedGasPrice(node: Node): Promise<bigint> {\n  const cache = gasPriceCache.get(node);\n  if (cache != null && cache.time > Date.now() - 20 * 1000) {\n    return cache.gasPrice;\n  }\n\n  const { minGasPrice, utilization } = (await node.getRecentGasPrices())[0];\n  let gasPrice =\n    utilization < 70\n      ? 0n\n      : BigInt(new BigNumber(minGasPrice.toString()).times(1.01).integerValue().toFixed());\n\n  const maxSafeGasPrice = BigInt(MIN_GAS_PRICE) * 100000n; // max microblock fee is 600ae or 35usd\n  if (gasPrice > maxSafeGasPrice) {\n    console.warn(\n      `Estimated gas price ${gasPrice} exceeds the maximum safe value for unknown reason.` +\n        ` It will be limited to ${maxSafeGasPrice}.` +\n        ' To overcome this restriction provide `gasPrice`/`fee` in options.',\n    );\n    gasPrice = maxSafeGasPrice;\n  }\n\n  gasPriceCache.set(node, { gasPrice, time: Date.now() });\n  return gasPrice;\n}\n\n// TODO: use withFormatting after using a single type for coins representation\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    {\n      onNode,\n      denomination,\n    }: {\n      onNode?: Node;\n      /**\n       * @deprecated no replacement implemented yet\n       */\n      denomination?: AE_AMOUNT_FORMATS;\n    },\n  ): Promise<Int | undefined> {\n    if (value != null) return value;\n    if (onNode == null) {\n      throw new ArgumentError('onNode', 'provided (or provide `gasPrice` instead)', onNode);\n    }\n    const gasPrice = await getCachedIncreasedGasPrice(onNode);\n    if (gasPrice === 0n) return undefined;\n    return formatAmount(gasPrice, { targetDenomination: denomination });\n  },\n\n  serializeAettos(value: string | undefined = MIN_GAS_PRICE.toString()): string {\n    if (+value < MIN_GAS_PRICE) {\n      throw new IllegalArgumentError(\n        `Gas price ${value.toString()} must be bigger than ${MIN_GAS_PRICE}`,\n      );\n    }\n    return value;\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { ArgumentError, IllegalArgumentError } from '../../../utils/errors.js';\nimport { Int, MIN_GAS_PRICE, Tag } from '../constants.js';\nimport uInt from './u-int.js';\nimport coinAmount from './coin-amount.js';\nimport { getCachedIncreasedGasPrice } from './gas-price.js';\nimport { isKeyOfObject } from '../../../utils/other.js';\nimport { decode, Encoded } from '../../../utils/encoder.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\nimport Node from '../../../Node.js';\n\nconst BASE_GAS = 15000;\nconst GAS_PER_BYTE = 20;\nconst KEY_BLOCK_INTERVAL = 3;\n\n/**\n * Calculate the base gas\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @returns The base gas\n * @example\n * ```js\n * TX_BASE_GAS(Tag.ChannelForceProgressTx) => 30 * 15000\n * ```\n */\nconst TX_BASE_GAS = (txType: Tag): number => {\n  const feeFactors = {\n    [Tag.ChannelForceProgressTx]: 30,\n    [Tag.ChannelOffChainTx]: 0,\n    [Tag.ContractCreateTx]: 5,\n    [Tag.ContractCallTx]: 12,\n    [Tag.GaAttachTx]: 5,\n    [Tag.GaMetaTx]: 5,\n    [Tag.PayingForTx]: 1 / 5,\n  } as const;\n  const factor = feeFactors[txType as keyof typeof feeFactors] ?? 1;\n  return factor * BASE_GAS;\n};\n\n/**\n * Calculate gas for other types of transactions\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @param txSize - The transaction size\n * @returns parameters - The transaction parameters\n * @returns parameters.relativeTtl - The relative ttl\n * @returns parameters.innerTxSize - The size of the inner transaction\n * @returns The other gas\n * @example\n * ```js\n * TX_OTHER_GAS(Tag.OracleRespondTx, 10, { relativeTtl: 12, innerTxSize: 0 })\n *  => 10 * 20 + Math.ceil(32000 * 12 / Math.floor(60 * 24 * 365 / 3))\n * ```\n */\nconst TX_OTHER_GAS = (\n  txType: Tag,\n  txSize: number,\n  { relativeTtl, innerTxSize }: { relativeTtl: number; innerTxSize: number },\n): number => {\n  switch (txType) {\n    case Tag.OracleRegisterTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleQueryTx:\n    case Tag.OracleRespondTx:\n      return (\n        txSize * GAS_PER_BYTE +\n        Math.ceil((32000 * relativeTtl) / Math.floor((60 * 24 * 365) / KEY_BLOCK_INTERVAL))\n      );\n    case Tag.GaMetaTx:\n    case Tag.PayingForTx:\n      return (txSize - innerTxSize) * GAS_PER_BYTE;\n    default:\n      return txSize * GAS_PER_BYTE;\n  }\n};\n\nfunction getOracleRelativeTtl(params: any): number {\n  const ttlKeys = {\n    [Tag.OracleRegisterTx]: 'oracleTtlValue',\n    [Tag.OracleExtendTx]: 'oracleTtlValue',\n    [Tag.OracleQueryTx]: 'queryTtlValue',\n    [Tag.OracleRespondTx]: 'responseTtlValue',\n  } as const;\n\n  const { tag } = params;\n  if (!isKeyOfObject(tag, ttlKeys)) return 1;\n  return params[ttlKeys[tag]];\n}\n\n/**\n * Calculate gas based on tx type and params\n */\nexport function buildGas(\n  builtTx: Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  const { length } = decode(builtTx);\n  const txObject = unpackTx(builtTx);\n\n  let innerTxSize = 0;\n  if (txObject.tag === Tag.GaMetaTx || txObject.tag === Tag.PayingForTx) {\n    innerTxSize = decode(buildTx(txObject.tx.encodedTx)).length;\n  }\n\n  return (\n    TX_BASE_GAS(txObject.tag) +\n    TX_OTHER_GAS(txObject.tag, length, {\n      relativeTtl: getOracleRelativeTtl(txObject),\n      innerTxSize,\n    })\n  );\n}\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param rebuildTx - Callback to get built transaction with specific fee\n */\nfunction calculateMinFee(\n  rebuildTx: (value: BigNumber) => Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  let fee = new BigNumber(0);\n  let previousFee;\n  do {\n    previousFee = fee;\n    fee = new BigNumber(MIN_GAS_PRICE).times(buildGas(rebuildTx(fee), unpackTx, buildTx));\n  } while (!fee.eq(previousFee));\n  return fee;\n}\n\n// TODO: Get rid of this workaround. Transaction builder can't accept/return gas price instead of\n// fee because it may get a decimal gas price. So, it should accept the optional `gasPrice` even\n// if it is not a contract-related transaction. And use this `gasPrice` to calculate `fee`.\nconst gasPricePrefix = '_gas-price:';\n\nexport interface SerializeAettosParams {\n  rebuildTx: (params: any) => Encoded.Transaction;\n  unpackTx: typeof unpackTxType;\n  buildTx: typeof buildTxType;\n  _computingMinFee?: BigNumber;\n}\n\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    { onNode }: { onNode?: Node },\n  ): Promise<Int | undefined> {\n    if (value != null) return value;\n    if (onNode == null) {\n      throw new ArgumentError('onNode', 'provided (or provide `fee` instead)', onNode);\n    }\n    const gasPrice = await getCachedIncreasedGasPrice(onNode);\n    if (gasPrice === 0n) return undefined;\n    return gasPricePrefix + gasPrice;\n  },\n\n  serializeAettos(\n    _value: string | undefined,\n    { rebuildTx, unpackTx, buildTx, _computingMinFee }: SerializeAettosParams,\n    { _canIncreaseFee }: { _canIncreaseFee?: boolean },\n  ): string {\n    if (_computingMinFee != null) return _computingMinFee.toFixed();\n    const minFee = calculateMinFee(\n      (fee) => rebuildTx({ _computingMinFee: fee }),\n      unpackTx,\n      buildTx,\n    );\n    const value =\n      _value?.startsWith(gasPricePrefix) === true\n        ? minFee.dividedBy(MIN_GAS_PRICE).times(_value.replace(gasPricePrefix, ''))\n        : new BigNumber(_value ?? minFee);\n    if (minFee.gt(value)) {\n      if (_canIncreaseFee === true) return minFee.toFixed();\n      throw new IllegalArgumentError(`Fee ${value.toString()} must be bigger than ${minFee}`);\n    }\n    return value.toFixed();\n  },\n\n  serialize(\n    value: Parameters<typeof coinAmount.serialize>[0],\n    params: Parameters<typeof coinAmount.serialize>[1] & SerializeAettosParams,\n    options: { _canIncreaseFee?: boolean } & Parameters<typeof coinAmount.serialize>[2],\n  ): Buffer {\n    if (typeof value === 'string' && value.startsWith(gasPricePrefix)) {\n      return uInt.serialize(this.serializeAettos(value, params, options));\n    }\n    return coinAmount.serialize.call(this, value, params, options);\n  },\n};\n","import uInt from './u-int.js';\n\nexport default {\n  serialize(value: number): Buffer {\n    return uInt.serialize(value);\n  },\n\n  deserialize(value: Buffer): number {\n    return +uInt.deserialize(value);\n  },\n};\n","import { IllegalArgumentError } from '../../../utils/errors.js';\nimport { Tag, MAX_AUTH_FUN_GAS } from '../constants.js';\nimport shortUInt from './short-u-int.js';\nimport { buildGas } from './fee.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\n\nfunction calculateGasLimitMax(\n  gasMax: number,\n  rebuildTx: (value: number) => any,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  return gasMax - +buildGas(rebuildTx(gasMax), unpackTx, buildTx);\n}\n\nexport default {\n  ...shortUInt,\n\n  serialize(\n    _value: number | undefined,\n    {\n      tag,\n      rebuildTx,\n      unpackTx,\n      buildTx,\n      _computingGasLimit,\n    }: {\n      tag: Tag;\n      rebuildTx: (params: any) => any;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingGasLimit?: number;\n    },\n    { gasMax = 6e6 }: { gasMax?: number },\n  ): Buffer {\n    if (_computingGasLimit != null) return shortUInt.serialize(_computingGasLimit);\n\n    const gasLimitMax =\n      tag === Tag.GaMetaTx\n        ? MAX_AUTH_FUN_GAS\n        : calculateGasLimitMax(\n            gasMax,\n            (gasLimit) => rebuildTx({ _computingGasLimit: gasLimit, _canIncreaseFee: true }),\n            unpackTx,\n            buildTx,\n          );\n    const value = _value ?? gasLimitMax;\n    if (value > gasLimitMax) {\n      throw new IllegalArgumentError(`Gas limit ${value} must be less or equal to ${gasLimitMax}`);\n    }\n    return shortUInt.serialize(value);\n  },\n};\n","export default {\n  serialize(value: string): Buffer {\n    return Buffer.from(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return value.toString();\n  },\n};\n","import field from './field.js';\nimport { AensName } from '../constants.js';\n\nexport default {\n  /**\n   * @param value - AENS name\n   */\n  serialize(value: AensName): Buffer {\n    return field.serialize(value);\n  },\n\n  /**\n   * @param value - AENS name\n   */\n  deserialize(value: Buffer): AensName {\n    return field.deserialize(value) as AensName;\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers.js';\nimport { InsufficientNameFeeError } from '../../../utils/errors.js';\nimport coinAmount from './coin-amount.js';\nimport { AensName, Int } from '../constants.js';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(_value: string | undefined, txFields: { name: AensName }): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<(typeof coinAmount)['serialize']>[1],\n    parameters: Parameters<(typeof coinAmount)['serialize']>[2],\n  ): Buffer {\n    return coinAmount.serialize.call(this, value, txFields, parameters);\n  },\n};\n","import { AensName } from '../constants.js';\nimport { produceNameId, isName } from '../helpers.js';\nimport address from './address.js';\nimport { Encoded, Encoding } from '../../../utils/encoder.js';\n\nconst addressName = address(Encoding.Name);\n\nexport default {\n  ...addressName,\n\n  /**\n   * @param value - AENS name ID\n   */\n  serialize(value: AensName | Encoded.Name): Buffer {\n    return addressName.serialize(isName(value) ? produceNameId(value) : value);\n  },\n};\n","import { isAccountNotFoundError } from '../../../utils/other.js';\nimport shortUInt from './short-u-int.js';\nimport Node from '../../../Node.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { Enum1 as NextNonceStrategy } from '../../../apis/node/index.js';\nimport { Tag } from '../constants.js';\n\nexport default function genNonceField<SenderKey extends string>(\n  senderKey: SenderKey,\n): {\n  serialize: (value: number, params: { tag: Tag }) => Buffer;\n  // TODO: (value: number) => Promise<number> | (value: undefined, ...) => Promise<number>\n  prepare: (\n    value: number | undefined,\n    params: {},\n    // TODO: replace `string` with AddressEncodings\n    options: { [key in SenderKey]: string } & {\n      strategy?: NextNonceStrategy;\n      onNode?: Node;\n      _isInternalBuild?: boolean;\n    },\n  ) => Promise<number>;\n  deserialize: (value: Buffer) => number;\n  senderKey: string;\n} {\n  return {\n    ...shortUInt,\n\n    serialize(value: number, { tag }): Buffer {\n      if (Tag.GaAttachTx === tag && value !== 1) {\n        throw new ArgumentError('nonce', 'equal 1 if GaAttachTx', value);\n      }\n      return shortUInt.serialize(value);\n    },\n\n    async prepare(value, params, options) {\n      if (value != null) return value;\n      // TODO: uncomment the below line\n      // if (options._isInternalBuild === true) return 0;\n      const { onNode, strategy } = options;\n      const senderId = options[senderKey];\n      const requirement = 'provided (or provide `nonce` instead)';\n      if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n      if (senderId == null) throw new ArgumentError('senderId', requirement, senderId);\n      return (\n        await onNode\n          .getAccountNextNonce(senderId.replace(/^ok_/, 'ak_'), { strategy })\n          .catch((error) => {\n            if (!isAccountNotFoundError(error)) throw error;\n            return { nextNonce: 1 };\n          })\n      ).nextNonce;\n    },\n\n    senderKey,\n  };\n}\n","import { NamePointer as NamePointerString } from '../../../apis/node/index.js';\nimport { toBytes } from '../../../utils/bytes.js';\nimport { Encoded, Encoding, decode, encode } from '../../../utils/encoder.js';\nimport { isEncoded } from '../../../utils/crypto.js';\nimport { IllegalArgumentError, DecodeError, ArgumentError } from '../../../utils/errors.js';\nimport address, { AddressEncodings, idTagToEncoding } from './address.js';\n\nconst ID_TAG = Buffer.from([1]);\nconst DATA_TAG = Buffer.from([2]);\nconst DATA_LENGTH_MAX = 1024;\nconst addressAny = address(...idTagToEncoding);\n\n// TODO: remove after fixing node types\ntype NamePointer = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings>;\n};\ntype NamePointerRaw = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings | Encoding.Bytearray>;\n};\n\nexport default <AllowRaw extends boolean>(\n  allowRaw: AllowRaw,\n): {\n  serialize: (pointers: Array<AllowRaw extends true ? NamePointerRaw : NamePointer>) => Buffer[][];\n  deserialize: (\n    pointers: Array<[key: Buffer, id: Buffer]>,\n  ) => Array<AllowRaw extends true ? NamePointerRaw : NamePointer>;\n} => ({\n  /**\n   * Helper function to build pointers for name update TX\n   * @param pointers - Array of pointers\n   * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n   * @returns Serialized pointers array\n   */\n  serialize(pointers) {\n    if (pointers.length > 32) {\n      throw new IllegalArgumentError(\n        `Expected 32 pointers or less, got ${pointers.length} instead`,\n      );\n    }\n    return pointers.map(({ key, id }) => {\n      let payload;\n      if (isEncoded(id, ...idTagToEncoding)) {\n        payload = [...(allowRaw ? [ID_TAG] : []), addressAny.serialize(id)];\n      }\n      if (isEncoded(id, Encoding.Bytearray)) {\n        const data = decode(id);\n        if (data.length > DATA_LENGTH_MAX) {\n          throw new ArgumentError(\n            'Raw pointer',\n            `shorter than ${DATA_LENGTH_MAX + 1} bytes`,\n            `${data.length} bytes`,\n          );\n        }\n        payload = [DATA_TAG, data];\n      }\n      if (payload == null) throw new DecodeError(`Unknown AENS pointer value: ${id}`);\n      return [toBytes(key), Buffer.concat(payload)];\n    });\n  },\n\n  /**\n   * Helper function to read pointers from name update TX\n   * @param pointers - Array of pointers\n   * @returns Deserialize pointer array\n   */\n  deserialize(pointers) {\n    return pointers.map(([bKey, bId]) => {\n      if (!allowRaw) return { key: bKey.toString(), id: addressAny.deserialize(bId) };\n      const tag = bId.subarray(0, 1);\n      const payload = bId.subarray(1);\n      let id;\n      if (tag.equals(ID_TAG)) id = addressAny.deserialize(payload);\n      // TS can't figure out the real type depending on allowRaw\n      if (tag.equals(DATA_TAG)) id = encode(payload, Encoding.Bytearray) as Encoded.AccountAddress;\n      if (id == null) throw new DecodeError(`Unknown AENS pointer tag: ${tag}`);\n      return { key: bKey.toString(), id };\n    });\n  },\n});\n","import coinAmount from './coin-amount.js';\nimport { Int } from '../constants.js';\nimport Node from '../../../Node.js';\nimport { Encoded } from '../../../utils/encoder.js';\nimport { ArgumentError } from '../../../utils/errors.js';\n\n/**\n * Oracle query fee\n */\nexport default {\n  ...coinAmount,\n\n  async prepare(\n    value: Int | undefined,\n    params: {},\n    options: { oracleId?: Encoded.OracleAddress; onNode?: Node },\n  ) {\n    if (value != null) return value;\n    const { onNode, oracleId } = options;\n    const requirement = 'provided (or provide `queryFee` instead)';\n    if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n    if (oracleId == null) throw new ArgumentError('oracleId', requirement, oracleId);\n    return (await onNode.getOracleByPubkey(oracleId)).queryFee.toString();\n  },\n};\n","export default {\n  serialize(buffer: Uint8Array): Buffer {\n    return Buffer.from(buffer);\n  },\n\n  deserialize(buffer: Buffer): Buffer {\n    return buffer;\n  },\n};\n","import { ArgumentError } from '../../../utils/errors.js';\nimport shortUInt from './short-u-int.js';\n\nexport default function genShortUIntConstField<\n  Value extends number,\n  Optional extends boolean = false,\n>(\n  constValue: Value,\n  optional?: Optional,\n): {\n  serialize: Optional extends true ? (value?: Value) => Buffer : (value: Value) => Buffer;\n  deserialize: (value: Buffer) => Value;\n  constValue: Value;\n  constValueOptional: boolean;\n} {\n  return {\n    serialize(value?: Value) {\n      if ((optional !== true || value != null) && value !== constValue) {\n        throw new ArgumentError('ShortUIntConst', constValue, value);\n      }\n      return shortUInt.serialize(constValue);\n    },\n\n    deserialize(buf) {\n      const value = shortUInt.deserialize(buf);\n      if (value !== constValue) throw new ArgumentError('ShortUIntConst', constValue, value);\n      return constValue;\n    },\n\n    constValue,\n\n    constValueOptional: optional === true,\n  };\n}\n","import { toBytes } from '../../../utils/bytes.js';\n\nexport default {\n  serialize(string: string): Buffer {\n    return toBytes(string);\n  },\n\n  deserialize(buffer: Buffer): string {\n    return buffer.toString();\n  },\n};\n","import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { Tag } from '../constants.js';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index.js';\n\nexport default function genTransactionField<T extends Tag = Tag>(\n  tag?: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { buildTx: typeof buildTxType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { buildTx }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(buildTx({ ...txParams, ...(tag != null && { tag }) }));\n    },\n\n    deserialize(buf, { unpackTx }) {\n      return unpackTx(encode(buf, Encoding.Transaction), tag);\n    },\n  };\n}\n","import shortUInt from './short-u-int.js';\nimport Node from '../../../Node.js';\nimport { ArgumentError } from '../../../utils/errors.js';\nimport { _getPollInterval, getHeight } from '../../../chain.js';\n\n/**\n * Time to leave\n */\nexport default {\n  ...shortUInt,\n\n  serialize(value: number | undefined): Buffer {\n    return shortUInt.serialize(value ?? 0);\n  },\n\n  async prepare(\n    value: number | undefined,\n    params: {},\n    // TODO: { absoluteTtl: true } | { absoluteTtl: false, onNode: Node }\n    {\n      onNode,\n      absoluteTtl,\n      _isInternalBuild,\n      ...options\n    }: {\n      onNode?: Node;\n      absoluteTtl?: boolean;\n      _isInternalBuild?: boolean;\n    } & Omit<Parameters<typeof _getPollInterval>[1], 'onNode'>,\n  ) {\n    if (absoluteTtl !== true && value !== 0 && (value != null || _isInternalBuild === true)) {\n      if (onNode == null) throw new ArgumentError('onNode', 'provided', onNode);\n      value = (value ?? 3) + (await getHeight({ ...options, onNode, cached: true }));\n    }\n    return value;\n  },\n};\n","export default function withDefault<Input, Output, Binary>(\n  defaultValue: Input,\n  field: {\n    serialize: (value: Input, params: unknown) => Binary;\n    deserialize: (value: Binary, params: unknown) => Output;\n  },\n): {\n  serialize: (value: Input | undefined, params: unknown) => Binary;\n  deserialize: (value: Binary, params: unknown) => Output;\n} {\n  return {\n    ...field,\n\n    serialize(value, params) {\n      return field.serialize(value ?? defaultValue, params);\n    },\n  };\n}\n","export default function withFormatting<Input, Output, Binary, Params, Options>(\n  format: (v: Input | undefined) => Input,\n  field: {\n    serialize: (value: Input, params: Params, options: Options) => Binary;\n    deserialize: (value: Binary) => Output;\n  },\n): {\n  serialize: (value: Input | undefined, params: Params, options: Options) => Binary;\n  deserialize: (value: Binary) => Output;\n} {\n  return {\n    ...field,\n\n    serialize(value, params, options) {\n      return field.serialize(format(value), params, options);\n    },\n  };\n}\n","/**\n * @category contract\n */\nexport enum CallReturnType {\n  Ok = 0,\n  Error = 1,\n  Revert = 2,\n}\n\n/**\n * @category entry builder\n */\nexport enum EntryTag {\n  Account = 10,\n  Oracle = 20,\n  // OracleQuery = 21,\n  Name = 30,\n  // NameCommitment = 31,\n  // NameAuction = 37,\n  Contract = 40,\n  ContractCall = 41,\n  ChannelOffChainUpdateTransfer = 570,\n  ChannelOffChainUpdateDeposit = 571,\n  ChannelOffChainUpdateWithdraw = 572,\n  ChannelOffChainUpdateCreateContract = 573,\n  ChannelOffChainUpdateCallContract = 574,\n  // ChannelOffChainUpdateMeta = 576,\n  Channel = 58,\n  TreesPoi = 60,\n  // TreesDb = 61,\n  StateTrees = 62,\n  Mtree = 63,\n  MtreeValue = 64,\n  ContractsMtree = 621,\n  CallsMtree = 622,\n  ChannelsMtree = 623,\n  NameserviceMtree = 624,\n  OraclesMtree = 625,\n  AccountsMtree = 626,\n  // CompilerSophia = 70,\n  GaMetaTxAuthData = 810,\n}\n","/**\n * Transaction Schema for TxBuilder\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport { Tag } from './constants.js';\nimport SchemaTypes from './SchemaTypes.js';\nimport abiVersion from './field-types/abi-version.js';\nimport address, { idTagToEncoding } from './field-types/address.js';\nimport array from './field-types/array.js';\nimport coinAmount from './field-types/coin-amount.js';\nimport ctVersion from './field-types/ct-version.js';\nimport encoded from './field-types/encoded.js';\nimport entry from './field-types/entry.js';\nimport enumeration from './field-types/enumeration.js';\nimport fee from './field-types/fee.js';\nimport gasLimit from './field-types/gas-limit.js';\nimport gasPrice from './field-types/gas-price.js';\nimport name from './field-types/name.js';\nimport nameFee from './field-types/name-fee.js';\nimport nameId from './field-types/name-id.js';\nimport nonce from './field-types/nonce.js';\nimport pointers from './field-types/pointers.js';\nimport queryFee from './field-types/query-fee.js';\nimport raw from './field-types/raw.js';\nimport shortUInt from './field-types/short-u-int.js';\nimport shortUIntConst from './field-types/short-u-int-const.js';\nimport string from './field-types/string.js';\nimport transaction from './field-types/transaction.js';\nimport ttl from './field-types/ttl.js';\nimport uInt from './field-types/u-int.js';\nimport withDefault from './field-types/with-default.js';\nimport withFormatting from './field-types/with-formatting.js';\nimport { Encoded, Encoding } from '../../utils/encoder.js';\nimport { ArgumentError } from '../../utils/errors.js';\nimport { EntryTag } from './entry/constants.js';\nimport { EntParams, EntUnpacked } from './entry/schema.generated.js';\n\n/**\n * @category oracle\n */\nexport enum ORACLE_TTL_TYPES {\n  delta = 0,\n  block = 1,\n}\n\n// TODO: figure out how to omit overriding types of recursive fields\ninterface TransactionAny {\n  serialize: (value: TxParams | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked;\n  recursiveType: true;\n}\n\nconst transactionAny = transaction() as unknown as TransactionAny;\n\ninterface TransactionSignedTx {\n  serialize: (\n    value: (TxParams & { tag: Tag.SignedTx }) | Uint8Array | Encoded.Transaction,\n  ) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.SignedTx };\n  recursiveType: true;\n}\n\nconst transactionSignedTx = transaction(Tag.SignedTx) as unknown as TransactionSignedTx;\n\ninterface EntryTreesPoi {\n  serialize: (\n    value: (EntParams & { tag: EntryTag.TreesPoi }) | Uint8Array | Encoded.Transaction,\n  ) => Buffer;\n  deserialize: (value: Buffer) => EntUnpacked & { tag: EntryTag.TreesPoi };\n  recursiveType: true;\n}\n\nconst entryTreesPoi = entry(EntryTag.TreesPoi) as unknown as EntryTreesPoi;\n\nconst clientTtl = withDefault(60 * 60, shortUInt);\n// https://github.com/aeternity/protocol/blob/fd17982/AENS.md#update\n/**\n * Name ttl represented in number of blocks (Max value is 50000 blocks)\n */\nconst nameTtl = withFormatting((value) => {\n  const NAME_TTL = 180000;\n  value ??= NAME_TTL;\n  if (value >= 1 && value <= NAME_TTL) return value;\n  throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, value);\n}, shortUInt);\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/c007deeac4a01e401238412801ac7084ac72d60e/serializations.md#accounts-version-1-basic-accounts}\n */\nexport const txSchema = [\n  {\n    tag: shortUIntConst(Tag.SignedTx),\n    version: shortUIntConst(1, true),\n    signatures: array(raw), // TODO: use sg_ (Encoding.Signature) instead\n    encodedTx: transactionAny,\n  },\n  {\n    tag: shortUIntConst(Tag.SpendTx),\n    version: shortUIntConst(1, true),\n    senderId: address(Encoding.AccountAddress),\n    // TODO: accept also an AENS name\n    recipientId: address(Encoding.AccountAddress, Encoding.ContractAddress, Encoding.Name),\n    amount: coinAmount,\n    fee,\n    ttl,\n    nonce: nonce('senderId'),\n    payload: encoded(Encoding.Bytearray, true),\n  },\n  {\n    tag: shortUIntConst(Tag.NamePreclaimTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    commitmentId: address(Encoding.Commitment),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameClaimTx),\n    version: shortUIntConst(2, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    name,\n    nameSalt: withDefault(0, uInt),\n    nameFee,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameUpdateTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    nameTtl,\n    pointers: pointers(false),\n    clientTtl,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameUpdateTx),\n    version: shortUIntConst(2),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    nameTtl,\n    pointers: pointers(true),\n    clientTtl,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameTransferTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    // TODO: accept also an AENS name\n    recipientId: address(Encoding.AccountAddress, Encoding.Name),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.NameRevokeTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    nameId,\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.ContractCreateTx),\n    version: shortUIntConst(1, true),\n    ownerId: address(Encoding.AccountAddress),\n    nonce: nonce('ownerId'),\n    code: encoded(Encoding.ContractBytearray),\n    ctVersion,\n    fee,\n    ttl,\n    deposit: withFormatting((value = 0) => {\n      if (+value === 0) return value;\n      throw new ArgumentError('deposit', 'equal 0 (because is not refundable)', value);\n    }, coinAmount),\n    amount: coinAmount,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.ContractCallTx),\n    version: shortUIntConst(1, true),\n    callerId: address(Encoding.AccountAddress),\n    nonce: nonce('callerId'),\n    // TODO: accept also an AENS name\n    contractId: address(Encoding.ContractAddress, Encoding.Name),\n    abiVersion,\n    fee,\n    ttl,\n    amount: coinAmount,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.OracleRegisterTx),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nonce: nonce('accountId'),\n    queryFormat: string,\n    responseFormat: string,\n    queryFee: coinAmount,\n    oracleTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    oracleTtlValue: withDefault(500, shortUInt),\n    fee,\n    ttl,\n    abiVersion,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleExtendTx),\n    version: shortUIntConst(1, true),\n    // TODO: accept also an AENS name\n    oracleId: address(Encoding.OracleAddress, Encoding.Name),\n    nonce: nonce('oracleId'),\n    oracleTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    oracleTtlValue: withDefault(500, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleQueryTx),\n    version: shortUIntConst(1, true),\n    senderId: address(Encoding.AccountAddress),\n    nonce: nonce('senderId'),\n    // TODO: accept also an AENS name\n    oracleId: address(Encoding.OracleAddress, Encoding.Name),\n    query: string,\n    queryFee,\n    queryTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    queryTtlValue: withDefault(10, shortUInt),\n    responseTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    responseTtlValue: withDefault(10, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.OracleRespondTx),\n    version: shortUIntConst(1, true),\n    oracleId: address(Encoding.OracleAddress),\n    nonce: nonce('oracleId'),\n    queryId: encoded(Encoding.OracleQueryId),\n    response: string,\n    responseTtlType: withDefault(ORACLE_TTL_TYPES.delta, enumeration(ORACLE_TTL_TYPES)),\n    responseTtlValue: withDefault(10, shortUInt),\n    fee,\n    ttl,\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCreateTx),\n    version: shortUIntConst(2, true),\n    initiator: address(Encoding.AccountAddress),\n    initiatorAmount: uInt,\n    responder: address(Encoding.AccountAddress),\n    responderAmount: uInt,\n    channelReserve: uInt,\n    lockPeriod: uInt,\n    ttl,\n    fee,\n    initiatorDelegateIds: array(address(...idTagToEncoding)),\n    responderDelegateIds: array(address(...idTagToEncoding)),\n    stateHash: encoded(Encoding.State),\n    nonce: nonce('initiator'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCloseMutualTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    initiatorAmountFinal: uInt,\n    responderAmountFinal: uInt,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelCloseSoloTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    poi: entryTreesPoi,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSlashTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    poi: entryTreesPoi,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelDepositTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    amount: uInt,\n    ttl,\n    fee,\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelWithdrawTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    toId: address(Encoding.AccountAddress),\n    amount: uInt,\n    ttl,\n    fee,\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSettleTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    initiatorAmountFinal: uInt,\n    responderAmountFinal: uInt,\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelForceProgressTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    round: shortUInt,\n    update: encoded(Encoding.ContractBytearray),\n    stateHash: encoded(Encoding.State),\n    offChainTrees: encoded(Encoding.StateTrees),\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelOffChainTx),\n    version: shortUIntConst(2, true),\n    channelId: address(Encoding.Channel),\n    round: shortUInt,\n    stateHash: encoded(Encoding.State),\n  },\n  {\n    tag: shortUIntConst(Tag.ChannelSnapshotSoloTx),\n    version: shortUIntConst(1, true),\n    channelId: address(Encoding.Channel),\n    fromId: address(Encoding.AccountAddress),\n    payload: encoded(Encoding.Transaction),\n    ttl,\n    fee,\n    nonce: nonce('fromId'),\n  },\n  {\n    tag: shortUIntConst(Tag.GaAttachTx),\n    version: shortUIntConst(1, true),\n    ownerId: address(Encoding.AccountAddress),\n    nonce: nonce('ownerId'),\n    code: encoded(Encoding.ContractBytearray),\n    authFun: raw,\n    ctVersion,\n    fee,\n    ttl,\n    gasLimit,\n    gasPrice,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(Tag.GaMetaTx),\n    version: shortUIntConst(2, true),\n    gaId: address(Encoding.AccountAddress),\n    authData: encoded(Encoding.ContractBytearray),\n    abiVersion,\n    fee,\n    gasLimit,\n    gasPrice,\n    tx: transactionSignedTx,\n  },\n  {\n    tag: shortUIntConst(Tag.PayingForTx),\n    version: shortUIntConst(1, true),\n    payerId: address(Encoding.AccountAddress),\n    nonce: nonce('payerId'),\n    fee,\n    tx: transactionSignedTx,\n  },\n] as const;\n\ntype TxSchema = SchemaTypes<typeof txSchema>;\nexport type TxParams = TxSchema['TxParams'];\nexport type TxParamsAsync = TxSchema['TxParamsAsync'];\nexport type TxUnpacked = TxSchema['TxUnpacked'];\n","import { decode as rlpDecode, encode as rlpEncode } from 'rlp';\nimport { Field, BinaryData } from './field-types/interface.js';\nimport {\n  ArgumentError,\n  DecodeError,\n  SchemaNotFoundError,\n  InternalError,\n} from '../../utils/errors.js';\nimport { Encoding, Encoded, encode, decode } from '../../utils/encoder.js';\n\ntype Schemas = ReadonlyArray<{\n  tag: { constValue: number } & Field;\n  version: { constValue: number; constValueOptional: boolean } & Field;\n}>;\n\nexport function getSchema(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  tag: number,\n  version: number | undefined,\n): Array<[string, Field]> {\n  const subSchemas = schemas.filter((s) => s.tag.constValue === tag);\n  if (subSchemas.length === 0) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, 0);\n  if (version == null) {\n    const defaultSchema = subSchemas.find((schema) => schema.version.constValueOptional);\n    if (defaultSchema == null)\n      throw new InternalError(`Can't find default schema of ${Tag[tag]} (${tag})`);\n    version = defaultSchema.version.constValue;\n  }\n  const schema = subSchemas.find((s) => s.version.constValue === version);\n  if (schema == null) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, version);\n  return Object.entries(schema);\n}\n\nexport function packRecord<E extends Encoding>(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  params: {\n    tag: number;\n    version?: number;\n    [k: string]: unknown;\n  },\n  extraParams: { [k: string]: unknown },\n  encoding: E,\n): Encoded.Generic<E> {\n  const schema = getSchema(schemas, Tag, params.tag, params.version);\n  const binary = schema.map(([key, field]) =>\n    field.serialize(params[key], { ...params, ...extraParams }, params),\n  );\n  return encode(rlpEncode(binary), encoding);\n}\n\nexport function unpackRecord(\n  schemas: Schemas,\n  Tag: { [key: number]: string },\n  encodedRecord: Encoded.Any,\n  expectedTag: number | undefined,\n  extraParams: { [k: string]: unknown },\n): unknown {\n  const binary = rlpDecode(decode(encodedRecord));\n  if (!ArrayBuffer.isView(binary[0]) || !ArrayBuffer.isView(binary[1])) {\n    throw new DecodeError(\"Can't parse tag or version in provided RLP\");\n  }\n  const tag = Buffer.from(binary[0]).readUintBE(0, binary[0].length);\n  const version = Buffer.from(binary[1]).readUintBE(0, binary[1].length);\n  const schema = getSchema(schemas, Tag, tag, version);\n  if (expectedTag != null && expectedTag !== tag) {\n    throw new DecodeError(`Expected ${Tag[expectedTag]} tag, got ${Tag[tag]} instead`);\n  }\n  if (binary.length !== schema.length) {\n    throw new ArgumentError('RLP length', schema.length, binary.length);\n  }\n  return Object.fromEntries(\n    schema.map(([name, field], index) => [\n      name,\n      field.deserialize(binary[index] as BinaryData, extraParams),\n    ]),\n  );\n}\n","export default {\n  serialize(value: boolean): Buffer {\n    return Buffer.from([value ? 1 : 0]);\n  },\n\n  deserialize(buffer: Buffer): boolean {\n    return buffer[0] === 1;\n  },\n};\n","import { EntryTag } from '../entry/constants.js';\nimport { encode, Encoding, Encoded, decode } from '../../../utils/encoder.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\nexport default function genMapField<E extends Encoding, T extends EntryTag>(\n  encoding: E,\n  tag: T,\n): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: Record<Encoded.Generic<E>, any>,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => Record<Encoded.Generic<E>, any>;\n  recursiveType: true;\n} {\n  return {\n    serialize(object, { packEntry }) {\n      return decode(\n        packEntry({\n          tag: EntryTag.Mtree,\n          values: Object.entries(object).map(\n            ([key, value]) =>\n              ({\n                tag: EntryTag.MtreeValue,\n                key: decode(key as Encoded.Generic<E>),\n                value: decode(packEntry({ ...(value as any), tag })),\n              }) as const,\n          ),\n        }),\n      );\n    },\n\n    deserialize(buffer, { unpackEntry }) {\n      const { values } = unpackEntry(encode(buffer, Encoding.Bytearray), EntryTag.Mtree);\n      return Object.fromEntries(\n        values\n          // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n          .filter(({ key }) => encoding !== Encoding.ContractAddress || key.length === 32)\n          .map(({ key, value }) => [\n            encode(key, encoding),\n            unpackEntry(encode(value, Encoding.Bytearray), tag),\n          ]),\n      ) as Record<Encoded.Generic<E>, any>;\n    },\n\n    recursiveType: true,\n  };\n}\n","import { encode as rlpEncode, Input } from 'rlp';\nimport { EntryTag } from '../entry/constants.js';\nimport { hash } from '../../../utils/crypto.js';\nimport {\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownPathNibbleError,\n  UnexpectedTsError,\n  UnknownNodeLengthError,\n  InternalError,\n} from '../../../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport type { unpackEntry } from '../entry/index.js';\nimport type { EntUnpacked } from '../entry/schema.generated.js';\n\nenum NodeType {\n  Branch,\n  Extension,\n  Leaf,\n}\n\ntype MPTreeBinary = [Buffer, Array<[Buffer, Buffer[]]>];\n\nclass MPTree<E extends Encoding, T extends EntryTag> {\n  readonly #rootHash: string;\n\n  #isComplete = true;\n\n  get isComplete(): boolean {\n    return this.#isComplete;\n  }\n\n  readonly #nodes: { [key: string]: Buffer[] };\n\n  readonly #encoding: E;\n\n  readonly #tag: T;\n\n  readonly #unpackEntry: typeof unpackEntry;\n\n  static #nodeHash(node: Input): string {\n    return Buffer.from(hash(rlpEncode(node))).toString('hex');\n  }\n\n  /**\n   * Deserialize Merkle Patricia Tree\n   * @param binary - Binary\n   * @param tag - Tag to use to decode value\n   * @param unpEnt - Implementation of unpackEntry use to decode values\n   * @returns Merkle Patricia Tree\n   */\n  constructor(binary: MPTreeBinary, encoding: E, tag: T, unpEnt: typeof unpackEntry) {\n    this.#encoding = encoding;\n    this.#tag = tag;\n    this.#unpackEntry = unpEnt;\n    this.#rootHash = binary[0].toString('hex');\n    this.#nodes = Object.fromEntries(binary[1].map((node) => [node[0].toString('hex'), node[1]]));\n\n    if (this.#nodes[this.#rootHash] == null) {\n      if (Object.keys(this.#nodes).length !== 0) {\n        throw new MissingNodeInTreeError(\"Can't find a node by root hash\");\n      }\n      this.#isComplete = false;\n      return;\n    }\n    Object.entries(this.#nodes).forEach(([key, node]) => {\n      if (MPTree.#nodeHash(node) !== key) throw new MerkleTreeHashMismatchError();\n      const { type } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .filter((n) => n.length)\n            .forEach((n) => {\n              // TODO: enable after resolving https://github.com/aeternity/aeternity/issues/4066\n              // if (n.length !== 32) {\n              //   throw new ArgumentError('MPTree branch item length', 32, n.length);\n              // }\n              if (this.#nodes[n.toString('hex')] == null) this.#isComplete = false;\n            });\n          break;\n        case NodeType.Extension:\n          if (this.#nodes[node[1].toString('hex')] == null) {\n            throw new MissingNodeInTreeError(\"Can't find a node by hash in extension node\");\n          }\n          break;\n        case NodeType.Leaf:\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    });\n  }\n\n  isEqual(tree: MPTree<E, T>): boolean {\n    return this.#rootHash === tree.#rootHash;\n  }\n\n  static #parseNode(node: Buffer[]): { type: NodeType; value?: Buffer; path?: string } {\n    switch (node.length) {\n      case 17:\n        return {\n          type: NodeType.Branch,\n          ...(node[16].length !== 0 && { value: node[16] }),\n        };\n      case 2: {\n        const nibble = node[0][0] >> 4; // eslint-disable-line no-bitwise\n        if (nibble > 3) throw new UnknownPathNibbleError(nibble);\n        const type = nibble <= 1 ? NodeType.Extension : NodeType.Leaf;\n        const slice = [0, 2].includes(nibble) ? 2 : 1;\n        return {\n          type,\n          ...(type === NodeType.Leaf && { value: node[1] }),\n          path: node[0].toString('hex').slice(slice),\n        };\n      }\n      default:\n        throw new UnknownNodeLengthError(node.length);\n    }\n  }\n\n  /**\n   * Serialize Merkle Patricia Tree\n   * @returns Binary\n   */\n  serialize(): MPTreeBinary {\n    return [\n      Buffer.from(this.#rootHash, 'hex'),\n      Object.entries(this.#nodes).map(([mptHash, value]) => [Buffer.from(mptHash, 'hex'), value]),\n    ];\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param _key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  #getRaw(_key: string): Buffer | undefined {\n    let searchFrom = this.#rootHash;\n    let key = _key;\n    while (true) {\n      // eslint-disable-line no-constant-condition\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return undefined;\n        throw new InternalError(\"Can't find node in complete tree\");\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          if (key.length === 0) return value;\n          searchFrom = node[+`0x${key[0]}`].toString('hex');\n          key = key.substring(1);\n          break;\n        case NodeType.Extension:\n          if (key.substring(0, path?.length) !== path) return undefined;\n          searchFrom = node[1].toString('hex');\n          key = key.substring(path.length);\n          break;\n        case NodeType.Leaf:\n          if (path !== key) return undefined;\n          return value;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    }\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  get(key: Encoded.Generic<E>): (EntUnpacked & { tag: T }) | undefined {\n    const d = this.#getRaw(decode(key).toString('hex'));\n    if (d == null) return d;\n    return this.#unpackEntry(encode(d, Encoding.Bytearray), this.#tag);\n  }\n\n  #entriesRaw(): Array<[string, Buffer]> {\n    const entries: Array<[string, Buffer]> = [];\n    const rec = (searchFrom: string, key: string): void => {\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return;\n        throw new InternalError(\"Can't find node in complete tree\");\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .map((t, idx): [typeof t, number] => [t, idx])\n            .filter(([t]) => t.length)\n            .forEach(([t, idx]) => rec(t.toString('hex'), key + idx.toString(16)));\n          if (value != null) entries.push([key, value]);\n          break;\n        case NodeType.Extension:\n          rec(node[1].toString('hex'), key + path);\n          break;\n        case NodeType.Leaf:\n          if (value == null) throw new UnexpectedTsError();\n          entries.push([key + path, value]);\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    };\n    rec(this.#rootHash, '');\n    return entries;\n  }\n\n  toObject(): Record<Encoded.Generic<E>, EntUnpacked & { tag: T }> {\n    return Object.fromEntries(\n      this.#entriesRaw()\n        // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n        .filter(([k]) => this.#encoding !== Encoding.ContractAddress || k.length !== 66)\n        .map(([k, v]) => [\n          encode(Buffer.from(k, 'hex'), this.#encoding),\n          this.#unpackEntry(encode(v, Encoding.Bytearray), this.#tag),\n        ]),\n    ) as Record<Encoded.Generic<E>, EntUnpacked & { tag: T }>;\n  }\n}\n\nexport default function genMPTreeField<E extends Encoding, T extends EntryTag>(\n  encoding: E,\n  tag: T,\n): {\n  serialize: (value: MPTree<E, T>) => MPTreeBinary;\n  deserialize: (value: MPTreeBinary, o: { unpackEntry: typeof unpackEntry }) => MPTree<E, T>;\n} {\n  return {\n    serialize(value) {\n      return value.serialize();\n    },\n\n    deserialize(value, { unpackEntry }) {\n      return new MPTree(value, encoding, tag, unpackEntry);\n    },\n  };\n}\n","import { EntryTag } from '../entry/constants.js';\nimport { encode, Encoding, decode } from '../../../utils/encoder.js';\nimport type { unpackEntry as unpackEntryType, packEntry as packEntryType } from '../entry/index.js';\n\ntype TagWrapping =\n  | EntryTag.AccountsMtree\n  | EntryTag.CallsMtree\n  | EntryTag.ChannelsMtree\n  | EntryTag.ContractsMtree\n  | EntryTag.NameserviceMtree\n  | EntryTag.OraclesMtree;\n\nexport default function genWrappedField<T extends TagWrapping>(\n  tag: T,\n): {\n  serialize: (\n    // TODO: replace with `(EntParams & { tag: T })['payload']`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { packEntry: typeof packEntryType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n    options: { unpackEntry: typeof unpackEntryType },\n    // TODO: replace with `(EntUnpacked & { tag: T })['payload']`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n  recursiveType: true;\n} {\n  return {\n    serialize(payload, { packEntry }) {\n      return decode(packEntry({ tag, payload }));\n    },\n\n    deserialize(buffer, { unpackEntry }) {\n      return unpackEntry<TagWrapping>(encode(buffer, Encoding.Bytearray), tag).payload;\n    },\n\n    recursiveType: true,\n  };\n}\n","import SchemaTypes from '../SchemaTypes.js';\nimport abiVersion from '../field-types/abi-version.js';\nimport address, { idTagToEncoding } from '../field-types/address.js';\nimport array from '../field-types/array.js';\nimport boolean from '../field-types/boolean.js';\nimport coinAmount from '../field-types/coin-amount.js';\nimport ctVersion from '../field-types/ct-version.js';\nimport encoded from '../field-types/encoded.js';\nimport entry from '../field-types/entry.js';\nimport enumeration from '../field-types/enumeration.js';\nimport gasLimit from '../field-types/gas-limit.js';\nimport gasPrice from '../field-types/gas-price.js';\nimport map from '../field-types/map.js';\nimport mptree from '../field-types/mptree.js';\nimport pointers from '../field-types/pointers.js';\nimport raw from '../field-types/raw.js';\nimport shortUInt from '../field-types/short-u-int.js';\nimport shortUIntConst from '../field-types/short-u-int-const.js';\nimport string from '../field-types/string.js';\nimport uInt from '../field-types/u-int.js';\nimport wrapped from '../field-types/wrapped.js';\nimport { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { EntryTag, CallReturnType } from './constants.js';\n\ninterface EntryMtreeValueArray {\n  serialize: (\n    value: Array<(EntParams & { tag: EntryTag.MtreeValue }) | Uint8Array | Encoded.Transaction>,\n  ) => Buffer[];\n  deserialize: (value: Buffer[]) => Array<EntUnpacked & { tag: EntryTag.MtreeValue }>;\n  recursiveType: true;\n}\n\nconst entryMtreeValueArray = array(entry(EntryTag.MtreeValue)) as unknown as EntryMtreeValueArray;\n\ninterface MapContracts {\n  serialize: (\n    value: Record<Encoded.ContractAddress, EntParams & { tag: EntryTag.Contract }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.ContractAddress, EntUnpacked & { tag: EntryTag.Contract }>;\n  recursiveType: true;\n}\n\nconst mapContracts = map(Encoding.ContractAddress, EntryTag.Contract) as unknown as MapContracts;\n\ninterface MapAccounts {\n  serialize: (\n    value: Record<Encoded.AccountAddress, EntParams & { tag: EntryTag.Account }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.AccountAddress, EntUnpacked & { tag: EntryTag.Account }>;\n  recursiveType: true;\n}\n\nconst mapAccounts = map(Encoding.AccountAddress, EntryTag.Account) as unknown as MapAccounts;\n\ninterface MapCalls {\n  serialize: (\n    value: Record<Encoded.Bytearray, EntParams & { tag: EntryTag.ContractCall }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.Bytearray, EntUnpacked & { tag: EntryTag.ContractCall }>;\n  recursiveType: true;\n}\n\nconst mapCalls = map(Encoding.Bytearray, EntryTag.ContractCall) as unknown as MapCalls;\n\ninterface MapChannels {\n  serialize: (value: Record<Encoded.Channel, EntParams & { tag: EntryTag.Channel }>) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Channel, EntUnpacked & { tag: EntryTag.Channel }>;\n  recursiveType: true;\n}\n\nconst mapChannels = map(Encoding.Channel, EntryTag.Channel) as unknown as MapChannels;\n\ninterface MapNames {\n  serialize: (value: Record<Encoded.Name, EntParams & { tag: EntryTag.Name }>) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Name, EntUnpacked & { tag: EntryTag.Name }>;\n  recursiveType: true;\n}\n\nconst mapNames = map(Encoding.Name, EntryTag.Name) as unknown as MapNames;\n\ninterface MapOracles {\n  serialize: (value: Record<Encoded.OracleAddress, EntParams & { tag: EntryTag.Oracle }>) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.OracleAddress, EntUnpacked & { tag: EntryTag.Oracle }>;\n  recursiveType: true;\n}\n\nconst mapOracles = map(Encoding.OracleAddress, EntryTag.Oracle) as unknown as MapOracles;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/8a9d1d1206174627f6aaef86159dc9c643080653/contracts/fate.md#from-ceres-serialized-signature-data}\n */\nexport const schemas = [\n  {\n    tag: shortUIntConst(EntryTag.Account),\n    version: shortUIntConst(1),\n    nonce: shortUInt,\n    balance: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Account),\n    version: shortUIntConst(2, true),\n    flags: uInt,\n    nonce: shortUInt,\n    balance: uInt,\n    gaContract: address(Encoding.ContractAddress, Encoding.Name),\n    gaAuthFun: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.Name),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    nameTtl: shortUInt,\n    status: raw,\n    /**\n     * a suggestion as to how long any clients should cache this information\n     */\n    clientTtl: shortUInt,\n    pointers,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Contract),\n    version: shortUIntConst(1, true),\n    owner: address(Encoding.AccountAddress),\n    ctVersion,\n    code: encoded(Encoding.ContractBytearray),\n    log: encoded(Encoding.ContractBytearray),\n    active: boolean,\n    referers: array(address(Encoding.AccountAddress)),\n    deposit: coinAmount,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ContractCall),\n    version: shortUIntConst(2, true),\n    callerId: address(Encoding.AccountAddress),\n    callerNonce: shortUInt,\n    height: shortUInt,\n    contractId: address(Encoding.ContractAddress),\n    // TODO: rename after resolving https://github.com/aeternity/protocol/issues/506\n    gasPrice: uInt,\n    gasUsed: shortUInt,\n    returnValue: encoded(Encoding.ContractBytearray),\n    returnType: enumeration(CallReturnType),\n    // TODO: add serialization for\n    //  <log> :: [ { <address> :: id, [ <topics> :: binary() }, <data> :: binary() } ]\n    log: array(raw),\n  },\n  {\n    tag: shortUIntConst(EntryTag.Oracle),\n    version: shortUIntConst(1, true),\n    accountId: address(Encoding.AccountAddress),\n    queryFormat: string,\n    responseFormat: string,\n    queryFee: coinAmount,\n    oracleTtlValue: shortUInt,\n    abiVersion,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Channel),\n    version: shortUIntConst(3, true),\n    initiator: address(Encoding.AccountAddress),\n    responder: address(Encoding.AccountAddress),\n    channelAmount: uInt,\n    initiatorAmount: uInt,\n    responderAmount: uInt,\n    channelReserve: uInt,\n    initiatorDelegateIds: array(address(...idTagToEncoding)),\n    responderDelegateIds: array(address(...idTagToEncoding)),\n    stateHash: encoded(Encoding.State),\n    round: shortUInt,\n    soloRound: uInt,\n    lockPeriod: uInt,\n    lockedUntil: uInt,\n    initiatorAuth: encoded(Encoding.ContractBytearray),\n    responderAuth: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateTransfer),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    to: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateDeposit),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateWithdraw),\n    version: shortUIntConst(1, true),\n    from: address(Encoding.AccountAddress),\n    amount: uInt,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateCreateContract),\n    version: shortUIntConst(1, true),\n    owner: address(Encoding.AccountAddress),\n    ctVersion,\n    code: encoded(Encoding.ContractBytearray),\n    deposit: uInt,\n    callData: encoded(Encoding.ContractBytearray),\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelOffChainUpdateCallContract),\n    version: shortUIntConst(1, true),\n    caller: address(Encoding.AccountAddress),\n    contract: address(Encoding.ContractAddress),\n    abiVersion,\n    amount: uInt,\n    callData: encoded(Encoding.ContractBytearray),\n    callStack: raw,\n    gasPrice,\n    gasLimit,\n  },\n  {\n    tag: shortUIntConst(EntryTag.TreesPoi),\n    version: shortUIntConst(1, true),\n    // TODO: inline an extra wrapping array after resolving https://github.com/aeternity/protocol/issues/505\n    accounts: array(mptree(Encoding.AccountAddress, EntryTag.Account)),\n    calls: array(mptree(Encoding.Bytearray, EntryTag.ContractCall)),\n    channels: array(mptree(Encoding.Channel, EntryTag.Channel)),\n    contracts: array(mptree(Encoding.ContractAddress, EntryTag.Contract)),\n    ns: array(mptree(Encoding.Name, EntryTag.Name)),\n    oracles: array(mptree(Encoding.OracleAddress, EntryTag.Oracle)),\n  },\n  {\n    tag: shortUIntConst(EntryTag.StateTrees),\n    version: shortUIntConst(0, true),\n    contracts: wrapped(EntryTag.ContractsMtree) as unknown as MapContracts,\n    calls: wrapped(EntryTag.CallsMtree) as unknown as MapCalls,\n    channels: wrapped(EntryTag.ChannelsMtree) as unknown as MapChannels,\n    ns: wrapped(EntryTag.NameserviceMtree) as unknown as MapNames,\n    oracles: wrapped(EntryTag.OraclesMtree) as unknown as MapOracles,\n    accounts: wrapped(EntryTag.AccountsMtree) as unknown as MapAccounts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.Mtree),\n    version: shortUIntConst(1, true),\n    values: entryMtreeValueArray,\n  },\n  {\n    tag: shortUIntConst(EntryTag.MtreeValue),\n    version: shortUIntConst(1, true),\n    key: raw,\n    value: raw,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ContractsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapContracts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.CallsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapCalls,\n  },\n  {\n    tag: shortUIntConst(EntryTag.ChannelsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapChannels,\n  },\n  {\n    tag: shortUIntConst(EntryTag.NameserviceMtree),\n    version: shortUIntConst(1, true),\n    payload: mapNames,\n  },\n  {\n    tag: shortUIntConst(EntryTag.OraclesMtree),\n    version: shortUIntConst(1, true),\n    payload: mapOracles,\n  },\n  {\n    tag: shortUIntConst(EntryTag.AccountsMtree),\n    version: shortUIntConst(1, true),\n    payload: mapAccounts,\n  },\n  {\n    tag: shortUIntConst(EntryTag.GaMetaTxAuthData),\n    version: shortUIntConst(1, true),\n    fee: coinAmount,\n    gasPrice,\n    txHash: encoded(Encoding.TxHash),\n  },\n] as const;\n\ntype Schemas = SchemaTypes<typeof schemas>;\nexport type EntParams = Schemas['TxParams'];\nexport type EntUnpacked = Schemas['TxUnpacked'];\n","import { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { packRecord, unpackRecord } from '../common.js';\nimport { schemas } from './schema.js';\nimport { EntryTag } from './constants.js';\nimport { EntParams, EntUnpacked } from './schema.generated.js';\n\nconst encodingTag = [\n  [EntryTag.CallsMtree, Encoding.CallStateTree],\n  [EntryTag.StateTrees, Encoding.StateTrees],\n  [EntryTag.TreesPoi, Encoding.Poi],\n] as const;\n\nexport function packEntry(params: EntParams & { tag: EntryTag.CallsMtree }): Encoded.CallStateTree;\nexport function packEntry(params: EntParams & { tag: EntryTag.StateTrees }): Encoded.StateTrees;\nexport function packEntry(params: EntParams & { tag: EntryTag.TreesPoi }): Encoded.Poi;\n/**\n * Pack entry\n * @category entry builder\n * @param params - Params of entry\n * @returns Encoded entry\n */\nexport function packEntry(params: EntParams): Encoded.Any;\nexport function packEntry(params: EntParams): Encoded.Any {\n  const encoding = encodingTag.find(([tag]) => tag === params.tag)?.[1] ?? Encoding.Bytearray;\n  return packRecord(schemas, EntryTag, params, { packEntry }, encoding);\n}\n\nexport function unpackEntry(\n  encoded: Encoded.CallStateTree,\n): EntUnpacked & { tag: EntryTag.CallsMtree };\nexport function unpackEntry(\n  encoded: Encoded.StateTrees,\n): EntUnpacked & { tag: EntryTag.StateTrees };\nexport function unpackEntry(encoded: Encoded.Poi): EntUnpacked & { tag: EntryTag.TreesPoi };\n/**\n * Unpack entry\n * @category entry builder\n * @param encoded - Encoded entry\n * @param expectedTag - Expected entry type\n * @returns Params of entry\n */\nexport function unpackEntry<T extends EntryTag>(\n  encoded: Encoded.Any,\n  expectedTag?: T,\n): EntUnpacked & { tag: T };\nexport function unpackEntry(encoded: Encoded.Any, expectedTag?: EntryTag): EntUnpacked {\n  expectedTag ??= encodingTag.find(([, enc]) => encoded.startsWith(enc))?.[0];\n  return unpackRecord(schemas, EntryTag, encoded, expectedTag, { unpackEntry }) as any;\n}\n","import { decode, encode, Encoded, Encoding } from '../../utils/encoder.js';\nimport { hash } from '../../utils/crypto.js';\nimport { Field } from './field-types/interface.js';\nimport { txSchema } from './schema.js';\nimport { TxUnpacked, TxParams, TxParamsAsync } from './schema.generated.js';\nimport { Tag } from './constants.js';\nimport { buildContractId } from './helpers.js';\nimport { getSchema as getSchemaCommon, packRecord, unpackRecord } from './common.js';\nimport { ArgumentError } from '../../utils/errors.js';\nimport { packEntry, unpackEntry } from './entry/index.js';\n\n/**\n * JavaScript-based Transaction builder\n */\n\nexport function getSchema(tag: Tag, version?: number): Array<[string, Field]> {\n  return getSchemaCommon(txSchema, Tag, tag, version);\n}\n\ntype TxEncoding =\n  | Encoding.Transaction\n  | Encoding.Poi\n  | Encoding.StateTrees\n  | Encoding.CallStateTree;\n\n/**\n * Build transaction\n * @category transaction builder\n * @param params - Transaction params\n */\nexport function buildTx(params: TxParams): Encoded.Transaction {\n  return packRecord(\n    txSchema,\n    Tag,\n    params,\n    {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      unpackTx,\n      buildTx,\n      rebuildTx: (overrideParams: any) => buildTx({ ...params, ...overrideParams }),\n      packEntry,\n    },\n    Encoding.Transaction,\n  );\n}\n\nexport type BuildTxOptions<TxType extends Tag, OmitFields extends string> = Omit<\n  TxParamsAsync & { tag: TxType },\n  'tag' | OmitFields\n>;\n\n// TODO: require onNode because it is the only reason this builder is async [breaking change]\n/**\n * Build transaction async (may request node for additional data)\n * @category transaction builder\n * @param params - Transaction params\n * @returns tx_-encoded transaction\n */\nexport async function buildTxAsync(params: TxParamsAsync): Promise<Encoded.Transaction> {\n  await Promise.all(\n    getSchema(params.tag, params.version).map(async ([key, field]) => {\n      if (field.prepare == null) return;\n      // @ts-expect-error the type of `params[key]` can't be determined accurately\n      params[key] = await field.prepare(params[key], params, params);\n    }),\n  );\n\n  // @ts-expect-error after preparation properties should be compatible with sync tx builder\n  return buildTx(params);\n}\n\n/**\n * Unpack transaction encoded as string\n * @category transaction builder\n * @param encodedTx - Encoded transaction\n * @param txType - Expected transaction type\n * @returns Transaction params\n */\nexport function unpackTx<TxType extends Tag>(\n  encodedTx: Encoded.Generic<TxEncoding>,\n  txType?: TxType,\n): TxUnpacked & { tag: TxType } {\n  return unpackRecord(txSchema, Tag, encodedTx, txType, { unpackTx, unpackEntry }) as any;\n}\n\n/**\n * Build a transaction hash\n * @category transaction builder\n * @param rawTx - base64 or rlp encoded transaction\n * @returns Transaction hash\n */\nexport function buildTxHash(rawTx: Encoded.Transaction | Uint8Array): Encoded.TxHash {\n  const data = typeof rawTx === 'string' && rawTx.startsWith('tx_') ? decode(rawTx) : rawTx;\n  return encode(hash(data), Encoding.TxHash);\n}\n\n/**\n * Build a contract public key by contractCreateTx, gaAttach or signedTx\n * @category contract\n * @param contractTx - Transaction\n * @returns Contract public key\n */\nexport function buildContractIdByContractTx(\n  contractTx: Encoded.Transaction,\n): Encoded.ContractAddress {\n  let params = unpackTx(contractTx);\n  if (Tag.SignedTx === params.tag) params = params.encodedTx;\n  if (Tag.ContractCreateTx !== params.tag && Tag.GaAttachTx !== params.tag) {\n    throw new ArgumentError('contractTx', 'a contractCreateTx or gaAttach', params.tag);\n  }\n  return buildContractId(params.ownerId, params.nonce);\n}\n","function verCmp(a: string, b: string): number {\n  const getComponents = (v: string): number[] =>\n    v\n      .split(/[-+]/)[0]\n      .split('.')\n      .map((i) => +i);\n\n  const aComponents = getComponents(a);\n  const bComponents = getComponents(b);\n\n  const base = Math.max(...aComponents, ...bComponents) + 1;\n  const componentsToNumber = (components: number[]): number =>\n    components.reverse().reduce((acc, n, idx) => acc + n * base ** idx, 0);\n\n  return componentsToNumber(aComponents) - componentsToNumber(bComponents);\n}\n\nexport default function semverSatisfies(\n  version: string,\n  geVersion: string,\n  ltVersion?: string,\n): boolean {\n  return verCmp(version, geVersion) >= 0 && (ltVersion == null || verCmp(version, ltVersion) < 0);\n}\n","import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport {\n  AdditionalPolicyConfig,\n  FullOperationResponse,\n  OperationOptions,\n  createSerializer as createSerializerOrig,\n} from '@azure/core-client';\nimport { pause } from './other.js';\nimport semverSatisfies from './semver-satisfies.js';\nimport { InternalError, UnexpectedTsError, UnsupportedVersionError } from './errors.js';\n\nconst bigIntPrefix = '_sdk-big-int-';\n\nexport const createSerializer = (\n  ...args: Parameters<typeof createSerializerOrig>\n): ReturnType<typeof createSerializerOrig> => {\n  const serializer = createSerializerOrig(...args);\n  const { serialize, deserialize } = serializer;\n  return Object.assign(serializer, {\n    serialize(\n      ...[mapper, object, objectName, options]: Parameters<typeof serialize>\n    ): ReturnType<typeof serialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || object == null) {\n        return serialize.call(this, mapper, object, objectName, options);\n      }\n      if (typeof object !== 'bigint') {\n        objectName ??= mapper.serializedName;\n        throw new Error(`${objectName} with value ${object} must be of type bigint.`);\n      }\n      return object.toString();\n    },\n\n    deserialize(\n      ...[mapper, responseBody, objectName, options]: Parameters<typeof deserialize>\n    ): ReturnType<typeof deserialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || responseBody == null) {\n        if (typeof responseBody === 'string' && responseBody.startsWith(bigIntPrefix)) {\n          console.warn(`AeSdk internal error: BigInt value ${responseBody} handled incorrectly`);\n          responseBody = +responseBody.replace(bigIntPrefix, '');\n        }\n        const result = deserialize.call(this, mapper, responseBody, objectName, options);\n        // TODO: remove after fixing https://github.com/aeternity/ae_mdw/issues/1891\n        // and https://github.com/aeternity/aeternity/issues/4386\n        if (result instanceof Date) return new Date(+result / 1000);\n        return result;\n      }\n      if (typeof responseBody === 'number' && responseBody > Number.MAX_SAFE_INTEGER) {\n        throw new InternalError(`Number ${responseBody} is not accurate to be converted to BigInt`);\n      }\n      return BigInt(responseBody.toString().replace(bigIntPrefix, ''));\n    },\n  });\n};\n\nconst safeLength = Number.MAX_SAFE_INTEGER.toString().length;\nconst bigIntPropertyRe = new RegExp(String.raw`(\"\\w+\":\\s*)(\\d{${safeLength},})(\\s*[,}])`, 'm');\nconst bigIntArrayItemRe = new RegExp(String.raw`([[,]\\s*)(\\d{${safeLength},})\\b`, 'm');\nexport const parseBigIntPolicy: PipelinePolicy = {\n  name: 'parse-big-int',\n  async sendRequest(request, next) {\n    const response = await next(request);\n    if (response.bodyAsText == null) return response;\n    // TODO: replace with https://caniuse.com/mdn-javascript_builtins_json_parse_reviver_parameter_context_argument when it gets support in FF and Safari\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntPropertyRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntPropertyRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, name, value, end] = match;\n        return [\n          name,\n          +value > Number.MAX_SAFE_INTEGER ? `\"${bigIntPrefix}${value}\"` : value,\n          end,\n        ].join('');\n      },\n    );\n    // FIXME: may break strings inside json\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntArrayItemRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntArrayItemRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, prefix, value] = match;\n        return `${prefix}\"${bigIntPrefix}${value}\"`;\n      },\n    );\n    return response;\n  },\n};\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse);\n        requestQueues.set(\n          key,\n          req.catch(() => {}),\n        );\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-get-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genAggressiveCacheGetResponsesPolicy = (): AdditionalPolicyConfig => {\n  const getRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'aggressive-cache-get-responses',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = getRequests.get(key) ?? next(request);\n        getRequests.set(key, response);\n        return response;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (\n          !(error instanceof RestError) ||\n          error.request == null ||\n          error.message.startsWith('Error ')\n        )\n          throw error;\n        const prefix = `${new URL(error.request.url).pathname.slice(1)} error`;\n\n        if (error.response?.bodyAsText == null) {\n          if (error.message === '') error.message = `${prefix}: ${error.code}`;\n          throw error;\n        }\n\n        const body = (error.response as FullOperationResponse).parsedBody;\n        error.message = prefix;\n        const message = body == null ? ` ${error.response.status} status code` : getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  versionCb: (options: OperationOptions) => Promise<string>,\n  geVersion: string,\n  ltVersion: string,\n  ignoreVersion: boolean,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'version-check',\n    async sendRequest(request, next) {\n      if (request.headers.has('__version-check')) {\n        request.headers.delete('__version-check');\n        return next(request);\n      }\n      const options = { requestOptions: { customHeaders: { '__version-check': 'true' } } };\n      const args = [await versionCb(options), geVersion, ltVersion] as const;\n      if (!semverSatisfies(...args)) {\n        const error = new UnsupportedVersionError(name, ...args);\n        if (ignoreVersion) console.warn(error.message);\n        else throw error;\n      }\n      return next(request);\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genRetryOnFailurePolicy = (\n  retryCount: number,\n  retryOverallDelay: number,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'retry-on-failure',\n    async sendRequest(request, next) {\n      if (request.headers.get('__no-retry') != null) {\n        request.headers.delete('__no-retry');\n        return next(request);\n      }\n\n      const retryCode = request.headers.get('__retry-code') ?? NaN;\n      request.headers.delete('__retry-code');\n      const statusesToNotRetry = [200, 400, 403, 410, 500].filter((c) => c !== +retryCode);\n\n      const intervals = new Array(retryCount)\n        .fill(0)\n        .map((_, idx) => ((idx + 1) / retryCount) ** 2);\n      const intervalSum = intervals.reduce((a, b) => a + b, 0);\n      const intervalsInMs = intervals.map((e) => Math.floor((e / intervalSum) * retryOverallDelay));\n\n      let error = new RestError('Not expected to be thrown');\n      for (let attempt = 0; attempt <= retryCount; attempt += 1) {\n        if (attempt !== 0) {\n          await pause(intervalsInMs[attempt - 1]);\n          const urlParsed = new URL(request.url);\n          urlParsed.searchParams.set('__sdk-retry', attempt.toString());\n          request.url = urlParsed.toString();\n        }\n        try {\n          return await next(request);\n        } catch (e) {\n          if (!(e instanceof RestError)) throw e;\n          if (statusesToNotRetry.includes(e.response?.status ?? 0)) throw e;\n          error = e;\n        }\n      }\n      throw error;\n    },\n  },\n  position: 'perCall',\n});\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Account: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Account\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      balance: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"balance\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payable: {\n        serializedName: \"payable\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"basic\", \"generalized\"],\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      errorCode: {\n        serializedName: \"error_code\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NextNonceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NextNonceResponse\",\n    modelProperties: {\n      nextNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"next_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedTxs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTxs\",\n    modelProperties: {\n      transactions: {\n        serializedName: \"transactions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedTx\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n      blockHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: -1,\n        },\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedTx: {\n        serializedName: \"encoded_tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\",\n        },\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\",\n        },\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\",\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\",\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"],\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedKey: {\n        serializedName: \"encoded_key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const AuctionEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      startedAt: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"started_at\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      endsAt: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ends_at\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      highestBidder: {\n        serializedName: \"highest_bidder\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      highestBid: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"highest_bid\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      channelAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      soloRound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockedUntil: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractObject\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      referrerIds: {\n        serializedName: \"referrer_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PoI: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PoI\",\n    modelProperties: {\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Currency: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Currency\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      subunit: {\n        serializedName: \"subunit\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      subunitsPerUnit: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"subunits_per_unit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fiatConverstionUrl: {\n        serializedName: \"fiat_converstion_url\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fiatConversionUrl: {\n        serializedName: \"fiat_conversion_url\",\n        type: {\n          name: \"String\",\n        },\n      },\n      logo: {\n        serializedName: \"logo\",\n        type: {\n          name: \"Composite\",\n          className: \"Image\",\n        },\n      },\n      primaryColour: {\n        serializedName: \"primary_colour\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      secondaryColour: {\n        serializedName: \"secondary_colour\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      networkName: {\n        serializedName: \"network_name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Image: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Image\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInput\",\n    modelProperties: {\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"String\",\n        },\n      },\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunAccount\",\n            },\n          },\n        },\n      },\n      txs: {\n        serializedName: \"txs\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunInputItem\",\n            },\n          },\n        },\n      },\n      txEvents: {\n        defaultValue: false,\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunAccount\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunInputItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInputItem\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callReq: {\n        serializedName: \"call_req\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallReq\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunCallReq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallReq\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallContext\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunCallContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallContext\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      stateful: {\n        serializedName: \"stateful\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResults\",\n    modelProperties: {\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunResult\",\n            },\n          },\n        },\n      },\n      txEvents: {\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const DryRunResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResult\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callObj: {\n        serializedName: \"call_obj\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCallObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callerNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"caller_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gasUsed: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      log: {\n        serializedName: \"log\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\",\n            },\n          },\n        },\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\", \"revert\"],\n        },\n      },\n    },\n  },\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      address: {\n        serializedName: \"address\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topics: {\n        serializedName: \"topics\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMinimum: 0,\n            },\n            type: {\n              // @ts-expect-error we are extending autorest with BigInt support\n              name: \"BigInt\",\n            },\n          },\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Generation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Generation\",\n    modelProperties: {\n      keyBlock: {\n        serializedName: \"key_block\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyBlock\",\n        },\n      },\n      microBlocks: {\n        serializedName: \"micro_blocks\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      flags: {\n        serializedName: \"flags\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42,\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMaximum: 4294967295,\n              InclusiveMinimum: 0,\n            },\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Header: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Header\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\",\n        },\n      },\n      flags: {\n        serializedName: \"flags\",\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42,\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMaximum: 4294967295,\n              InclusiveMinimum: 0,\n            },\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\",\n        },\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        serializedName: \"signature\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PinningTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PinningTx\",\n    modelProperties: {\n      epoch: {\n        serializedName: \"epoch\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      parentPayload: {\n        serializedName: \"parent_payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastLeader: {\n        serializedName: \"last_leader\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      parentType: {\n        serializedName: \"parent_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      parentNetworkId: {\n        serializedName: \"parent_network_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HCContractPubkeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HCContractPubkeys\",\n    modelProperties: {\n      staking: {\n        serializedName: \"staking\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      election: {\n        serializedName: \"election\",\n        type: {\n          name: \"String\",\n        },\n      },\n      rewards: {\n        serializedName: \"rewards\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HashResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HashResponse\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const HeightResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeightResponse\",\n    modelProperties: {\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CountResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CountResponse\",\n    modelProperties: {\n      count: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointerComplete\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const NamePointerComplete: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointerComplete\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedKey: {\n        serializedName: \"encoded_key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RegisteredOracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegisteredOracle\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueries\",\n    modelProperties: {\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleQuery\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderNonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"sender_nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerPubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerPubKey\",\n    modelProperties: {\n      pubkey: {\n        serializedName: \"pubkey\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GasPricesItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GasPricesItem\",\n    modelProperties: {\n      minGasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"min_gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      utilization: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"utilization\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      minutes: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"minutes\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      genesisKeyBlockHash: {\n        serializedName: \"genesis_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      solutions: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"solutions\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      difficulty: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"difficulty\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hashrate: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"hashrate\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      syncing: {\n        serializedName: \"syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      syncProgress: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"sync_progress\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      uptime: {\n        serializedName: \"uptime\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      listening: {\n        serializedName: \"listening\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      protocols: {\n        serializedName: \"protocols\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Protocol\",\n            },\n          },\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      peerCount: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"peer_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      peerConnections: {\n        serializedName: \"peer_connections\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerConnections\",\n        },\n      },\n      pendingTransactionsCount: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"pending_transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      peerPubkey: {\n        serializedName: \"peer_pubkey\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topKeyBlockHash: {\n        serializedName: \"top_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topBlockHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"top_block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Protocol: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Protocol\",\n    modelProperties: {\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      effectiveAtHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"effective_at_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerConnections: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerConnections\",\n    modelProperties: {\n      inbound: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"inbound\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      outbound: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"outbound\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const SyncStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncStatus\",\n    modelProperties: {\n      progress: {\n        serializedName: \"progress\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      speed: {\n        serializedName: \"speed\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      estimate: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"estimate\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const EncodedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncodedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PostTxResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostTxResponse\",\n    modelProperties: {\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TxInfoObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TxInfoObject\",\n    modelProperties: {\n      callInfo: {\n        serializedName: \"call_info\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\",\n        },\n      },\n      gaInfo: {\n        serializedName: \"ga_info\",\n        type: {\n          name: \"Composite\",\n          className: \"GAObject\",\n        },\n      },\n      txInfo: {\n        serializedName: \"tx_info\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gasUsed: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\"],\n        },\n      },\n      innerObject: {\n        serializedName: \"inner_object\",\n        type: {\n          name: \"Composite\",\n          className: \"TxInfoObject\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CheckTxInPoolResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTxInPoolResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CommitmentId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommitmentId\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const UnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnsignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameHash: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameHash\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerDetails\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      port: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      firstSeen: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"first_seen\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastSeen: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"last_seen\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      genesisHash: {\n        serializedName: \"genesis_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topHash: {\n        serializedName: \"top_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      topDifficulty: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"top_difficulty\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeVendor: {\n        serializedName: \"node_vendor\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeOs: {\n        serializedName: \"node_os\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCount\",\n    modelProperties: {\n      connected: {\n        serializedName: \"connected\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountConnected\",\n        },\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountAvailable\",\n        },\n      },\n      blocked: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCountConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountConnected\",\n    modelProperties: {\n      inbound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"inbound\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      outbound: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"outbound\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PeerCountAvailable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountAvailable\",\n    modelProperties: {\n      verified: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"verified\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      unverified: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"unverified\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Peers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Peers\",\n    modelProperties: {\n      peers: {\n        serializedName: \"peers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const PubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PubKey\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const TokenSupply: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TokenSupply\",\n    modelProperties: {\n      accounts: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"accounts\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contracts: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"contracts\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractOracles: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"contract_oracles\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      locked: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"locked\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracles: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"oracles\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleQueries: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"oracle_queries\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pendingRewards: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"pending_rewards\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      total: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"total\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainCallContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainCallContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainCallContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      caller: {\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainDeposit: coreClient.CompositeMapper = {\n  serializedName: \"OffChainDeposit\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainDeposit\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainNewContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainNewContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainNewContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      owner: {\n        serializedName: \"owner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Composite\",\n          className: \"ByteCode\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainTransfer: coreClient.CompositeMapper = {\n  serializedName: \"OffChainTransfer\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainTransfer\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainWithdrawal: coreClient.CompositeMapper = {\n  serializedName: \"OffChainWithdrawal\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainWithdrawal\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const CreateContractUnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateContractUnsignedTx\",\n    modelProperties: {\n      ...UnsignedTx.type.modelProperties,\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport let discriminators = {\n  OffChainUpdate: OffChainUpdate,\n  \"OffChainUpdate.OffChainCallContract\": OffChainCallContract,\n  \"OffChainUpdate.OffChainDeposit\": OffChainDeposit,\n  \"OffChainUpdate.OffChainNewContract\": OffChainNewContract,\n  \"OffChainUpdate.OffChainTransfer\": OffChainTransfer,\n  \"OffChainUpdate.OffChainWithdrawal\": OffChainWithdrawal,\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"],\n    },\n  },\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper,\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const nameHash: OperationURLParameter = {\n  parameterPath: \"nameHash\",\n  mapper: {\n    serializedName: \"name_hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"],\n    },\n  },\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper,\n};\n","import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  NodeOptionalParams,\n  GetAccountByPubkeyOptionalParams,\n  GetAccountByPubkeyResponse,\n  GetAccountByPubkeyAndHashOptionalParams,\n  GetAccountByPubkeyAndHashResponse,\n  GetAccountByPubkeyAndHeightOptionalParams,\n  GetAccountByPubkeyAndHeightResponse,\n  GetAccountNextNonceOptionalParams,\n  GetAccountNextNonceResponse,\n  GetPendingAccountTransactionsByPubkeyOptionalParams,\n  GetPendingAccountTransactionsByPubkeyResponse,\n  GetAuctionEntryByNameOptionalParams,\n  GetAuctionEntryByNameResponse,\n  GetChannelByPubkeyOptionalParams,\n  GetChannelByPubkeyResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetContractCodeOptionalParams,\n  GetContractCodeResponse,\n  GetContractPoIOptionalParams,\n  GetContractPoIResponse,\n  GetCurrencyOptionalParams,\n  GetCurrencyResponse,\n  DryRunInput,\n  ProtectedDryRunTxsOptionalParams,\n  ProtectedDryRunTxsResponse,\n  GetCurrentGenerationOptionalParams,\n  GetCurrentGenerationResponse,\n  GetGenerationByHashOptionalParams,\n  GetGenerationByHashResponse,\n  GetGenerationByHeightOptionalParams,\n  GetGenerationByHeightResponse,\n  GetTopHeaderOptionalParams,\n  GetTopHeaderResponse,\n  GetPinningTxOptionalParams,\n  GetPinningTxResponse,\n  GetHyperchainContractPubkeysOptionalParams,\n  GetHyperchainContractPubkeysResponse,\n  GetCurrentKeyBlockOptionalParams,\n  GetCurrentKeyBlockResponse,\n  GetCurrentKeyBlockHashOptionalParams,\n  GetCurrentKeyBlockHashResponse,\n  GetCurrentKeyBlockHeightOptionalParams,\n  GetCurrentKeyBlockHeightResponse,\n  GetKeyBlockByHashOptionalParams,\n  GetKeyBlockByHashResponse,\n  GetKeyBlockByHeightOptionalParams,\n  GetKeyBlockByHeightResponse,\n  GetPendingKeyBlockOptionalParams,\n  GetPendingKeyBlockResponse,\n  GetMicroBlockHeaderByHashOptionalParams,\n  GetMicroBlockHeaderByHashResponse,\n  GetMicroBlockTransactionsByHashOptionalParams,\n  GetMicroBlockTransactionsByHashResponse,\n  GetMicroBlockTransactionsCountByHashOptionalParams,\n  GetMicroBlockTransactionsCountByHashResponse,\n  GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  GetMicroBlockTransactionByHashAndIndexResponse,\n  GetNameEntryByNameOptionalParams,\n  GetNameEntryByNameResponse,\n  GetNameEntryByNameHashOptionalParams,\n  GetNameEntryByNameHashResponse,\n  GetOracleByPubkeyOptionalParams,\n  GetOracleByPubkeyResponse,\n  GetOracleQueriesByPubkeyOptionalParams,\n  GetOracleQueriesByPubkeyResponse,\n  GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  GetOracleQueryByPubkeyAndQueryIdResponse,\n  GetPeerPubkeyOptionalParams,\n  GetPeerPubkeyResponse,\n  GetRecentGasPricesOptionalParams,\n  GetRecentGasPricesResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetChainEndsOptionalParams,\n  GetChainEndsResponse,\n  GetSyncStatusOptionalParams,\n  GetSyncStatusResponse,\n  EncodedTx,\n  PostTransactionOptionalParams,\n  PostTransactionResponse,\n  GetTransactionByHashOptionalParams,\n  GetTransactionByHashResponse,\n  GetTransactionInfoByHashOptionalParams,\n  GetTransactionInfoByHashResponse,\n} from \"./models/index.js\";\n\nexport class Node extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Node class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: NodeOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NodeOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-node/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountByPubkey(\n    pubkey: string,\n    options?: GetAccountByPubkeyOptionalParams,\n  ): Promise<GetAccountByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account by public key after the block indicated by hash. Can be either a micro block or a\n   * keyblock hash\n   * @param pubkey The public key of the account\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHash(\n    pubkey: string,\n    hash: string,\n    options?: GetAccountByPubkeyAndHashOptionalParams,\n  ): Promise<GetAccountByPubkeyAndHashResponse> {\n    return this.sendOperationRequest(\n      { pubkey, hash, options },\n      getAccountByPubkeyAndHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account by public key after the opening key block of the generation at height\n   * @param pubkey The public key of the account\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHeight(\n    pubkey: string,\n    height: number,\n    options?: GetAccountByPubkeyAndHeightOptionalParams,\n  ): Promise<GetAccountByPubkeyAndHeightResponse> {\n    return this.sendOperationRequest(\n      { pubkey, height, options },\n      getAccountByPubkeyAndHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get an account's next nonce; This is computed according to whatever is the current account nonce and\n   * what transactions are currently present in the transaction pool\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountNextNonce(\n    pubkey: string,\n    options?: GetAccountNextNonceOptionalParams,\n  ): Promise<GetAccountNextNonceResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountNextNonceOperationSpec,\n    );\n  }\n\n  /**\n   * Get pending account transactions by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getPendingAccountTransactionsByPubkey(\n    pubkey: string,\n    options?: GetPendingAccountTransactionsByPubkeyOptionalParams,\n  ): Promise<GetPendingAccountTransactionsByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getPendingAccountTransactionsByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get auction entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getAuctionEntryByName(\n    name: string,\n    options?: GetAuctionEntryByNameOptionalParams,\n  ): Promise<GetAuctionEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getAuctionEntryByNameOperationSpec,\n    );\n  }\n\n  /**\n   * Get channel by public key\n   * @param pubkey The pubkey of the channel\n   * @param options The options parameters.\n   */\n  getChannelByPubkey(\n    pubkey: string,\n    options?: GetChannelByPubkeyOptionalParams,\n  ): Promise<GetChannelByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getChannelByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get a contract by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContract(\n    pubkey: string,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract code by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractCode(\n    pubkey: string,\n    options?: GetContractCodeOptionalParams,\n  ): Promise<GetContractCodeResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Get a proof of inclusion for a contract\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractPoI(\n    pubkey: string,\n    options?: GetContractPoIOptionalParams,\n  ): Promise<GetContractPoIResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractPoIOperationSpec,\n    );\n  }\n\n  /**\n   * Get the currency metadata of a node\n   * @param options The options parameters.\n   */\n  getCurrency(\n    options?: GetCurrencyOptionalParams,\n  ): Promise<GetCurrencyResponse> {\n    return this.sendOperationRequest({ options }, getCurrencyOperationSpec);\n  }\n\n  /**\n   * Dry-run unsigned transactions on top of a given block. Supports all TXs except GAMetaTx, PayingForTx\n   * and OffchainTx. The maximum gas limit of all calls is capped. The maximum gas limit per request is a\n   * global node setting. Since DryRunCallReq object do not have a mandatory gas field, if not set a\n   * default value of 1000000 is being used instead.\n   * @param body transactions\n   * @param options The options parameters.\n   */\n  protectedDryRunTxs(\n    body: DryRunInput,\n    options?: ProtectedDryRunTxsOptionalParams,\n  ): Promise<ProtectedDryRunTxsResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      protectedDryRunTxsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the current generation\n   * @param options The options parameters.\n   */\n  getCurrentGeneration(\n    options?: GetCurrentGenerationOptionalParams,\n  ): Promise<GetCurrentGenerationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentGenerationOperationSpec,\n    );\n  }\n\n  /**\n   * Get a generation by hash\n   * @param hash The hash of the key block\n   * @param options The options parameters.\n   */\n  getGenerationByHash(\n    hash: string,\n    options?: GetGenerationByHashOptionalParams,\n  ): Promise<GetGenerationByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getGenerationByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a generation by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getGenerationByHeight(\n    height: number,\n    options?: GetGenerationByHeightOptionalParams,\n  ): Promise<GetGenerationByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getGenerationByHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get the top header (either key or micro block)\n   * @param options The options parameters.\n   */\n  getTopHeader(\n    options?: GetTopHeaderOptionalParams,\n  ): Promise<GetTopHeaderResponse> {\n    return this.sendOperationRequest({ options }, getTopHeaderOperationSpec);\n  }\n\n  /**\n   * Get the pinning transaction for the current epoch. Returns both the individual parameters as well as\n   * the parent chain type (aeternity, btc etc.), network id and a packaged 80 byte readymade payload for\n   * that chain type.\n   * @param options The options parameters.\n   */\n  getPinningTx(\n    options?: GetPinningTxOptionalParams,\n  ): Promise<GetPinningTxResponse> {\n    return this.sendOperationRequest({ options }, getPinningTxOperationSpec);\n  }\n\n  /**\n   * Get the pubkeys for the configured hyperchain contracts for staking, election and rewards\n   * @param options The options parameters.\n   */\n  getHyperchainContractPubkeys(\n    options?: GetHyperchainContractPubkeysOptionalParams,\n  ): Promise<GetHyperchainContractPubkeysResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getHyperchainContractPubkeysOperationSpec,\n    );\n  }\n\n  /**\n   * Get the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlock(\n    options?: GetCurrentKeyBlockOptionalParams,\n  ): Promise<GetCurrentKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the hash of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHash(\n    options?: GetCurrentKeyBlockHashOptionalParams,\n  ): Promise<GetCurrentKeyBlockHashResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get the height of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHeight(\n    options?: GetCurrentKeyBlockHeightOptionalParams,\n  ): Promise<GetCurrentKeyBlockHeightResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get a key block by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getKeyBlockByHash(\n    hash: string,\n    options?: GetKeyBlockByHashOptionalParams,\n  ): Promise<GetKeyBlockByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getKeyBlockByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a key block by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getKeyBlockByHeight(\n    height: number,\n    options?: GetKeyBlockByHeightOptionalParams,\n  ): Promise<GetKeyBlockByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getKeyBlockByHeightOperationSpec,\n    );\n  }\n\n  /**\n   * Get the pending key block\n   * @param options The options parameters.\n   */\n  getPendingKeyBlock(\n    options?: GetPendingKeyBlockOptionalParams,\n  ): Promise<GetPendingKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block header by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getMicroBlockHeaderByHash(\n    hash: string,\n    options?: GetMicroBlockHeaderByHashOptionalParams,\n  ): Promise<GetMicroBlockHeaderByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockHeaderByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get micro block transactions by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsByHashOptionalParams,\n  ): Promise<GetMicroBlockTransactionsByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get micro block transaction count by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsCountByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsCountByHashOptionalParams,\n  ): Promise<GetMicroBlockTransactionsCountByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsCountByHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transaction by hash and index\n   * @param hash The hash of the micro block\n   * @param index The index of the transaction in a block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionByHashAndIndex(\n    hash: string,\n    index: number,\n    options?: GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  ): Promise<GetMicroBlockTransactionByHashAndIndexResponse> {\n    return this.sendOperationRequest(\n      { hash, index, options },\n      getMicroBlockTransactionByHashAndIndexOperationSpec,\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByName(\n    name: string,\n    options?: GetNameEntryByNameOptionalParams,\n  ): Promise<GetNameEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getNameEntryByNameOperationSpec,\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param nameHash The name hash of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByNameHash(\n    nameHash: string,\n    options?: GetNameEntryByNameHashOptionalParams,\n  ): Promise<GetNameEntryByNameHashResponse> {\n    return this.sendOperationRequest(\n      { nameHash, options },\n      getNameEntryByNameHashOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleByPubkey(\n    pubkey: string,\n    options?: GetOracleByPubkeyOptionalParams,\n  ): Promise<GetOracleByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get oracle queries by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleQueriesByPubkey(\n    pubkey: string,\n    options?: GetOracleQueriesByPubkeyOptionalParams,\n  ): Promise<GetOracleQueriesByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleQueriesByPubkeyOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle query by public key and query ID\n   * @param pubkey The public key of the oracle\n   * @param queryId The ID of the query\n   * @param options The options parameters.\n   */\n  getOracleQueryByPubkeyAndQueryId(\n    pubkey: string,\n    queryId: string,\n    options?: GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  ): Promise<GetOracleQueryByPubkeyAndQueryIdResponse> {\n    return this.sendOperationRequest(\n      { pubkey, queryId, options },\n      getOracleQueryByPubkeyAndQueryIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get peer public key\n   * @param options The options parameters.\n   */\n  getPeerPubkey(\n    options?: GetPeerPubkeyOptionalParams,\n  ): Promise<GetPeerPubkeyResponse> {\n    return this.sendOperationRequest({ options }, getPeerPubkeyOperationSpec);\n  }\n\n  /**\n   * Get minimum gas prices in recent blocks\n   * @param options The options parameters.\n   */\n  getRecentGasPrices(\n    options?: GetRecentGasPricesOptionalParams,\n  ): Promise<GetRecentGasPricesResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getRecentGasPricesOperationSpec,\n    );\n  }\n\n  /**\n   * Get the status of a node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get oldest keyblock hashes counting from genesis including orphans\n   * @param options The options parameters.\n   */\n  getChainEnds(\n    options?: GetChainEndsOptionalParams,\n  ): Promise<GetChainEndsResponse> {\n    return this.sendOperationRequest({ options }, getChainEndsOperationSpec);\n  }\n\n  /**\n   * Get the sync status of a node\n   * @param options The options parameters.\n   */\n  getSyncStatus(\n    options?: GetSyncStatusOptionalParams,\n  ): Promise<GetSyncStatusResponse> {\n    return this.sendOperationRequest({ options }, getSyncStatusOperationSpec);\n  }\n\n  /**\n   * Post a new transaction\n   * @param body The new transaction\n   * @param options The options parameters.\n   */\n  postTransaction(\n    body: EncodedTx,\n    options?: PostTransactionOptionalParams,\n  ): Promise<PostTransactionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      postTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get a transaction by hash\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionByHash(\n    hash: string,\n    options?: GetTransactionByHashOptionalParams,\n  ): Promise<GetTransactionByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionByHashOperationSpec,\n    );\n  }\n\n  /**\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionInfoByHash(\n    hash: string,\n    options?: GetTransactionInfoByHashOptionalParams,\n  ): Promise<GetTransactionInfoByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionInfoByHashOperationSpec,\n    );\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountByPubkeyAndHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountByPubkeyAndHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    410: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountNextNonceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/next-nonce\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NextNonceResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.strategy],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingAccountTransactionsByPubkeyOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/accounts/{pubkey}/transactions/pending\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SignedTxs,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.pubkey],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAuctionEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/auctions/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AuctionEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContractObject,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/code\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractPoIOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/poi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PoI,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrencyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/currency\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Currency,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst protectedDryRunTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dry-run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DryRunResults,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    403: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getCurrentGenerationOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getGenerationByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getGenerationByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTopHeaderOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/headers/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Header,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPinningTxOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/pin-tx\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PinningTx,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHyperchainContractPubkeysOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/contracts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HCContractPubkeys,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/hash\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HashResponse,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getCurrentKeyBlockHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/height\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeightResponse,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockHeaderByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/header\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockHeader,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsCountByHashOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/micro-blocks/hash/{hash}/transactions/count\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.CountResponse,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.hash],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getMicroBlockTransactionByHashAndIndexOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/micro-blocks/hash/{hash}/transactions/index/{index}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.SignedTx,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.hash, Parameters.index],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getNameEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameEntryByNameHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/hash/{name_hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.nameHash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegisteredOracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQueries,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.fromParam,\n    Parameters.limit,\n    Parameters.typeParam,\n  ],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueryByPubkeyAndQueryIdOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/oracles/{pubkey}/queries/{query-id}\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper: Mappers.OracleQuery,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n      404: {\n        bodyMapper: Mappers.ErrorModel,\n        isError: true,\n      },\n    },\n    urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.queryId],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getPeerPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/peers/pubkey\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PeerPubKey,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getRecentGasPricesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/recent-gas-prices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"GasPricesItem\" } },\n        },\n      },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChainEndsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status/chain-ends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } },\n      },\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSyncStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/sync-status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncStatus,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst postTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PostTxResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer,\n};\nconst getTransactionByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionInfoByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TxInfoObject,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n    410: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","// eslint-disable-next-line max-classes-per-file\nimport { OperationOptions } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node/index.js';\nimport { UnsupportedVersionError } from './utils/errors.js';\nimport { ConsensusProtocolVersion } from './tx/builder/constants.js';\n\ninterface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\n/**\n * @category chain\n */\nexport default class Node extends NodeApi {\n  readonly #ignoreVersion: boolean;\n\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if node\n   * or consensus protocol version is not supported, use with caution\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: NodeOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    const getVersion = async (opts: OperationOptions): Promise<string> =>\n      (await this._getCachedStatus(opts)).nodeVersion;\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genVersionCheckPolicy('node', getVersion, '7.1.0', '8.0.0', ignoreVersion),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorModel) =>\n          [' ', body.reason, body.errorCode == null ? '' : ` (${body.errorCode})`].join(''),\n        ),\n      ],\n      ...options,\n    });\n    this.#ignoreVersion = ignoreVersion;\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  #cachedStatusPromise?: ReturnType<NodeApi['getStatus']>;\n\n  async _getCachedStatus(options?: OperationOptions): ReturnType<NodeApi['getStatus']> {\n    if (this.#cachedStatusPromise != null) return this.#cachedStatusPromise;\n    return this.getStatus(options);\n  }\n\n  override async getStatus(\n    ...args: Parameters<NodeApi['getStatus']>\n  ): ReturnType<NodeApi['getStatus']> {\n    const promise = super.getStatus(...args);\n    promise.then(\n      () => {\n        this.#cachedStatusPromise = promise;\n      },\n      () => {},\n    );\n    return promise;\n  }\n\n  #isHyperchainPromise?: Promise<boolean>;\n\n  async _isHyperchain(): Promise<boolean> {\n    if (this.#isHyperchainPromise != null) return this.#isHyperchainPromise;\n    this.#isHyperchainPromise = this.getHyperchainContractPubkeys({\n      requestOptions: { customHeaders: { '__no-retry': 'true' } },\n    }).then(\n      () => true,\n      (error) => {\n        if (error.message !== 'v3/hyperchain/contracts error: 404 status code') throw error;\n        return false;\n      },\n    );\n    return this.#isHyperchainPromise;\n  }\n\n  /**\n   * Returns network ID provided by node.\n   * This method won't do extra requests on subsequent calls.\n   */\n  async getNetworkId(): Promise<string> {\n    return (await this._getCachedStatus()).networkId;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce((acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc), {\n        effectiveAtHeight: -1,\n        version: 0,\n      }).version;\n    if (ConsensusProtocolVersion[consensusProtocolVersion] == null) {\n      const version = consensusProtocolVersion.toString();\n      const versions = Object.values(ConsensusProtocolVersion)\n        .filter((el) => typeof el === 'number')\n        .map((el) => +el);\n      const geVersion = Math.min(...versions).toString();\n      const ltVersion = (Math.max(...versions) + 1).toString();\n      const error = new UnsupportedVersionError(\n        'consensus protocol',\n        version,\n        geVersion,\n        ltVersion,\n      );\n      if (this.#ignoreVersion) console.warn(error.message);\n      else throw error;\n    }\n\n    return {\n      url: this.$host,\n      nodeNetworkId,\n      version: nodeVersion,\n      consensusProtocolVersion,\n    };\n  }\n}\n","import { Encoded } from '../utils/encoder.js';\nimport { buildTx, getSchema, unpackTx } from './builder/index.js';\nimport { Tag } from './builder/constants.js';\nimport { TransactionError, UnexpectedTsError } from '../utils/errors.js';\n\n/**\n * Returns account address that signed a transaction\n * @param transaction - transaction to get a signer of\n * @category utils\n */\nexport default function getTransactionSignerAddress(\n  transaction: Encoded.Transaction,\n): Encoded.AccountAddress {\n  const params = unpackTx(transaction);\n  switch (params.tag) {\n    case Tag.SignedTx:\n      return getTransactionSignerAddress(buildTx(params.encodedTx));\n    case Tag.GaMetaTx:\n      return params.gaId;\n    default:\n  }\n\n  const nonce = getSchema(params.tag, params.version).find(([name]) => name === 'nonce')?.[1];\n  if (nonce == null)\n    throw new TransactionError(`Transaction doesn't have nonce: ${Tag[params.tag]}`);\n  if (!('senderKey' in nonce)) throw new UnexpectedTsError();\n  const address = params[nonce.senderKey as keyof typeof params] as unknown as string;\n  return address.replace(/^ok_/, 'ak_') as Encoded.AccountAddress;\n}\n","import { Encoded } from '../utils/encoder.js';\nimport Node from '../Node.js';\nimport CompilerBase from '../contract/compiler/Base.js';\nimport { Int } from '../tx/builder/constants.js';\nimport { AciValue, Domain } from '../utils/typed-data.js';\n\ninterface AuthData {\n  fee?: Int;\n  gasLimit?: number;\n  gasPrice?: Int;\n  callData?: Encoded.ContractBytearray;\n  sourceCode?: string;\n  args?: any[];\n}\n\n/**\n * Account is one of the three basic building blocks of an\n * {@link AeSdk} and provides access to a signing key pair.\n * @category account\n */\nexport default abstract class AccountBase {\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   * @param options.innerTx - Sign as inner transaction for PayingFor\n   * @param options.authData - Object with gaMeta params\n   * @returns Signed transaction\n   */\n  abstract signTransaction(\n    tx: Encoded.Transaction,\n    options: {\n      innerTx?: boolean;\n      networkId?: string;\n      authData?: AuthData | ((tx: Encoded.Transaction) => Promise<AuthData>);\n      onNode?: Node;\n      onCompiler?: CompilerBase;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Transaction>;\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signMessage(\n    message: string,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Sign typed data\n   * @param data - Encoded data to sign\n   * @param aci - Type of data to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    options?: Domain & {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Signature>;\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signature\n   * @deprecated Use `unsafeSign` method instead\n   */\n  abstract sign(\n    data: string | Uint8Array,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract unsafeSign(\n    data: string | Uint8Array,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Account address\n   */\n  readonly address!: Encoded.AccountAddress;\n\n  /**\n   * Sign delegation, works only in Ceres\n   * @param delegation - Delegation to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signDelegation(\n    delegation: Encoded.Bytearray,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Signature>;\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport canonicalize from 'canonicalize';\nimport { Encoded, decode } from './encoder.js';\nimport { hash, messagePrefixLength } from './crypto.js';\nimport { concatBuffers } from './other.js';\n\n/**\n * Hashes arbitrary object, can be used to inline the aci hash to contract source code\n * @category typed data signing\n */\nexport function hashJson(data: unknown): Buffer {\n  return hash(canonicalize(data) ?? '');\n}\n\n// TODO: move this type to calldata library https://github.com/aeternity/aepp-calldata-js/issues/215\n// based on https://github.com/aeternity/aepp-calldata-js/blob/82b5a98f9b308482627da8d7484d213e9cf87151/src/AciTypeResolver.js#L129\nexport type AciValue =\n  | 'void'\n  | 'unit'\n  | 'int'\n  | 'bool'\n  | 'string'\n  | 'bits'\n  | 'hash'\n  | 'signature'\n  | 'address'\n  | 'contract_pubkey'\n  | 'Chain.ttl'\n  | 'Chain.ga_meta_tx'\n  | 'Chain.paying_for_tx'\n  | 'Chain.base_tx'\n  | 'AENS.pointee'\n  | 'AENS.name'\n  | 'MCL_BLS12_381.fr'\n  | 'MCL_BLS12_381.fp'\n  | { 'Set.set': readonly [AciValue] }\n  | { bytes: number }\n  | { list: readonly [AciValue] }\n  | { map: readonly [AciValue, AciValue] }\n  | { tuple: readonly AciValue[] }\n  | { record: ReadonlyArray<{ name: string; type: AciValue }> }\n  | { variant: ReadonlyArray<{ [key: string]: readonly AciValue[] }> }\n  | { option: readonly [AciValue] }\n  | { oracle: readonly [AciValue, AciValue] }\n  | { oracle_query: readonly [AciValue, AciValue] };\n\nexport interface Domain {\n  name?: string;\n  version?: number;\n  networkId?: string;\n  contractAddress?: Encoded.ContractAddress;\n}\n\n/**\n * Hashes domain object, can be used to inline domain hash to contract source code\n * @category typed data signing\n */\nexport function hashDomain(domain: Domain): Buffer {\n  const domainAci = {\n    record: [\n      {\n        name: 'name',\n        type: { option: ['string'] },\n      },\n      {\n        name: 'version',\n        type: { option: ['int'] },\n      },\n      {\n        name: 'networkId',\n        type: { option: ['string'] },\n      },\n      {\n        name: 'contractAddress',\n        type: { option: ['contract_pubkey'] },\n      },\n    ],\n  } as const;\n  const domainType = new TypeResolver().resolveType(domainAci, {});\n  const fateValue = new ContractByteArrayEncoder().encodeWithType(domain, domainType);\n  return hash(decode(fateValue));\n}\n\n/**\n * @category typed data signing\n */\nexport function hashTypedData(\n  data: Encoded.ContractBytearray,\n  aci: AciValue,\n  domain: Domain,\n): Buffer {\n  return hash(\n    concatBuffers([\n      messagePrefixLength,\n      new Uint8Array([0]),\n      hashDomain(domain),\n      hashJson(aci),\n      hash(decode(data)),\n    ]),\n  );\n}\n","import nacl from 'tweetnacl';\nimport AccountBase from './Base.js';\nimport { hash, hashMessage, messagePrefixLength } from '../utils/crypto.js';\nimport { ArgumentError } from '../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { concatBuffers } from '../utils/other.js';\nimport { hashTypedData, AciValue } from '../utils/typed-data.js';\nimport { buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\nexport function getBufferToSign(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  innerTx: boolean,\n): Uint8Array {\n  const prefixes = [networkId];\n  if (innerTx) prefixes.push('inner_tx');\n  const rlpBinaryTx = decode(transaction);\n  return concatBuffers([Buffer.from(prefixes.join('-')), hash(rlpBinaryTx)]);\n}\n\n/**\n * In-memory account class\n * @category account\n */\nexport default class AccountMemory extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  readonly #secretKeyDecoded: Uint8Array;\n\n  /**\n   * @param secretKey - Secret key\n   */\n  constructor(public readonly secretKey: Encoded.AccountSecretKey) {\n    super();\n    const keyPair = nacl.sign.keyPair.fromSeed(decode(secretKey));\n    this.#secretKeyDecoded = keyPair.secretKey;\n    this.address = encode(keyPair.publicKey, Encoding.AccountAddress);\n  }\n\n  /**\n   * Generates a new AccountMemory using a random secret key\n   */\n  static generate(): AccountMemory {\n    const secretKey = encode(nacl.randomBytes(32), Encoding.AccountSecretKey);\n    return new AccountMemory(secretKey);\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override async sign(data: string | Uint8Array, options?: any): Promise<Uint8Array> {\n    return this.unsafeSign(data, options);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override async unsafeSign(data: string | Uint8Array, options?: any): Promise<Uint8Array> {\n    return nacl.sign.detached(Buffer.from(data), this.#secretKeyDecoded);\n  }\n\n  override async signTransaction(\n    transaction: Encoded.Transaction,\n    { innerTx, networkId, ...options }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) {\n      throw new ArgumentError('networkId', 'provided', networkId);\n    }\n    const rlpBinaryTx = decode(transaction);\n    const txWithNetworkId = getBufferToSign(transaction, networkId, innerTx === true);\n\n    const signatures = [await this.unsafeSign(txWithNetworkId, options)];\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rlpBinaryTx, signatures });\n  }\n\n  override async signMessage(message: string, options?: any): Promise<Uint8Array> {\n    return this.unsafeSign(hashMessage(message), options);\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    {\n      name,\n      version,\n      networkId,\n      contractAddress,\n      ...options\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const dHash = hashTypedData(data, aci, {\n      name,\n      version,\n      networkId,\n      contractAddress,\n    });\n    const signature = await this.unsafeSign(dHash, options);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signDelegation(\n    delegation: Encoded.Bytearray,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      messagePrefixLength,\n      new Uint8Array([1]),\n      Buffer.from(networkId),\n      decode(delegation),\n    ]);\n    const signature = await this.unsafeSign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n}\n","import { Encoded } from '../utils/encoder.js';\nimport { buildTx, buildTxHash, unpackTx } from './builder/index.js';\nimport { Tag } from './builder/constants.js';\nimport { verifySignature } from '../utils/crypto.js';\nimport { getBufferToSign } from '../account/Memory.js';\nimport { IllegalArgumentError, InternalError, TransactionError } from '../utils/errors.js';\nimport Node from '../Node.js';\nimport getTransactionSignerAddress from './transaction-signer.js';\n\n/**\n * Calculates the cost of transaction execution\n * Provides an upper cost of contract-call-related transactions because of `gasLimit`.\n * Also assumes that oracle query fee is 0 unless it is provided in options.\n *\n * The idea is that if you need to show transaction details with some accuracy you can define\n * expense fields that you want to show separately. And to show `getExecutionCost` result as a fee,\n * subtracting all fields shown separately.\n *\n * @example\n * ```vue\n * <template>\n * Amount: {{ txUnpacked.amount }}\n * Name fee: {{ txUnpacked.nameFee }}\n * Other fees: {{ getExecutionCost(txEncoded) - txUnpacked.amount - txUnpacked.nameFee }}\n * </template>\n * ```\n *\n * Doing this way you won't worry to show wrong fee for a transaction you may not support. Because\n * the SDK calculates the overall price of any transaction on its side.\n *\n * @param transaction - Transaction to calculate the cost of\n * @param options - Options\n * @param options.innerTx - Should be provided if transaction wrapped with Tag.PayingForTx\n * @param options.gasUsed - Amount of gas actually used to make calculation more accurate\n * @param options.queryFee - Oracle query fee\n * @param options.isInitiator - Is transaction signer an initiator of state channel\n * @category utils\n */\nexport function getExecutionCost(\n  transaction: Encoded.Transaction,\n  {\n    innerTx,\n    gasUsed,\n    queryFee,\n    isInitiator,\n  }: {\n    innerTx?: 'fee-payer' | 'freeloader';\n    gasUsed?: number;\n    queryFee?: string;\n    isInitiator?: boolean;\n  } = {},\n): bigint {\n  const params = unpackTx(transaction);\n  if (params.tag === Tag.SignedTx) {\n    throw new IllegalArgumentError(\n      \"Transaction shouldn't be a SignedTx, use `getExecutionCostBySignedTx` instead\",\n    );\n  }\n\n  let res = 0n;\n  if ('fee' in params && innerTx !== 'freeloader') {\n    res += BigInt(params.fee);\n  }\n  if (params.tag === Tag.NameClaimTx) {\n    res += BigInt(params.nameFee);\n  }\n  if (params.tag === Tag.OracleQueryTx) {\n    res += BigInt(params.queryFee);\n  }\n  if (params.tag === Tag.OracleRespondTx) {\n    res -= BigInt(queryFee ?? 0);\n  }\n  if (params.tag === Tag.ChannelSettleTx) {\n    if (isInitiator === true) res -= BigInt(params.initiatorAmountFinal);\n    if (isInitiator === false) res -= BigInt(params.responderAmountFinal);\n  }\n  if (\n    (params.tag === Tag.SpendTx ||\n      params.tag === Tag.ContractCreateTx ||\n      params.tag === Tag.ContractCallTx ||\n      params.tag === Tag.ChannelDepositTx) &&\n    innerTx !== 'fee-payer'\n  ) {\n    res += BigInt(params.amount);\n  }\n  if (params.tag === Tag.ContractCreateTx) res += BigInt(params.deposit);\n  if (\n    (params.tag === Tag.ContractCreateTx ||\n      params.tag === Tag.ContractCallTx ||\n      params.tag === Tag.GaAttachTx ||\n      params.tag === Tag.GaMetaTx) &&\n    innerTx !== 'freeloader'\n  ) {\n    res += BigInt(params.gasPrice) * BigInt(gasUsed ?? params.gasLimit);\n  }\n  if (params.tag === Tag.GaMetaTx || params.tag === Tag.PayingForTx) {\n    res += getExecutionCost(\n      buildTx(params.tx.encodedTx),\n      params.tag === Tag.PayingForTx ? { innerTx: 'fee-payer' } : {},\n    );\n  }\n  return res;\n}\n\n/**\n * Calculates the cost of signed transaction execution\n * @param transaction - Transaction to calculate the cost of\n * @param networkId - Network id used to sign the transaction\n * @param options - Options\n * @category utils\n */\nexport function getExecutionCostBySignedTx(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  options?: Omit<Parameters<typeof getExecutionCost>[1], 'innerTx'>,\n): bigint {\n  const params = unpackTx(transaction, Tag.SignedTx);\n  if (params.encodedTx.tag === Tag.GaMetaTx) {\n    return getExecutionCost(buildTx(params.encodedTx), options);\n  }\n\n  const tx = buildTx(params.encodedTx);\n  const address = getTransactionSignerAddress(tx);\n  const [isInnerTx, isNotInnerTx] = [true, false].map((f) =>\n    verifySignature(getBufferToSign(tx, networkId, f), params.signatures[0], address),\n  );\n  if (!isInnerTx && !isNotInnerTx) throw new TransactionError(\"Can't verify signature\");\n  return getExecutionCost(buildTx(params.encodedTx), {\n    ...(isInnerTx && { innerTx: 'freeloader' }),\n    ...options,\n  });\n}\n\n/**\n * Calculates the cost of signed and not signed transaction execution using node\n * @param transaction - Transaction to calculate the cost of\n * @param node - Node to use\n * @param options - Options\n * @param options.isMined - Is transaction already mined or not\n * @category utils\n */\nexport async function getExecutionCostUsingNode(\n  transaction: Encoded.Transaction,\n  node: Node,\n  { isMined, ...options }: { isMined?: boolean } & Parameters<typeof getExecutionCost>[1] = {},\n): Promise<bigint> {\n  let params = unpackTx(transaction);\n  const isSignedTx = params.tag === Tag.SignedTx;\n  const txHash = isSignedTx && isMined === true && buildTxHash(transaction);\n  if (params.tag === Tag.SignedTx) params = params.encodedTx;\n\n  // TODO: set gasUsed for PayingForTx after solving https://github.com/aeternity/aeternity/issues/4087\n  if (\n    options.gasUsed == null &&\n    txHash !== false &&\n    [Tag.ContractCreateTx, Tag.ContractCallTx, Tag.GaAttachTx, Tag.GaMetaTx].includes(params.tag)\n  ) {\n    const { callInfo, gaInfo } = await node.getTransactionInfoByHash(txHash);\n    const combinedInfo = callInfo ?? gaInfo;\n    if (combinedInfo == null) {\n      throw new InternalError(`callInfo and gaInfo is not available for transaction ${txHash}`);\n    }\n    options.gasUsed = combinedInfo.gasUsed;\n  }\n\n  if (options.queryFee == null && Tag.OracleRespondTx === params.tag) {\n    options.queryFee = (await node.getOracleByPubkey(params.oracleId)).queryFee.toString();\n  }\n\n  if (options.isInitiator == null && Tag.ChannelSettleTx === params.tag && isMined !== true) {\n    const { initiatorId } = await node.getChannelByPubkey(params.channelId);\n    options.isInitiator = params.fromId === initiatorId;\n  }\n\n  return isSignedTx\n    ? getExecutionCostBySignedTx(transaction, await node.getNetworkId(), options)\n    : getExecutionCost(transaction, options);\n}\n","import { RestError } from '@azure/core-rest-pipeline';\nimport { hash, isEncoded, verifySignature } from '../utils/crypto.js';\nimport { TxUnpacked } from './builder/schema.generated.js';\nimport { CtVersion, ProtocolToVmAbi } from './builder/field-types/ct-version.js';\nimport { Tag, ConsensusProtocolVersion } from './builder/constants.js';\nimport { buildTx, unpackTx } from './builder/index.js';\nimport { concatBuffers, isAccountNotFoundError } from '../utils/other.js';\nimport { Encoded, Encoding, decode } from '../utils/encoder.js';\nimport Node from '../Node.js';\nimport { Account } from '../apis/node/index.js';\nimport { genAggressiveCacheGetResponsesPolicy } from '../utils/autorest.js';\nimport { UnexpectedTsError } from '../utils/errors.js';\nimport getTransactionSignerAddress from './transaction-signer.js';\nimport { getExecutionCostUsingNode } from './execution-cost.js';\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: TxUnpacked,\n  options: {\n    // TODO: remove after fixing node types\n    account: Account & { id: Encoded.AccountAddress };\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    height: number;\n    consensusProtocolVersion: ConsensusProtocolVersion;\n  },\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nasync function verifyTransactionInternal(\n  tx: TxUnpacked,\n  node: Node,\n  parentTxTypes: Tag[],\n): Promise<ValidatorResult[]> {\n  const address = getTransactionSignerAddress(buildTx(tx));\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    node\n      .getAccountByPubkey(address)\n      .catch((error) => {\n        if (!isAccountNotFoundError(error)) throw error;\n        return { id: address, balance: 0n, nonce: 0 };\n      })\n      // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n      .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(), // TODO: don't request height on each validation, use caching\n    node.getNodeInfo(),\n  ]);\n\n  return (\n    await Promise.all(\n      validators.map(async (v) =>\n        v(tx, {\n          node,\n          account,\n          height,\n          consensusProtocolVersion,\n          nodeNetworkId,\n          parentTxTypes,\n        }),\n      ),\n    )\n  ).flat();\n}\n\n/**\n * Transaction Validator\n * This function validates some transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param nodeNotCached - Node to validate transaction against\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Parameters<typeof unpackTx>[0],\n  nodeNotCached: Node,\n): Promise<ValidatorResult[]> {\n  const pipeline = nodeNotCached.pipeline.clone();\n  pipeline.removePolicy({ name: 'parse-big-int' });\n  const node = new Node(nodeNotCached.$host, {\n    ignoreVersion: true,\n    pipeline,\n    additionalPolicies: [genAggressiveCacheGetResponsesPolicy()],\n  });\n  node._getCachedStatus = async () => nodeNotCached._getCachedStatus();\n  return verifyTransactionInternal(unpackTx(transaction), node, []);\n}\n\nvalidators.push(\n  (tx, { account, nodeNetworkId, parentTxTypes }) => {\n    if (tx.tag !== Tag.SignedTx) return [];\n    const { encodedTx, signatures } = tx;\n    if ((encodedTx ?? signatures) == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature like in state channels\n    const prefix = Buffer.from(\n      [nodeNetworkId, ...(parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [])].join('-'),\n    );\n    const txBinary = decode(buildTx(encodedTx));\n    const txWithNetworkId = concatBuffers([prefix, txBinary]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(txBinary)]);\n    if (\n      verifySignature(txWithNetworkId, signatures[0], account.id) ||\n      verifySignature(txHashWithNetworkId, signatures[0], account.id)\n    )\n      return [];\n    return [\n      {\n        message:\n          'Signature cannot be verified, please ensure that you transaction have' +\n          ' the correct prefix and the correct private key for the sender address',\n        key: 'InvalidSignature',\n        checkedKeys: ['encodedTx', 'signatures'],\n      },\n    ];\n  },\n  async (tx, { node, parentTxTypes }) => {\n    let nestedTx;\n    if ('encodedTx' in tx) nestedTx = tx.encodedTx;\n    if ('tx' in tx) nestedTx = tx.tx;\n    if (nestedTx == null) return [];\n    return verifyTransactionInternal(nestedTx, node, [...parentTxTypes, tx.tag]);\n  },\n  (tx, { height }) => {\n    if (!('ttl' in tx)) return [];\n    if (tx.ttl === 0 || tx.ttl > height) return [];\n    return [\n      {\n        message: `TTL ${tx.ttl} is already expired, current height is ${height}`,\n        key: 'ExpiredTTL',\n        checkedKeys: ['ttl'],\n      },\n    ];\n  },\n  async (tx, { account, parentTxTypes, node }) => {\n    if (parentTxTypes.length !== 0) return [];\n    const cost = await getExecutionCostUsingNode(buildTx(tx), node).catch(() => 0n);\n    if (cost <= account.balance) return [];\n    return [\n      {\n        message: `Account balance ${account.balance} is not enough to execute the transaction that costs ${cost}`,\n        key: 'InsufficientBalance',\n        checkedKeys: ['amount', 'fee', 'nameFee', 'gasLimit', 'gasPrice'],\n      },\n    ];\n  },\n  async (tx, { node }) => {\n    if (tx.tag !== Tag.SpendTx || isEncoded(tx.recipientId, Encoding.Name)) return [];\n    const recipient = await node.getAccountByPubkey(tx.recipientId).catch((error) => {\n      if (!isAccountNotFoundError(error)) throw error;\n      return null;\n    });\n    if (recipient == null || recipient.payable === true) return [];\n    return [\n      {\n        message: 'Recipient account is not payable',\n        key: 'RecipientAccountNotPayable',\n        checkedKeys: ['recipientId'],\n      },\n    ];\n  },\n  (tx, { account }) => {\n    let message;\n    if (tx.tag === Tag.SignedTx && account.kind === 'generalized' && tx.signatures.length !== 0) {\n      message = \"Generalized account can't be used to generate SignedTx with signatures\";\n    }\n    if (tx.tag === Tag.GaMetaTx && account.kind === 'basic') {\n      message = \"Basic account can't be used to generate GaMetaTx\";\n    }\n    if (message == null) return [];\n    return [{ message, key: 'InvalidAccountType', checkedKeys: ['tag'] }];\n  },\n  // TODO: revert nonce check\n  // TODO: ensure nonce valid when paying for own tx\n  (tx, { consensusProtocolVersion }) => {\n    const oracleCall = Tag.OracleRegisterTx === tx.tag;\n    const contractCreate = Tag.ContractCreateTx === tx.tag || Tag.GaAttachTx === tx.tag;\n    const contractCall = Tag.ContractCallTx === tx.tag || Tag.GaMetaTx === tx.tag;\n    const type =\n      (oracleCall ? 'oracle-call' : null) ??\n      (contractCreate ? 'contract-create' : null) ??\n      (contractCall ? 'contract-call' : null);\n    if (type == null) return [];\n    const protocol = ProtocolToVmAbi[consensusProtocolVersion][type] as {\n      abiVersion: readonly any[];\n      vmVersion: readonly any[];\n    };\n\n    let ctVersion: Partial<CtVersion> | undefined;\n    if ('abiVersion' in tx) ctVersion = { abiVersion: tx.abiVersion };\n    if ('ctVersion' in tx) ctVersion = tx.ctVersion;\n    if (ctVersion == null) throw new UnexpectedTsError();\n    if (\n      !protocol.abiVersion.includes(ctVersion.abiVersion) ||\n      (contractCreate && !protocol.vmVersion.includes(ctVersion.vmVersion))\n    ) {\n      return [\n        {\n          message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(protocol)}`,\n          key: 'VmAndAbiVersionMismatch',\n          checkedKeys: ['ctVersion', 'abiVersion'],\n        },\n      ];\n    }\n    return [];\n  },\n  async (tx, { node }) => {\n    if (Tag.ContractCallTx !== tx.tag) return [];\n    // TODO: remove after solving https://github.com/aeternity/aeternity/issues/3669\n    if (tx.contractId.startsWith('nm_')) return [];\n    try {\n      const { active } = await node.getContract(tx.contractId);\n      if (active) return [];\n      return [\n        {\n          message: `Contract ${tx.contractId} is not active`,\n          key: 'ContractNotActive',\n          checkedKeys: ['contractId'],\n        },\n      ];\n    } catch (error) {\n      if (!(error instanceof RestError) || error.response?.bodyAsText == null) throw error;\n      return [\n        {\n          message: JSON.parse(error.response.bodyAsText).reason, // TODO: use parsedBody instead\n          key: 'ContractNotFound',\n          checkedKeys: ['contractId'],\n        },\n      ];\n    }\n  },\n);\n","import verifyTransaction, { ValidatorResult } from './tx/validator.js';\nimport { ensureError } from './utils/other.js';\nimport { TransactionError } from './utils/errors.js';\nimport Node from './Node.js';\nimport { SignedTx } from './apis/node/index.js';\nimport { Encoded } from './utils/encoder.js';\nimport AccountBase from './account/Base.js';\nimport { buildTxHash } from './tx/builder/index.js';\nimport { poll, waitForTxConfirm } from './chain.js';\n\n/**\n * @category exception\n */\nexport class InvalidTxError extends TransactionError {\n  validation: ValidatorResult[];\n\n  transaction: Encoded.Transaction;\n\n  constructor(message: string, validation: ValidatorResult[], transaction: Encoded.Transaction) {\n    super(message);\n    this.name = 'InvalidTxError';\n    this.validation = validation;\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Signs and submits transaction for mining\n * @category chain\n * @param txUnsigned - Transaction to sign and submit\n * @param options - Options\n * @returns Transaction details\n */\nexport async function sendTransaction(\n  txUnsigned: Encoded.Transaction,\n  {\n    onNode,\n    onAccount,\n    verify = true,\n    waitMined = true,\n    confirm,\n    innerTx,\n    ...options\n  }: SendTransactionOptions,\n): Promise<SendTransactionReturnType> {\n  const tx = await onAccount.signTransaction(txUnsigned, {\n    ...options,\n    onNode,\n    innerTx,\n    networkId: await onNode.getNetworkId(),\n  });\n\n  if (innerTx === true) return { hash: buildTxHash(tx), rawTx: tx };\n\n  if (verify) {\n    const validation = await verifyTransaction(tx, onNode);\n    if (validation.length > 0) {\n      const message = `Transaction verification errors: ${validation\n        .map((v: { message: string }) => v.message)\n        .join(', ')}`;\n      throw new InvalidTxError(message, validation, tx);\n    }\n  }\n\n  try {\n    let __queue;\n    try {\n      __queue = onAccount != null ? `tx-${onAccount.address}` : null;\n    } catch (error) {\n      __queue = null;\n    }\n    const { txHash } = await onNode.postTransaction(\n      { tx },\n      {\n        requestOptions: {\n          customHeaders: {\n            // TODO: remove __retry-code after fixing https://github.com/aeternity/aeternity/issues/3803\n            '__retry-code': '400',\n            ...(__queue != null ? { __queue } : {}),\n          },\n        },\n      },\n    );\n\n    if (waitMined) {\n      const pollResult = await poll(txHash, { onNode, ...options });\n      const txData = {\n        ...pollResult,\n        hash: pollResult.hash as Encoded.TxHash,\n        rawTx: tx,\n      };\n      // wait for transaction confirmation\n      if (confirm != null && +confirm > 0) {\n        const c = typeof confirm === 'boolean' ? undefined : confirm;\n        return {\n          ...txData,\n          confirmationHeight: await waitForTxConfirm(txHash, { onNode, confirm: c, ...options }),\n        };\n      }\n      return txData;\n    }\n    return { hash: txHash, rawTx: tx };\n  } catch (error) {\n    ensureError(error);\n    throw Object.assign(error, {\n      rawTx: tx,\n      verifyTx: async () => verifyTransaction(tx, onNode),\n    });\n  }\n}\n\ntype SendTransactionOptionsType = {\n  /**\n   * Node to use\n   */\n  onNode: Node;\n  /**\n   * Account to use\n   */\n  onAccount: AccountBase;\n  /**\n   * Verify transaction before broadcast, throw error if not\n   */\n  verify?: boolean;\n  /**\n   * Ensure that transaction get into block\n   */\n  waitMined?: boolean;\n  /**\n   * Number of micro blocks that should be mined after tx get included\n   */\n  confirm?: boolean | number;\n} & Parameters<typeof poll>[1] &\n  Omit<Parameters<typeof waitForTxConfirm>[1], 'confirm'> &\n  Parameters<AccountBase['signTransaction']>[1];\nexport interface SendTransactionOptions extends SendTransactionOptionsType {}\ninterface SendTransactionReturnType extends Partial<SignedTx> {\n  hash: Encoded.TxHash;\n  // TODO: use `SignedTx.encodedTx` instead\n  rawTx: Encoded.Transaction;\n  confirmationHeight?: number;\n}\n","import canonicalize from 'canonicalize';\nimport AccountBase from '../account/Base.js';\nimport { Encoded, Encoding, decode, encode } from './encoder.js';\nimport { verifySignature } from './crypto.js';\nimport { ArgumentError, InvalidSignatureError } from './errors.js';\n\n// TODO: use Buffer.from(data, 'base64url') after solving https://github.com/feross/buffer/issues/309\nconst toBase64Url = (data: Buffer | Uint8Array | string): string =>\n  Buffer.from(data).toString('base64').replaceAll('/', '_').replaceAll('+', '-').replace(/=+$/, '');\n\nconst fromBase64Url = (data: string): Buffer =>\n  Buffer.from(data.replaceAll('_', '/').replaceAll('-', '+'), 'base64');\n\nconst objectToBase64Url = (data: any): string => toBase64Url(canonicalize(data) ?? '');\n\nconst header = 'eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9'; // objectToBase64Url({ alg: 'EdDSA', typ: 'JWT' })\n\n/**\n * JWT including specific header\n * @category JWT\n */\nexport type Jwt = `${typeof header}.${string}.${string}`;\n\n/**\n * Generate a signed JWT\n * Provide `\"sub_jwk\": undefined` in payload to omit signer public key added by default.\n * @param originalPayload - Payload to sign\n * @param account - Account to sign by\n * @category JWT\n */\nexport async function signJwt(originalPayload: any, account: AccountBase): Promise<Jwt> {\n  const payload = { ...originalPayload };\n  if (!('sub_jwk' in payload)) {\n    payload.sub_jwk = {\n      kty: 'OKP',\n      crv: 'Ed25519',\n      x: toBase64Url(decode(account.address)),\n    };\n  }\n  if (payload.sub_jwk === undefined) delete payload.sub_jwk;\n  const body = `${header}.${objectToBase64Url(payload)}` as const;\n  const signature = await account.unsafeSign(body);\n  return `${body}.${toBase64Url(signature)}`;\n}\n\n/**\n * Unpack JWT. It will check signature if address or \"sub_jwk\" provided.\n * @param jwt - JWT to unpack\n * @param address - Address to check signature\n * @category JWT\n */\nexport function unpackJwt(\n  jwt: Jwt,\n  address?: Encoded.AccountAddress,\n): {\n  /**\n   * JWT payload as object\n   */\n  payload: any;\n  /**\n   * Undefined returned in case signature is not checked\n   */\n  signer: Encoded.AccountAddress | undefined;\n} {\n  const components = jwt.split('.');\n  if (components.length !== 3)\n    throw new ArgumentError('JWT components count', 3, components.length);\n  const [h, payloadEncoded, signature] = components;\n  if (h !== header) throw new ArgumentError('JWT header', header, h);\n  const payload = JSON.parse(fromBase64Url(payloadEncoded).toString());\n  const jwk = payload.sub_jwk ?? {};\n  const signer =\n    jwk.x == null || jwk.kty !== 'OKP' || jwk.crv !== 'Ed25519'\n      ? address\n      : encode(fromBase64Url(jwk.x), Encoding.AccountAddress);\n  if (address != null && signer !== address) {\n    throw new ArgumentError('address', `${signer} (\"sub_jwk\")`, address);\n  }\n  if (\n    signer != null &&\n    !verifySignature(Buffer.from(`${h}.${payloadEncoded}`), fromBase64Url(signature), signer)\n  ) {\n    throw new InvalidSignatureError(`JWT is not signed by ${signer}`);\n  }\n  return { payload, signer };\n}\n\n/**\n * Check is string a JWT or not. Use to validate the user input.\n * @param maybeJwt - A string to check\n * @returns True if argument is a JWT\n * @category JWT\n */\nexport function isJwt(maybeJwt: string): maybeJwt is Jwt {\n  try {\n    unpackJwt(maybeJwt as Jwt);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\n/**\n * Throws an error if argument is not JWT. Use to ensure that a value is JWT.\n * @param maybeJwt - A string to check\n * @category JWT\n */\nexport function ensureJwt(maybeJwt: string): asserts maybeJwt is Jwt {\n  unpackJwt(maybeJwt as Jwt);\n}\n\n/**\n * Check is JWT signed by address from arguments or \"sub_jwk\"\n * @param jwt - JWT to check\n * @param address - Address to check signature\n * @category JWT\n */\nexport function verifyJwt(jwt: Jwt, address?: Encoded.AccountAddress): boolean {\n  try {\n    const { signer } = unpackJwt(jwt, address);\n    return signer != null;\n  } catch (error) {\n    return false;\n  }\n}\n","import SchemaTypes from '../SchemaTypes.js';\nimport address from '../field-types/address.js';\nimport nameId from '../field-types/name-id.js';\nimport shortUIntConst from '../field-types/short-u-int-const.js';\nimport { Encoded, Encoding, decode, encode } from '../../../utils/encoder.js';\n\n/**\n * @category delegation signature\n */\nexport enum DelegationTag {\n  /**\n   * Delegation of all AENS names to a contract\n   */\n  AensWildcard = 1,\n  /**\n   * Delegation of an AENS name to a contract\n   */\n  AensName = 2,\n  /**\n   * Delegation of AENS preclaim to a contract\n   */\n  AensPreclaim = 3,\n  /**\n   * Delegation of oracle operations to a contract\n   */\n  Oracle = 4,\n  /**\n   * Delegation of oracle query to a contract\n   */\n  OracleResponse = 5,\n}\n\nconst oracleAddressField = address(Encoding.OracleAddress);\n/**\n * Oracle query ID to reply by a contract\n */\nconst queryIdField = {\n  serialize(value: Encoded.OracleQueryId): Buffer {\n    return oracleAddressField.serialize(encode(decode(value), Encoding.OracleAddress));\n  },\n  deserialize(value: Buffer): Encoded.OracleQueryId {\n    return encode(decode(oracleAddressField.deserialize(value)), Encoding.OracleQueryId);\n  },\n} as const;\n\n/**\n * Address of a contract to delegate permissions to\n */\nconst contractAddress = address(Encoding.ContractAddress);\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/8a9d1d1206174627f6aaef86159dc9c643080653/contracts/fate.md#from-ceres-serialized-signature-data}\n */\nexport const schemas = [\n  {\n    tag: shortUIntConst(DelegationTag.AensWildcard),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.AensName),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    /**\n     * AENS name to manage by a contract\n     */\n    nameId,\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.AensPreclaim),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.Oracle),\n    version: shortUIntConst(1, true),\n    accountAddress: address(Encoding.AccountAddress),\n    contractAddress,\n  },\n  {\n    tag: shortUIntConst(DelegationTag.OracleResponse),\n    version: shortUIntConst(1, true),\n    queryId: queryIdField,\n    contractAddress,\n  },\n] as const;\n\ntype Schemas = SchemaTypes<typeof schemas>;\nexport type DlgParams = Schemas['TxParams'];\nexport type DlgUnpacked = Schemas['TxUnpacked'];\n","import { Encoded, Encoding } from '../../../utils/encoder.js';\nimport { packRecord, unpackRecord } from '../common.js';\nimport { DelegationTag, schemas } from './schema.js';\nimport { DlgParams, DlgUnpacked } from './schema.generated.js';\n\n/**\n * Pack delegation\n * @category delegation signature\n * @param params - Params of delegation\n * @returns Encoded delegation\n */\nexport function packDelegation(params: DlgParams): Encoded.Bytearray {\n  return packRecord(schemas, DelegationTag, params, {}, Encoding.Bytearray);\n}\n\n/**\n * Unpack delegation\n * @category delegation signature\n * @param encoded - Encoded delegation\n * @param expectedTag - Expected delegation signature type\n * @returns Params of delegation\n */\nexport function unpackDelegation<T extends DelegationTag>(\n  encoded: Encoded.Bytearray,\n  expectedTag?: T,\n): DlgUnpacked & { tag: T } {\n  return unpackRecord(schemas, DelegationTag, encoded, expectedTag, {}) as any;\n}\n","/**\n * Aens methods - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n */\n\nimport BigNumber from 'bignumber.js';\nimport { genSalt, isEncoded } from './utils/crypto.js';\nimport { commitmentHash, isAuctionName, produceNameId } from './tx/builder/helpers.js';\nimport { Tag, AensName } from './tx/builder/constants.js';\nimport { Encoded, Encoding } from './utils/encoder.js';\nimport { LogicError } from './utils/errors.js';\nimport { sendTransaction, SendTransactionOptions } from './send-transaction.js';\nimport { Optional } from './utils/other.js';\nimport { buildTxAsync, BuildTxOptions } from './tx/builder/index.js';\nimport Node from './Node.js';\nimport AccountBase from './account/Base.js';\nimport { AddressEncodings } from './tx/builder/field-types/address.js';\n\ninterface NameRevokeOptions\n  extends BuildTxOptions<Tag.NameRevokeTx, 'nameId' | 'accountId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface KeyPointers {\n  [key: string]: Encoded.Generic<AddressEncodings | Encoding.Bytearray>;\n}\n\ninterface NameUpdateOptions\n  extends BuildTxOptions<Tag.NameUpdateTx, 'nameId' | 'accountId' | 'pointers'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {\n  /**\n   * Get the pointers from the node and merge with provided ones. Pointers with the same key will be\n   * overwritten.\n   */\n  extendPointers?: boolean;\n}\n\ninterface NameTransferOptions\n  extends BuildTxOptions<Tag.NameTransferTx, 'nameId' | 'accountId' | 'recipientId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface NamePreclaimOptions\n  extends BuildTxOptions<Tag.NamePreclaimTx, 'accountId' | 'commitmentId'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\ninterface NameClaimOptions\n  extends BuildTxOptions<Tag.NameClaimTx, 'accountId' | 'name'>,\n    Optional<SendTransactionOptions, 'onAccount' | 'onNode'> {}\n\nclass NotAuctionNameError extends LogicError {\n  constructor(name: AensName, action: string) {\n    super(`Can't ${action} because ${name} is not an auction name`);\n    this.name = 'NotAuctionNameError';\n  }\n}\n\n/**\n * @category AENS\n * @example\n * ```js\n * const name = new Name('test.chain', aeSdk.getContext())\n * ```\n */\nexport default class Name {\n  #salt?: number;\n\n  /**\n   * @param value - AENS name\n   * @param options - Options\n   * @param options.onNode - Node to use\n   * @param options.onAccount - Account to use\n   */\n  constructor(\n    public readonly value: AensName,\n    public options: { onNode: Node; onAccount: AccountBase } & Omit<\n      NameRevokeOptions &\n        NameUpdateOptions &\n        NameTransferOptions &\n        NamePreclaimOptions &\n        NameClaimOptions,\n      'version'\n    >,\n  ) {\n    this.options = options;\n  }\n\n  /**\n   * Name ID encoded as nm_-prefixed string\n   */\n  get id(): Encoded.Name {\n    return produceNameId(this.value);\n  }\n\n  /**\n   * Revoke a name\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.revoke({ fee, ttl, nonce })\n   * ```\n   */\n  async revoke(options: NameRevokeOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameRevokeTx,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Update a name\n   * @param pointers - Map of pointer keys to corresponding addresses\n   * @param options - Options\n   * @example\n   * ```js\n   * const name = 'test.chain'\n   * const channel = 'ch_2519mBs...'\n   * const pointers = {\n   *   account_pubkey: 'ak_asd23dasdas...,',\n   *   contract_pubkey: 'ct_asdf34fasdasd...',\n   *   [getDefaultPointerKey(channel)]: channel,\n   * }\n   * await name.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n   * ```\n   */\n  async update(\n    pointers: KeyPointers,\n    options: NameUpdateOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const { extendPointers, ...opt } = { ...this.options, ...options };\n    const allPointers = {\n      ...(extendPointers === true &&\n        Object.fromEntries(\n          (await opt.onNode.getNameEntryByName(this.value)).pointers.map(({ key, id }) => [\n            key,\n            id,\n          ]),\n        )),\n      ...pointers,\n    };\n\n    const hasRawPointers = Object.values(allPointers).some((v) => isEncoded(v, Encoding.Bytearray));\n\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameUpdateTx,\n      version: hasRawPointers ? 2 : 1,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n      pointers: Object.entries(allPointers).map(\n        ([key, id]: [string, Encoded.Generic<AddressEncodings>]) => ({ key, id }),\n      ),\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Transfer a name to another account\n   * @param address - Recipient account public key\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.transfer('ak_asd23dasdas...', { ttl, fee, nonce })\n   * ```\n   */\n  async transfer(\n    address: Encoded.AccountAddress,\n    options: NameTransferOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameTransferTx,\n      nameId: this.value,\n      accountId: opt.onAccount.address,\n      recipientId: address,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Query the AENS name info from the node and return the object with info\n   * @param options - Options\n   * @example\n   * ```js\n   * const nameEntry = await name.getState()\n   * console.log(nameEntry.owner)\n   * ```\n   */\n  async getState(options: { onNode?: Node } = {}): Promise<\n    Awaited<ReturnType<Node['getNameEntryByName']>> & {\n      id: Encoded.Name;\n      owner: Encoded.AccountAddress;\n    }\n  > {\n    const onNode = options.onNode ?? this.options.onNode;\n    const nameEntry = await onNode.getNameEntryByName(this.value);\n    return {\n      ...nameEntry,\n      id: nameEntry.id as Encoded.Name,\n      owner: nameEntry.owner as Encoded.AccountAddress,\n    };\n  }\n\n  /**\n   * Query the AENS auction info from the node and return the object with info\n   * @param options - Options\n   * @example\n   * ```js\n   * const auctionEntry = await name.getAuctionState()\n   * console.log(auctionEntry.highestBidder)\n   * ```\n   */\n  async getAuctionState(options: { onNode?: Node } = {}): Promise<\n    Awaited<ReturnType<Node['getAuctionEntryByName']>> & {\n      id: Encoded.Name;\n      highestBidder: Encoded.AccountAddress;\n    }\n  > {\n    if (!isAuctionName(this.value)) throw new NotAuctionNameError(this.value, 'get auction state');\n    const onNode = options.onNode ?? this.options.onNode;\n    const nameEntry = await onNode.getAuctionEntryByName(this.value);\n    return {\n      ...nameEntry,\n      id: nameEntry.id as Encoded.Name,\n      highestBidder: nameEntry.highestBidder as Encoded.AccountAddress,\n    };\n  }\n\n  /**\n   *\n   * @param nameTtl - represents in number of blocks (max and default is 180000)\n   * @param options - Options\n   * @returns mined transaction details\n   */\n  async extendTtl(\n    nameTtl?: number,\n    options: Omit<Parameters<Name['update']>[1], 'extendPointers' | 'nameTtl'> = {},\n  ): ReturnType<Name['update']> {\n    return this.update({}, { ...options, nameTtl, extendPointers: true });\n  }\n\n  /**\n   * Claim a previously preclaimed registration. This can only be done after the preclaim step\n   * @param options - options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * await name.claim({ ttl, fee, nonce, nameFee })\n   * ```\n   */\n  async claim(options: NameClaimOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      nameSalt: this.#salt,\n      ...opt,\n      tag: Tag.NameClaimTx,\n      accountId: opt.onAccount.address,\n      name: this.value,\n    });\n    return sendTransaction(tx, opt);\n  }\n\n  /**\n   * Preclaim a name. Sends a hash of the name and a random salt to the node\n   * @param options - Options\n   * @example\n   * ```js\n   * await name.preclaim({ ttl, fee, nonce })\n   * ```\n   */\n  async preclaim(\n    options: NamePreclaimOptions = {},\n  ): Promise<Awaited<ReturnType<typeof sendTransaction>> & { nameSalt: number }> {\n    const opt = { ...this.options, ...options };\n    const nameSalt = genSalt();\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NamePreclaimTx,\n      accountId: opt.onAccount.address,\n      commitmentId: commitmentHash(this.value, nameSalt),\n    });\n    const result = await sendTransaction(tx, opt);\n    this.#salt = nameSalt;\n    return { ...result, nameSalt };\n  }\n\n  /**\n   * Bid to name auction\n   * @param nameFee - Name fee (bid fee)\n   * @param options - Options\n   * @returns mined transaction details\n   * @example\n   * ```js\n   * const bidFee = computeBidFee(name.value, { startFee, increment: 0.42 })\n   * await name.bid(213109412839123, { ttl, fee, nonce })\n   * ```\n   */\n  async bid(\n    nameFee: number | string | BigNumber,\n    options: Omit<NameClaimOptions, 'nameFee'> = {},\n  ): ReturnType<typeof sendTransaction> {\n    if (!isAuctionName(this.value)) throw new NotAuctionNameError(this.value, 'make a bid');\n    const opt = { ...this.options, ...options };\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.NameClaimTx,\n      accountId: opt.onAccount.address,\n      nameSalt: 0,\n      name: this.value,\n      nameFee,\n    });\n    return sendTransaction(tx, opt);\n  }\n}\n","/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n */\n\nimport { Encoder as Calldata } from '@aeternity/aepp-calldata';\nimport { Tag, AensName, DRY_RUN_ACCOUNT } from '../tx/builder/constants.js';\nimport {\n  buildContractIdByContractTx,\n  unpackTx,\n  buildTxAsync,\n  BuildTxOptions,\n  buildTxHash,\n} from '../tx/builder/index.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport {\n  MissingContractDefError,\n  MissingContractAddressError,\n  InactiveContractError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  MissingFunctionNameError,\n  InvalidMethodInvocationError,\n  NotPayableFunctionError,\n  TypeError,\n  NodeInvocationError,\n  IllegalArgumentError,\n  NoSuchContractFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  UnexpectedTsError,\n  InternalError,\n  NoWalletConnectedError,\n  ContractError,\n} from '../utils/errors.js';\nimport { hash as calcHash } from '../utils/crypto.js';\nimport {\n  ContractCallObject as NodeContractCallObject,\n  Event as NodeEvent,\n} from '../apis/node/index.js';\nimport CompilerBase, { Aci } from './compiler/Base.js';\nimport Node from '../Node.js';\nimport { getAccount, resolveName, txDryRun } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport { TxUnpacked } from '../tx/builder/schema.generated.js';\nimport { Optional, isAccountNotFoundError } from '../utils/other.js';\nimport { isName, produceNameId } from '../tx/builder/helpers.js';\n\ntype ContractAci = NonNullable<Aci[0]['contract']>;\ntype FunctionAci = ContractAci['functions'][0];\n\ninterface Event extends NodeEvent {\n  address: Encoded.ContractAddress;\n  data: Encoded.ContractBytearray;\n}\n\nexport interface ContractCallObject extends NodeContractCallObject {\n  returnValue: Encoded.ContractBytearray;\n  log: Event[];\n}\n\ninterface DecodedEvent {\n  name: string;\n  args: unknown[];\n  contract: {\n    name: string;\n    address: Encoded.ContractAddress;\n  };\n}\n\ntype TxData = Awaited<ReturnType<typeof sendTransaction>>;\n\ninterface SendAndProcessReturnType {\n  result?: ContractCallObject;\n  hash: TxData['hash'];\n  tx: TxUnpacked & { tag: Tag.SignedTx | Tag.ContractCallTx | Tag.ContractCreateTx };\n  txData: TxData;\n  rawTx: Encoded.Transaction;\n}\n\n/**\n * @category contract\n */\nexport interface ContractMethodsBase {\n  [key: string]: (...args: any[]) => any;\n}\n\ntype MethodsToContractApi<M extends ContractMethodsBase> = {\n  [Name in keyof M]: M[Name] extends (...args: infer Args) => infer Ret\n    ? (\n        ...args: [\n          ...Args,\n          ...(\n            | []\n            | [\n                Name extends 'init'\n                  ? Parameters<Contract<M>['$deploy']>[1]\n                  : Parameters<Contract<M>['$call']>[2],\n              ]\n          ),\n        ]\n      ) => Promise<\n        Omit<Awaited<ReturnType<Contract<M>['$call']>>, 'decodedResult'> & {\n          // TODO: accurate would be to add `| undefined` because of `waitMined`, but better to drop `waitMined`\n          decodedResult: Ret;\n        }\n      >\n    : never;\n};\n\n/**\n * @category contract\n */\ntype ContractWithMethods<M extends ContractMethodsBase> = Contract<M> & MethodsToContractApi<M>;\n\ntype MethodNames<M extends ContractMethodsBase> = (keyof M & string) | 'init';\n\ntype MethodParameters<M extends ContractMethodsBase, Fn extends MethodNames<M>> = Fn extends 'init'\n  ? M extends { init: any }\n    ? Parameters<M['init']>\n    : []\n  : Parameters<M[Fn]>;\n\ninterface GetContractNameByEventOptions {\n  contractAddressToName?: { [key: Encoded.ContractAddress]: string };\n}\n\ninterface GetCallResultByHashReturnType<M extends ContractMethodsBase, Fn extends MethodNames<M>> {\n  decodedResult: ReturnType<M[Fn]>;\n  decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @category contract\n * @param options - Options object\n * @returns JS Contract API\n * @example\n * ```js\n * const contractIns = await Contract.initialize({ ...aeSdk.getContext(), sourceCode })\n * await contractIns.$deploy([321]) or await contractIns.init(321)\n * const callResult = await contractIns.$call('setState', [123])\n * const staticCallResult = await contractIns.$call('setState', [123], { callStatic: true })\n * ```\n * Also you can call contract like: `await contractIns.setState(123, options)`\n * Then sdk decide to make on-chain or static call (dry-run API) transaction based on function is\n * stateful or not\n */\nclass Contract<M extends ContractMethodsBase> {\n  /**\n   * Compile contract\n   * @returns bytecode\n   */\n  async $compile(): Promise<Encoded.ContractBytearray> {\n    if (this.$options.bytecode != null) return this.$options.bytecode;\n    if (this.$options.onCompiler == null)\n      throw new IllegalArgumentError(\"Can't compile without compiler\");\n    if (this.$options.sourceCode != null) {\n      const { bytecode } = await this.$options.onCompiler.compileBySourceCode(\n        this.$options.sourceCode,\n        this.$options.fileSystem,\n      );\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.sourceCodePath != null) {\n      const { bytecode } = await this.$options.onCompiler.compile(this.$options.sourceCodePath);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.bytecode == null) {\n      throw new IllegalArgumentError(\"Can't compile without sourceCode and sourceCodePath\");\n    }\n    return this.$options.bytecode;\n  }\n\n  #getCallResult<Fn extends MethodNames<M>>(\n    { returnType, returnValue, log }: ContractCallObject,\n    fnName: Fn,\n    transaction: Encoded.Transaction | undefined,\n    options: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): GetCallResultByHashReturnType<M, Fn> {\n    let message: string;\n    switch (returnType) {\n      case 'ok': {\n        const fnAci = this.#getFunctionAci(fnName);\n        return {\n          decodedResult: this._calldata.decode(this._name, fnAci.name, returnValue),\n          decodedEvents: this.$decodeEvents(log, options),\n        };\n      }\n      case 'revert':\n        message = this._calldata.decodeFateString(returnValue);\n        break;\n      case 'error':\n        message = decode(returnValue).toString();\n        if (/Expected \\d+ arguments, got \\d+/.test(message)) {\n          throw new BytecodeMismatchError('ACI', `. Error provided by node: \"${message}\".`);\n        }\n        if (/Trying to call undefined function: <<\\d+,\\d+,\\d+,\\d+>>/.test(message)) {\n          throw new BytecodeMismatchError(\n            'ACI',\n            `. Error provided by node: \"${message}\", function name: ${fnName}.`,\n          );\n        }\n        break;\n      default:\n        throw new InternalError(`Unknown return type: ${returnType}`);\n    }\n    throw new NodeInvocationError(message, transaction);\n  }\n\n  async #sendAndProcess<Fn extends MethodNames<M>>(\n    tx: Encoded.Transaction,\n    fnName: Fn,\n    options: SendTransactionOptions & Parameters<Contract<M>['$getCallResultByTxHash']>[2],\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const txData = await sendTransaction(tx, { ...this.$options, ...options });\n    return {\n      hash: txData.hash,\n      tx: unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>(txData.rawTx),\n      txData,\n      rawTx: txData.rawTx,\n      // TODO: disallow `waitMined: false` to make `decodedResult` required\n      ...(txData.blockHeight != null &&\n        (await this.$getCallResultByTxHash(txData.hash, fnName, options))),\n    };\n  }\n\n  async $getCallResultByTxHash<Fn extends MethodNames<M>>(\n    hash: Encoded.TxHash,\n    fnName: Fn,\n    options?: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): Promise<GetCallResultByHashReturnType<M, Fn> & { result: ContractCallObject }> {\n    const { callInfo } = await this.$options.onNode.getTransactionInfoByHash(hash);\n    if (callInfo == null) {\n      throw new ContractError(`callInfo is not available for transaction ${hash}`);\n    }\n    const callInfoTyped = callInfo as ContractCallObject;\n    return {\n      ...this.#getCallResult(callInfoTyped, fnName, undefined, options),\n      result: callInfoTyped,\n    };\n  }\n\n  async _estimateGas<Fn extends MethodNames<M>>(\n    name: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Omit<Parameters<Contract<M>['$call']>[2], 'callStatic'> = {},\n  ): Promise<number> {\n    const { result } = await this.$call(name, params, { ...options, callStatic: true });\n    if (result == null) throw new UnexpectedTsError();\n    const { gasUsed } = result;\n    // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n    return Math.floor(gasUsed * 1.25);\n  }\n\n  /**\n   * Deploy contract\n   * @param params - Contract init function arguments array\n   * @param options - Options\n   * @returns deploy info\n   */\n  async $deploy(\n    params: MethodParameters<M, 'init'>,\n    options?: Parameters<Contract<M>['$call']>[2] &\n      Partial<BuildTxOptions<Tag.ContractCreateTx, 'ownerId' | 'code' | 'callData'>>,\n  ): Promise<\n    Omit<SendAndProcessReturnType, 'hash'> & {\n      transaction?: Encoded.TxHash;\n      owner?: Encoded.AccountAddress;\n      address?: Encoded.ContractAddress;\n      decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n    }\n  > {\n    const { callStatic, ...opt } = { ...this.$options, ...options };\n    if (this.$options.bytecode == null) await this.$compile();\n    if (callStatic === true) return this.$call('init', params, { ...opt, callStatic });\n    if (this.$options.address != null) throw new DuplicateContractError();\n\n    if (opt.onAccount == null) throw new IllegalArgumentError(\"Can't deploy without account\");\n    const ownerId = opt.onAccount.address;\n    if (this.$options.bytecode == null)\n      throw new IllegalArgumentError(\"Can't deploy without bytecode\");\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.ContractCreateTx,\n      gasLimit: opt.gasLimit ?? (await this._estimateGas('init', params, opt)),\n      callData: this._calldata.encode(this._name, 'init', params),\n      code: this.$options.bytecode,\n      ownerId,\n    });\n    const { hash, ...other } = await this.#sendAndProcess(tx, 'init', {\n      ...opt,\n      onAccount: opt.onAccount,\n    });\n    this.$options.address = buildContractIdByContractTx(other.rawTx);\n    return {\n      ...other,\n      ...(other.result?.log != null && {\n        decodedEvents: this.$decodeEvents(other.result.log, opt),\n      }),\n      owner: ownerId,\n      transaction: hash,\n      address: this.$options.address,\n    };\n  }\n\n  /**\n   * Get function schema from contract ACI object\n   * @param name - Function name\n   * @returns function ACI\n   */\n  #getFunctionAci(name: string): FunctionAci {\n    const fn = this.#aciContract.functions.find((f: { name: string }) => f.name === name);\n    if (fn != null) {\n      return fn;\n    }\n    if (name === 'init') {\n      return {\n        arguments: [],\n        name: 'init',\n        payable: false,\n        returns: 'unit',\n        stateful: true,\n      };\n    }\n    throw new NoSuchContractFunctionError(name);\n  }\n\n  /**\n   * Call contract function\n   * @param fn - Function name\n   * @param params - Array of function arguments\n   * @param options - Array of function arguments\n   * @returns CallResult\n   */\n  async $call<Fn extends MethodNames<M>>(\n    fn: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Partial<BuildTxOptions<Tag.ContractCallTx, 'callerId' | 'contractId' | 'callData'>> &\n      Parameters<Contract<M>['$decodeEvents']>[1] &\n      Optional<SendTransactionOptions, 'onAccount' | 'onNode'> &\n      Omit<Parameters<typeof txDryRun>[2], 'onNode'> & { callStatic?: boolean } = {},\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const { callStatic, top, ...opt } = { ...this.$options, ...options };\n    const fnAci = this.#getFunctionAci(fn);\n    const { address, name } = this.$options;\n    // TODO: call `produceNameId` on buildTx side\n    const contractId = name != null ? produceNameId(name) : address;\n    const { onNode } = opt;\n\n    if (fn == null) throw new MissingFunctionNameError();\n    if (fn === 'init' && callStatic !== true)\n      throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (fn !== 'init' && opt.amount != null && Number(opt.amount) > 0 && !fnAci.payable) {\n      throw new NotPayableFunctionError(opt.amount, fn);\n    }\n\n    let callerId;\n    try {\n      if (opt.onAccount == null) throw new InternalError('Use fallback account');\n      callerId = opt.onAccount.address;\n    } catch (error) {\n      const useFallbackAccount =\n        callStatic === true &&\n        ((error instanceof TypeError &&\n          error.message ===\n            'Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead') ||\n          error instanceof NoWalletConnectedError ||\n          (error instanceof InternalError && error.message === 'Use fallback account'));\n      if (!useFallbackAccount) throw error;\n      callerId = DRY_RUN_ACCOUNT.pub;\n    }\n    const callData = this._calldata.encode(this._name, fn, params);\n\n    if (callStatic === true) {\n      if (opt.nonce == null) {\n        const topOption = top != null && { [typeof top === 'number' ? 'height' : 'hash']: top };\n        const account = await getAccount(callerId, { ...topOption, onNode }).catch((error) => {\n          if (!isAccountNotFoundError(error)) throw error;\n          return { kind: 'basic', nonce: 0 };\n        });\n        opt.nonce = account.kind === 'generalized' ? 0 : account.nonce + 1;\n      }\n\n      const txOpt = { ...opt, onNode, callData };\n      let tx;\n      if (fn === 'init') {\n        if (this.$options.bytecode == null)\n          throw new IllegalArgumentError('Can\\'t dry-run \"init\" without bytecode');\n        tx = await buildTxAsync({\n          ...txOpt,\n          tag: Tag.ContractCreateTx,\n          code: this.$options.bytecode,\n          ownerId: callerId,\n        });\n      } else {\n        if (contractId == null)\n          throw new MissingContractAddressError(\"Can't dry-run contract without address\");\n        tx = await buildTxAsync({\n          ...txOpt,\n          tag: Tag.ContractCallTx,\n          callerId,\n          contractId,\n        });\n      }\n\n      const { callObj, ...dryRunOther } = await txDryRun(tx, callerId, { ...opt, top });\n      if (callObj == null) {\n        throw new InternalError(`callObj is not available for transaction ${tx}`);\n      }\n      const callInfoTyped = callObj as ContractCallObject;\n      return {\n        ...dryRunOther,\n        ...this.#getCallResult(callInfoTyped, fn, tx, opt),\n        tx: unpackTx(tx),\n        result: callInfoTyped,\n        rawTx: tx,\n        hash: buildTxHash(tx),\n        txData: undefined as any,\n      };\n    }\n\n    if (top != null)\n      throw new IllegalArgumentError(\"Can't handle `top` option in on-chain contract call\");\n    if (contractId == null)\n      throw new MissingContractAddressError(\"Can't call contract without address\");\n    const tx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.ContractCallTx,\n      gasLimit: opt.gasLimit ?? (await this._estimateGas(fn, params, opt)),\n      callerId,\n      contractId,\n      callData,\n    });\n    if (opt.onAccount == null)\n      throw new IllegalArgumentError(\"Can't call contract on chain without account\");\n    return this.#sendAndProcess(tx, fn, { ...opt, onAccount: opt.onAccount });\n  }\n\n  /**\n   * @param ctAddress - Contract address that emitted event\n   * @param nameHash - Hash of emitted event name\n   * @param options - Options\n   * @returns Contract name\n   * @throws {@link MissingEventDefinitionError}\n   * @throws {@link AmbiguousEventDefinitionError}\n   */\n  #getContractNameByEvent(\n    ctAddress: Encoded.ContractAddress,\n    nameHash: BigInt,\n    { contractAddressToName }: GetContractNameByEventOptions,\n  ): string {\n    const addressToName = { ...this.$options.contractAddressToName, ...contractAddressToName };\n    if (addressToName[ctAddress] != null) return addressToName[ctAddress];\n\n    // TODO: consider using a third-party library\n    const isEqual = (a: any, b: any): boolean => JSON.stringify(a) === JSON.stringify(b);\n\n    const contracts = this._aci\n      .map(({ contract }) => contract)\n      .filter((contract) => contract?.event) as ContractAci[];\n    const matchedEvents = contracts\n      .map((contract) => [contract.name, contract.event.variant])\n      .map(([name, events]) =>\n        events.map((event: {}) => [name, Object.keys(event)[0], Object.values(event)[0]]),\n      )\n      .flat()\n      .filter(([, eventName]) => BigInt(`0x${calcHash(eventName).toString('hex')}`) === nameHash)\n      .filter(([, , type], idx, arr) => !arr.slice(0, idx).some((el) => isEqual(el[2], type)));\n    switch (matchedEvents.length) {\n      case 0:\n        throw new MissingEventDefinitionError(nameHash.toString(), ctAddress);\n      case 1:\n        return matchedEvents[0][0];\n      default:\n        throw new AmbiguousEventDefinitionError(ctAddress, matchedEvents);\n    }\n  }\n\n  /**\n   * Decode Events\n   * @param events - Array of encoded events (callRes.result.log)\n   * @param options - Options\n   * @returns DecodedEvents\n   */\n  $decodeEvents(\n    events: Event[],\n    { omitUnknown, ...opt }: { omitUnknown?: boolean } & GetContractNameByEventOptions = {},\n  ): DecodedEvent[] {\n    return events\n      .map((event) => {\n        let contractName;\n        try {\n          contractName = this.#getContractNameByEvent(event.address, event.topics[0], opt);\n        } catch (error) {\n          if ((omitUnknown ?? false) && error instanceof MissingEventDefinitionError) return null;\n          throw error;\n        }\n        const decoded = this._calldata.decodeEvent(contractName, event.data, event.topics);\n        const [name, args] = Object.entries(decoded)[0];\n        return {\n          name,\n          args,\n          contract: {\n            name: contractName,\n            address: event.address,\n          },\n        };\n      })\n      .filter((e: DecodedEvent | null): e is DecodedEvent => e != null);\n  }\n\n  static async initialize<M extends ContractMethodsBase>({\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    address,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n    validateBytecode,\n    ...otherOptions\n  }: Omit<ConstructorParameters<typeof Contract>[0], 'aci' | 'address'> & {\n    validateBytecode?: boolean;\n    aci?: Aci;\n    address?: Encoded.ContractAddress | AensName;\n  }): Promise<ContractWithMethods<M>> {\n    if (aci == null && onCompiler != null) {\n      let res;\n      if (sourceCodePath != null) res = await onCompiler.compile(sourceCodePath);\n      if (sourceCode != null) res = await onCompiler.compileBySourceCode(sourceCode, fileSystem);\n      if (res != null) {\n        aci = res.aci;\n        bytecode ??= res.bytecode;\n      }\n    }\n    if (aci == null) throw new MissingContractDefError();\n\n    let name;\n    if (address != null) {\n      address = (await resolveName(address, 'contract_pubkey', {\n        resolveByNode: true,\n        onNode,\n      })) as Encoded.ContractAddress;\n      if (isName(address)) name = address;\n    }\n\n    if (address == null && sourceCode == null && sourceCodePath == null && bytecode == null) {\n      throw new MissingContractAddressError(\"Can't create instance by ACI without address\");\n    }\n\n    if (address != null) {\n      const contract = await onNode.getContract(address);\n      if (contract.active == null) throw new InactiveContractError(address);\n    }\n\n    if (validateBytecode === true) {\n      if (address == null)\n        throw new MissingContractAddressError(\"Can't validate bytecode without contract address\");\n      const onChanBytecode = (await onNode.getContractCode(address)).bytecode;\n      let isValid = false;\n      if (bytecode != null) isValid = bytecode === onChanBytecode;\n      else if (sourceCode != null) {\n        if (onCompiler == null)\n          throw new IllegalArgumentError(\"Can't validate bytecode without compiler\");\n        isValid = await onCompiler.validateBySourceCode(onChanBytecode, sourceCode, fileSystem);\n      } else if (sourceCodePath != null) {\n        if (onCompiler == null)\n          throw new IllegalArgumentError(\"Can't validate bytecode without compiler\");\n        isValid = await onCompiler.validate(onChanBytecode, sourceCodePath);\n      }\n      if (!isValid) {\n        throw new BytecodeMismatchError(\n          (sourceCode ?? sourceCodePath) != null ? 'source code' : 'bytecode',\n        );\n      }\n    }\n\n    return new ContractWithMethods<M>({\n      onCompiler,\n      onNode,\n      sourceCode,\n      sourceCodePath,\n      bytecode,\n      aci,\n      address,\n      name,\n      fileSystem,\n      ...otherOptions,\n    });\n  }\n\n  _aci: Aci;\n\n  readonly #aciContract: ContractAci;\n\n  _name: string;\n\n  _calldata: Calldata;\n\n  $options: Omit<ConstructorParameters<typeof Contract>[0], 'aci'>;\n\n  /**\n   * @param options - Options\n   */\n  constructor({\n    aci,\n    ...otherOptions\n  }: {\n    onCompiler?: CompilerBase;\n    onNode: Node;\n    bytecode?: Encoded.ContractBytearray;\n    aci: Aci;\n    address?: Encoded.ContractAddress;\n    /**\n     * Supported only in Ceres\n     */\n    name?: AensName;\n    sourceCodePath?: Parameters<CompilerBase['compile']>[0];\n    sourceCode?: Parameters<CompilerBase['compileBySourceCode']>[0];\n    fileSystem?: Parameters<CompilerBase['compileBySourceCode']>[1];\n  } & Parameters<Contract<M>['$deploy']>[1]) {\n    this._aci = aci;\n    const aciLast = aci[aci.length - 1];\n    if (aciLast.contract == null) {\n      throw new IllegalArgumentError(\n        `The last 'aci' item should have 'contract' key, got ${Object.keys(aciLast)} keys instead`,\n      );\n    }\n    this.#aciContract = aciLast.contract;\n    this._name = this.#aciContract.name;\n    this._calldata = new Calldata(aci);\n    this.$options = otherOptions;\n\n    /**\n     * Generate proto function based on contract function using Contract ACI schema\n     * All function can be called like:\n     * ```js\n     * await contract.testFunction()\n     * ```\n     * then sdk will decide to use dry-run or send tx\n     * on-chain base on if function stateful or not.\n     * Also, you can manually do that:\n     * ```js\n     * await contract.testFunction({ callStatic: true }) // use call-static (dry-run)\n     * await contract.testFunction({ callStatic: false }) // send tx on-chain\n     * ```\n     */\n    Object.assign(\n      this,\n      Object.fromEntries(\n        this.#aciContract.functions.map(({ name, arguments: aciArgs, stateful }: FunctionAci) => {\n          const callStatic = name !== 'init' && !stateful;\n          return [\n            name,\n            async (...args: any) => {\n              const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n              if (typeof options !== 'object')\n                throw new TypeError(`Options should be an object: ${options}`);\n              if (name === 'init') return this.$deploy(args, { callStatic, ...options });\n              return this.$call(name, args, { callStatic, ...options });\n            },\n          ];\n        }),\n      ),\n    );\n  }\n}\n\ninterface ContractWithMethodsClass {\n  new <M extends ContractMethodsBase>(\n    options: ConstructorParameters<typeof Contract>[0],\n  ): ContractWithMethods<M>;\n  initialize: (typeof Contract)['initialize'];\n}\n\n/**\n * @category contract\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst ContractWithMethods: ContractWithMethodsClass = Contract as any;\n\nexport default ContractWithMethods;\n","import { decode, Encoded } from '../utils/encoder.js';\nimport Node from '../Node.js';\n\n/**\n * @category oracle\n */\ntype OracleQueryNode = Awaited<ReturnType<Node['getOracleQueryByPubkeyAndQueryId']>>;\n\n/**\n * @category oracle\n */\nexport interface OracleQuery extends OracleQueryNode {\n  // TODO: type should be corrected in node api\n  id: Encoded.OracleQueryId;\n  decodedQuery: string;\n  decodedResponse: string;\n}\n\nfunction decodeQuery(queryEntry: OracleQueryNode): OracleQuery {\n  return {\n    ...queryEntry,\n    id: queryEntry.id as Encoded.OracleQueryId,\n    decodedQuery: decode(queryEntry.query as Encoded.OracleQuery).toString(),\n    decodedResponse: decode(queryEntry.response as Encoded.OracleResponse).toString(),\n  };\n}\n\n/**\n * This class is needed because `getOracleQuery` would return different values depending on the\n * oracle type.\n * @category oracle\n */\nexport default class OracleBase {\n  /**\n   * @param address - Oracle public key\n   */\n  constructor(\n    public readonly address: Encoded.OracleAddress,\n    public options: { onNode: Node },\n  ) {}\n\n  /**\n   * Get oracle entry from the node\n   * @param options - Options object\n   */\n  async getState(options: { onNode?: Node } = {}): ReturnType<Node['getOracleByPubkey']> {\n    const opt = { ...this.options, ...options };\n    return opt.onNode.getOracleByPubkey(this.address);\n  }\n\n  /**\n   * Get oracle queries from the node\n   * @param options - Options object\n   */\n  async getQueries(options: { onNode?: Node } = {}): Promise<OracleQuery[]> {\n    const opt = { ...this.options, ...options };\n    return (await opt.onNode.getOracleQueriesByPubkey(this.address)).oracleQueries.map(decodeQuery);\n  }\n\n  /**\n   * Get oracle query entry from the node\n   * @param queryId - Oracle query ID\n   * @param options - Options object\n   */\n  async getQuery(\n    queryId: Encoded.OracleQueryId,\n    options: { onNode?: Node } = {},\n  ): Promise<OracleQuery> {\n    const { onNode } = { ...this.options, ...options };\n    const queryEntry = await onNode.getOracleQueryByPubkeyAndQueryId(this.address, queryId);\n    return decodeQuery(queryEntry);\n  }\n}\n","import { buildTxAsync, BuildTxOptions } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { LogicError, UnexpectedTsError } from '../utils/errors.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { _getPollInterval } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport Node from '../Node.js';\nimport AccountBase from '../account/Base.js';\nimport OracleBase, { OracleQuery } from './OracleBase.js';\n\n/**\n * @category oracle\n */\ninterface OracleRegisterOptions\n  extends BuildTxOptions<Tag.OracleRegisterTx, 'accountId' | 'queryFormat' | 'responseFormat'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\n/**\n * @category oracle\n */\ninterface OracleExtendTtlOptions\n  extends BuildTxOptions<Tag.OracleExtendTx, 'callerId' | 'oracleId'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\n/**\n * @category oracle\n */\ninterface OracleRespondToQueryOptions\n  extends BuildTxOptions<Tag.OracleRespondTx, 'callerId' | 'oracleId' | 'queryId' | 'response'>,\n    Omit<SendTransactionOptions, 'onNode' | 'onAccount'> {}\n\n/**\n * @category oracle\n */\nexport default class Oracle extends OracleBase {\n  /**\n   * @param account - Account to use as oracle\n   * @param options - Options object\n   */\n  constructor(\n    public readonly account: AccountBase,\n    public override options: OracleRegisterOptions &\n      OracleExtendTtlOptions &\n      Parameters<Oracle['handleQueries']>[1] & { onNode: Node },\n  ) {\n    super(encode(decode(account.address), Encoding.OracleAddress), options);\n  }\n\n  // TODO: support abiVersion other than 0\n  /**\n   * Register oracle\n   * @param queryFormat - Format of query\n   * @param responseFormat - Format of query response\n   * @param options - Options object\n   */\n  async register(\n    queryFormat: string,\n    responseFormat: string,\n    options: OracleRegisterOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleRegisterTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleRegisterTx,\n      accountId: this.account.address,\n      queryFormat,\n      responseFormat,\n    });\n    return sendTransaction(oracleRegisterTx, { ...opt, onAccount: this.account });\n  }\n\n  /**\n   * Extend oracle ttl\n   * @param options - Options object\n   */\n  async extendTtl(options: OracleExtendTtlOptions = {}): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleExtendTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleExtendTx,\n      oracleId: this.address,\n    });\n    return sendTransaction(oracleExtendTx, { ...opt, onAccount: this.account });\n  }\n\n  /**\n   * Poll for oracle queries\n   * @param onQuery - OnQuery callback\n   * @param options - Options object\n   * @param options.interval - Poll interval (default: 5000)\n   * @returns Callback to stop polling function\n   */\n  pollQueries(\n    onQuery: (query: OracleQuery) => void,\n    options: { interval?: number; includeResponded?: boolean } & Partial<\n      Parameters<typeof _getPollInterval>[1]\n    > = {},\n  ): () => void {\n    const opt = { ...this.options, ...options };\n    const knownQueryIds = new Set();\n\n    let isChecking = false;\n    const checkNewQueries = async (): Promise<void> => {\n      if (isChecking) return;\n      isChecking = true;\n      const filtered = (await this.getQueries(opt))\n        .filter(({ id }) => !knownQueryIds.has(id))\n        .filter((query) => options.includeResponded === true || query.decodedResponse === '');\n      filtered.forEach((query) => knownQueryIds.add(query.id));\n      isChecking = false;\n      await Promise.all(filtered.map((query) => onQuery(query)));\n    };\n\n    checkNewQueries();\n    const idPromise = (async () => {\n      const interval = opt.interval ?? (await _getPollInterval('micro-block', opt));\n      return setInterval(async () => checkNewQueries(), interval);\n    })();\n\n    return async () => {\n      const id = await idPromise;\n      clearInterval(id);\n    };\n  }\n\n  /**\n   * Respond to a query\n   * @param queryId - Oracle query id\n   * @param response - The response to query\n   * @param options - Options object\n   */\n  async respondToQuery(\n    queryId: Encoded.OracleQueryId,\n    response: string,\n    options: OracleRespondToQueryOptions = {},\n  ): ReturnType<typeof sendTransaction> {\n    const opt = { ...this.options, ...options };\n    const oracleRespondTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleRespondTx,\n      oracleId: this.address,\n      queryId,\n      response,\n    });\n    return sendTransaction(oracleRespondTx, { ...opt, onAccount: this.account });\n  }\n\n  #handleQueriesPromise?: Promise<void>;\n\n  /**\n   * Respond to queries to oracle based on callback value\n   * @param getResponse - Callback to respond on query\n   * @param options - Options object\n   * @param options.interval - Poll interval (default: 5000)\n   * @returns Callback to stop polling function\n   */\n  handleQueries(\n    getResponse: (q: OracleQuery) => Promise<string> | string,\n    options: Parameters<Oracle['pollQueries']>[1] & OracleRespondToQueryOptions = {},\n  ): () => void {\n    if (this.#handleQueriesPromise != null) {\n      throw new LogicError(\n        'Another query handler already running, it needs to be stopped to run a new one',\n      );\n    }\n    const opt = { ...this.options, ...options };\n\n    let queuePromise = Promise.resolve();\n    const handler = async (q: OracleQuery): Promise<void> => {\n      const response = await getResponse(q);\n      const respondPromise = queuePromise.then(async () =>\n        this.respondToQuery(q.id, response, opt),\n      );\n      queuePromise = respondPromise.then(\n        () => {},\n        () => {},\n      );\n      await respondPromise;\n    };\n\n    this.#handleQueriesPromise = Promise.resolve();\n    const stopPoll = this.pollQueries(async (query: OracleQuery) => {\n      const promise = handler(query);\n      if (this.#handleQueriesPromise == null) throw new UnexpectedTsError();\n      this.#handleQueriesPromise = this.#handleQueriesPromise\n        .then(async () => promise)\n        .then(\n          () => {},\n          () => {},\n        );\n      return promise;\n    }, opt);\n\n    return async () => {\n      stopPoll();\n      await this.#handleQueriesPromise;\n      this.#handleQueriesPromise = undefined;\n    };\n  }\n}\n","import { pause, Optional } from '../utils/other.js';\nimport { oracleQueryId } from '../tx/builder/helpers.js';\nimport { unpackTx, buildTxAsync, BuildTxOptions } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { RequestTimedOutError } from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { _getPollInterval, getHeight } from '../chain.js';\nimport { sendTransaction } from '../send-transaction.js';\nimport Node from '../Node.js';\nimport AccountBase from '../account/Base.js';\nimport OracleBase from './OracleBase.js';\n\n/**\n * @category oracle\n */\ninterface OracleClientPostQueryOptions\n  extends Optional<Parameters<typeof sendTransaction>[1], 'onNode' | 'onAccount'>,\n    BuildTxOptions<Tag.OracleQueryTx, 'oracleId' | 'senderId' | 'query'> {}\n\n/**\n * @category oracle\n */\nexport default class OracleClient extends OracleBase {\n  /**\n   * @param address - Oracle public key\n   * @param options - Options object\n   * @param options.onAccount - Account to use\n   * @param options.onNode - Node to use\n   */\n  constructor(\n    address: Encoded.OracleAddress,\n    public override options: { onAccount: AccountBase; onNode: Node } & Parameters<\n      OracleClient['query']\n    >[1],\n  ) {\n    super(address, options);\n  }\n\n  /**\n   * Post query to oracle\n   * @param query - Query to oracle\n   * @param options - Options object\n   * @returns Transaction details and query ID\n   */\n  async postQuery(\n    query: string,\n    options: OracleClientPostQueryOptions = {},\n  ): Promise<Awaited<ReturnType<typeof sendTransaction>> & { queryId: Encoded.OracleQueryId }> {\n    const opt = { ...this.options, ...options };\n    const senderId = opt.onAccount.address;\n\n    const oracleQueryTx = await buildTxAsync({\n      _isInternalBuild: true,\n      ...opt,\n      tag: Tag.OracleQueryTx,\n      oracleId: this.address,\n      senderId,\n      query,\n    });\n    const { nonce } = unpackTx(oracleQueryTx, Tag.OracleQueryTx);\n    return {\n      ...(await sendTransaction(oracleQueryTx, opt)),\n      queryId: oracleQueryId(senderId, nonce, this.address),\n    };\n  }\n\n  /**\n   * Poll for oracle response to query\n   * @param queryId - Oracle Query id\n   * @param options - Options object\n   * @param options.interval - Poll interval\n   * @returns Oracle response\n   */\n  async pollForResponse(\n    queryId: Encoded.OracleQueryId,\n    options: { interval?: number } & Partial<Parameters<typeof _getPollInterval>[1]> = {},\n  ): Promise<string> {\n    const opt = { ...this.options, ...options };\n    const interval = opt.interval ?? (await _getPollInterval('micro-block', opt));\n    let height;\n    let ttl;\n    let response;\n    do {\n      ({ response, ttl } = await this.getQuery(queryId, opt));\n      const responseBuffer = decode(response as Encoded.OracleResponse);\n      if (responseBuffer.length > 0) return responseBuffer.toString();\n      await pause(interval);\n      height = await getHeight({ ...opt, cached: true });\n    } while (ttl >= height);\n    throw new RequestTimedOutError(height);\n  }\n\n  /**\n   * Post query to oracle and wait for response\n   * @param query - Query to oracle\n   * @param options - Options object\n   * @returns Oracle response\n   */\n  async query(\n    query: string,\n    options: OracleClientPostQueryOptions & Parameters<OracleClient['pollForResponse']>[1] = {},\n  ): Promise<string> {\n    const { queryId } = await this.postQuery(query, options);\n    return this.pollForResponse(queryId, options);\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { getBalance, resolveName } from './chain.js';\nimport { sendTransaction, SendTransactionOptions } from './send-transaction.js';\nimport { buildTxAsync, BuildTxOptions, unpackTx } from './tx/builder/index.js';\nimport { ArgumentError } from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\nimport { Tag, AensName } from './tx/builder/constants.js';\n\n// TODO: name verify should not overlap with transaction verify\ntype ResolveNameOptions = Omit<Parameters<typeof resolveName>[2], 'onNode' | 'verify'>;\n\n/**\n * Send coins to another account\n * @category chain\n * @param amount - Amount to spend\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function spend(\n  amount: number | string,\n  recipientIdOrName: Encoded.AccountAddress | Encoded.ContractAddress | AensName,\n  options: SpendOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId: options.onAccount.address,\n      recipientId: await resolveName(recipientIdOrName, 'account_pubkey', options),\n      amount,\n    }),\n    options,\n  );\n}\n\ntype SpendOptionsType = BuildTxOptions<\n  Tag.SpendTx,\n  'senderId' | 'recipientId' | 'amount' | 'onNode'\n> &\n  ResolveNameOptions &\n  SendTransactionOptions;\ninterface SpendOptions extends SpendOptionsType {}\n\n// TODO: Rename to spendFraction\n/**\n * Spend a fraction of coin balance to another account. Useful if needed to drain account balance\n * completely, sending funds to another account (with fraction set to 1).\n * @category chain\n * @param fraction - Fraction of balance to spend (between 0 and 1)\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @example\n * ```js\n * // `fraction` * 100 = % of AE to be transferred (e.g. `0.42` for 42% or `1` for 100%)\n * const { blockHeight } = await aeSdk.transferFunds(\n *   0.42,\n *   'ak_21A27UVVt3hDkBE5J7rhhqnH5YNb4Y1dqo4PnSybrH85pnWo7E',\n * );\n * console.log('Transaction mined at', blockHeight);\n * ```\n */\nexport async function transferFunds(\n  fraction: number | string, // TODO: accept only number\n  recipientIdOrName: AensName | Encoded.AccountAddress | Encoded.ContractAddress,\n  options: TransferFundsOptions,\n): ReturnType<typeof sendTransaction> {\n  if (+fraction < 0 || +fraction > 1) {\n    throw new ArgumentError('fraction', 'a number between 0 and 1', fraction);\n  }\n  const recipientId = await resolveName(recipientIdOrName, 'account_pubkey', options);\n  const senderId = options.onAccount.address;\n  const balance = new BigNumber(await getBalance.bind(options.onAccount)(senderId, options));\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP);\n  const { fee } = unpackTx(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId,\n      recipientId,\n      amount: desiredAmount,\n    }),\n    Tag.SpendTx,\n  );\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount;\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.SpendTx,\n      senderId,\n      recipientId,\n      amount,\n    }),\n    options,\n  );\n}\n\ntype TransferFundsOptionsType = BuildTxOptions<\n  Tag.SpendTx,\n  'senderId' | 'recipientId' | 'amount' | 'onNode'\n> &\n  ResolveNameOptions &\n  SendTransactionOptions;\ninterface TransferFundsOptions extends TransferFundsOptionsType {}\n\n/**\n * Submit transaction of another account paying for it (fee and gas)\n * @category chain\n * @param transaction - tx_<base64>-encoded transaction\n * @param options - Options\n * @returns Object Transaction\n */\nexport async function payForTransaction(\n  transaction: Encoded.Transaction,\n  options: PayForTransactionOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      _isInternalBuild: true,\n      ...options,\n      tag: Tag.PayingForTx,\n      payerId: options.onAccount.address,\n      tx: transaction,\n    }),\n    options,\n  );\n}\n\ninterface PayForTransactionOptions\n  extends BuildTxOptions<Tag.PayingForTx, 'payerId' | 'tx' | 'onNode'>,\n    SendTransactionOptions {}\n","/**\n * Generalized Account module - routines to use generalized account\n */\n\nimport { ConsensusProtocolVersion, Int, Tag } from '../tx/builder/constants.js';\nimport {\n  buildContractIdByContractTx,\n  buildTx,\n  buildTxAsync,\n  BuildTxOptions,\n  unpackTx,\n} from '../tx/builder/index.js';\nimport { hash } from '../utils/crypto.js';\nimport { decode, encode, Encoded, Encoding } from '../utils/encoder.js';\nimport { ArgumentError, IllegalArgumentError } from '../utils/errors.js';\nimport { concatBuffers } from '../utils/other.js';\nimport Contract from './Contract.js';\nimport Node from '../Node.js';\nimport { getAccount } from '../chain.js';\nimport { sendTransaction, SendTransactionOptions } from '../send-transaction.js';\nimport CompilerBase from './compiler/Base.js';\nimport { packEntry } from '../tx/builder/entry/index.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\n\n/**\n * Convert current account to GA\n * @category account generalized\n * @param authFnName - Authorization function name\n * @param args - init arguments\n * @param options - Options\n * @returns General Account Object\n */\nexport async function createGeneralizedAccount(\n  authFnName: string,\n  args: any[],\n  {\n    onAccount,\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n    ...options\n  }: CreateGeneralizedAccountOptions,\n): Promise<\n  Readonly<{\n    owner: Encoded.AccountAddress;\n    transaction: Encoded.TxHash;\n    rawTx: Encoded.Transaction;\n    gaContractId: Encoded.ContractAddress;\n  }>\n> {\n  const ownerId = onAccount.address;\n  if ((await getAccount(ownerId, { onNode })).kind === 'generalized') {\n    throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n  }\n\n  const contract = await Contract.initialize<{ init: (...a: any[]) => void }>({\n    onAccount,\n    onCompiler,\n    onNode,\n    bytecode,\n    aci,\n    sourceCodePath,\n    sourceCode,\n    fileSystem,\n  });\n\n  const tx = await buildTxAsync({\n    _isInternalBuild: true,\n    ...options,\n    tag: Tag.GaAttachTx,\n    onNode,\n    code: await contract.$compile(),\n    gasLimit: options.gasLimit ?? (await contract._estimateGas('init', args, options)),\n    ownerId,\n    callData: contract._calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName),\n  });\n  const { hash: transaction, rawTx } = await sendTransaction(tx, {\n    onNode,\n    onAccount,\n    onCompiler,\n    ...options,\n  });\n  const contractId = buildContractIdByContractTx(rawTx);\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId,\n  });\n}\n\ninterface CreateGeneralizedAccountOptions\n  extends BuildTxOptions<\n      Tag.GaAttachTx,\n      'authFun' | 'callData' | 'code' | 'ownerId' | 'gasLimit' | 'onNode'\n    >,\n    SendTransactionOptions,\n    Pick<\n      Parameters<typeof Contract.initialize>[0],\n      'bytecode' | 'aci' | 'sourceCodePath' | 'sourceCode' | 'fileSystem'\n    > {\n  onCompiler: CompilerBase;\n  gasLimit?: number;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx payload\n * @category account generalized\n * @param transaction - tx-encoded transaction\n * @param options - Options\n * @param options.fee - GaMetaTx fee, required in Ceres\n * @param options.gasPrice - GaMetaTx gasPrice, required in Ceres\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHash(\n  transaction: Encoded.Transaction,\n  { fee, gasPrice, onNode }: { fee?: Int; gasPrice?: Int; onNode: Node },\n): Promise<Buffer> {\n  const { nodeNetworkId, consensusProtocolVersion } = await onNode.getNodeInfo();\n  let payload = hash(concatBuffers([Buffer.from(nodeNetworkId), decode(transaction)]));\n  if (consensusProtocolVersion === ConsensusProtocolVersion.Ceres) {\n    if (fee == null) throw new ArgumentError('fee', 'provided (in Ceres)', fee);\n    if (gasPrice == null) throw new ArgumentError('gasPrice', 'provided (in Ceres)', gasPrice);\n    payload = hash(\n      decode(\n        packEntry({\n          tag: EntryTag.GaMetaTxAuthData,\n          fee,\n          gasPrice,\n          txHash: encode(payload, Encoding.TxHash),\n        }),\n      ),\n    );\n  }\n  return payload;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx\n * @category account generalized\n * @param transaction - tx-encoded signed GaMeta transaction\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHashByGaMetaTx(\n  transaction: Encoded.Transaction,\n  { onNode }: { onNode: Node },\n): Promise<Buffer> {\n  const txParams = unpackTx(transaction, Tag.SignedTx);\n  if (txParams.encodedTx.tag !== Tag.GaMetaTx) {\n    throw new ArgumentError('transaction', 'to include GaMetaTx', Tag[txParams.encodedTx.tag]);\n  }\n  return buildAuthTxHash(buildTx(txParams.encodedTx.tx.encodedTx), {\n    fee: txParams.encodedTx.fee,\n    gasPrice: txParams.encodedTx.gasPrice,\n    onNode,\n  });\n}\n","import * as chainMethods from './chain.js';\nimport { sendTransaction } from './send-transaction.js';\nimport * as spendMethods from './spend.js';\nimport * as contractGaMethods from './contract/ga.js';\nimport { buildTxAsync } from './tx/builder/index.js';\nimport { mapObject, UnionToIntersection } from './utils/other.js';\nimport { wrapWithProxy } from './utils/wrap-proxy.js';\nimport Node from './Node.js';\nimport { TxParamsAsync } from './tx/builder/schema.generated.js';\nimport AccountBase from './account/Base.js';\nimport { Encoded } from './utils/encoder.js';\nimport CompilerBase from './contract/compiler/Base.js';\n\nexport type OnAccount = Encoded.AccountAddress | AccountBase | undefined;\n\nconst methods = {\n  ...chainMethods,\n  sendTransaction,\n  ...spendMethods,\n  ...contractGaMethods,\n} as const;\n\ntype Decrement<Number extends number> = [-1, 0, 1, 2, 3, 4, 5][Number];\ntype GetMethodsOptions<Methods extends { [key: string]: Function }> = {\n  [Name in keyof Methods]: Methods[Name] extends (...args: infer Args) => any\n    ? Args[Decrement<Args['length']>]\n    : never;\n};\ntype MethodsOptions = GetMethodsOptions<typeof methods>;\nexport interface AeSdkMethodsOptions\n  extends Partial<UnionToIntersection<MethodsOptions[keyof MethodsOptions]>> {}\n\nexport interface WrappedOptions {\n  onAccount: AccountBase;\n  onCompiler: CompilerBase;\n  onNode: Node;\n}\n\n/**\n * AeSdkMethods is the composition of:\n * - chain methods\n * - tx methods\n * - aens methods\n * - spend methods\n * - oracle methods\n * - contract methods\n * - contract ga methods\n *\n * While these methods can be used separately, this class provides a handy way to store\n * their context (current account, network, and compiler to use).\n */\nclass AeSdkMethods {\n  _options: AeSdkMethodsOptions = {};\n\n  readonly #wrappedOptions: WrappedOptions;\n\n  /**\n   * @param options - Options\n   */\n  constructor(options: AeSdkMethodsOptions = {}) {\n    Object.assign(this._options, options);\n    this.#wrappedOptions = {\n      onAccount: wrapWithProxy(() => this._options.onAccount),\n      onNode: wrapWithProxy(() => this._options.onNode),\n      onCompiler: wrapWithProxy(() => this._options.onCompiler),\n    };\n  }\n\n  /**\n   * Returns sdk instance options with references to current account, node, compiler.\n   * Used to create an instance (Contract, Oracle) bound to AeSdk state.\n   * @param mergeWith - Merge context with these extra options\n   * @returns Context object\n   */\n  getContext(mergeWith: AeSdkMethodsOptions = {}): AeSdkMethodsOptions & WrappedOptions {\n    return {\n      ...this._options,\n      ...this.#wrappedOptions,\n      ...mergeWith,\n    };\n  }\n\n  // TODO: omit onNode from options, because it is already in context\n  async buildTx(options: TxParamsAsync): Promise<Encoded.Transaction> {\n    // TODO: remove `any` at the same time as AeSdk class\n    return buildTxAsync({ ...(this.getContext() as any), ...options });\n  }\n}\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K;\n}[keyof T];\n\ntype OptionalIfNotRequired<T extends [any]> = RequiredKeys<T[0]> extends never ? T | [] : T;\n\ntype ReplaceOnAccount<Options> = Options extends { onAccount: any }\n  ? Omit<Options, 'onAccount'> & {\n      /**\n       * Make operation on specific account by providing address (to use account from sdk) or instance\n       * of AccountBase (like AccountMemory)\n       */\n      onAccount: OnAccount;\n    }\n  : Options;\n\ntype MakeOptional<Options> = OptionalIfNotRequired<\n  [Omit<Options, 'onNode' | 'onCompiler' | 'onAccount'> & Partial<ReplaceOnAccount<Options>>]\n>;\n\ntype TransformMethods<Methods extends { [key: string]: Function }> = {\n  [Name in keyof Methods]: Methods[Name] extends (\n    ...args: [...infer Args, infer Options]\n  ) => infer Ret\n    ? (...args: [...Args, ...MakeOptional<Options>]) => Ret\n    : never;\n};\n\ninterface AeSdkMethodsTransformed extends TransformMethods<typeof methods> {}\n\nObject.assign(\n  AeSdkMethods.prototype,\n  mapObject<Function, Function>(methods, ([name, handler]) => [\n    name,\n    function methodWrapper(this: AeSdkMethods, ...args: any[]) {\n      args.length = handler.length;\n      const options = args[args.length - 1];\n      args[args.length - 1] = this.getContext(options);\n      return handler(...args);\n    },\n  ]),\n);\n\ntype AeSdkMethodsTyped = AeSdkMethods & AeSdkMethodsTransformed;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst AeSdkMethodsTyped = AeSdkMethods as new (options?: AeSdkMethodsOptions) => AeSdkMethodsTyped;\nexport default AeSdkMethodsTyped;\n","import Node from './Node.js';\nimport AccountBase from './account/Base.js';\nimport {\n  CompilerError,\n  DuplicateNodeError,\n  NodeNotFoundError,\n  NotImplementedError,\n  TypeError,\n} from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\nimport { wrapWithProxy } from './utils/wrap-proxy.js';\nimport CompilerBase from './contract/compiler/Base.js';\nimport AeSdkMethods, { OnAccount, AeSdkMethodsOptions, WrappedOptions } from './AeSdkMethods.js';\n\ntype NodeInfo = Awaited<ReturnType<Node['getNodeInfo']>> & { name: string };\n\n/**\n * Basic AeSdk class implements:\n * - node selector,\n * - integrated compiler support,\n * - wrappers of account methods mapped to the current account.\n */\nexport default class AeSdkBase extends AeSdkMethods {\n  pool: Map<string, Node> = new Map();\n\n  selectedNodeName?: string;\n\n  readonly #wrappedOptions: WrappedOptions;\n\n  /**\n   * @param options - Options\n   * @param options.nodes - Array of nodes\n   */\n  constructor({\n    nodes = [],\n    ...options\n  }: AeSdkMethodsOptions & {\n    nodes?: Array<{ name: string; instance: Node }>;\n  } = {}) {\n    super(options);\n\n    nodes.forEach(({ name, instance }, i) => this.addNode(name, instance, i === 0));\n\n    this.#wrappedOptions = {\n      onNode: wrapWithProxy(() => this.api),\n      onCompiler: wrapWithProxy(() => this.compilerApi),\n      onAccount: wrapWithProxy(() => this._resolveAccount()),\n    };\n  }\n\n  // TODO: consider dropping this getter, because:\n  // compiler is not intended to be used separately any more (functionality limited to sdk needs)\n  // and user creates its instance by himself\n  get compilerApi(): CompilerBase {\n    if (this._options.onCompiler == null) {\n      throw new CompilerError(\"You can't use Compiler API. Compiler is not ready!\");\n    }\n    return this._options.onCompiler;\n  }\n\n  get api(): Node {\n    this.ensureNodeConnected();\n    return this.pool.get(this.selectedNodeName) as Node;\n  }\n\n  /**\n   * Add Node\n   * @param name - Node name\n   * @param node - Node instance\n   * @param select - Select this node as current\n   * @example\n   * ```js\n   * // add and select new node with name 'testNode'\n   * aeSdkBase.addNode('testNode', new Node({ url }), true)\n   * ```\n   */\n  addNode(name: string, node: Node, select = false): void {\n    if (this.pool.has(name)) throw new DuplicateNodeError(name);\n\n    this.pool.set(name, node);\n    if (select || this.selectedNodeName == null) {\n      this.selectNode(name);\n    }\n  }\n\n  /**\n   * Select Node\n   * @param name - Node name\n   * @example\n   * nodePool.selectNode('testNode')\n   */\n  selectNode(name: string): void {\n    if (!this.pool.has(name)) throw new NodeNotFoundError(`Node with name ${name} not in pool`);\n    this.selectedNodeName = name;\n  }\n\n  /**\n   * Check if you have selected node\n   * @example\n   * nodePool.isNodeConnected()\n   */\n  isNodeConnected(): this is AeSdkBase & { selectedNodeName: string } {\n    return this.selectedNodeName != null;\n  }\n\n  protected ensureNodeConnected(): asserts this is AeSdkBase & { selectedNodeName: string } {\n    if (!this.isNodeConnected()) {\n      throw new NodeNotFoundError(\"You can't use Node API. Node is not connected or not defined!\");\n    }\n  }\n\n  /**\n   * Get information about node\n   * @example\n   * ```js\n   * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n   * ```\n   */\n  async getNodeInfo(): Promise<NodeInfo> {\n    this.ensureNodeConnected();\n    return {\n      name: this.selectedNodeName,\n      ...(await this.api.getNodeInfo()),\n    };\n  }\n\n  /**\n   * Get array of available nodes\n   * @example\n   * nodePool.getNodesInPool()\n   */\n  async getNodesInPool(): Promise<NodeInfo[]> {\n    return Promise.all(\n      Array.from(this.pool.entries()).map(async ([name, node]) => ({\n        name,\n        ...(await node.getNodeInfo()),\n      })),\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addresses(): Encoded.AccountAddress[] {\n    return [];\n  }\n\n  /**\n   * Resolves an account\n   * @param account - ak-address, instance of AccountBase, or keypair\n   */\n  _resolveAccount(account: OnAccount = this._options.onAccount): AccountBase {\n    if (typeof account === 'string') throw new NotImplementedError('Address in AccountResolver');\n    if (typeof account === 'object') return account;\n    throw new TypeError(\n      'Account should be an address (ak-prefixed string), ' +\n        `or instance of AccountBase, got ${String(account)} instead`,\n    );\n  }\n\n  get address(): Encoded.AccountAddress {\n    return this._resolveAccount().address;\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data to sign\n   * @param options - Options\n   * @deprecated Use `unsafeSign` method instead\n   */\n  async sign(\n    data: string | Uint8Array,\n    options: { onAccount?: OnAccount } = {},\n  ): Promise<Uint8Array> {\n    return this.unsafeSign(data, options);\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data to sign\n   * @param options - Options\n   */\n  async unsafeSign(\n    data: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: OnAccount } = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).unsafeSign(data, options);\n  }\n\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   */\n  async signTransaction(\n    tx: Encoded.Transaction,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    const networkId = this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signTransaction(tx, { networkId, ...options });\n  }\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   */\n  async signMessage(\n    message: string,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).signMessage(message, options);\n  }\n\n  /**\n   * Sign typed data\n   * @param data - Encoded data to sign\n   * @param aci - Type of data to sign\n   * @param options - Options\n   */\n  async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    return this._resolveAccount(onAccount).signTypedData(data, aci, options);\n  }\n\n  /**\n   * Sign delegation, works only in Ceres\n   * @param delegation - Delegation to sign\n   * @param options - Options\n   */\n  async signDelegation(\n    delegation: Encoded.Bytearray,\n    {\n      onAccount,\n      ...options\n    }: { onAccount?: OnAccount } & Parameters<AccountBase['signDelegation']>[1] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??=\n      this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signDelegation(delegation, options);\n  }\n\n  /**\n   * The same as AeSdkMethods:getContext, but it would resolve ak_-prefixed address in\n   * `mergeWith.onAccount` to AccountBase.\n   */\n  override getContext(mergeWith: AeSdkMethodsOptions = {}): AeSdkMethodsOptions & WrappedOptions {\n    return {\n      ...this._options,\n      ...this.#wrappedOptions,\n      ...mergeWith,\n      ...(mergeWith.onAccount != null && {\n        onAccount: this._resolveAccount(mergeWith.onAccount),\n      }),\n    };\n  }\n}\n","import AeSdkBase from './AeSdkBase.js';\nimport { OnAccount } from './AeSdkMethods.js';\nimport AccountBase from './account/Base.js';\nimport { decode, Encoded } from './utils/encoder.js';\nimport { UnavailableAccountError } from './utils/errors.js';\n\nexport default class AeSdk extends AeSdkBase {\n  accounts: { [key: Encoded.AccountAddress]: AccountBase } = {};\n\n  selectedAddress?: Encoded.AccountAddress;\n\n  /**\n   * @param options - Options\n   */\n  constructor({\n    accounts,\n    ...options\n  }: { accounts?: AccountBase[] } & ConstructorParameters<typeof AeSdkBase>[0] = {}) {\n    super(options);\n    accounts?.forEach((account, idx) => this.addAccount(account, { select: idx === 0 }));\n  }\n\n  override _resolveAccount(account: OnAccount = this.selectedAddress): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (this.accounts[address] == null) throw new UnavailableAccountError(account);\n      account = this.accounts[address];\n    }\n    return super._resolveAccount(account);\n  }\n\n  /**\n   * Get accounts addresses\n   * @example addresses()\n   */\n  override addresses(): Encoded.AccountAddress[] {\n    return Object.keys(this.accounts) as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Add specific account\n   * @param account - Account instance\n   * @param options - Options\n   * @param options.select - Select account\n   * @example addAccount(account)\n   */\n  addAccount(account: AccountBase, { select }: { select?: boolean } = {}): void {\n    const { address } = account;\n    this.accounts[address] = account;\n    if (select === true) this.selectAccount(address);\n  }\n\n  /**\n   * Remove specific account\n   * @param address - Address of account to remove\n   * @example removeAccount(address)\n   */\n  removeAccount(address: Encoded.AccountAddress): void {\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    delete this.accounts[address]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n    if (this.selectedAddress === address) delete this.selectedAddress;\n  }\n\n  /**\n   * Select specific account\n   * @param address - Address of account to select\n   * @example selectAccount('ak_xxxxxxxx')\n   */\n  selectAccount(address: Encoded.AccountAddress): void {\n    decode(address);\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    this.selectedAddress = address;\n  }\n}\n","// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder.js';\nimport { BaseError, InternalError } from '../utils/errors.js';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  unsafeSign = 'data.unsafeSign',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  signTypedData = 'typedData.sign',\n  signDelegation = 'delegation.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code!: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static override code = 2;\n\n  override code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static override code = 4;\n\n  override code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static override code = 5;\n\n  override code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static override code = 9;\n\n  override code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static override code = 10;\n\n  override code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static override code = 11;\n\n  override code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static override code = 12;\n\n  override code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcNoNetworkById extends RpcError {\n  static override code = 13;\n\n  override code = 13;\n\n  constructor(networkId: string) {\n    super(`Wallet can't find a network by id \"${networkId}\"`);\n    this.data = networkId;\n    this.name = 'RpcNoNetworkById';\n  }\n}\nrpcErrors.push(RpcNoNetworkById);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static override code = -32601;\n\n  override code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n","import AccountBase from './Base.js';\nimport { METHODS } from '../aepp-wallet-communication/schema.js';\nimport { ArgumentError, UnsupportedProtocolError } from '../utils/errors.js';\nimport { Encoded, Encoding, decode, encode } from '../utils/encoder.js';\nimport RpcClient from '../aepp-wallet-communication/rpc/RpcClient.js';\nimport { AeppApi, WalletApi } from '../aepp-wallet-communication/rpc/types.js';\n\n/**\n * Account provided by wallet\n * @param params - Params\n * @param params.rpcClient - RpcClient instance\n * @param params.address - RPC account address\n * @returns AccountRpc instance\n * @category account\n */\nexport default class AccountRpc extends AccountBase {\n  _rpcClient: RpcClient<WalletApi, AeppApi>;\n\n  override readonly address: Encoded.AccountAddress;\n\n  constructor(rpcClient: RpcClient<WalletApi, AeppApi>, address: Encoded.AccountAddress) {\n    super();\n    this._rpcClient = rpcClient;\n    this.address = address;\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  async sign(dataRaw: string | Uint8Array): Promise<Uint8Array> {\n    return this.unsafeSign(dataRaw);\n  }\n\n  async unsafeSign(dataRaw: string | Uint8Array): Promise<Uint8Array> {\n    const data = encode(Buffer.from(dataRaw), Encoding.Bytearray);\n    const { signature } = await this._rpcClient.request(METHODS.unsafeSign, {\n      onAccount: this.address,\n      data,\n    });\n    return decode(signature);\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const res = await this._rpcClient.request(METHODS.sign, {\n      onAccount: this.address,\n      tx,\n      returnSigned: true,\n      networkId,\n      innerTx,\n    });\n    if (res.signedTransaction == null) {\n      throw new UnsupportedProtocolError('signedTransaction is missed in wallet response');\n    }\n    return res.signedTransaction;\n  }\n\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const { signature } = await this._rpcClient.request(METHODS.signMessage, {\n      onAccount: this.address,\n      message,\n    });\n    return Buffer.from(signature, 'hex');\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    { name, version, contractAddress, networkId }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signTypedData, {\n      onAccount: this.address,\n      domain: {\n        name,\n        version,\n        networkId,\n        contractAddress,\n      },\n      aci,\n      data,\n    });\n    return signature;\n  }\n\n  override async signDelegation(delegation: Encoded.Bytearray): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegation, {\n      delegation,\n      onAccount: this.address,\n    });\n    return signature;\n  }\n}\n","import { Encoded } from '../../utils/encoder.js';\nimport { Domain, AciValue } from '../../utils/typed-data.js';\nimport { METHODS, SUBSCRIPTION_TYPES, WALLET_TYPE } from '../schema.js';\nimport { SignedTx } from '../../apis/node/index.js';\n\nexport interface WalletInfo {\n  id: string;\n  name: string;\n  networkId: string;\n  origin: string; // TODO: origin needs to be provided by transport\n  type: WALLET_TYPE;\n}\n\nexport interface Accounts {\n  connected: { [pub: Encoded.AccountAddress]: {} };\n  current: { [pub: Encoded.AccountAddress]: {} };\n}\n\nexport interface Node {\n  // TODO: name is not used, can be removed\n  name: string;\n  url: string;\n}\n\nexport interface Network {\n  networkId: string;\n  node?: Node;\n}\n\ntype Icons = Array<{ src: string; sizes?: string; type?: string; purpose?: string }>;\n\nexport const RPC_VERSION = 1;\n\nexport type NetworkToSelect = { networkId: string } | { nodeUrl: string };\n\nexport interface WalletApi {\n  [METHODS.connect]: (p: {\n    name: string;\n    icons?: Icons;\n    version: typeof RPC_VERSION;\n    connectNode: boolean;\n  }) => Promise<WalletInfo & { node?: Node }>;\n\n  [METHODS.closeConnection]: (p: any) => void;\n\n  [METHODS.subscribeAddress]: (p: {\n    type: SUBSCRIPTION_TYPES;\n    value: 'connected' | 'current';\n  }) => Promise<{ subscription: Array<'connected' | 'current'>; address: Accounts }>;\n\n  [METHODS.address]: () => Promise<Encoded.AccountAddress[]>;\n\n  [METHODS.unsafeSign]: (p: {\n    data: Encoded.Bytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.sign]: (p: {\n    tx: Encoded.Transaction;\n    onAccount: Encoded.AccountAddress;\n    returnSigned: boolean;\n    /**\n     * @deprecated Wallet provided networkId will be used (current network)\n     * required to maintain backward compatibility with wallets using SDK v11.0.1 and below\n     * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}\n     */\n    networkId: string;\n    innerTx?: boolean;\n  }) => Promise<{\n    /**\n     * @deprecated this is not a hash at all, will be removed later at the same time\n     * as dropping ability to broadcast transaction by wallet\n     */\n    transactionHash?: Partial<SignedTx> & {\n      hash: Encoded.TxHash;\n      rawTx: Encoded.Transaction;\n    };\n    signedTransaction?: Encoded.Transaction;\n  }>;\n\n  [METHODS.signMessage]: (p: {\n    message: string;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: string }>;\n\n  [METHODS.signTypedData]: (p: {\n    domain: Domain;\n    aci: AciValue;\n    data: Encoded.ContractBytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.signDelegation]: (p: {\n    delegation: Encoded.Bytearray;\n    onAccount: Encoded.AccountAddress;\n  }) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.updateNetwork]: (a: NetworkToSelect) => Promise<null>;\n}\n\nexport interface AeppApi {\n  [METHODS.updateAddress]: (a: Accounts) => void;\n  [METHODS.updateNetwork]: (a: Network) => void;\n  [METHODS.readyToConnect]: (w: WalletInfo) => void;\n  [METHODS.closeConnection]: (p: any) => void;\n}\n","import { RpcError, RpcInternalError, RpcMethodNotFoundError } from '../schema.js';\nimport BrowserConnection from '../connection/Browser.js';\nimport { InvalidRpcMessageError, MissingCallbackError } from '../../utils/errors.js';\nimport { ensureError } from '../../utils/other.js';\n\ninterface JsonRpcRequest {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  params?: any;\n}\n\ninterface JsonRpcResponse {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  result?: any;\n  error?: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\ntype RpcApiHandler = (p?: any) => any | undefined;\ntype RpcApi<Api> = { [k in keyof Api]: RpcApiHandler };\ntype WithOrigin<Api extends RpcApi<Api>> = {\n  [k in keyof Api]: (p: Parameters<Api[k]>[0], origin: string) => ReturnType<Api[k]>;\n};\n\n/**\n * Contain functionality for using RPC conection\n * @category aepp wallet communication\n * @param connection - Connection object\n * @param onDisconnect - Disconnect callback\n * @param methods - Object containing handlers for each request by name\n */\nexport default class RpcClient<\n  RemoteApi extends RpcApi<RemoteApi>,\n  LocalApi extends RpcApi<LocalApi>,\n> {\n  connection: BrowserConnection;\n\n  readonly #callbacks = new Map<\n    number,\n    { resolve: (v: any) => void; reject: (e: Error) => void }\n  >();\n\n  #messageId = 0;\n\n  readonly #methods: WithOrigin<LocalApi>;\n\n  constructor(\n    connection: BrowserConnection,\n    onDisconnect: () => void,\n    methods: WithOrigin<LocalApi>,\n  ) {\n    this.connection = connection;\n    this.#methods = methods;\n    connection.connect(this.#handleMessage.bind(this), onDisconnect);\n  }\n\n  async #handleMessage(msg: JsonRpcRequest | JsonRpcResponse, origin: string): Promise<void> {\n    if (msg?.jsonrpc !== '2.0') throw new InvalidRpcMessageError(JSON.stringify(msg));\n    if ('result' in msg || 'error' in msg) {\n      this.#processResponse(msg);\n      return;\n    }\n\n    const request = msg as JsonRpcRequest;\n    let result;\n    let error: Error | undefined;\n    try {\n      if (!(request.method in this.#methods)) throw new RpcMethodNotFoundError();\n      const methodName = request.method as keyof LocalApi;\n      result = await this.#methods[methodName](request.params, origin);\n    } catch (e) {\n      ensureError(e);\n      error = e;\n    }\n    if (request.id != null) {\n      this.#sendResponse(\n        request.id,\n        request.method as keyof LocalApi,\n        result,\n        error == null || error instanceof RpcError ? error : new RpcInternalError(),\n      );\n    }\n    if (error != null && !(error instanceof RpcError)) throw error;\n  }\n\n  #sendRequest(\n    id: number | undefined,\n    method: keyof RemoteApi | keyof LocalApi,\n    params?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      ...(id != null ? { id } : {}),\n      method,\n      ...(params != null ? { params } : {}),\n    });\n  }\n\n  #sendResponse(\n    id: number,\n    method: keyof RemoteApi | keyof LocalApi, // TODO: remove as far it is not required in JSON RPC\n    result?: any,\n    error?: RpcError,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      id,\n      method,\n      ...(error != null ? { error: error.toJSON() } : { result }),\n    });\n  }\n\n  /**\n   * Make a request\n   * @param name - Method name\n   * @param params - Method params\n   * @returns Promise which will be resolved after receiving response message\n   */\n  async request<Name extends keyof RemoteApi>(\n    name: Name,\n    params: Parameters<RemoteApi[Name]>[0],\n  ): Promise<ReturnType<RemoteApi[Name]>> {\n    this.#sendRequest((this.#messageId += 1), name, params);\n    return new Promise((resolve, reject) => {\n      this.#callbacks.set(this.#messageId, { resolve, reject });\n    });\n  }\n\n  /**\n   * Make a notification\n   * @param name - Method name\n   * @param params - Method params\n   */\n  notify<Name extends keyof RemoteApi>(name: Name, params: Parameters<RemoteApi[Name]>[0]): void {\n    this.#sendRequest(undefined, name, params);\n  }\n\n  /**\n   * Process response message\n   * @param msg - Message object\n   */\n  #processResponse({ id, error, result }: { id: number; error?: any; result?: any }): void {\n    const callbacks = this.#callbacks.get(id);\n    if (callbacks == null) throw new MissingCallbackError(id);\n    if (error != null) callbacks.reject(RpcError.deserialize(error));\n    else callbacks.resolve(result);\n    this.#callbacks.delete(id);\n  }\n}\n","import AeSdkBase from './AeSdkBase.js';\nimport { OnAccount } from './AeSdkMethods.js';\nimport AccountBase from './account/Base.js';\nimport AccountRpc from './account/Rpc.js';\nimport { decode, Encoded } from './utils/encoder.js';\nimport {\n  Accounts,\n  RPC_VERSION,\n  WalletInfo,\n  Network,\n  WalletApi,\n  AeppApi,\n  Node as NodeRpc,\n  NetworkToSelect,\n} from './aepp-wallet-communication/rpc/types.js';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient.js';\nimport { METHODS, SUBSCRIPTION_TYPES } from './aepp-wallet-communication/schema.js';\nimport {\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  UnsubscribedAccountError,\n  UnAuthorizedAccountError,\n  RpcConnectionError,\n} from './utils/errors.js';\nimport Node from './Node.js';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser.js';\n\n/**\n * RPC handler for AEPP side\n * Contain functionality for wallet interaction and connect it to sdk\n * @deprecated use WalletConnectorFrame instead\n * @category aepp wallet communication\n */\nexport default class AeSdkAepp extends AeSdkBase {\n  name: string;\n\n  onAddressChange: (a: Accounts) => void;\n\n  onDisconnect: (p: any) => void;\n\n  onNetworkChange: (a: Network) => void;\n\n  rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  _accounts?: Accounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Aepp name\n   * @param options.onAddressChange - Call-back function for update address event\n   * @param options.onDisconnect - Call-back function for disconnect event\n   * @param options.onNetworkChange - Call-back function for update network event\n   */\n  constructor({\n    name,\n    onAddressChange = () => {},\n    onDisconnect = () => {},\n    onNetworkChange = () => {},\n    ...other\n  }: {\n    name: string;\n    onAddressChange?: (a: Accounts) => void;\n    onDisconnect?: (p: any) => void;\n    onNetworkChange?: (a: Network) => void;\n  } & ConstructorParameters<typeof AeSdkBase>[0]) {\n    super(other);\n    this.onAddressChange = onAddressChange;\n    this.onDisconnect = onDisconnect;\n    this.onNetworkChange = onNetworkChange;\n    this.name = name;\n  }\n\n  override _resolveAccount(account: OnAccount = this.addresses()[0]): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (!this.addresses().includes(address)) throw new UnAuthorizedAccountError(address);\n      this._ensureConnected();\n      account = new AccountRpc(this.rpcClient, address);\n    }\n    if (account == null) this._ensureAccountAccess();\n    return super._resolveAccount(account);\n  }\n\n  override addresses(): Encoded.AccountAddress[] {\n    if (this._accounts == null) return [];\n    const current = Object.keys(this._accounts.current)[0];\n    return [\n      ...(current != null ? [current] : []),\n      ...Object.keys(this._accounts.connected),\n    ] as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Connect to wallet\n   * @param connection - Wallet connection object\n   * @param options - Options\n   * @param options.connectNode - Request wallet to bind node\n   * @param options.name - Node name\n   */\n  async connectToWallet(\n    connection: BrowserConnection,\n    { connectNode = false, name = 'wallet-node' }: { connectNode?: boolean; name?: string } = {},\n  ): Promise<WalletInfo & { node?: NodeRpc }> {\n    if (this.rpcClient != null)\n      throw new AlreadyConnectedError('You are already connected to wallet');\n    let disconnectParams: any;\n\n    const updateNetwork = (params: Network): void => {\n      if (connectNode) {\n        if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n        this.pool.delete(name);\n        this.addNode(name, new Node(params.node.url), true);\n      }\n      this.onNetworkChange(params);\n    };\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        delete this.rpcClient;\n        delete this._accounts;\n        this.onDisconnect(disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: (params) => {\n          this._accounts = params;\n          this.onAddressChange(params);\n        },\n        [METHODS.updateNetwork]: updateNetwork,\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    const walletInfo = await client.request(METHODS.connect, {\n      name: this.name,\n      version: RPC_VERSION,\n      connectNode,\n    });\n    updateNetwork(walletInfo);\n    this.rpcClient = client;\n    return walletInfo;\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnectWallet(): void {\n    this._ensureConnected();\n    this.rpcClient.notify(METHODS.closeConnection, { reason: 'bye' });\n    this.rpcClient.connection.disconnect();\n  }\n\n  /**\n   * Ask addresses from wallet\n   * @returns Addresses from wallet\n   */\n  async askAddresses(): Promise<Encoded.AccountAddress[]> {\n    this._ensureConnected();\n    return this.rpcClient.request(METHODS.address, undefined);\n  }\n\n  /**\n   * Subscribe for addresses from wallet\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAddress(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<ReturnType<WalletApi[METHODS.subscribeAddress]>> {\n    this._ensureConnected();\n    const result = await this.rpcClient.request(METHODS.subscribeAddress, { type, value });\n    this._accounts = result.address;\n    return result;\n  }\n\n  /**\n   * Ask wallet to select a network\n   */\n  async askToSelectNetwork(network: NetworkToSelect): Promise<void> {\n    this._ensureConnected();\n    await this.rpcClient.request(METHODS.updateNetwork, network);\n  }\n\n  _ensureConnected(): asserts this is AeSdkAepp & {\n    rpcClient: NonNullable<AeSdkAepp['rpcClient']>;\n  } {\n    if (this.rpcClient != null) return;\n    throw new NoWalletConnectedError('You are not connected to Wallet');\n  }\n\n  _ensureAccountAccess(): asserts this is AeSdkAepp & {\n    rpcClient: NonNullable<AeSdkAepp['rpcClient']>;\n  } {\n    this._ensureConnected();\n    if (this.addresses().length !== 0) return;\n    throw new UnsubscribedAccountError();\n  }\n}\n","import { EventEmitter } from 'eventemitter3';\nimport AccountRpc from '../account/Rpc.js';\nimport { Encoded } from '../utils/encoder.js';\nimport {\n  Accounts,\n  RPC_VERSION,\n  Network,\n  WalletApi,\n  AeppApi,\n  NetworkToSelect,\n} from './rpc/types.js';\nimport RpcClient from './rpc/RpcClient.js';\nimport { METHODS, SUBSCRIPTION_TYPES } from './schema.js';\nimport { NoWalletConnectedError } from '../utils/errors.js';\nimport BrowserConnection from './connection/Browser.js';\n\ninterface EventsBase {\n  accountsChange: (accounts: AccountRpc[]) => void;\n  disconnect: (p: any) => void;\n}\n\nexport default abstract class WalletConnectorFrameBase<T extends {}> extends EventEmitter<\n  EventsBase | T\n> {\n  #rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  #getRpcClient(): RpcClient<WalletApi, AeppApi> {\n    if (this.#rpcClient == null)\n      throw new NoWalletConnectedError('You are not connected to Wallet');\n    return this.#rpcClient;\n  }\n\n  /**\n   * Is connected to wallet\n   */\n  get isConnected(): boolean {\n    return this.#rpcClient != null;\n  }\n\n  #accounts: AccountRpc[] = [];\n\n  /**\n   * Accounts provided by wallet over subscription\n   */\n  get accounts(): AccountRpc[] {\n    return this.#accounts;\n  }\n\n  protected constructor() {\n    super();\n  }\n\n  protected abstract _updateNetwork(params: Network): void;\n\n  #updateAccounts(params: Accounts): void {\n    const addresses = [\n      ...new Set([...Object.keys(params.current), ...Object.keys(params.connected)]),\n    ] as Encoded.AccountAddress[];\n    this.#accounts = addresses.map((address) => new AccountRpc(this.#getRpcClient(), address));\n    this.emit('accountsChange', this.#accounts);\n  }\n\n  static async _connect(\n    name: string,\n    connection: BrowserConnection,\n    connector: WalletConnectorFrameBase<any>,\n    connectNode: boolean,\n  ): Promise<void> {\n    let disconnectParams: any;\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        connector.#rpcClient = undefined;\n        connector.#accounts = [];\n        connector.emit('disconnect', disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: connector.#updateAccounts.bind(connector),\n        [METHODS.updateNetwork]: connector._updateNetwork.bind(connector),\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    connector.#rpcClient = client;\n    const walletInfo = await connector.#rpcClient.request(METHODS.connect, {\n      name,\n      version: RPC_VERSION,\n      connectNode,\n    });\n    connector._updateNetwork(walletInfo);\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnect(): void {\n    const client = this.#getRpcClient();\n    client.notify(METHODS.closeConnection, { reason: 'bye' });\n    client.connection.disconnect();\n  }\n\n  /**\n   * Request accounts from wallet\n   */\n  async getAccounts(): Promise<AccountRpc[]> {\n    const client = this.#getRpcClient();\n    const addresses = await client.request(METHODS.address, undefined);\n    return addresses.map((address) => new AccountRpc(client, address));\n  }\n\n  /**\n   * Subscribe for wallet accounts, get account updates adding handler to `accountsChange` event\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAccounts(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<AccountRpc[]> {\n    const result = await this.#getRpcClient().request(METHODS.subscribeAddress, { type, value });\n    this.#updateAccounts(result.address);\n    return this.#accounts;\n  }\n\n  /**\n   * Ask wallet to select a network\n   */\n  async askToSelectNetwork(network: NetworkToSelect): Promise<void> {\n    await this.#getRpcClient().request(METHODS.updateNetwork, network);\n  }\n}\n","import { Network } from './rpc/types.js';\nimport BrowserConnection from './connection/Browser.js';\nimport WalletConnectorFrameBase from './WalletConnectorFrameBase.js';\n\ninterface EventsNetworkId {\n  networkIdChange: (networkId: string) => void;\n}\n\n/**\n * Connect to wallet as iframe/web-extension\n * @category aepp wallet communication\n */\nexport default class WalletConnectorFrame extends WalletConnectorFrameBase<EventsNetworkId> {\n  #networkId = '';\n\n  /**\n   * The last network id reported by wallet\n   */\n  get networkId(): string {\n    return this.#networkId;\n  }\n\n  protected override _updateNetwork(params: Network): void {\n    this.#networkId = params.networkId;\n    this.emit('networkIdChange', this.#networkId);\n  }\n\n  /**\n   * Connect to wallet\n   * @param name - Aepp name\n   * @param connection - Wallet connection object\n   */\n  static async connect(name: string, connection: BrowserConnection): Promise<WalletConnectorFrame> {\n    const connector = new WalletConnectorFrame();\n    await WalletConnectorFrame._connect(name, connection, connector, false);\n    return connector;\n  }\n}\n","import { Network } from './rpc/types.js';\nimport { RpcConnectionError } from '../utils/errors.js';\nimport Node from '../Node.js';\nimport BrowserConnection from './connection/Browser.js';\nimport WalletConnectorFrameBase from './WalletConnectorFrameBase.js';\n\ninterface EventsWithNode {\n  nodeChange: (node: Node) => void;\n}\n\n/**\n * Connect to wallet as iframe/web-extension, asks wallet to provide node url\n * In comparison with WalletConnectorFrame, this would work better for decentralized applications\n * @category aepp wallet communication\n */\nexport default class WalletConnectorFrameWithNode extends WalletConnectorFrameBase<EventsWithNode> {\n  #node: Node = null as unknown as Node;\n\n  /**\n   * The node instance provided by wallet\n   */\n  get node(): Node {\n    return this.#node;\n  }\n\n  protected override _updateNetwork(params: Network): void {\n    if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n    this.#node = new Node(params.node.url);\n    this.emit('nodeChange', this.#node);\n  }\n\n  /**\n   * Connect to wallet\n   * @param name - Aepp name\n   * @param connection - Wallet connection object\n   */\n  static async connect(\n    name: string,\n    connection: BrowserConnection,\n  ): Promise<WalletConnectorFrameWithNode> {\n    const connector = new WalletConnectorFrameWithNode();\n    await super._connect(name, connection, connector, true);\n    return connector;\n  }\n}\n","import JsonBig from 'json-bigint';\nimport BigNumber from 'bignumber.js';\nimport { mapObject } from './other.js';\n\nconst jsonBig = JsonBig({ storeAsString: true });\n\nconst convertValuesToBigNumbers = (value: any): any => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return mapObject(value, ([k, v]) => [k, convertValuesToBigNumbers(v)]);\n  }\n  if (Array.isArray(value)) {\n    return value.map((item) => convertValuesToBigNumbers(item));\n  }\n  if (typeof value === 'string' && new BigNumber(value).toString(10) === value) {\n    const bn = new BigNumber(value);\n    bn.toJSON = () => bn.toString(10);\n    return bn;\n  }\n  return value;\n};\n\nexport default {\n  stringify: (...args: Parameters<(typeof JsonBig)['stringify']>): string =>\n    jsonBig.stringify(convertValuesToBigNumbers(args[0]), ...args.slice(1)),\n  parse: jsonBig.parse,\n};\n","import nacl from 'tweetnacl';\nimport AeSdk from './AeSdk.js';\nimport verifyTransaction from './tx/validator.js';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient.js';\nimport {\n  METHODS,\n  RPC_STATUS,\n  SUBSCRIPTION_TYPES,\n  WALLET_TYPE,\n  RpcInvalidTransactionError,\n  RpcNotAuthorizeError,\n  RpcPermissionDenyError,\n  RpcUnsupportedProtocolError,\n} from './aepp-wallet-communication/schema.js';\nimport { InternalError, UnknownRpcClientError } from './utils/errors.js';\nimport AccountBase from './account/Base.js';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser.js';\nimport {\n  Accounts,\n  AeppApi,\n  Network,\n  NetworkToSelect,\n  RPC_VERSION,\n  WalletApi,\n  WalletInfo,\n} from './aepp-wallet-communication/rpc/types.js';\nimport { Encoded, Encoding, encode, decode } from './utils/encoder.js';\nimport jsonBig from './utils/json-big.js';\n\ntype RpcClientWallet = RpcClient<AeppApi, WalletApi>;\n\ntype OnConnection = (\n  clientId: string,\n  params: Omit<Parameters<WalletApi[METHODS.connect]>[0], 'version'>,\n  origin: string,\n) => void;\n\ntype OnSubscription = (\n  clientId: string,\n  params: Parameters<WalletApi[METHODS.subscribeAddress]>[0],\n  origin: string,\n) => void;\n\ntype OnDisconnect = (\n  clientId: string,\n  params: Parameters<WalletApi[METHODS.closeConnection]>[0],\n) => void;\n\ntype OnAskAccounts = (clientId: string, params: undefined, origin: string) => void;\n\ntype OnAskToSelectNetwork = (clientId: string, params: NetworkToSelect, origin: string) => void;\n\ninterface RpcClientsInfo {\n  id: string;\n  status: RPC_STATUS;\n  connectNode: boolean;\n  addressSubscription: Set<'connected' | 'current'>;\n  rpc: RpcClientWallet;\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @category aepp wallet communication\n */\nexport default class AeSdkWallet extends AeSdk {\n  id: string;\n\n  _type: WALLET_TYPE;\n\n  name: string;\n\n  _clients = new Map<string, RpcClientsInfo>();\n\n  onConnection: OnConnection;\n\n  onSubscription: OnSubscription;\n\n  onDisconnect: OnDisconnect;\n\n  onAskAccounts: OnAskAccounts;\n\n  onAskToSelectNetwork: OnAskToSelectNetwork;\n\n  /**\n   * @param options - Options\n   * @param options.name - Wallet name\n   * @param options.id - Wallet id\n   * @param options.type - Wallet type\n   * @param options.onConnection - Call-back function for incoming AEPP connection\n   * @param options.onSubscription - Call-back function for incoming AEPP account subscription\n   * @param options.onAskAccounts - Call-back function for incoming AEPP get address request\n   * @param options.onAskToSelectNetwork - Call-back function for incoming AEPP select network\n   * request. If the request is fine then this function should change the current network.\n   * @param options.onDisconnect - Call-back function for disconnect event\n   */\n  constructor({\n    name,\n    id,\n    type,\n    onConnection,\n    onSubscription,\n    onDisconnect,\n    onAskAccounts,\n    onAskToSelectNetwork,\n    ...options\n  }: {\n    id: string;\n    type: WALLET_TYPE;\n    name: string;\n    onConnection: OnConnection;\n    onSubscription: OnSubscription;\n    onDisconnect: OnDisconnect;\n    onAskAccounts: OnAskAccounts;\n    onAskToSelectNetwork: OnAskToSelectNetwork;\n  } & ConstructorParameters<typeof AeSdk>[0]) {\n    super(options);\n    this.onConnection = onConnection;\n    this.onSubscription = onSubscription;\n    this.onDisconnect = onDisconnect;\n    this.onAskAccounts = onAskAccounts;\n    this.onAskToSelectNetwork = onAskToSelectNetwork;\n    this.name = name;\n    this.id = id;\n    this._type = type;\n  }\n\n  _getAccountsForClient({ addressSubscription }: RpcClientsInfo): Accounts {\n    const { current, connected } = this.getAccounts();\n    return {\n      current:\n        addressSubscription.has('current') || addressSubscription.has('connected') ? current : {},\n      connected: addressSubscription.has('connected') ? connected : {},\n    };\n  }\n\n  _pushAccountsToApps(): void {\n    if (this._clients == null) return;\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .filter((client) => client.addressSubscription.size !== 0)\n      .forEach((client) =>\n        client.rpc.notify(METHODS.updateAddress, this._getAccountsForClient(client)),\n      );\n  }\n\n  override selectAccount(address: Encoded.AccountAddress): void {\n    super.selectAccount(address);\n    this._pushAccountsToApps();\n  }\n\n  override addAccount(account: AccountBase, options?: Parameters<AeSdk['addAccount']>[1]): void {\n    super.addAccount(account, options);\n    this._pushAccountsToApps();\n  }\n\n  _getNode(): { node: Network['node'] } {\n    this.ensureNodeConnected();\n    return { node: { url: this.api.$host, name: this.selectedNodeName } };\n  }\n\n  override async selectNode(name: string): Promise<void> {\n    super.selectNode(name);\n    const networkId = await this.api.getNetworkId();\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .forEach((client) => {\n        client.rpc.notify(METHODS.updateNetwork, {\n          networkId,\n          ...(client.connectNode && this._getNode()),\n        });\n      });\n  }\n\n  _getClient(clientId: string): RpcClientsInfo {\n    const client = this._clients.get(clientId);\n    if (client == null) throw new UnknownRpcClientError(clientId);\n    return client;\n  }\n\n  _isRpcClientConnected(clientId: string): boolean {\n    return (\n      RPC_STATUS.CONNECTED === this._getClient(clientId).status &&\n      this._getClient(clientId).rpc.connection.isConnected()\n    );\n  }\n\n  _disconnectRpcClient(clientId: string): void {\n    const client = this._getClient(clientId);\n    client.rpc.connection.disconnect();\n    client.status = RPC_STATUS.DISCONNECTED;\n    client.addressSubscription = new Set();\n  }\n\n  /**\n   * Remove specific RpcClient by ID\n   * @param id - Client ID\n   */\n  removeRpcClient(id: string): void {\n    this._disconnectRpcClient(id);\n    this._clients.delete(id);\n  }\n\n  /**\n   * Add new client by AEPP connection\n   * @param clientConnection - AEPP connection object\n   * @returns Client ID\n   */\n  addRpcClient(clientConnection: BrowserConnection): string {\n    // @TODO  detect if aepp has some history based on origin????\n    // if yes use this instance for connection\n    const id = Buffer.from(nacl.randomBytes(8)).toString('base64');\n    let disconnectParams: any;\n    const client: RpcClientsInfo = {\n      id,\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST,\n      addressSubscription: new Set(),\n      connectNode: false,\n      rpc: new RpcClient<AeppApi, WalletApi>(\n        clientConnection,\n        () => {\n          this._clients.delete(id);\n          this.onDisconnect(id, disconnectParams); // also related info\n        },\n        {\n          [METHODS.closeConnection]: (params) => {\n            disconnectParams = params;\n            this._disconnectRpcClient(id);\n          },\n          // Store client info and prepare two fn for each client `connect` and `denyConnection`\n          // which automatically prepare and send response for that client\n          [METHODS.connect]: async ({ name, version, icons, connectNode }, origin) => {\n            if (version !== RPC_VERSION) throw new RpcUnsupportedProtocolError();\n\n            await this.onConnection(id, { name, icons, connectNode }, origin);\n            client.status = RPC_STATUS.CONNECTED;\n            client.connectNode = connectNode;\n            return {\n              ...(await this.getWalletInfo()),\n              ...(connectNode && this._getNode()),\n            };\n          },\n          [METHODS.subscribeAddress]: async ({ type, value }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n\n            switch (type) {\n              case SUBSCRIPTION_TYPES.subscribe:\n                // TODO: remove `type` as it always subscribe\n                await this.onSubscription(id, { type, value }, origin);\n                client.addressSubscription.add(value);\n                break;\n              case SUBSCRIPTION_TYPES.unsubscribe:\n                client.addressSubscription.delete(value);\n                break;\n              default:\n                throw new InternalError(`Unknown subscription type: ${type}`);\n            }\n\n            return {\n              subscription: Array.from(client.addressSubscription),\n              address: this._getAccountsForClient(client),\n            };\n          },\n          [METHODS.address]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskAccounts(id, params, origin);\n            return this.addresses();\n          },\n          [METHODS.sign]: async (\n            { tx, onAccount = this.address, returnSigned, innerTx },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              onAccount,\n              aeppOrigin: origin,\n              aeppRpcClientId: id,\n              innerTx,\n            };\n            if (returnSigned || innerTx === true) {\n              return { signedTransaction: await this.signTransaction(tx, parameters) };\n            }\n            try {\n              return jsonBig.parse(\n                jsonBig.stringify({\n                  transactionHash: await this.sendTransaction(tx, { ...parameters, verify: false }),\n                }),\n              );\n            } catch (error) {\n              const validation = await verifyTransaction(tx, this.api);\n              if (validation.length > 0) throw new RpcInvalidTransactionError(validation);\n              throw error;\n            }\n          },\n          [METHODS.signMessage]: async ({ message, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            return {\n              signature: Buffer.from(await this.signMessage(message, parameters)).toString('hex'),\n            };\n          },\n          [METHODS.signTypedData]: async (\n            { domain, aci, data, onAccount = this.address },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              ...domain,\n              onAccount,\n              aeppOrigin: origin,\n              aeppRpcClientId: id,\n            };\n            return {\n              signature: await this.signTypedData(data, aci, parameters),\n            };\n          },\n          [METHODS.unsafeSign]: async ({ data, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) throw new RpcPermissionDenyError(onAccount);\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = encode(\n              await this.unsafeSign(decode(data), parameters),\n              Encoding.Signature,\n            );\n            return { signature };\n          },\n          [METHODS.signDelegation]: async ({ delegation, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) throw new RpcPermissionDenyError(onAccount);\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = await this.signDelegation(delegation, parameters);\n            return { signature };\n          },\n          [METHODS.updateNetwork]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskToSelectNetwork(id, params, origin);\n            return null;\n          },\n        },\n      ),\n    };\n    this._clients.set(id, client);\n    return id;\n  }\n\n  /**\n   * Send shareWalletInfo message to notify AEPP about wallet\n   * @param clientId - ID of RPC client send message to\n   */\n  async shareWalletInfo(clientId: string): Promise<void> {\n    this._getClient(clientId).rpc.notify(METHODS.readyToConnect, await this.getWalletInfo());\n  }\n\n  /**\n   * Get Wallet info object\n   * @returns Object with wallet information\n   */\n  async getWalletInfo(): Promise<WalletInfo> {\n    const { origin } = window.location;\n    return {\n      id: this.id,\n      name: this.name,\n      networkId: await this.api.getNetworkId(),\n      origin: origin === 'file://' ? '*' : origin,\n      type: this._type,\n    };\n  }\n\n  /**\n   * Get Wallet accounts\n   * @returns Object with accounts information (\\{ connected: Object, current: Object \\})\n   */\n  getAccounts(): Accounts {\n    return {\n      current: this.selectedAddress != null ? { [this.selectedAddress]: {} } : {},\n      connected: this.addresses()\n        .filter((a) => a !== this.selectedAddress)\n        .reduce((acc, a) => ({ ...acc, [a]: {} }), {}),\n    };\n  }\n}\n","import Node from '../Node.js';\nimport AccountBase from './Base.js';\n\n/**\n * A factory class that generates instances of AccountBase by index.\n * @category account\n */\nexport default abstract class AccountBaseFactory {\n  /**\n   * Get an instance of AccountBase for a given account index.\n   * @param accountIndex - Index of account\n   */\n  abstract initialize(accountIndex: number): Promise<AccountBase>;\n\n  /**\n   * Discovers accounts in set that already have been used (has any on-chain transactions).\n   * It returns an empty array if none of accounts been used.\n   * If a used account is preceded by an unused account then it would be ignored.\n   * @param node - Instance of Node to get account information from\n   */\n  async discover(node: Node): Promise<AccountBase[]> {\n    let index = 0;\n    const result = [];\n    let account;\n    do {\n      if (account != null) result.push(account);\n      account = await this.initialize(index);\n      index += 1;\n    } while (\n      await node.getAccountByPubkey(account.address).then(\n        () => true,\n        () => false,\n      )\n    );\n    return result;\n  }\n}\n","import { mnemonicToSeed, mnemonicToSeedSync } from '@scure/bip39';\nimport tweetnaclAuth from 'tweetnacl-auth';\nimport AccountBaseFactory from './BaseFactory.js';\nimport AccountMemory from './Memory.js';\nimport { encode, Encoding, Encoded, decode } from '../utils/encoder.js';\nimport { concatBuffers } from '../utils/other.js';\nimport { ArgumentError } from '../utils/errors.js';\n\nexport const ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\nexport function deriveKey(message: Uint8Array, key: Uint8Array): KeyTreeNode {\n  const I = tweetnaclAuth.full(message, key);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\nexport function derivePathFromKey(key: KeyTreeNode, segments: readonly number[]): KeyTreeNode {\n  return segments.reduce(({ secretKey, chainCode }, segment) => {\n    const indexBuffer = Buffer.allocUnsafe(4);\n    indexBuffer.writeUInt32BE(segment + HARDENED_OFFSET, 0);\n    const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n    return deriveKey(data, chainCode);\n  }, key);\n}\n\ninterface Wallet {\n  secretKey: Encoded.Bytearray;\n  chainCode: Encoded.Bytearray;\n}\n\n/**\n * A factory class that generates instances of AccountMemory based on provided mnemonic phrase.\n * @category account\n */\nexport default class AccountMnemonicFactory extends AccountBaseFactory {\n  #mnemonicOrWalletOrSeed: string | Wallet | Uint8Array;\n\n  /**\n   * @param mnemonicOrWalletOrSeed - BIP39-compatible mnemonic phrase or a wallet/seed derived from\n   * mnemonic\n   */\n  constructor(mnemonicOrWalletOrSeed: string | Wallet | Uint8Array) {\n    super();\n    this.#mnemonicOrWalletOrSeed = mnemonicOrWalletOrSeed;\n  }\n\n  #getWallet(sync: true): Wallet;\n  #getWallet(sync: false): Wallet | Promise<Wallet>;\n  #getWallet(sync: boolean): Wallet | Promise<Wallet> {\n    const setWalletBySeed = (seed: Uint8Array): Wallet => {\n      const masterKey = deriveKey(seed, ED25519_CURVE);\n      const walletKey = derivePathFromKey(masterKey, [44, 457]);\n      this.#mnemonicOrWalletOrSeed = {\n        secretKey: encode(walletKey.secretKey, Encoding.Bytearray),\n        chainCode: encode(walletKey.chainCode, Encoding.Bytearray),\n      };\n      return this.#mnemonicOrWalletOrSeed;\n    };\n\n    if (ArrayBuffer.isView(this.#mnemonicOrWalletOrSeed)) {\n      if (this.#mnemonicOrWalletOrSeed.length !== 64) {\n        throw new ArgumentError('seed length', 64, this.#mnemonicOrWalletOrSeed.length);\n      }\n      return setWalletBySeed(this.#mnemonicOrWalletOrSeed);\n    }\n    if (typeof this.#mnemonicOrWalletOrSeed === 'object') return this.#mnemonicOrWalletOrSeed;\n    return sync\n      ? setWalletBySeed(mnemonicToSeedSync(this.#mnemonicOrWalletOrSeed))\n      : mnemonicToSeed(this.#mnemonicOrWalletOrSeed).then(setWalletBySeed);\n  }\n\n  /**\n   * Get a wallet to initialize AccountMnemonicFactory instead mnemonic phrase.\n   * In comparison with mnemonic, the wallet can be used to derive aeternity accounts only.\n   */\n  async getWallet(): Promise<Wallet> {\n    return this.#getWallet(false);\n  }\n\n  /**\n   * The same as `getWallet` but synchronous.\n   */\n  getWalletSync(): Wallet {\n    return this.#getWallet(true);\n  }\n\n  #getAccountByWallet(accountIndex: number, wallet: Wallet): AccountMemory {\n    const walletKey = {\n      secretKey: decode(wallet.secretKey),\n      chainCode: decode(wallet.chainCode),\n    };\n    const raw = derivePathFromKey(walletKey, [accountIndex, 0, 0]).secretKey;\n    return new AccountMemory(encode(raw, Encoding.AccountSecretKey));\n  }\n\n  /**\n   * Get an instance of AccountMemory for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountMemory> {\n    const wallet = await this.getWallet();\n    return this.#getAccountByWallet(accountIndex, wallet);\n  }\n\n  /**\n   * The same as `initialize` but synchronous.\n   */\n  initializeSync(accountIndex: number): AccountMemory {\n    const wallet = this.getWalletSync();\n    return this.#getAccountByWallet(accountIndex, wallet);\n  }\n}\n","import AccountBase from './Base.js';\nimport {\n  ArgumentError,\n  InternalError,\n  InvalidAuthDataError,\n  NotImplementedError,\n} from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { getAccount } from '../chain.js';\nimport Contract from '../contract/Contract.js';\nimport { buildTxAsync, buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\n/**\n * Generalized account class\n * @category account generalized\n */\nexport default class AccountGeneralized extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  #authFun?: string;\n\n  /**\n   * @param address - Address of generalized account\n   */\n  constructor(address: Encoded.AccountAddress) {\n    super();\n    decode(address);\n    this.address = address;\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    return this.unsafeSign();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async unsafeSign(): Promise<Uint8Array> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(): Promise<Uint8Array> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError(\"Can't sign using generalized account\");\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using generalized account');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1],\n  ): Promise<Encoded.Transaction> {\n    if (authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, onCompiler, onNode', 'provided', null);\n    }\n    const { callData, sourceCode, args, fee, gasLimit, gasPrice } =\n      typeof authData === 'function' ? await authData(tx) : authData;\n\n    const authCallData =\n      callData ??\n      (await (async () => {\n        if (this.#authFun == null) {\n          const account = await getAccount(this.address, { onNode });\n          if (account.kind !== 'generalized') {\n            throw new ArgumentError('account kind', 'generalized', account.kind);\n          }\n          this.#authFun = account.authFun;\n        }\n        if (this.#authFun == null) {\n          throw new InternalError('Account in generalised, but authFun not provided');\n        }\n\n        if (sourceCode == null || args == null) {\n          throw new InvalidAuthDataError('Auth data must contain sourceCode and args or callData.');\n        }\n        const contract = await Contract.initialize({ onCompiler, onNode, sourceCode });\n        return contract._calldata.encode(contract._name, this.#authFun, args);\n      })());\n\n    const gaMetaTx = await buildTxAsync({\n      tag: Tag.GaMetaTx,\n      tx: { tag: Tag.SignedTx, encodedTx: decode(tx), signatures: [] },\n      gaId: this.address,\n      authData: authCallData,\n      fee,\n      gasLimit,\n      gasPrice,\n      onNode,\n    });\n    return buildTx({ tag: Tag.SignedTx, encodedTx: decode(gaMetaTx), signatures: [] });\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountBase from './Base.js';\nimport { ArgumentError, NotImplementedError } from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\nexport const CLA = 0xe0;\nexport const GET_ADDRESS = 0x02;\nexport const SIGN_TRANSACTION = 0x04;\nexport const GET_APP_CONFIGURATION = 0x06;\nexport const SIGN_PERSONAL_MESSAGE = 0x08;\n\n/**\n * Ledger wallet account class\n * @category account\n */\nexport default class AccountLedger extends AccountBase {\n  /**\n   * @param transport - Connection to Ledger to use\n   * @param index - Index of account\n   * @param address - Address of account\n   */\n  constructor(\n    readonly transport: Transport,\n    readonly index: number,\n    override readonly address: Encoded.AccountAddress,\n  ) {\n    super();\n    transport.decorateAppAPIMethods(this, ['signTransaction', 'signMessage'], 'w0w');\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    return this.unsafeSign();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async unsafeSign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using Ledger HW');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountLedger');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    const rawTx = decode(tx);\n    let offset = 0;\n    const headerLength = 4 + 1 + 4;\n    const networkIdBuffer = Buffer.from(networkId);\n    const toSend = [];\n    while (offset !== rawTx.length) {\n      const maxChunkSize = offset === 0 ? 150 - headerLength - networkIdBuffer.length : 150;\n      const chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(\n        offset === 0 ? headerLength + networkIdBuffer.length + chunkSize : chunkSize,\n      );\n      if (offset === 0) {\n        let bufferOffset = buffer.writeUInt32BE(this.index, 0);\n        bufferOffset = buffer.writeUInt32BE(rawTx.length, bufferOffset);\n        bufferOffset = buffer.writeUInt8(networkIdBuffer.length, bufferOffset);\n        bufferOffset += networkIdBuffer.copy(buffer, bufferOffset, 0, networkIdBuffer.length);\n        rawTx.copy(buffer, bufferOffset, 0, 150 - bufferOffset);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_TRANSACTION, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    const signatures = [response.subarray(0, 64)];\n\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rawTx, signatures });\n  }\n\n  override async signMessage(messageStr: string): Promise<Uint8Array> {\n    let offset = 0;\n    const message = Buffer.from(messageStr);\n    const toSend = [];\n    while (offset !== message.length) {\n      const maxChunkSize = offset === 0 ? 150 - 4 - 4 : 150;\n      const chunkSize =\n        offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(offset === 0 ? 4 + 4 + chunkSize : chunkSize);\n      if (offset === 0) {\n        buffer.writeUInt32BE(this.index, 0);\n        buffer.writeUInt32BE(message.length, 4);\n        message.copy(buffer, 4 + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_PERSONAL_MESSAGE, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    return response.subarray(0, 64);\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountLedger, { CLA, GET_ADDRESS, GET_APP_CONFIGURATION } from './Ledger.js';\nimport { UnsupportedVersionError } from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport semverSatisfies from '../utils/semver-satisfies.js';\nimport AccountBaseFactory from './BaseFactory.js';\n\ninterface AppConfiguration {\n  version: string;\n}\n\n/**\n * A factory class that generates instances of AccountLedger based on provided transport.\n * @category account\n */\nexport default class AccountLedgerFactory extends AccountBaseFactory {\n  /**\n   * @param transport - Connection to Ledger to use\n   */\n  constructor(readonly transport: Transport) {\n    super();\n    transport.decorateAppAPIMethods(this, ['getAddress', 'getAppConfiguration'], 'w0w');\n  }\n\n  #ensureReadyPromise?: Promise<void>;\n\n  // TODO: remove after release Ledger app v1.0.0\n  _enableExperimentalLedgerAppSupport = false;\n\n  /**\n   * It throws an exception if Aeternity app on Ledger has an incompatible version, not opened or\n   * not installed.\n   */\n  async ensureReady(): Promise<void> {\n    const { version } = await this.#getAppConfiguration();\n    const oldApp = [version, '0.4.4', '0.5.0'] as const;\n    const newApp = [version, '1.0.0', '2.0.0'] as const;\n    if (\n      !semverSatisfies(...oldApp) &&\n      (!this._enableExperimentalLedgerAppSupport || !semverSatisfies(...newApp))\n    )\n      throw new UnsupportedVersionError('Aeternity app on Ledger', ...oldApp);\n    this.#ensureReadyPromise = Promise.resolve();\n  }\n\n  async #ensureReady(): Promise<void> {\n    this.#ensureReadyPromise ??= this.ensureReady();\n    return this.#ensureReadyPromise;\n  }\n\n  async #getAppConfiguration(): Promise<AppConfiguration> {\n    let response = await this.transport.send(CLA, GET_APP_CONFIGURATION, 0x00, 0x00);\n    if (response.length === 6) response = response.subarray(1);\n    return {\n      version: [response[0], response[1], response[2]].join('.'),\n    };\n  }\n\n  /**\n   * @returns the version of Aeternity app installed on Ledger wallet\n   */\n  async getAppConfiguration(): Promise<AppConfiguration> {\n    return this.#getAppConfiguration();\n  }\n\n  /**\n   * Get `ak_`-prefixed address for a given account index.\n   * @param accountIndex - Index of account\n   * @param verify - Ask user to confirm address by showing it on the device screen\n   */\n  async getAddress(accountIndex: number, verify = false): Promise<Encoded.AccountAddress> {\n    await this.#ensureReady();\n    const buffer = Buffer.alloc(4);\n    buffer.writeUInt32BE(accountIndex, 0);\n    const response = await this.transport.send(\n      CLA,\n      GET_ADDRESS,\n      verify ? 0x01 : 0x00,\n      0x00,\n      buffer,\n    );\n    const addressLength = response[0];\n    return response.subarray(1, 1 + addressLength).toString('ascii') as Encoded.AccountAddress;\n  }\n\n  /**\n   * Get an instance of AccountLedger for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountLedger> {\n    return new AccountLedger(this.transport, accountIndex, await this.getAddress(accountIndex));\n  }\n}\n","import type { BaseProvider } from '@metamask/providers';\nimport AccountBase from './Base.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { ArgumentError, InternalError, NotImplementedError } from '../utils/errors.js';\n\nexport const snapId = 'npm:@aeternity-snap/plugin';\n\nexport async function invokeSnap<R>(\n  provider: BaseProvider,\n  method: string,\n  params: unknown,\n  key: string,\n): Promise<R> {\n  const response = await provider.request<{ [k in string]: unknown }>({\n    method: 'wallet_invokeSnap',\n    params: { snapId, request: { method, params } },\n  });\n  if (response == null) throw new InternalError('Empty MetaMask response');\n  if (!(key in response)) {\n    throw new InternalError(`Key ${key} missed in response ${JSON.stringify(response)}`);\n  }\n  return response[key] as R;\n}\n\n/**\n * Account connected to Aeternity Snap for MetaMask\n * https://www.npmjs.com/package/\\@aeternity-snap/plugin\n * @category account\n */\nexport default class AccountMetamask extends AccountBase {\n  /**\n   * @deprecated this class is not intended to provide raw access to the provider\n   */\n  readonly provider: BaseProvider;\n\n  readonly index: number;\n\n  override readonly address: Encoded.AccountAddress;\n\n  /**\n   * @param address - Address of account\n   */\n  constructor(provider: BaseProvider, index: number, address: Encoded.AccountAddress) {\n    super();\n    this.provider = provider;\n    this.index = index;\n    this.address = address;\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    return this.unsafeSign();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async unsafeSign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using MetaMask');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountMetamask');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    return invokeSnap<Encoded.Transaction>(\n      this.provider,\n      'signTransaction',\n      { derivationPath: [`${this.index}'`, \"0'\", \"0'\"], tx, networkId },\n      'signedTx',\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const signature = await invokeSnap<string>(\n      this.provider,\n      'signMessage',\n      {\n        derivationPath: [`${this.index}'`, \"0'\", \"0'\"],\n        message: Buffer.from(message).toString('base64'),\n      },\n      'signature',\n    );\n    return Buffer.from(signature, 'base64');\n  }\n}\n","import type { BaseProvider } from '@metamask/providers';\nimport {\n  InternalError,\n  UnsupportedPlatformError,\n  UnsupportedVersionError,\n} from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport semverSatisfies from '../utils/semver-satisfies.js';\nimport AccountBaseFactory from './BaseFactory.js';\nimport AccountMetamask, { invokeSnap, snapId } from './Metamask.js';\n\nconst snapMinVersion = '0.0.9';\nconst snapMaxVersion = '0.1.0';\nconst metamaskVersionPrefix = 'MetaMask/v';\n\ninterface SnapDetails {\n  blocked: boolean;\n  enabled: boolean;\n  id: typeof snapId;\n  version: string;\n  initialPermissions: Record<string, unknown>;\n}\n\n/**\n * A factory class that generates instances of AccountMetamask.\n * @see {@link https://www.npmjs.com/package/@aeternity-snap/plugin | Aeternity snap}\n * @category account\n */\nexport default class AccountMetamaskFactory extends AccountBaseFactory {\n  // TODO: remove after removing `provider`\n  #provider: BaseProvider | undefined;\n\n  /**\n   * @deprecated this class is not intended to provide raw access to the provider\n   */\n  get provider(): BaseProvider {\n    if (this.#provider == null) throw new UnsupportedPlatformError('Metamask is not detected yet');\n    return this.#provider;\n  }\n\n  async #getMetamaskAsInjected(): Promise<BaseProvider | undefined> {\n    if (!('ethereum' in window) || window.ethereum == null) return;\n    const provider = window.ethereum as BaseProvider;\n    const version = await provider.request<string>({ method: 'web3_clientVersion' });\n    if (version == null) throw new InternalError(\"Can't get Ethereum Provider version\");\n    if (!version.startsWith(metamaskVersionPrefix)) return;\n    return provider;\n  }\n\n  async #getMetamaskOverEip6963(): Promise<BaseProvider | undefined> {\n    setTimeout(() => window.dispatchEvent(new Event('eip6963:requestProvider')));\n    return new Promise<BaseProvider | undefined>((resolve) => {\n      const handler = (\n        event: CustomEvent<{ info: { rdns: string }; provider: BaseProvider }>,\n      ): void => {\n        if (event.detail.info.rdns !== 'io.metamask') return;\n        window.removeEventListener('eip6963:announceProvider', handler);\n        resolve(event.detail.provider);\n      };\n      window.addEventListener('eip6963:announceProvider', handler);\n      setTimeout(() => {\n        window.removeEventListener('eip6963:announceProvider', handler);\n        resolve(undefined);\n      }, 500);\n    });\n  }\n\n  #providerPromise: Promise<BaseProvider> | undefined;\n\n  async #getProvider(): Promise<BaseProvider> {\n    this.#providerPromise ??= (async () => {\n      this.#provider ??=\n        (await this.#getMetamaskAsInjected()) ?? (await this.#getMetamaskOverEip6963());\n      if (this.#provider == null) {\n        throw new UnsupportedPlatformError(\n          \"Can't find a Metamask extension as an injected provider and over EIP-6963. Ensure that Metamask is installed or setup a provider.\",\n        );\n      }\n      const version = await this.#provider.request<string>({ method: 'web3_clientVersion' });\n      if (version == null) throw new InternalError(\"Can't get Ethereum Provider version\");\n      const args = [version.slice(metamaskVersionPrefix.length), '12.2.4'] as const;\n      if (!semverSatisfies(...args)) throw new UnsupportedVersionError('Metamask', ...args);\n      return this.#provider;\n    })();\n    return this.#providerPromise;\n  }\n\n  /**\n   * @param provider - Connection to MetaMask to use\n   */\n  constructor(provider?: BaseProvider) {\n    super();\n    this.#provider = provider;\n    if (this.#provider == null && window == null) {\n      throw new UnsupportedPlatformError(\n        'Window object not found, you can run AccountMetamaskFactory only in browser or setup a provider',\n      );\n    }\n  }\n\n  /**\n   * Request MetaMask to install Aeternity snap.\n   * @deprecated use `requestSnap` instead\n   */\n  async installSnap(): Promise<SnapDetails> {\n    const provider = await this.#getProvider();\n    const details = (await provider.request({\n      method: 'wallet_requestSnaps',\n      params: { [snapId]: { version: snapMinVersion } },\n    })) as { [key in typeof snapId]: SnapDetails };\n    return details[snapId];\n  }\n\n  /**\n   * Request MetaMask to install Aeternity snap or connect it to the current aepp.\n   * MetaMask can have only one Aeternity snap version installed at a time.\n   * This method is intended to upgrade the snap to a specified version if needed by the aepp.\n   * If Aeternity snap is installed but wasn't used by the aepp, then the user still needs to approve the connection.\n   * If the currently installed version corresponds to the version range, then the snap won't be upgraded.\n   * To downgrade the snap, the user must manually uninstall the current version.\n   * @param version - Snap version range (e.g. `1`, `0.1.*`, `^0.0.9`, `~0.0.9`; `>=0.0.9 <0.1.0`)\n   * (default: a version range supported by sdk)\n   */\n  async requestSnap(version = `>=${snapMinVersion} <${snapMaxVersion}`): Promise<SnapDetails> {\n    const provider = await this.#getProvider();\n    const details = (await provider.request({\n      method: 'wallet_requestSnaps',\n      params: { [snapId]: { version } },\n    })) as { [key in typeof snapId]: SnapDetails };\n    return details[snapId];\n  }\n\n  /**\n   * It throws an exception if MetaMask or Aeternity snap has an incompatible version or is not\n   * installed or is not connected to the aepp.\n   * @deprecated use `requestSnap` instead\n   */\n  async ensureReady(): Promise<void> {\n    const snapVersion = await this.getSnapVersion();\n    const args = [snapVersion, snapMinVersion, snapMaxVersion] as const;\n    if (!semverSatisfies(...args))\n      throw new UnsupportedVersionError('Aeternity snap in MetaMask', ...args);\n  }\n\n  /**\n   * @returns the version of snap installed in MetaMask\n   */\n  async getSnapVersion(): Promise<string> {\n    const provider = await this.#getProvider();\n    const snaps = (await provider.request({ method: 'wallet_getSnaps' })) as Record<\n      string,\n      { version: string }\n    >;\n    const version = snaps[snapId]?.version;\n    if (version == null)\n      throw new UnsupportedPlatformError(\n        'Aeternity snap is not installed to MetaMask or not connected to this aepp',\n      );\n    return version;\n  }\n\n  /**\n   * Get an instance of AccountMetaMask for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountMetamask> {\n    await this.requestSnap();\n    const provider = await this.#getProvider();\n    const address = await invokeSnap<Encoded.AccountAddress>(\n      provider,\n      'getPublicKey',\n      { derivationPath: [`${accountIndex}'`, \"0'\", \"0'\"] },\n      'publicKey',\n    );\n    return new AccountMetamask(provider, accountIndex, address);\n  }\n}\n","import { Encoded } from '../../utils/encoder.js';\n\ninterface FunctionAci {\n  arguments: any[];\n  name: string;\n  payable: boolean;\n  returns: any;\n  stateful: boolean;\n}\n\nexport type Aci = Array<{\n  contract?: {\n    name: string;\n    event?: any;\n    functions: FunctionAci[];\n    kind: string; // known values: 'contract_main'\n    payable: boolean;\n    typedefs: any[];\n  };\n}>;\n\nexport type CompileResult = Promise<{\n  bytecode: Encoded.ContractBytearray;\n  aci: Aci;\n  warnings: Array<{\n    message: string;\n    pos: {\n      file?: string;\n      line: number;\n      col: number;\n    };\n  }>;\n}>;\n\n/**\n * A base class for all compiler implementations\n * @category contract\n */\nexport default abstract class CompilerBase {\n  /**\n   * Compile contract by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract compile(path: string): CompileResult;\n\n  /**\n   * Compile contract by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI and bytecode\n   */\n  abstract compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult;\n\n  /**\n   * Generate contract's ACI by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI\n   */\n  abstract generateAci(path: string): Promise<Aci>;\n\n  /**\n   * Generate contract's ACI by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI\n   */\n  abstract generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * Available only in Node.js\n   * @param bytecode - Contract bytecode to verify\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * @param bytecode - Contract bytecode to verify\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   */\n  abstract validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean>;\n\n  /**\n   * @returns Compiler version\n   */\n  abstract version(): Promise<string>;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompileOpts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileOpts\",\n    modelProperties: {\n      fileSystem: {\n        serializedName: \"file_system\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      srcFile: {\n        serializedName: \"src_file\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompilerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerError\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      pos: {\n        serializedName: \"pos\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorPos\",\n        },\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorPos: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorPos\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"String\",\n        },\n      },\n      line: {\n        serializedName: \"line\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      col: {\n        serializedName: \"col\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompileResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileResult\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      aci: {\n        serializedName: \"aci\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n      warnings: {\n        serializedName: \"warnings\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CompilerError\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaCallResultInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const BytecodeCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BytecodeCallResultInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodedCallresult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCallresult\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const FunctionCallInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionCallInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const Calldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Calldata\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodeCalldataBytecode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataBytecode\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodedCalldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCalldata\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } },\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const DecodeCalldataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataSource\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const FateAssembler: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FateAssembler\",\n    modelProperties: {\n      fateAssembler: {\n        serializedName: \"fate-assembler\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ValidateByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\",\n        },\n      },\n    },\n  },\n};\n\nexport const CompilerVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerVersion\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ApiVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiVersion\",\n    modelProperties: {\n      apiVersion: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaBinaryData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaBinaryData\",\n    modelProperties: {\n      sophiaType: {\n        serializedName: \"sophia-type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SophiaJsonData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaJsonData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n","import { OperationParameter, OperationURLParameter } from \"@azure/core-client\";\nimport {\n  Contract as ContractMapper,\n  SophiaCallResultInput as SophiaCallResultInputMapper,\n  BytecodeCallResultInput as BytecodeCallResultInputMapper,\n  FunctionCallInput as FunctionCallInputMapper,\n  DecodeCalldataBytecode as DecodeCalldataBytecodeMapper,\n  DecodeCalldataSource as DecodeCalldataSourceMapper,\n  ByteCodeInput as ByteCodeInputMapper,\n  ValidateByteCodeInput as ValidateByteCodeInputMapper,\n} from \"../models/mappers.js\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ContractMapper,\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaCallResultInputMapper,\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BytecodeCallResultInputMapper,\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: FunctionCallInputMapper,\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataBytecodeMapper,\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataSourceMapper,\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ByteCodeInputMapper,\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ValidateByteCodeInputMapper,\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  CompilerOptionalParams,\n  Contract,\n  GenerateACIOptionalParams,\n  GenerateACIResponse,\n  CompileContractOptionalParams,\n  CompileContractResponse,\n  SophiaCallResultInput,\n  DecodeCallResultOptionalParams,\n  DecodeCallResultResponse,\n  BytecodeCallResultInput,\n  DecodeCallResultBytecodeOptionalParams,\n  DecodeCallResultBytecodeResponse,\n  FunctionCallInput,\n  EncodeCalldataOptionalParams,\n  EncodeCalldataResponse,\n  DecodeCalldataBytecode,\n  DecodeCalldataBytecodeOptionalParams,\n  DecodeCalldataBytecodeResponse,\n  DecodeCalldataSource,\n  DecodeCalldataSourceOptionalParams,\n  DecodeCalldataSourceResponse,\n  ByteCodeInput,\n  GetFateAssemblerCodeOptionalParams,\n  GetFateAssemblerCodeResponse,\n  ValidateByteCodeInput,\n  ValidateByteCodeOptionalParams,\n  GetCompilerVersionOptionalParams,\n  GetCompilerVersionResponse,\n  VersionOptionalParams,\n  VersionResponse,\n  ApiVersionOptionalParams,\n  ApiVersionResponse,\n  ApiOptionalParams,\n  ApiResponse,\n} from \"./models/index.js\";\n\nexport class Compiler extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Compiler class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: CompilerOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CompilerOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-compiler/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Generate an Aeternity Contract Interface (ACI) for contract\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  generateACI(\n    body: Contract,\n    options?: GenerateACIOptionalParams,\n  ): Promise<GenerateACIResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      generateACIOperationSpec,\n    );\n  }\n\n  /**\n   * Compile a sophia contract from source and return byte code and ACI\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  compileContract(\n    body: Contract,\n    options?: CompileContractOptionalParams,\n  ): Promise<CompileContractResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      compileContractOperationSpec,\n    );\n  }\n\n  /**\n   * Decode the result of contract call\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeCallResult(\n    body: SophiaCallResultInput,\n    options?: DecodeCallResultOptionalParams,\n  ): Promise<DecodeCallResultResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultOperationSpec,\n    );\n  }\n\n  /**\n   * Decode the result of contract call from Bytecode\n   * @param body Call result + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCallResultBytecode(\n    body: BytecodeCallResultInput,\n    options?: DecodeCallResultBytecodeOptionalParams,\n  ): Promise<DecodeCallResultBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultBytecodeOperationSpec,\n    );\n  }\n\n  /**\n   * Encode Sophia function call according to sophia ABI.\n   * @param body Sophia function call - contract code + function name + arguments\n   * @param options The options parameters.\n   */\n  encodeCalldata(\n    body: FunctionCallInput,\n    options?: EncodeCalldataOptionalParams,\n  ): Promise<EncodeCalldataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      encodeCalldataOperationSpec,\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a compiled contract\n   * @param body Calldata + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCalldataBytecode(\n    body: DecodeCalldataBytecode,\n    options?: DecodeCalldataBytecodeOptionalParams,\n  ): Promise<DecodeCalldataBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataBytecodeOperationSpec,\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a (partial) contract\n   * @param body Calldata + contract (stub) code\n   * @param options The options parameters.\n   */\n  decodeCalldataSource(\n    body: DecodeCalldataSource,\n    options?: DecodeCalldataSourceOptionalParams,\n  ): Promise<DecodeCalldataSourceResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataSourceOperationSpec,\n    );\n  }\n\n  /**\n   * Get FATE assembler code from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getFateAssemblerCode(\n    body: ByteCodeInput,\n    options?: GetFateAssemblerCodeOptionalParams,\n  ): Promise<GetFateAssemblerCodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getFateAssemblerCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Verify that an encoded byte array is the result of compiling a given contract\n   * @param body contract byte array and source code\n   * @param options The options parameters.\n   */\n  validateByteCode(\n    body: ValidateByteCodeInput,\n    options?: ValidateByteCodeOptionalParams,\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { body, options },\n      validateByteCodeOperationSpec,\n    );\n  }\n\n  /**\n   * Extract compiler version from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getCompilerVersion(\n    body: ByteCodeInput,\n    options?: GetCompilerVersionOptionalParams,\n  ): Promise<GetCompilerVersionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getCompilerVersionOperationSpec,\n    );\n  }\n\n  /**\n   * Get the version of the underlying Sophia compiler version\n   * @param options The options parameters.\n   */\n  version(options?: VersionOptionalParams): Promise<VersionResponse> {\n    return this.sendOperationRequest({ options }, versionOperationSpec);\n  }\n\n  /**\n   * Get the version of the API\n   * @param options The options parameters.\n   */\n  apiVersion(options?: ApiVersionOptionalParams): Promise<ApiVersionResponse> {\n    return this.sendOperationRequest({ options }, apiVersionOperationSpec);\n  }\n\n  /**\n   * Get the Api description\n   * @param options The options parameters.\n   */\n  api(options?: ApiOptionalParams): Promise<ApiResponse> {\n    return this.sendOperationRequest({ options }, apiOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst generateACIOperationSpec: coreClient.OperationSpec = {\n  path: \"/aci\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n          },\n        },\n      },\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst compileContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/compile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompileResult,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCallResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } },\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCallResultBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCallresult,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst encodeCalldataOperationSpec: coreClient.OperationSpec = {\n  path: \"/encode-calldata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Calldata,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCalldataBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst decodeCalldataSourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/source\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata,\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst getFateAssemblerCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/fate-assembler\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FateAssembler,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst validateByteCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/validate-byte-code\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } },\n        },\n      },\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body7,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst getCompilerVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/compiler-version\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer,\n};\nconst versionOperationSpec: coreClient.OperationSpec = {\n  path: \"/version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion,\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst apiVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/api-version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiVersion,\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst apiOperationSpec: coreClient.OperationSpec = {\n  path: \"/api\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } },\n      },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n","import {\n  RestError,\n  userAgentPolicyName,\n  setClientRequestIdPolicyName,\n} from '@azure/core-rest-pipeline';\nimport { OperationOptions } from '@azure/core-client';\nimport {\n  Compiler as CompilerApi,\n  ErrorModel,\n  CompilerError as CompilerErrorApi,\n} from '../../apis/compiler/index.js';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../../utils/autorest.js';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, NotImplementedError } from '../../utils/errors.js';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler over HTTP\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example CompilerHttp('COMPILER_URL')\n */\nexport default class CompilerHttp extends CompilerBase {\n  readonly api: CompilerApi;\n\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if compiler version\n   * is not supported, use with caution\n   */\n  constructor(compilerUrl: string, { ignoreVersion = false }: { ignoreVersion?: boolean } = {}) {\n    super();\n\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.api.apiVersion(opts)).apiVersion;\n      return version;\n    };\n\n    this.api = new CompilerApi(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genVersionCheckPolicy('compiler', getVersion, '8.0.0', '9.0.0', ignoreVersion),\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerErrorApi[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason}${\n              body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map(\n                (e) =>\n                  `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? ` (${e.context})` : ''}`,\n              )\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    this.api.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.api.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    try {\n      const cmpOut = await this.api.compileContract({ code: sourceCode, options: { fileSystem } });\n      const warnings = cmpOut.warnings.map(({ type, ...warning }) => warning);\n      const res = { ...cmpOut, warnings };\n      // TODO: should be fixed when the compiledAci interface gets updated\n      return res as Awaited<CompileResult>;\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async compile(path: string): CompileResult {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    try {\n      return await this.api.generateACI({ code: sourceCode, options: { fileSystem } });\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async generateAci(path: string): Promise<Aci> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    try {\n      await this.api.validateByteCode({ bytecode, source: sourceCode, options: { fileSystem } });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async version(): Promise<string> {\n    return (await this.api.version()).version;\n  }\n}\n","/**\n * Convert string from snake_case to PascalCase\n * @param s - String to convert\n * @returns Converted string\n */\nexport function snakeToPascal(s: string): string {\n  return s.replace(/_./g, (match) => match[1].toUpperCase());\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @param s - String to convert\n * @returns Converted string\n */\nexport function pascalToSnake(s: string): string {\n  return s.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n","import { default as websocket, ICloseEvent } from 'websocket';\nimport BigNumber from 'bignumber.js';\nimport type Channel from './Base.js';\nimport JsonBig from '../utils/json-big.js';\nimport { pascalToSnake } from '../utils/string.js';\nimport { Encoded } from '../utils/encoder.js';\nimport {\n  BaseError,\n  ChannelCallError,\n  ChannelPingTimedOutError,\n  UnexpectedTsError,\n  UnknownChannelStateError,\n  ChannelIncomingMessageError,\n  ChannelError,\n} from '../utils/errors.js';\nimport { buildContractId } from '../tx/builder/helpers.js';\nimport { ensureError } from '../utils/other.js';\n\nconst { w3cwebsocket: W3CWebSocket } = websocket;\n\nexport interface ChannelEvents {\n  statusChanged: (status: ChannelStatus) => void;\n  stateChanged: (tx: Encoded.Transaction | '') => void;\n  depositLocked: () => void;\n  ownDepositLocked: () => void;\n  withdrawLocked: () => void;\n  ownWithdrawLocked: () => void;\n  peerDisconnected: () => void;\n  channelReestablished: () => void;\n  error: (error: Error) => void;\n  onChainTx: (tx: Encoded.Transaction, details: { info: string; type: string }) => void;\n  message: (message: string | Object) => void;\n  newContract: (contractAddress: Encoded.ContractAddress) => void;\n}\n\nexport interface ChannelAction {\n  guard: (channel: Channel, state?: ChannelFsm) => boolean;\n  action: (channel: Channel, state?: ChannelFsm) => ChannelFsm;\n}\n\ninterface SignOptions {\n  updates?: any[];\n  [k: string]: any;\n}\nexport type SignTxWithTag = (\n  tag: string,\n  tx: Encoded.Transaction,\n  options?: SignOptions,\n) => Promise<Encoded.Transaction>;\n// TODO: SignTx shouldn't return number or null\nexport type SignTx = (\n  tx: Encoded.Transaction,\n  options?: SignOptions,\n) => Promise<Encoded.Transaction | number | null>;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/6734de2e4c7cce7e5e626caa8305fb535785131d/node/api/channels_api_usage.md#channel-establishing-parameters}\n */\ninterface CommonChannelOptions {\n  /**\n   * Channel url (for example: \"ws://localhost:3001\")\n   */\n  url: string;\n\n  /**\n   * Initiator's public key\n   */\n  initiatorId: Encoded.AccountAddress;\n  /**\n   * Responder's public key\n   */\n  responderId: Encoded.AccountAddress;\n  /**\n   * Amount of blocks for disputing a solo close\n   */\n  lockPeriod: number;\n  /**\n   * Initial deposit in favour of the responder by the initiator\n   */\n  pushAmount: BigNumber | number;\n  /**\n   * Amount of coins the initiator has committed to the channel\n   */\n  initiatorAmount: BigNumber | number;\n  /**\n   * Amount of coins the responder has committed to the channel\n   */\n  responderAmount: BigNumber | number;\n  /**\n   * The minimum amount both peers need to maintain\n   */\n  channelReserve?: BigNumber | number;\n  /**\n   * Minimum block height to include the channel_create_tx\n   */\n  ttl?: number;\n  /**\n   * The port of the responder's node\n   */\n  port: number;\n  /**\n   * How to calculate minimum depth (default: txfee)\n   */\n  minimumDepthStrategy?: 'txfee' | 'plain';\n  /**\n   * The minimum amount of blocks to be mined\n   */\n  minimumDepth?: number;\n  /**\n   * The fee to be used for the channel open transaction\n   */\n  fee?: BigNumber | number;\n  /**\n   * Used for the fee computation of the channel open transaction\n   */\n  gasPrice?: BigNumber | number;\n\n  signedTx?: Encoded.Transaction;\n  /**\n   * Existing channel id (required if reestablishing a channel)\n   */\n  existingChannelId?: Encoded.Channel;\n  /**\n   * Existing FSM id (required if reestablishing a channel)\n   */\n  existingFsmId?: Encoded.Bytearray;\n  /**\n   * Needs to be provided if reconnecting with calling `leave` before\n   */\n  // TODO: remove after solving https://github.com/aeternity/aeternity/issues/4399\n  reestablish?: boolean;\n  /**\n   * The time waiting for a new event to be initiated (default: 600000)\n   */\n  timeoutIdle?: number;\n  /**\n   * The time waiting for the initiator to produce the create channel transaction after the noise\n   * session had been established (default: 120000)\n   */\n  timeoutFundingCreate?: number;\n  /**\n   * The time frame the other client has to sign an off-chain update after our client had initiated\n   * and signed it. This applies only for double signed on-chain intended updates: channel create\n   * transaction, deposit, withdrawal and etc. (default: 120000)\n   */\n  timeoutFundingSign?: number;\n  /**\n   * The time frame the other client has to confirm an on-chain transaction reaching maturity\n   * (passing minimum depth) after the local node has detected this. This applies only for double\n   * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n   * (default: 360000)\n   */\n  timeoutFundingLock?: number;\n  /**\n   * The time frame the client has to return a signed off-chain update or to decline it.\n   * This applies for all off-chain updates (default: 500000)\n   */\n  timeoutSign?: number;\n  /**\n   * The time frame the other client has to react to an event. This applies for all off-chain\n   * updates that are not meant to land on-chain, as well as some special cases: opening a noise\n   * connection, mutual closing acknowledgement and reestablishing an existing channel\n   * (default: 120000)\n   */\n  timeoutAccept?: number;\n  /**\n   * the time frame the responder has to accept an incoming noise session.\n   * Applicable only for initiator (default: timeout_accept's value)\n   */\n  timeoutInitialized?: number;\n  /**\n   * The time frame the initiator has to start an outgoing noise session to the responder's node.\n   * Applicable only for responder (default: timeout_idle's value)\n   */\n  timeoutAwaitingOpen?: number;\n  /**\n   * Log websocket communication and state changes\n   */\n  debug?: boolean;\n  /**\n   * Function which verifies and signs transactions\n   */\n  sign: SignTxWithTag;\n}\n\nexport type ChannelOptions = CommonChannelOptions &\n  (\n    | {\n        /**\n         * Participant role\n         */\n        role: 'initiator';\n        /**\n         * Host of the responder's node\n         */\n        host: string;\n      }\n    | {\n        /**\n         * Participant role\n         */\n        role: 'responder';\n      }\n  );\n\nexport interface ChannelHandler extends Function {\n  enter?: Function;\n}\n\nexport interface ChannelState {\n  signedTx: Encoded.Transaction;\n  resolve: (r?: any) => void;\n  reject: (e: BaseError) => void;\n  sign: SignTx;\n  handler?: ChannelHandler;\n  /**\n   * Called when transaction has been posted on chain\n   */\n  onOnChainTx?: (tx: Encoded.Transaction) => void;\n  onOwnWithdrawLocked?: () => void;\n  onWithdrawLocked?: () => void;\n  onOwnDepositLocked?: () => void;\n  onDepositLocked?: () => void;\n  closeTx?: string;\n}\n\nexport interface ChannelFsm {\n  handler: ChannelHandler;\n  state?:\n    | ChannelState\n    | {\n        resolve: Function;\n        reject: Function;\n      };\n}\n\nexport interface ChannelMessage {\n  id?: number;\n  method: string;\n  params: any;\n  payload?: any;\n  data?: any;\n  error?: ChannelMessageError;\n}\n\ninterface ChannelMessageError {\n  code: number;\n  message: string;\n  data: [\n    {\n      message: string;\n      code: number;\n    },\n  ];\n  request: ChannelMessage;\n}\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000;\n// Close connection if pong message is not received within 15 seconds\nconst PONG_TIMEOUT_MS = 15000;\n\nexport function emit<E extends keyof ChannelEvents>(\n  channel: Channel,\n  ...args: [E, ...Parameters<ChannelEvents[E]>]\n): void {\n  const [eventName, ...rest] = args;\n  channel._eventEmitter.emit(eventName, ...rest);\n}\n\nfunction enterState(channel: Channel, nextState: ChannelFsm): void {\n  if (nextState == null) {\n    throw new UnknownChannelStateError();\n  }\n  channel._debug('enter state', nextState.handler.name);\n  channel._fsm = nextState;\n  if (nextState?.handler?.enter != null) {\n    nextState.handler.enter(channel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  void dequeueAction(channel);\n}\n\n// TODO: rewrite to enum\nexport type ChannelStatus =\n  | 'connecting'\n  | 'connected'\n  | 'accepted'\n  | 'halfSigned'\n  | 'signed'\n  | 'open'\n  | 'closing'\n  | 'closed'\n  | 'died'\n  | 'disconnected';\n\nexport function changeStatus(channel: Channel, newStatus: ChannelStatus, debug?: unknown): void {\n  channel._debug(newStatus, `(prev. ${channel._status})`, debug ?? '');\n  if (newStatus === channel._status) return;\n  channel._status = newStatus;\n  emit(channel, 'statusChanged', newStatus);\n}\n\nexport function changeState(channel: Channel, newState: Encoded.Transaction | ''): void {\n  channel._state = newState;\n  emit(channel, 'stateChanged', newState);\n}\n\nfunction send(channel: Channel, message: ChannelMessage): void {\n  channel._debug('send message', message.method, message.params);\n  channel._websocket.send(JsonBig.stringify({ jsonrpc: '2.0', ...message }));\n}\n\nexport function notify(channel: Channel, method: string, params: object = {}): void {\n  send(channel, { method, params });\n}\n\nasync function dequeueAction(channel: Channel): Promise<void> {\n  if (channel._isActionQueueLocked) return;\n  const queue = channel._actionQueue;\n  if (queue.length === 0) return;\n  const index = queue.findIndex((action) => action.guard(channel, channel._fsm));\n  if (index === -1) return;\n  channel._actionQueue = queue.filter((_, i) => index !== i);\n  channel._isActionQueueLocked = true;\n  const nextState: ChannelFsm = await queue[index].action(channel, channel._fsm);\n  channel._isActionQueueLocked = false;\n  enterState(channel, nextState);\n}\n\nexport async function enqueueAction(\n  channel: Channel,\n  guard: ChannelAction['guard'],\n  action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n): Promise<any> {\n  const promise = new Promise((resolve, reject) => {\n    channel._actionQueue.push({\n      guard,\n      action() {\n        const res = action();\n        return { ...res, state: { ...res.state, resolve, reject } };\n      },\n    });\n  });\n  void dequeueAction(channel);\n  return promise;\n}\n\nasync function handleMessage(channel: Channel, message: ChannelMessage): Promise<void> {\n  const { handler, state: st } = channel._fsm;\n  const nextState = await Promise.resolve(handler(channel, message, st));\n  enterState(channel, nextState);\n  // TODO: emit message and handler name (?) to move this code to Contract constructor\n  if (\n    message?.params?.data?.updates?.[0]?.op === 'OffChainNewContract' &&\n    // if name is channelOpen, the contract was created by other participant\n    nextState?.handler.name === 'channelOpen'\n  ) {\n    const round = channel.round();\n    if (round == null) throw new UnexpectedTsError('Round is null');\n    const owner = message?.params?.data?.updates?.[0]?.owner;\n    emit(channel, 'newContract', buildContractId(owner, round + 1));\n  }\n}\n\nasync function dequeueMessage(channel: Channel): Promise<void> {\n  if (channel._isMessageQueueLocked) return;\n  channel._isMessageQueueLocked = true;\n  while (channel._messageQueue.length > 0) {\n    const message = channel._messageQueue.shift();\n    if (message == null) throw new UnexpectedTsError();\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      ensureError(error);\n      emit(channel, 'error', new ChannelIncomingMessageError(error, message));\n    }\n  }\n  channel._isMessageQueueLocked = false;\n}\n\nexport function disconnect(channel: Channel): void {\n  channel._websocket.close();\n  clearTimeout(channel._pingTimeoutId);\n}\n\nfunction ping(channel: Channel): void {\n  clearTimeout(channel._pingTimeoutId);\n  channel._pingTimeoutId = setTimeout(() => {\n    notify(channel, 'channels.system', { action: 'ping' });\n    channel._pingTimeoutId = setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS);\n  }, PING_TIMEOUT_MS);\n}\n\nfunction onMessage(channel: Channel, data: string): void {\n  const message = JsonBig.parse(data);\n  channel._debug('received message', message.method, message.params);\n  if (message.id != null) {\n    const callback = channel._rpcCallbacks.get(message.id);\n    if (callback == null) {\n      emit(channel, 'error', new ChannelError(`Can't find callback by id: ${message.id}`));\n      return;\n    }\n    try {\n      callback(message);\n    } finally {\n      channel._rpcCallbacks.delete(message.id);\n    }\n    return;\n  }\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n  if (message.method === 'channels.system.pong') {\n    if (message.params.channel_id === channel._channelId || channel._channelId == null) {\n      ping(channel);\n    }\n    return;\n  }\n  channel._messageQueue.push(message);\n  void dequeueMessage(channel);\n}\n\nexport async function call(channel: Channel, method: string, params: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const id = channel._nextRpcMessageId;\n    channel._nextRpcMessageId += 1;\n    channel._rpcCallbacks.set(\n      id,\n      (message: { result: PromiseLike<any>; error?: ChannelMessageError }) => {\n        if (message.error != null) {\n          const details = message.error.data[0].message ?? '';\n          reject(new ChannelCallError(message.error.message + details));\n        } else resolve(message.result);\n      },\n    );\n    send(channel, { method, id, params });\n  });\n}\n\nexport async function initialize(\n  channel: Channel,\n  connectionHandler: Function,\n  openHandler: Function,\n  { url, ...channelOptions }: ChannelOptions,\n): Promise<void> {\n  channel._options = { url, ...channelOptions };\n\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value.toString()));\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  channel._websocket = new W3CWebSocket(wsUrl.toString());\n  await new Promise<void>((resolve, reject) => {\n    Object.assign(channel._websocket, {\n      onerror: reject,\n      onopen: async (event: Event) => {\n        resolve();\n        changeStatus(channel, 'connected', event);\n        enterState(channel, { handler: connectionHandler });\n        ping(channel);\n      },\n      onclose: (event: ICloseEvent) => {\n        changeStatus(channel, 'disconnected', event);\n        clearTimeout(channel._pingTimeoutId);\n      },\n      onmessage: ({ data }: { data: string }) => onMessage(channel, data),\n    });\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal.js';\nimport { unpackTx, buildTx } from '../tx/builder/index.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors.js';\nimport type Channel from './Base.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport { snakeToPascal } from '../utils/string.js';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError(\"Can't find transaction in message\");\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(\n    Object.assign(\n      new UnexpectedChannelMessageError(\n        `Unexpected message received:\\n\\n${JSON.stringify(message)}`,\n      ),\n      { wsMessage: message },\n    ),\n  );\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReestablish(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    return {\n      handler: function awaitingChannelReestablished(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (\n          message2.method === 'channels.info' &&\n          message2.params.data.event === 'channel_reestablished'\n        )\n          return { handler: awaitingOpenConfirmation };\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info' && message.params.data.event === 'fsm_up') {\n    channel._fsmId = message.params.data.fsm_id;\n    const { signedTx } = await channel.state();\n    changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n      channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if (\n      (info === 'funding_signed' && role === 'initiator') ||\n      (info === 'funding_created' && role === 'responder')\n    ) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler: function awaitingChannelsUpdate(\n        _: Channel,\n        message2: ChannelMessage,\n        state2: ChannelState,\n      ): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n        return handleUnexpectedMessage(channel, message2, state2);\n      },\n    };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(channel, `channels.${tag}`, message.params.data, async (tx) =>\n    channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(channel, 'channels.shutdown_sign', message.params.data, async (tx) =>\n    state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n","import EventEmitter from 'events';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { snakeToPascal } from '../utils/string.js';\nimport { unpackTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\nimport * as handlers from './handlers.js';\nimport {\n  initialize,\n  enqueueAction,\n  notify,\n  call,\n  disconnect as channelDisconnect,\n  SignTx,\n  ChannelOptions,\n  ChannelState,\n  ChannelHandler,\n  ChannelAction,\n  ChannelStatus,\n  ChannelFsm,\n  ChannelMessage,\n  ChannelEvents,\n} from './internal.js';\nimport { ChannelError, IllegalArgumentError } from '../utils/errors.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { TxUnpacked } from '../tx/builder/schema.generated.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\nimport { unpackEntry } from '../tx/builder/entry/index.js';\nimport { EntUnpacked } from '../tx/builder/entry/schema.generated.js';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce(\n    (result, [key, val]) => ({\n      ...result,\n      [snakeToPascal(key)]: val,\n    }),\n    {},\n  ) as Type;\n}\n\nlet channelCounter = 0;\n\n/**\n * Channel\n * @example\n * ```js\n * await Channel.initialize({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n * ```\n */\nexport default class Channel {\n  _eventEmitter = new EventEmitter();\n\n  _pingTimeoutId!: NodeJS.Timeout;\n\n  _nextRpcMessageId = 0;\n\n  _rpcCallbacks = new Map<number, (message: object) => void>();\n\n  _fsmId?: Encoded.Bytearray;\n\n  _messageQueue: ChannelMessage[] = [];\n\n  _isMessageQueueLocked = false;\n\n  _actionQueue: ChannelAction[] = [];\n\n  _isActionQueueLocked = false;\n\n  _status: ChannelStatus = 'disconnected';\n\n  _fsm!: ChannelFsm;\n\n  _websocket!: W3CWebSocket;\n\n  _state: Encoded.Transaction | '' = '';\n\n  _options!: ChannelOptions;\n\n  readonly #debugId: number;\n\n  _channelId?: Encoded.Channel;\n\n  protected constructor() {\n    channelCounter += 1;\n    this.#debugId = channelCounter;\n  }\n\n  _debug(...args: any[]): void {\n    if (this._options.debug !== true) return;\n    console.debug(`Channel #${this.#debugId}`, ...args);\n  }\n\n  /**\n   * @param options - Channel params\n   */\n  static async initialize(options: ChannelOptions): Promise<Channel> {\n    return Channel._initialize(new Channel(), options);\n  }\n\n  static async _initialize<T extends Channel>(channel: T, options: ChannelOptions): Promise<T> {\n    const reconnect = (options.existingFsmId ?? options.existingChannelId) != null;\n    if (reconnect && (options.existingFsmId == null || options.existingChannelId == null)) {\n      throw new IllegalArgumentError(\n        '`existingChannelId`, `existingFsmId` should be both provided or missed',\n      );\n    }\n    const reconnectHandler =\n      handlers[options.reestablish === true ? 'awaitingReestablish' : 'awaitingReconnection'];\n    await initialize(\n      channel,\n      reconnect ? reconnectHandler : handlers.awaitingConnection,\n      handlers.channelOpen,\n      options,\n    );\n    return channel;\n  }\n\n  /**\n   * Register event listener function\n   *\n   * Possible events:\n   *\n   *   - \"error\"\n   *   - \"stateChanged\"\n   *   - \"statusChanged\"\n   *   - \"message\"\n   *   - \"peerDisconnected\"\n   *   - \"onChainTx\"\n   *   - \"ownWithdrawLocked\"\n   *   - \"withdrawLocked\"\n   *   - \"ownDepositLocked\"\n   *   - \"depositLocked\"\n   *   - \"channelReestablished\"\n   *   - \"newContract\"\n   *\n   *\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  on<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.on(eventName, callback);\n  }\n\n  /**\n   * Remove event listener function\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  off<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.removeListener(eventName, callback);\n  }\n\n  /**\n   * Close the connection\n   */\n  disconnect(): void {\n    return channelDisconnect(this);\n  }\n\n  /**\n   * Get current status\n   */\n  status(): ChannelStatus {\n    return this._status;\n  }\n\n  /**\n   * Get current state\n   */\n  async state(): Promise<{\n    calls: EntUnpacked & { tag: EntryTag.CallsMtree };\n    halfSignedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    signedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    trees: EntUnpacked & { tag: EntryTag.StateTrees };\n  }> {\n    const res = snakeToPascalObjKeys<{\n      calls: Encoded.CallStateTree;\n      halfSignedTx: Encoded.Transaction | '';\n      signedTx: Encoded.Transaction | '';\n      trees: Encoded.StateTrees;\n    }>(await call(this, 'channels.get.offchain_state', {}));\n    return {\n      calls: unpackEntry(res.calls),\n      ...(res.halfSignedTx !== '' && { halfSignedTx: unpackTx(res.halfSignedTx, Tag.SignedTx) }),\n      ...(res.signedTx !== '' && { signedTx: unpackTx(res.signedTx, Tag.SignedTx) }),\n      trees: unpackEntry(res.trees),\n    };\n  }\n\n  /**\n   * Get current round\n   *\n   * If round cannot be determined (for example when channel has not been opened)\n   * it will return `null`.\n   */\n  round(): number | null {\n    if (this._state === '') {\n      return null;\n    }\n    const params = unpackTx(this._state, Tag.SignedTx).encodedTx;\n    switch (params.tag) {\n      case Tag.ChannelCreateTx:\n        return 1;\n      case Tag.ChannelOffChainTx:\n      case Tag.ChannelWithdrawTx:\n      case Tag.ChannelDepositTx:\n        return params.round;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get channel id\n   *\n   */\n  id(): Encoded.Channel {\n    if (this._channelId == null) throw new ChannelError('Channel is not initialized');\n    return this._channelId;\n  }\n\n  /**\n   * Get channel's fsm id\n   *\n   */\n  fsmId(): Encoded.Bytearray {\n    if (this._fsmId == null) throw new ChannelError('Channel is not initialized');\n    return this._fsmId;\n  }\n\n  protected async enqueueAction(\n    action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n  ): Promise<any> {\n    return enqueueAction(this, (channel, state) => state?.handler === handlers.channelOpen, action);\n  }\n\n  /**\n   * Leave channel\n   *\n   * It is possible to leave a channel and then later reestablish the channel\n   * off-chain state and continue operation. When a leave method is called,\n   * the channel fsm passes it on to the peer fsm, reports the current mutually\n   * signed state and then terminates.\n   *\n   * The channel can be reestablished by instantiating another Channel instance\n   * with two extra params: existingChannelId and existingFsmId.\n   *\n   * @example\n   * ```js\n   * channel.leave().then(({ channelId, signedTx }) => {\n   *   console.log(channelId)\n   *   console.log(signedTx)\n   * })\n   * ```\n   */\n  async leave(): Promise<{ channelId: Encoded.Channel; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.leave');\n      return { handler: handlers.awaitingLeave };\n    });\n  }\n\n  /**\n   * Trigger mutual close\n   *\n   * At any moment after the channel is opened, a closing procedure can be triggered.\n   * This can be done by either of the parties. The process is similar to the off-chain updates.\n   *\n   * @param sign - Function which verifies and signs mutual close transaction\n   * @example\n   * ```js\n   * channel.shutdown(\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(tx => console.log('on_chain_tx', tx))\n   * ```\n   */\n  async shutdown(sign: SignTx): Promise<Encoded.Transaction> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.shutdown');\n      return {\n        handler: handlers.awaitingShutdownTx,\n        state: { sign },\n      };\n    });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport {\n  notify,\n  call,\n  SignTx,\n  ChannelState,\n  ChannelMessage,\n  ChannelFsm,\n  changeState,\n} from './internal.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { pause } from '../utils/other.js';\nimport Channel from './Base.js';\nimport { ChannelConnectionError } from '../utils/errors.js';\nimport {\n  awaitingCompletion,\n  channelOpen,\n  handleUnexpectedMessage,\n  signAndNotify,\n} from './handlers.js';\nimport { EntryTag } from '../tx/builder/entry/constants.js';\nimport { EntUnpacked } from '../tx/builder/entry/schema.generated.js';\nimport { unpackEntry } from '../tx/builder/entry/index.js';\n\nexport default class ChannelSpend extends Channel {\n  /**\n   * Trigger a transfer update\n   *\n   * The transfer update is moving coins from one channel account to another.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * Sender and receiver are the channel parties. Both the initiator and responder\n   * can take those roles. Any public key outside the channel is considered invalid.\n   *\n   * @param from - Sender's public address\n   * @param to - Receiver's public address\n   * @param amount - Transaction amount\n   * @param sign - Function which verifies and signs offchain transaction\n   * @param metadata - Metadata\n\n   * @example\n   * ```js\n   * channel.update(\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n   *   10,\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(({ accepted, signedTx }) =>\n   *   if (accepted) {\n   *     console.log('Update has been accepted')\n   *   }\n   * )\n   * ```\n   */\n  async update(\n    from: Encoded.AccountAddress,\n    to: Encoded.AccountAddress,\n    amount: number | BigNumber,\n    sign: SignTx,\n    metadata: string[] = [],\n  ): Promise<{\n    accepted: boolean;\n    signedTx?: Encoded.Transaction;\n    errorCode?: number;\n    errorMessage?: string;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new', {\n        from,\n        to,\n        amount,\n        meta: metadata,\n      });\n\n      const awaitingOffChainTx = async (\n        _: Channel,\n        message: ChannelMessage,\n        state: ChannelState,\n      ): Promise<ChannelFsm> => {\n        if (message.method === 'channels.sign.update') {\n          const isError = await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => sign(tx, { updates: message.params.data.updates }),\n          );\n          if (isError) return { handler: awaitingOffChainTx, state };\n          return {\n            handler: (_2: Channel, message2: ChannelMessage): ChannelFsm =>\n              awaitingCompletion(this, message2, state, () => {\n                changeState(this, message2.params.data.state);\n                state.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        }\n        if (message.method === 'channels.error') {\n          state.reject(new ChannelConnectionError(message.data.message));\n          return { handler: channelOpen };\n        }\n        return awaitingCompletion(this, message, state);\n      };\n\n      return { handler: awaitingOffChainTx };\n    });\n  }\n\n  /**\n   * Get proof of inclusion\n   *\n   * If a certain address of an account or a contract is not found\n   * in the state tree - the response is an error.\n   *\n   * @param addresses - Addresses\n   * @param addresses.accounts - List of account addresses to include in poi\n   * @param addresses.contracts - List of contract addresses to include in poi\n   * @example\n   * ```js\n   * channel.poi({\n   *   accounts: [\n   *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   ],\n   *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n   * }).then(poi => console.log(poi))\n   * ```\n   */\n  async poi({\n    accounts,\n    contracts,\n  }: {\n    accounts: Encoded.AccountAddress[];\n    contracts?: Encoded.ContractAddress[];\n  }): Promise<EntUnpacked & { tag: EntryTag.TreesPoi }> {\n    const { poi }: { poi: Encoded.Poi } = await call(this, 'channels.get.poi', {\n      accounts,\n      contracts,\n    });\n    return unpackEntry(poi);\n  }\n\n  /**\n   * Get balances\n   *\n   * The accounts param contains a list of addresses to fetch balances of.\n   * Those can be either account balances or a contract ones, encoded as an account addresses.\n   *\n   * If a certain account address had not being found in the state tree - it is simply\n   * skipped in the response.\n   *\n   * @param accounts - List of addresses to fetch balances from\n   * @example\n   * ```js\n   * channel.balances([\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n   * ]).then(balances =>\n   *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n   * )\n   * ```\n   */\n  async balances(\n    accounts: Encoded.AccountAddress[],\n  ): Promise<{ [key: Encoded.AccountAddress]: string }> {\n    return Object.fromEntries(\n      (await call(this, 'channels.get.balances', { accounts })).map(\n        (item: { account: Encoded.AccountAddress; balance: string }) => [\n          item.account,\n          item.balance,\n        ],\n      ),\n    );\n  }\n\n  private async awaitingActionTx(\n    action: 'deposit' | 'withdraw',\n    message: ChannelMessage,\n    state: ChannelState,\n  ): Promise<ChannelFsm> {\n    if (message.method !== `channels.sign.${action}_tx`) {\n      return handleUnexpectedMessage(this, message, state);\n    }\n\n    const awaitingActionCompletion = (_: Channel, message2: ChannelMessage): ChannelFsm => {\n      if (message2.method === 'channels.on_chain_tx') {\n        state.onOnChainTx?.(message2.params.data.tx);\n        return { handler: awaitingActionCompletion, state };\n      }\n      if (\n        message2.method === 'channels.info' &&\n        [`own_${action}_locked`, `${action}_locked`].includes(message2.params.data.event)\n      ) {\n        const Action = action === 'deposit' ? 'Deposit' : 'Withdraw';\n        const isOwn: boolean = message2.params.data.event.startsWith('own_');\n        state[`on${isOwn ? 'Own' : ''}${Action}Locked`]?.();\n        return { handler: awaitingActionCompletion, state };\n      }\n      return awaitingCompletion(this, message2, state, () => {\n        changeState(this, message2.params.data.state);\n        state.resolve({ accepted: true, signedTx: message2.params.data.state });\n        return { handler: channelOpen };\n      });\n    };\n\n    const { sign } = state;\n    await signAndNotify(this, `channels.${action}_tx`, message.params.data, async (tx) =>\n      sign(tx, { updates: message.params.data.updates }),\n    );\n    return { handler: awaitingActionCompletion, state };\n  }\n\n  /**\n   * Withdraw coins from the channel\n   *\n   * After the channel had been opened any of the participants can initiate a withdrawal.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a withdrawal. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the withdraw transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onWithdrawLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to withdraw\n   * @param sign - Function which verifies and signs withdraw transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.withdraw(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Withdrawal has been accepted')\n   *   } else {\n   *     console.log('Withdrawal has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async withdraw(\n    amount: number | BigNumber,\n    sign: SignTx,\n    {\n      onOnChainTx,\n      onOwnWithdrawLocked,\n      onWithdrawLocked,\n    }: Pick<ChannelState, 'onOnChainTx' | 'onOwnWithdrawLocked' | 'onWithdrawLocked'> = {},\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.withdraw', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => this.awaitingActionTx('withdraw', message, state),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnWithdrawLocked,\n          onWithdrawLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Deposit coins into the channel\n   *\n   * After the channel had been opened any of the participants can initiate a deposit.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a deposit. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the deposit transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onDepositLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to deposit\n   * @param sign - Function which verifies and signs deposit transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.deposit(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, state }) => {\n   *   if (accepted) {\n   *     console.log('Deposit has been accepted')\n   *     console.log('The new state is:', state)\n   *   } else {\n   *     console.log('Deposit has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async deposit(\n    amount: number | BigNumber,\n    sign: SignTx,\n    {\n      onOnChainTx,\n      onOwnDepositLocked,\n      onDepositLocked,\n    }: Pick<ChannelState, 'onOnChainTx' | 'onOwnDepositLocked' | 'onDepositLocked'> = {},\n  ): Promise<{ accepted: boolean; state: ChannelState }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.deposit', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => this.awaitingActionTx('deposit', message, state),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnDepositLocked,\n          onDepositLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Send generic message\n   *\n   * If message is an object it will be serialized into JSON string\n   * before sending.\n   *\n   * If there is ongoing update that has not yet been finished the message\n   * will be sent after that update is finalized.\n   *\n   * @param message - Message\n   * @param recipient - Address of the recipient\n   * @example\n   * ```js\n   * channel.sendMessage(\n   *   'hello world',\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n   * )\n   * ```\n   */\n  async sendMessage(message: string | object, recipient: Encoded.AccountAddress): Promise<void> {\n    const info = typeof message === 'object' ? JSON.stringify(message) : message;\n    if (this.status() === 'connecting') {\n      await new Promise<void>((resolve) => {\n        const onStatusChanged = (status: string): void => {\n          if (status === 'connecting') return;\n          resolve();\n          this.off('statusChanged', onStatusChanged);\n        };\n        this.on('statusChanged', onStatusChanged);\n      });\n      // For some reason we can't immediately send a message when connection is\n      // established. Thus we wait 500ms which seems to work.\n      await pause(500);\n    }\n    notify(this, 'channels.message', { info, to: recipient });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { snakeToPascal } from '../utils/string.js';\nimport { MIN_GAS_PRICE, Tag, AbiVersion, VmVersion } from '../tx/builder/constants.js';\nimport {\n  signAndNotify,\n  awaitingCompletion,\n  channelClosed,\n  channelOpen,\n  handleUnexpectedMessage,\n} from './handlers.js';\nimport {\n  notify,\n  call,\n  SignTx,\n  ChannelState,\n  ChannelOptions,\n  ChannelMessage,\n  ChannelFsm,\n  changeState,\n  emit,\n} from './internal.js';\nimport { Encoded } from '../utils/encoder.js';\nimport { ContractCallObjectReturnType } from '../apis/node/index.js';\nimport { ContractCallObject } from '../contract/Contract.js';\nimport Channel from './Base.js';\nimport ChannelSpend from './Spend.js';\nimport { ChannelError, UnexpectedChannelMessageError } from '../utils/errors.js';\nimport { unpackTx } from '../tx/builder/index.js';\nimport { buildContractId } from '../tx/builder/helpers.js';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce(\n    (result, [key, val]) => ({\n      ...result,\n      [snakeToPascal(key)]: val,\n    }),\n    {},\n  ) as Type;\n}\n\ninterface CallContractOptions {\n  /**\n   * Amount the caller of the contract commits to it\n   */\n  amount?: number | BigNumber;\n  /**\n   * ABI encoded compiled AEVM call data for the code\n   */\n  callData?: Encoded.ContractBytearray;\n  /**\n   * Version of the ABI\n   */\n  abiVersion?: AbiVersion;\n  /**\n   * Address of the contract to call\n   */\n  contract?: Encoded.ContractAddress;\n}\n\ninterface CallContractResult extends CallContractOptions {\n  returnValue?: any;\n  gasUsed?: number | BigNumber;\n  gasPrice?: number | BigNumber;\n  height?: number;\n  callerNonce?: number;\n  log?: any;\n  returnType?: ContractCallObjectReturnType;\n}\n\ninterface Contract {\n  abiVersion: AbiVersion;\n  active: boolean;\n  deposit: number | BigNumber;\n  id: string;\n  ownerId: string;\n  referrerIds: string[];\n  vmVersion: VmVersion;\n}\n\n/**\n * @category state channel\n */\nexport default class ChannelContract extends ChannelSpend {\n  static override async initialize(options: ChannelOptions): Promise<ChannelContract> {\n    return Channel._initialize(new ChannelContract(), options);\n  }\n\n  /**\n   * Trigger create contract update\n   *\n   * The create contract update is creating a contract inside the channel's internal state tree.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * That would create a contract with the poster being the owner of it. Poster commits initially\n   * a deposit amount of coins to the new contract.\n   *\n   * @param options - Options\n   * @param options.code - Api encoded compiled AEVM byte code\n   * @param options.callData - Api encoded compiled AEVM call data for the code\n   * @param options.deposit - Initial amount the owner of the contract commits to it\n   * @param options.vmVersion - Version of the Virtual Machine\n   * @param options.abiVersion - Version of the Application Binary Interface\n   * @param sign - Function which verifies and signs create contract transaction\n   * @example\n   * ```js\n   * channel.createContract({\n   *   code: 'cb_HKtpipK4aCgYb17wZ...',\n   *   callData: 'cb_1111111111111111...',\n   *   deposit: 10,\n   *   vmVersion: 3,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx, address }) => {\n   *   if (accepted) {\n   *     console.log('New contract has been created')\n   *     console.log('Contract address:', address)\n   *   } else {\n   *     console.log('New contract has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async createContract(\n    {\n      code,\n      callData,\n      deposit,\n      vmVersion,\n      abiVersion,\n    }: {\n      code: Encoded.ContractBytearray;\n      callData: Encoded.ContractBytearray;\n      deposit: number | BigNumber;\n      vmVersion: VmVersion;\n      abiVersion: AbiVersion;\n    },\n    sign: SignTx,\n  ): Promise<{\n    accepted: boolean;\n    signedTx: Encoded.Transaction;\n    address: Encoded.ContractAddress;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new_contract', {\n        code,\n        call_data: callData,\n        deposit,\n        vm_version: vmVersion,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(this, 'channels.update', message.params.data, async (tx) =>\n            state.sign(tx),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm =>\n              awaitingCompletion(this, message2, state2, () => {\n                const params = unpackTx(message2.params.data.state, Tag.SignedTx).encodedTx;\n                if (params.tag !== Tag.ChannelOffChainTx) {\n                  throw new ChannelError(\n                    `Tag should be ${Tag[Tag.ChannelOffChainTx]}, got ${Tag[params.tag]} instead`,\n                  );\n                }\n                const addressKey =\n                  this._options.role === 'initiator' ? 'initiatorId' : 'responderId';\n                const owner = this._options[addressKey];\n                changeState(this, message2.params.data.state);\n                const address = buildContractId(owner, params.round);\n                emit(this, 'newContract', address);\n                state2.resolve({ accepted: true, address, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger call a contract update\n   *\n   * The call contract update is calling a preexisting contract inside the channel's\n   * internal state tree. The update is a change to be applied on top of the latest state.\n   *\n   * That would call a contract with the poster being the caller of it. Poster commits\n   * an amount of coins to the contract.\n   *\n   * The call would also create a call object inside the channel state tree. It contains\n   * the result of the contract call.\n   *\n   * It is worth mentioning that the gas is not consumed, because this is an off-chain\n   * contract call. It would be consumed if it were an on-chain one. This could happen\n   * if a call with a similar computation amount is to be forced on-chain.\n   *\n   * @param options - Options\n   * @param sign - Function which verifies and signs contract call transaction\n   * @example\n   * ```js\n   * channel.callContract({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract called succesfully')\n   *   } else {\n   *     console.log('Contract call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async callContract(\n    { amount, callData, contract, abiVersion }: CallContractOptions,\n    sign: SignTx,\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(this, 'channels.update', message.params.data, async (tx) =>\n            state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm =>\n              awaitingCompletion(this, message2, state2, () => {\n                changeState(this, message2.params.data.state);\n                state2.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              }),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger a force progress contract call\n   * This call is going on-chain\n   * @param options - Options\n   * @param sign - Function which verifies and signs contract force progress transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.forceProgress({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1,\n   *   gasPrice: 1000005554\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract force progress call successful')\n   *   } else {\n   *     console.log('Contract force progress call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async forceProgress(\n    {\n      amount,\n      callData,\n      contract,\n      abiVersion,\n      gasLimit = 1000000,\n      gasPrice = MIN_GAS_PRICE,\n    }: CallContractOptions & {\n      gasLimit?: number;\n      gasPrice?: number;\n    },\n    sign: SignTx,\n    { onOnChainTx }: Pick<ChannelState, 'onOnChainTx'> = {},\n  ): Promise<{\n    accepted: boolean;\n    signedTx: Encoded.Transaction;\n    tx: Encoded.Transaction | Uint8Array;\n  }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.force_progress', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n        gas_price: gasPrice,\n        gas: gasLimit,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.force_progress_tx') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.force_progress_sign',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (_2: Channel, message2: ChannelMessage, state2: ChannelState): ChannelFsm => {\n              if (message2.method === 'channels.on_chain_tx') {\n                state2.onOnChainTx?.(message2.params.data.tx);\n                emit(this, 'onChainTx', message2.params.data.tx, {\n                  info: message2.params.data.info,\n                  type: message2.params.data.type,\n                });\n                state2.resolve({ accepted: true, tx: message2.params.data.tx });\n                // TODO: shouldn't be unexpected message in this case\n              }\n              return handleUnexpectedMessage(this, message2, state2);\n            },\n            state,\n          };\n        },\n        state: { sign, onOnChainTx },\n      };\n    });\n  }\n\n  /**\n   * Call contract using dry-run\n   *\n   * In order to get the result of a potential contract call, one might need to\n   * dry-run a contract call. It takes the exact same arguments as a call would\n   * and returns the call object.\n   *\n   * The call is executed in the channel's state, but it does not impact the state\n   * whatsoever. It uses as an environment the latest channel's state and the current\n   * top of the blockchain as seen by the node.\n   *\n   * @param options - Options\n   * @example\n   * ```js\n   * channel.callContractStatic({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ returnValue, gasUsed }) => {\n   *   console.log('Returned value:', returnValue)\n   *   console.log('Gas used:', gasUsed)\n   * })\n   * ```\n   */\n  async callContractStatic({\n    amount,\n    callData,\n    contract,\n    abiVersion,\n  }: CallContractOptions): Promise<CallContractResult> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.dry_run.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      }),\n    );\n  }\n\n  /**\n   * Get contract call result\n   *\n   * The combination of a caller, contract and a round of execution determines the\n   * contract call. Providing an incorrect set of those results in an error response.\n   *\n   * @param options - Options\n   * @param options.caller - Address of contract caller\n   * @param options.contract - Address of the contract\n   * @param options.round - Round when contract was called\n   * @example\n   * ```js\n   * channel.getContractCall({\n   *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   round: 3\n   * }).then(({ returnType, returnValue }) => {\n   *   if (returnType === 'ok') console.log(returnValue)\n   * })\n   * ```\n   */\n  async getContractCall({\n    caller,\n    contract,\n    round,\n  }: {\n    caller: Encoded.AccountAddress;\n    contract: Encoded.ContractAddress;\n    round: number;\n  }): Promise<ContractCallObject> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.get.contract_call', {\n        caller_id: caller,\n        contract_id: contract,\n        round,\n      }),\n    );\n  }\n\n  /**\n   * Get the latest contract state\n   *\n   * @param contract - Address of the contract\n   * @example\n   * ```js\n   * channel.getContractState(\n   *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n   * ).then(({ contract }) => {\n   *   console.log('deposit:', contract.deposit)\n   * })\n   * ```\n   */\n  async getContractState(\n    contract: Encoded.ContractAddress,\n  ): Promise<{ contract: Contract; contractState: object }> {\n    const result = await call(this, 'channels.get.contract', { pubkey: contract });\n    return snakeToPascalObjKeys({\n      ...result,\n      contract: snakeToPascalObjKeys(result.contract),\n    });\n  }\n\n  /**\n   * Clean up all locally stored contract calls\n   *\n   * Contract calls are kept locally in order for the participant to be able to look them up.\n   * They consume memory and in order for the participant to free it - one can prune all messages.\n   * This cleans up all locally stored contract calls and those will no longer be available for\n   * fetching and inspection.\n   */\n  async cleanContractCalls(): Promise<void> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.clean_contract_calls');\n      return {\n        handler(_: Channel, message: ChannelMessage, state: ChannelState): ChannelFsm {\n          if (message.method === 'channels.calls_pruned.reply') {\n            state.resolve();\n            return { handler: channelOpen };\n          }\n          state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n          return { handler: channelClosed };\n        },\n      };\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport WebSocket from 'isomorphic-ws';\nimport { BaseError, UnexpectedTsError, InternalError } from './utils/errors.js';\nimport { Encoded } from './utils/encoder.js';\n\ninterface Message {\n  payload: Object;\n  source: Source.Middleware | Source.Node;\n  subscription: 'KeyBlocks' | 'MicroBlocks' | 'Transactions' | 'Object';\n  target?: string;\n}\n\nenum Source {\n  Middleware = 'mdw',\n  Node = 'node',\n  All = 'all',\n}\n\nexport class MiddlewareSubscriberError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MiddlewareSubscriberError';\n  }\n}\n\nexport class MiddlewareSubscriberDisconnected extends MiddlewareSubscriberError {\n  constructor(readonly closeEvent: WebSocket.CloseEvent) {\n    super('Connection closed');\n    this.name = 'MiddlewareSubscriberDisconnected';\n  }\n}\n\n/**\n * @category middleware\n */\nexport default class MiddlewareSubscriber {\n  #subscriptions: Array<readonly [target: string, s: Source, cb: (p?: Object, e?: Error) => void]> =\n    [];\n\n  readonly #requestQueue: Array<[isSubscribe: boolean, target: string]> = [];\n\n  #webSocket?: WebSocket;\n\n  get webSocket(): WebSocket | undefined {\n    return this.#webSocket;\n  }\n\n  get #targets(): Set<string> {\n    return new Set(this.#subscriptions.map(([target]) => target));\n  }\n\n  #sendMessage(message: any): void {\n    if (this.#webSocket == null) throw new UnexpectedTsError();\n    this.#webSocket.send(JSON.stringify(message));\n  }\n\n  #sendSubscribe(isSubscribe: boolean, target: string): void {\n    if (this.#webSocket == null) return;\n    const payload = ['KeyBlocks', 'MicroBlocks', 'Transactions'].includes(target)\n      ? target\n      : 'Object';\n    this.#sendMessage({\n      op: isSubscribe ? 'Subscribe' : 'Unsubscribe',\n      payload,\n      ...(payload === 'Object' && { target }),\n    });\n    this.#requestQueue.push([isSubscribe, target]);\n  }\n\n  #emit(condition: (target: string, source: Source) => boolean, p?: Object, e?: Error): void {\n    this.#subscriptions\n      .filter(([target, source]) => condition(target, source))\n      .forEach(([, , cb]) => cb(p, e));\n  }\n\n  constructor(readonly url: string) {}\n\n  #disconnect(onlyReset = false): void {\n    if (this.#webSocket == null) return;\n    if (!onlyReset) this.#webSocket.close();\n    Object.assign(this.#webSocket, {\n      onopen: undefined,\n      onerror: undefined,\n      onmessage: undefined,\n    });\n    this.#webSocket = undefined;\n  }\n\n  async reconnect(): Promise<void> {\n    this.#disconnect();\n    this.#webSocket = await new Promise((resolve) => {\n      const webSocket = new WebSocket(this.url);\n      Object.assign(webSocket, {\n        onopen: () => resolve(webSocket),\n        onerror: (errorEvent: WebSocket.ErrorEvent) => {\n          this.#emit(() => true, undefined, errorEvent.error);\n        },\n        onmessage: (event: WebSocket.MessageEvent) => {\n          if (typeof event.data !== 'string') {\n            throw new InternalError(`Unknown incoming message type: ${typeof event.data}`);\n          }\n          this.#messageHandler(JSON.parse(event.data));\n        },\n        onclose: (event: WebSocket.CloseEvent) => {\n          this.#emit(() => true, undefined, new MiddlewareSubscriberDisconnected(event));\n          this.#disconnect(true);\n        },\n      });\n    });\n    await Promise.all([...this.#targets].map((target) => this.#sendSubscribe(true, target)));\n  }\n\n  #messageHandler(message: string | string[] | Message): void {\n    if (typeof message === 'string' || Array.isArray(message)) {\n      const request = this.#requestQueue.shift();\n      if (request == null) throw new InternalError('Request queue is empty');\n      const [isSubscribe, target] = request;\n      let error;\n      if (typeof message === 'string') error = new MiddlewareSubscriberError(message);\n      if (message.includes(target) !== isSubscribe) {\n        error = new InternalError(\n          `Expected ${target} to be${isSubscribe ? '' : ' not'} included into ${message}`,\n        );\n      }\n      if (error != null) this.#emit((t) => target === t, undefined, error);\n      return;\n    }\n    this.#emit(\n      (target, source) =>\n        (target === message.subscription || target === message.target) &&\n        (source === message.source || source === Source.All),\n      message.payload,\n    );\n  }\n\n  #subscribe(target: string, source: Source, cb: (p?: Object, e?: Error) => void): () => void {\n    const subscription = [target, source, cb] as const;\n    if (this.#targets.size === 0) this.reconnect();\n    if (!this.#targets.has(target)) this.#sendSubscribe(true, target);\n    this.#subscriptions.push(subscription);\n    return () => {\n      this.#subscriptions = this.#subscriptions.filter((item) => item !== subscription);\n      if (!this.#targets.has(target)) this.#sendSubscribe(false, target);\n      if (this.#targets.size === 0) this.#disconnect();\n    };\n  }\n\n  // TODO: replace p?: any with a proper type definition\n\n  subscribeKeyBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Middleware, cb);\n  }\n\n  subscribeKeyBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Node, cb);\n  }\n\n  subscribeKeyBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.All, cb);\n  }\n\n  subscribeMicroBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Middleware, cb);\n  }\n\n  subscribeMicroBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Node, cb);\n  }\n\n  subscribeMicroBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.All, cb);\n  }\n\n  subscribeTransactions(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Middleware, cb);\n  }\n\n  subscribeTransactionsNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Node, cb);\n  }\n\n  subscribeTransactionsAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.All, cb);\n  }\n\n  subscribeObject(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Middleware, cb);\n  }\n\n  subscribeObjectNode(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Node, cb);\n  }\n\n  subscribeObjectAll(\n    target:\n      | Encoded.KeyBlockHash\n      | Encoded.Channel\n      | Encoded.ContractAddress\n      | Encoded.OracleAddress\n      | Encoded.OracleQueryId\n      | Encoded.AccountAddress\n      | Encoded.Name\n      | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.All, cb);\n  }\n}\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const accountId: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"accountId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ownedOnly: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedOnly\"],\n  mapper: {\n    serializedName: \"owned_only\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"transactions\",\n        \"aexn\",\n        \"aex9\",\n        \"aex141\",\n        \"contract\",\n        \"transfers\",\n        \"claims\",\n        \"swaps\",\n      ],\n    },\n  },\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 10,\n    constraints: {\n      InclusiveMaximum: 100,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const scope: OperationQueryParameter = {\n  parameterPath: [\"options\", \"scope\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(gen):\\\\d+(-\\\\d+)?\"),\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const contract: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contract\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction3: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction4: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const by: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"creation\", \"name\", \"symbol\"],\n    },\n  },\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const exact: OperationQueryParameter = {\n  parameterPath: [\"options\", \"exact\"],\n  mapper: {\n    serializedName: \"exact\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction5: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const contractId: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contractId\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction6: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const templateId: OperationURLParameter = {\n  parameterPath: \"templateId\",\n  mapper: {\n    serializedName: \"templateId\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction7: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const tokenId: OperationURLParameter = {\n  parameterPath: \"tokenId\",\n  mapper: {\n    serializedName: \"tokenId\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction8: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"from\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const to: OperationQueryParameter = {\n  parameterPath: [\"options\", \"to\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"to\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction9: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const by1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"creation\", \"name\", \"symbol\"],\n    },\n  },\n};\n\nexport const direction10: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const by2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const blockHash: OperationQueryParameter = {\n  parameterPath: [\"options\", \"blockHash\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"block_hash\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash: OperationQueryParameter = {\n  parameterPath: [\"options\", \"hash\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction11: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction12: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const state: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"active\", \"inactive\"],\n    },\n  },\n};\n\nexport const id1: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction13: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const contractId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contractId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const event: OperationQueryParameter = {\n  parameterPath: [\"options\", \"event\"],\n  mapper: {\n    serializedName: \"event\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const functionParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"function\"],\n  mapper: {\n    serializedName: \"function\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const functionPrefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"functionPrefix\"],\n  mapper: {\n    serializedName: \"function_prefix\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const data: OperationQueryParameter = {\n  parameterPath: [\"options\", \"data\"],\n  mapper: {\n    serializedName: \"data\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const aexnArgs: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aexnArgs\"],\n  mapper: {\n    serializedName: \"aexn-args\",\n    type: {\n      name: \"Boolean\",\n    },\n  },\n};\n\nexport const direction14: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction15: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction16: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const contractId2: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n    },\n    serializedName: \"contract_id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction17: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const scope1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"scope\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(epoch):\\\\d+(-\\\\d+)?\"),\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction18: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const direction19: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const validator: OperationURLParameter = {\n  parameterPath: \"validator\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"validator\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction20: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction21: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction22: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const hashOrKbi: OperationURLParameter = {\n  parameterPath: \"hashOrKbi\",\n  mapper: {\n    serializedName: \"hash_or_kbi\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction23: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const hash1: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const ownedBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedBy\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"owned_by\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const state1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction24: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction25: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const id2: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction26: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction27: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction28: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction29: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction30: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction31: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const id3: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const intervalBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction32: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const minStartDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"minStartDate\"],\n  mapper: {\n    serializedName: \"min_start_date\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const maxStartDate: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxStartDate\"],\n  mapper: {\n    serializedName: \"max_start_date\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction33: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const typeParam1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"key\", \"micro\"],\n    },\n  },\n};\n\nexport const direction34: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy3: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction35: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction36: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy4: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction37: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy5: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction38: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction39: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy6: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction40: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const direction41: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy7: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const direction42: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const intervalBy8: OperationQueryParameter = {\n  parameterPath: [\"options\", \"intervalBy\"],\n  mapper: {\n    serializedName: \"interval_by\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"day\", \"week\", \"month\"],\n    },\n  },\n};\n\nexport const txType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"txType\"],\n  mapper: {\n    serializedName: \"tx_type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction43: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const typeParam2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"channel_close_mutual\",\n            \"channel_close_solo\",\n            \"channel_create\",\n            \"channel_deposit\",\n            \"channel_force_progress\",\n            \"channel_offchain\",\n            \"channel_settle\",\n            \"channel_slash\",\n            \"channel_snapshot_solo\",\n            \"channel_withdraw\",\n            \"contract_call\",\n            \"contract_create\",\n            \"ga_attach\",\n            \"ga_meta\",\n            \"name_claim\",\n            \"name_preclaim\",\n            \"name_revoke\",\n            \"name_transfer\",\n            \"name_update\",\n            \"oracle_extend\",\n            \"oracle_query\",\n            \"oracle_register\",\n            \"oracle_response\",\n            \"paying_for\",\n            \"spend\",\n          ],\n        },\n      },\n    },\n  },\n  collectionFormat: \"Multi\",\n};\n\nexport const typeGroup: OperationQueryParameter = {\n  parameterPath: [\"options\", \"typeGroup\"],\n  mapper: {\n    serializedName: \"type_group\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"channel\",\n            \"contract\",\n            \"ga\",\n            \"name\",\n            \"oracle\",\n            \"paying_for\",\n            \"spend\",\n          ],\n        },\n      },\n    },\n  },\n  collectionFormat: \"Multi\",\n};\n\nexport const account: OperationQueryParameter = {\n  parameterPath: [\"options\", \"account\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"account\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const channel: OperationQueryParameter = {\n  parameterPath: [\"options\", \"channel\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n    },\n    serializedName: \"channel\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const oracle: OperationQueryParameter = {\n  parameterPath: [\"options\", \"oracle\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n    },\n    serializedName: \"oracle\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const senderId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"senderId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"sender_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const recipientId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"recipientId\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"recipient_id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const entrypoint: OperationQueryParameter = {\n  parameterPath: [\"options\", \"entrypoint\"],\n  mapper: {\n    serializedName: \"entrypoint\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const scope2: OperationQueryParameter = {\n  parameterPath: [\"options\", \"scope\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(time|gen):\\\\d+(-\\\\d+)?\"),\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction44: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const id4: OperationQueryParameter = {\n  parameterPath: [\"options\", \"id\"],\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n    },\n    serializedName: \"id\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction45: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n\nexport const hash2: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n    },\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const direction46: OperationQueryParameter = {\n  parameterPath: [\"options\", \"direction\"],\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"forward\", \"backward\"],\n    },\n  },\n};\n","import * as coreClient from \"@azure/core-client\";\n\nexport const PathsBx0Ya3V3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsBx0Ya3V3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Activity\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Activity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Activity\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTxEvent\",\n            \"OracleRegisterTxEvent\",\n            \"OracleExtendTxEvent\",\n            \"OracleQueryTxEvent\",\n            \"OracleResponseTxEvent\",\n            \"NamePreclaimTxEvent\",\n            \"NameClaimTxEvent\",\n            \"NameTransferTxEvent\",\n            \"NameUpdateTxEvent\",\n            \"NameRevokeTxEvent\",\n            \"ContractCreateTxEvent\",\n            \"ContractCallTxEvent\",\n            \"GaAttachTxEvent\",\n            \"GaMetaTxEvent\",\n            \"ChannelCreateTxEvent\",\n            \"ChannelDepositTxEvent\",\n            \"ChannelWithdrawTxEvent\",\n            \"ChannelForceProgressTxEvent\",\n            \"ChannelCloseMutualTxEvent\",\n            \"ChannelCloseSoloTxEvent\",\n            \"ChannelSlashTxEvent\",\n            \"ChannelSettleTxEvent\",\n            \"ChannelSnapshotSoloTxEvent\",\n            \"ChannelSetDelegatesTxEvent\",\n            \"ChannelOffchainTxEvent\",\n            \"ChannelClientReconnectTxEvent\",\n            \"PayingForTxEvent\",\n          ],\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"Composite\",\n          className: \"ActivityPayload\",\n        },\n      },\n    },\n  },\n};\n\nexport const ActivityPayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ActivityPayload\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      recipientId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        type: {\n          name: \"String\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"accounts_extra_lima\",\n            \"accounts_fortuna\",\n            \"accounts_genesis\",\n            \"accounts_lima\",\n            \"accounts_minerva\",\n            \"contracts_lima\",\n            \"reward_dev\",\n            \"reward_block\",\n            \"fee_refund_oracle\",\n            \"fee_lock_name\",\n            \"fee_refund_name\",\n            \"fee_spend_name\",\n            \"reward_oracle\",\n          ],\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\",\n        },\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\",\n        },\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\",\n          ],\n        },\n      },\n    },\n  },\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  serializedName: \"OffChainUpdate\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\",\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\",\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"],\n        },\n      },\n      value: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedKey: {\n        serializedName: \"encoded_key\",\n        type: {\n          name: \"String\",\n        },\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n      blockHeight: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: -1,\n        },\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      encodedTx: {\n        serializedName: \"encoded_tx\",\n        type: {\n          name: \"String\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const PaginatedResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedResponse\",\n    modelProperties: {\n      next: {\n        serializedName: \"next\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prev: {\n        serializedName: \"prev\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TokenResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TokenResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TokenResponse\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ownerId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9BalanceResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9BalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9BalanceResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      tokenName: {\n        serializedName: \"token_name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenSymbol: {\n        serializedName: \"token_symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txType: {\n        serializedName: \"tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths10R8Q7PV3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10R8Q7PV3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const DexSwap: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DexSwap\",\n    modelProperties: {\n      amounts: {\n        serializedName: \"amounts\",\n        type: {\n          name: \"Composite\",\n          className: \"DexSwapAmounts\",\n        },\n      },\n      action: {\n        serializedName: \"action\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"SWAP\", \"BUY\", \"SELL\"],\n        },\n      },\n      caller: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromToken: {\n        serializedName: \"from_token\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toToken: {\n        serializedName: \"to_token\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      toAccount: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"to_account\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromContract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"from_contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toContract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"to_contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromAmount: {\n        serializedName: \"from_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      toAmount: {\n        serializedName: \"to_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fromDecimals: {\n        serializedName: \"from_decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      toDecimals: {\n        serializedName: \"to_decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const DexSwapAmounts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DexSwapAmounts\",\n    modelProperties: {\n      amount0In: {\n        serializedName: \"amount0_in\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount1In: {\n        serializedName: \"amount1_in\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount0Out: {\n        serializedName: \"amount0_out\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount1Out: {\n        serializedName: \"amount1_out\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths16G4GzrV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths16G4GzrV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameClaim\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameClaim: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaim\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameClaimTx\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameSalt: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nameFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_fee\",\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NotFoundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotFoundResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsA60QxwV3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsA60QxwV3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Pointee\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Pointee: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Pointee\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameUpdateTx\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      clientTtl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        contractCreateTx: {\n          serializedName: \"contract_create_tx\",\n          type: {\n            name: \"Composite\",\n            className: \"Get200ApplicationJsonProperties\",\n          },\n        },\n        contractCallTx: {\n          serializedName: \"contract_call_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx\",\n          },\n        },\n        gaAttachTx: {\n          serializedName: \"ga_attach_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx\",\n          },\n        },\n        gaMetaTx: {\n          serializedName: \"ga_meta_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx\",\n          },\n        },\n        channelCloseMutualTx: {\n          serializedName: \"channel_close_mutual_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx\",\n          },\n        },\n        channelCloseSoloTx: {\n          serializedName: \"channel_close_solo_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx\",\n          },\n        },\n        channelCreateTx: {\n          serializedName: \"channel_create_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx\",\n          },\n        },\n        channelDepositTx: {\n          serializedName: \"channel_deposit_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx\",\n          },\n        },\n        channelForceProgressTx: {\n          serializedName: \"channel_force_progress_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx\",\n          },\n        },\n        channelSetDelegatesTx: {\n          serializedName: \"channel_set_delegates_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx\",\n          },\n        },\n        channelSettleTx: {\n          serializedName: \"channel_settle_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx\",\n          },\n        },\n        channelSlashTx: {\n          serializedName: \"channel_slash_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx\",\n          },\n        },\n        channelSnapshotSoloTx: {\n          serializedName: \"channel_snapshot_solo_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx\",\n          },\n        },\n        channelWithdrawTx: {\n          serializedName: \"channel_withdraw_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx\",\n          },\n        },\n        nameClaimTx: {\n          serializedName: \"name_claim_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx\",\n          },\n        },\n        namePreclaimTx: {\n          serializedName: \"name_preclaim_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx\",\n          },\n        },\n        nameRevokeTx: {\n          serializedName: \"name_revoke_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx\",\n          },\n        },\n        nameTransferTx: {\n          serializedName: \"name_transfer_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx\",\n          },\n        },\n        nameUpdateTx: {\n          serializedName: \"name_update_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx\",\n          },\n        },\n        oracleExtendTx: {\n          serializedName: \"oracle_extend_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx\",\n          },\n        },\n        oracleQueryTx: {\n          serializedName: \"oracle_query_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx\",\n          },\n        },\n        oracleRegisterTx: {\n          serializedName: \"oracle_register_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx\",\n          },\n        },\n        oracleResponseTx: {\n          serializedName: \"oracle_response_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx\",\n          },\n        },\n        payingForTx: {\n          serializedName: \"paying_for_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx\",\n          },\n        },\n        spendTx: {\n          serializedName: \"spend_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx\",\n          },\n        },\n        channelOffchainTx: {\n          serializedName: \"channel_offchain_tx\",\n          type: {\n            name: \"Composite\",\n            className:\n              \"Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx\",\n          },\n        },\n        total: {\n          serializedName: \"total\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Get200ApplicationJsonProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Get200ApplicationJsonProperties\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx\",\n      modelProperties: {\n        contractId: {\n          serializedName: \"contract_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        callerId: {\n          serializedName: \"caller_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx\",\n      modelProperties: {\n        ownerId: {\n          serializedName: \"owner_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx\",\n      modelProperties: {\n        gaId: {\n          serializedName: \"ga_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx\",\n      modelProperties: {\n        initiatorId: {\n          serializedName: \"initiator_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        responderId: {\n          serializedName: \"responder_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        fromId: {\n          serializedName: \"from_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        toId: {\n          serializedName: \"to_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        commitmentId: {\n          serializedName: \"commitment_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx\",\n      modelProperties: {\n        recipientId: {\n          serializedName: \"recipient_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        nameId: {\n          serializedName: \"name_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx\",\n      modelProperties: {\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx\",\n      modelProperties: {\n        senderId: {\n          serializedName: \"sender_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx\",\n      modelProperties: {\n        accountId: {\n          serializedName: \"account_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx\",\n      modelProperties: {\n        oracleId: {\n          serializedName: \"oracle_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx\",\n      modelProperties: {\n        payerId: {\n          serializedName: \"payer_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx\",\n      modelProperties: {\n        senderId: {\n          serializedName: \"sender_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n        recipientId: {\n          serializedName: \"recipient_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx\",\n      modelProperties: {\n        channelId: {\n          serializedName: \"channel_id\",\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141Response\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141Response\",\n    modelProperties: {\n      baseUrl: {\n        serializedName: \"base_url\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      limits: {\n        serializedName: \"limits\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      invalid: {\n        serializedName: \"invalid\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      creationTime: {\n        serializedName: \"creation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TemplatesResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TemplatesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplatesResponse\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TemplateTokensResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TemplateTokensResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplateTokensResponse\",\n    modelProperties: {\n      ownerId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TokenResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TokenDetailResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TokenDetailResponse\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ownerId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex141TransferEvent\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex141TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TransferEvent\",\n    modelProperties: {\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9Response\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9Response\",\n    modelProperties: {\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initialSupply: {\n        serializedName: \"initial_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      eventSupply: {\n        serializedName: \"event_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      holders: {\n        serializedName: \"holders\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      invalid: {\n        serializedName: \"invalid\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Aex9ContractBalanceResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Aex9ContractBalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9ContractBalanceResponse\",\n    modelProperties: {\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastLogIdx: {\n        serializedName: \"last_log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        account: {\n          constraints: {\n            Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n          },\n          serializedName: \"account\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        amount: {\n          serializedName: \"amount\",\n          required: true,\n          type: {\n            // @ts-expect-error we are extending autorest with BigInt support\n            name: \"BigInt\",\n          },\n        },\n        contract: {\n          constraints: {\n            Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n          },\n          serializedName: \"contract\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Get200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n      modelProperties: {\n        account: {\n          constraints: {\n            Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n          },\n          serializedName: \"account\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        amount: {\n          serializedName: \"amount\",\n          required: true,\n          type: {\n            // @ts-expect-error we are extending autorest with BigInt support\n            name: \"BigInt\",\n          },\n        },\n        contract: {\n          constraints: {\n            Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n          },\n          serializedName: \"contract\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        height: {\n          serializedName: \"height\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Channel\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channel: {\n        constraints: {\n          Pattern: new RegExp(\"^ch_\\\\w{38,50}$\"),\n        },\n        serializedName: \"channel\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      initiator: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"initiator\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lastUpdatedHeight: {\n        serializedName: \"last_updated_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastUpdatedTxType: {\n        serializedName: \"last_updated_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastUpdatedTime: {\n        serializedName: \"last_updated_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      lastUpdatedTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_updated_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responder: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"responder\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        constraints: {\n          Pattern: new RegExp(\"^st_\\\\w+$\"),\n        },\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      updatesCount: {\n        serializedName: \"updates_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"ContractCall\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const ContractCall: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCall\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      localIdx: {\n        serializedName: \"local_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"ContractLog\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const ContractLog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractLog\",\n    modelProperties: {\n      args: {\n        serializedName: \"args\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      eventHash: {\n        serializedName: \"event_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      eventName: {\n        serializedName: \"event_name\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extCallerContractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ext_caller_contract_id\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      extCallerContractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ext_caller_contract_tx_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      parentContractId: {\n        serializedName: \"parent_contract_id\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      aexnType: {\n        serializedName: \"aexn_type\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contract: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      createTx: {\n        serializedName: \"create_tx\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCreateTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      deposit: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DexSwap\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1F8GzwrV3HyperchainEpochsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1F8GzwrV3HyperchainEpochsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"EpochInfo\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const EpochInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EpochInfo\",\n    modelProperties: {\n      epoch: {\n        serializedName: \"epoch\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      first: {\n        serializedName: \"first\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      last: {\n        serializedName: \"last\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      length: {\n        serializedName: \"length\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      seed: {\n        serializedName: \"seed\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastPinHeight: {\n        serializedName: \"last_pin_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      parentBlockHash: {\n        serializedName: \"parent_block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lastLeader: {\n        serializedName: \"last_leader\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      epochStartTime: {\n        serializedName: \"epoch_start_time\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      validators: {\n        serializedName: \"validators\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EpochInfoValidatorsItem\",\n            },\n          },\n        },\n      },\n    },\n  },\n};\n\nexport const EpochInfoValidatorsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EpochInfoValidatorsItem\",\n    modelProperties: {\n      validator: {\n        serializedName: \"validator\",\n        type: {\n          name: \"String\",\n        },\n      },\n      stake: {\n        serializedName: \"stake\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths7W5O80V3HyperchainScheduleGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths7W5O80V3HyperchainScheduleGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Schedule\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Schedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Schedule\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      leader: {\n        serializedName: \"leader\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Qg7SclV3HyperchainValidatorsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Qg7SclV3HyperchainValidatorsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Validator\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Validator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Validator\",\n    modelProperties: {\n      epoch: {\n        serializedName: \"epoch\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      validator: {\n        serializedName: \"validator\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      totalStakes: {\n        serializedName: \"total_stakes\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      delegates: {\n        serializedName: \"delegates\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      rewardsEarned: {\n        serializedName: \"rewards_earned\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pinningHistory: {\n        serializedName: \"pinning_history\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Number\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const Paths7Ks32NV3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths7Ks32NV3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Delegate\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Delegate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegate\",\n    modelProperties: {\n      epoch: {\n        serializedName: \"epoch\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      delegate: {\n        serializedName: \"delegate\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stake: {\n        serializedName: \"stake\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      validator: {\n        serializedName: \"validator\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsDwhnfdV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsDwhnfdV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Delegate\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"KeyBlockExtended\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      target: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42,\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              InclusiveMaximum: 4294967295,\n              InclusiveMinimum: 0,\n            },\n            type: {\n              name: \"Number\",\n            },\n          },\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"MicroBlockExtended\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      version: {\n        constraints: {\n          InclusiveMaximum: 4294967295,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transaction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Transaction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transaction\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Name\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^nm_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      approximateActivationTime: {\n        serializedName: \"approximate_activation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\",\n            },\n          },\n        },\n      },\n      auction: {\n        serializedName: \"auction\",\n        type: {\n          name: \"Composite\",\n          className: \"Auction\",\n        },\n      },\n      auctionTimeout: {\n        serializedName: \"auction_timeout\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ownership: {\n        serializedName: \"ownership\",\n        type: {\n          name: \"Composite\",\n          className: \"NameOwnership\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      revoke: {\n        serializedName: \"revoke\",\n        type: {\n          name: \"Composite\",\n          className: \"NameTx\",\n        },\n      },\n      claimsCount: {\n        serializedName: \"claims_count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Auction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Auction\",\n    modelProperties: {\n      auctionEnd: {\n        serializedName: \"auction_end\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      activationTime: {\n        serializedName: \"activation_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      lastBid: {\n        serializedName: \"last_bid\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionLastBid\",\n        },\n      },\n      name: {\n        constraints: {\n          Pattern: new RegExp(\"^\\\\w+\\\\.chain$\"),\n        },\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      claimsCount: {\n        serializedName: \"claims_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const AuctionLastBid: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionLastBid\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionLastBidTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1\",\n      modelProperties: {\n        nameId: {\n          constraints: {\n            Pattern: new RegExp(\"^nm_\\\\w{38,50}$\"),\n          },\n          serializedName: \"name_id\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        type: {\n          serializedName: \"type\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"version\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const NameOwnership: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameOwnership\",\n    modelProperties: {\n      current: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"current\",\n        type: {\n          name: \"String\",\n        },\n      },\n      original: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"original\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTx\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameTxTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Components171VsjiSchemasNametxPropertiesTxAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"Components171VsjiSchemasNametxPropertiesTxAllof1\",\n      modelProperties: {\n        type: {\n          serializedName: \"type\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"version\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Auction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameClaim\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameClaim\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameTransfer\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameTransfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransfer\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameTransferTx\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"NameUpdate\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const NameUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdate\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"NameUpdateTx\",\n        },\n      },\n      internalSource: {\n        serializedName: \"internal_source\",\n        type: {\n          name: \"Boolean\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Oracle\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Oracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Oracle\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      approximateExpireTime: {\n        serializedName: \"approximate_expire_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      registerTime: {\n        serializedName: \"register_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      registerTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"register_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      format: {\n        serializedName: \"format\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleFormat\",\n        },\n      },\n      oracle: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      register: {\n        serializedName: \"register\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleFormat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleFormat\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleTx\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleTxTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Components1Viuqa3SchemasOracletxPropertiesTxAllof1: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className: \"Components1Viuqa3SchemasOracletxPropertiesTxAllof1\",\n      modelProperties: {\n        oracleId: {\n          constraints: {\n            Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n          },\n          serializedName: \"oracle_id\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        type: {\n          serializedName: \"type\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n        version: {\n          serializedName: \"version\",\n          required: true,\n          type: {\n            name: \"Number\",\n          },\n        },\n        txHash: {\n          constraints: {\n            Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n          },\n          serializedName: \"tx_hash\",\n          required: true,\n          type: {\n            name: \"String\",\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleExtend\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const OracleExtend: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtend\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleExtendTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleQuery\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      queryId: {\n        constraints: {\n          Pattern: new RegExp(\"^oq_\\\\w{38,50}$\"),\n        },\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleResponse\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleResponse\",\n    modelProperties: {\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockTime: {\n        serializedName: \"block_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      queryId: {\n        constraints: {\n          Pattern: new RegExp(\"^oq_\\\\w{38,50}$\"),\n        },\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"Composite\",\n          className: \"OracleQuery\",\n        },\n      },\n      sourceTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"source_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sourceTxType: {\n        serializedName: \"source_tx_type\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        constraints: {\n          Pattern: new RegExp(\"^ok_\\\\w{38,50}$\"),\n        },\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"OracleResponse\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Stats: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Stats\",\n    modelProperties: {\n      minersCount: {\n        serializedName: \"miners_count\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      feesTrend: {\n        serializedName: \"fees_trend\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      last24HsAverageTransactionFees: {\n        serializedName: \"last_24hs_average_transaction_fees\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      last24HsTransactions: {\n        serializedName: \"last_24hs_transactions\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      maxTransactionsPerSecond: {\n        serializedName: \"max_transactions_per_second\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      maxTransactionsPerSecondBlockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^kh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"max_transactions_per_second_block_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      transactionsTrend: {\n        serializedName: \"transactions_trend\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsFso5IiV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsFso5IiV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Stat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Stat\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      startDate: {\n        serializedName: \"start_date\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      endDate: {\n        serializedName: \"end_date\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Fl1Lh2V3StatsAex9TransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Fl1Lh2V3StatsAex9TransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1A27TirV3StatsBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1A27TirV3StatsBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths72Dp44V3StatsContractsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths72Dp44V3StatsContractsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1J83O75V3StatsDeltaGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1J83O75V3StatsDeltaGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"DeltaStat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const DeltaStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeltaStat\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      burnedInAuctions: {\n        serializedName: \"burned_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelsClosed: {\n        serializedName: \"channels_closed\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      channelsOpened: {\n        serializedName: \"channels_opened\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      lockedInAuctions: {\n        serializedName: \"locked_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockedInChannels: {\n        serializedName: \"locked_in_channels\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1Qw6KhfV3StatsDifficultyGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Qw6KhfV3StatsDifficultyGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1IskjkV3StatsHashrateGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1IskjkV3StatsHashrateGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths50Qhc7V3StatsMinersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths50Qhc7V3StatsMinersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Miner\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Miner: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Miner\",\n    modelProperties: {\n      miner: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      totalReward: {\n        serializedName: \"total_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsD92Xl6V3StatsNamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsD92Xl6V3StatsNamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths1K55ZdgV3StatsTotalGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1K55ZdgV3StatsTotalGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"TotalStat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const TotalStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TotalStat\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contracts: {\n        serializedName: \"contracts\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      lockedInAuctions: {\n        serializedName: \"locked_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      burnedInAuctions: {\n        serializedName: \"burned_in_auctions\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockedInChannels: {\n        serializedName: \"locked_in_channels\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      activeAuctions: {\n        serializedName: \"active_auctions\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      activeNames: {\n        serializedName: \"active_names\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      inactiveNames: {\n        serializedName: \"inactive_names\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      activeOracles: {\n        serializedName: \"active_oracles\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      inactiveOracles: {\n        serializedName: \"inactive_oracles\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      openChannels: {\n        serializedName: \"open_channels\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      sumBlockReward: {\n        serializedName: \"sum_block_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      sumDevReward: {\n        serializedName: \"sum_dev_reward\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      totalTokenSupply: {\n        serializedName: \"total_token_supply\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lastTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths3Bfys0V3StatsTotalAccountsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths3Bfys0V3StatsTotalAccountsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Paths6PaqluV3StatsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths6PaqluV3StatsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Stat\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      mdwAsyncTasks: {\n        serializedName: \"mdw_async_tasks\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMdwAsyncTasks\",\n        },\n      },\n      mdwGensPerMinute: {\n        serializedName: \"mdw_gens_per_minute\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwHeight: {\n        serializedName: \"mdw_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwLastMigration: {\n        serializedName: \"mdw_last_migration\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwRevision: {\n        serializedName: \"mdw_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      mdwSynced: {\n        serializedName: \"mdw_synced\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      mdwSyncing: {\n        serializedName: \"mdw_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      mdwTxIndex: {\n        serializedName: \"mdw_tx_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      mdwVersion: {\n        serializedName: \"mdw_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeHeight: {\n        serializedName: \"node_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nodeProgress: {\n        serializedName: \"node_progress\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nodeSyncing: {\n        serializedName: \"node_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\",\n        },\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const StatusMdwAsyncTasks: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMdwAsyncTasks\",\n    modelProperties: {\n      longTasks: {\n        serializedName: \"long_tasks\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      producerBuffer: {\n        serializedName: \"producer_buffer\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      totalPending: {\n        serializedName: \"total_pending\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transaction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PathsI72FylV3TransactionsPendingGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsI72FylV3TransactionsPendingGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"PendingTransaction\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const PendingTransaction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PendingTransaction\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      encodedTx: {\n        constraints: {\n          Pattern: new RegExp(\"^tx_\\\\w+$\"),\n        },\n        serializedName: \"encoded_tx\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      failures: {\n        serializedName: \"failures\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      hash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            constraints: {\n              Pattern: new RegExp(\"^sg_\\\\w+$\"),\n            },\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\",\n        },\n      },\n    },\n  },\n};\n\nexport const PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n      modelProperties: {\n        data: {\n          serializedName: \"data\",\n          required: true,\n          type: {\n            name: \"Sequence\",\n            element: {\n              type: {\n                name: \"Composite\",\n                className: \"Transfer\",\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\nexport const Transfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transfer\",\n    modelProperties: {\n      accountId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"reward_dev\", \"reward_block\"],\n        },\n      },\n      refBlockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_block_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      refTxType: {\n        serializedName: \"ref_tx_type\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Aex9TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipientId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      senderId: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const Aex9TransferResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"UnixTime\",\n        },\n      },\n      recipient: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      sender: {\n        constraints: {\n          Pattern: new RegExp(\"^ak_\\\\w{38,50}$\"),\n        },\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const InternalContractCallEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalContractCallEvent\",\n    modelProperties: {\n      contractTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      contractId: {\n        constraints: {\n          Pattern: new RegExp(\"^ct_\\\\w{38,50}$\"),\n        },\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      callTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\",\n        },\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      blockHash: {\n        constraints: {\n          Pattern: new RegExp(\"^mh_\\\\w{38,50}$\"),\n        },\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const InternalTransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalTransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"accounts_extra_lima\",\n            \"accounts_fortuna\",\n            \"accounts_genesis\",\n            \"accounts_lima\",\n            \"accounts_minerva\",\n            \"contracts_lima\",\n            \"reward_dev\",\n            \"reward_block\",\n            \"fee_refund_oracle\",\n            \"fee_lock_name\",\n            \"fee_refund_name\",\n            \"fee_spend_name\",\n            \"reward_oracle\",\n          ],\n        },\n      },\n      refTxHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameClaimEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimEvent\",\n    modelProperties: {\n      txHash: {\n        constraints: {\n          Pattern: new RegExp(\"^th_\\\\w{38,50}$\"),\n        },\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } },\n        },\n      },\n    },\n  },\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responderAmount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      channelReserve: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      lockPeriod: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\",\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      responderAmountFinal: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\",\n            },\n          },\n        },\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      round: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      queryFee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      amount: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      vmVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\"),\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      abiVersion: {\n        constraints: {\n          InclusiveMaximum: 65535,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gasPrice: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      ttl: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"ttl\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      fee: {\n        constraints: {\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          // @ts-expect-error we are extending autorest with BigInt support\n          name: \"BigInt\",\n        },\n      },\n      nonce: {\n        constraints: {\n          InclusiveMaximum: 18446744073709552000,\n          InclusiveMinimum: 0,\n        },\n        serializedName: \"nonce\",\n        type: {\n          name: \"Number\",\n        },\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\",\n        },\n      },\n    },\n  },\n};\n\nexport const Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsBx0Ya3V3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PaginatedResponse.type.modelProperties,\n        ...PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1\n          .type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths10R8Q7PV3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths16G4GzrV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsA60QxwV3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PaginatedResponse.type.modelProperties,\n        ...Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1\n          .type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1F8GzwrV3HyperchainEpochsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths7W5O80V3HyperchainScheduleGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Qg7SclV3HyperchainValidatorsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths7Ks32NV3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsDwhnfdV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsFso5IiV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Fl1Lh2V3StatsAex9TransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1A27TirV3StatsBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths72Dp44V3StatsContractsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1J83O75V3StatsDeltaGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1Qw6KhfV3StatsDifficultyGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1IskjkV3StatsHashrateGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths50Qhc7V3StatsMinersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsD92Xl6V3StatsNamesGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths1K55ZdgV3StatsTotalGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths3Bfys0V3StatsTotalAccountsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...Paths6PaqluV3StatsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsI72FylV3TransactionsPendingGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper =\n  {\n    type: {\n      name: \"Composite\",\n      className:\n        \"PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema\",\n      modelProperties: {\n        ...PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0\n          .type.modelProperties,\n        ...PaginatedResponse.type.modelProperties,\n      },\n    },\n  };\n\nexport const AuctionLastBidTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionLastBidTx\",\n    modelProperties: {\n      ...NameClaimTx.type.modelProperties,\n      ...Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1.type\n        .modelProperties,\n    },\n  },\n};\n\nexport const KeyBlockExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlockExtended\",\n    modelProperties: {\n      ...KeyBlock.type.modelProperties,\n      beneficiaryReward: {\n        serializedName: \"beneficiary_reward\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      flags: {\n        constraints: {\n          Pattern: new RegExp(\"^ba_\\\\w+$\"),\n        },\n        serializedName: \"flags\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n      microBlocksCount: {\n        serializedName: \"micro_blocks_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n    },\n  },\n};\n\nexport const MicroBlockExtended: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockExtended\",\n    modelProperties: {\n      ...MicroBlockHeader.type.modelProperties,\n      microBlockIndex: {\n        serializedName: \"micro_block_index\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"Number\",\n        },\n      },\n      flags: {\n        constraints: {\n          Pattern: new RegExp(\"^ba_\\\\w+$\"),\n        },\n        serializedName: \"flags\",\n        required: true,\n        type: {\n          name: \"String\",\n        },\n      },\n    },\n  },\n};\n\nexport const NameTxTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTxTx\",\n    modelProperties: {\n      ...NameRevokeTx.type.modelProperties,\n      ...Components171VsjiSchemasNametxPropertiesTxAllof1.type.modelProperties,\n    },\n  },\n};\n\nexport const OracleTxTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleTxTx\",\n    modelProperties: {\n      ...OracleRegisterTx.type.modelProperties,\n      ...Components1Viuqa3SchemasOracletxPropertiesTxAllof1.type\n        .modelProperties,\n    },\n  },\n};\n\nexport let discriminators = {\n  \"OffChainUpdate.OffChainUpdate\": OffChainUpdate,\n};\n","import { createSerializer } from \"../../utils/autorest.js\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters.js\";\nimport * as Mappers from \"./models/mappers.js\";\nimport {\n  MiddlewareOptionalParams,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAccountDexSwapsOptionalParams,\n  GetAccountDexSwapsResponse,\n  GetAccountNameClaimsOptionalParams,\n  GetAccountNameClaimsResponse,\n  GetAccountPointeesOptionalParams,\n  GetAccountPointeesResponse,\n  GetAccountTransactionsCountOptionalParams,\n  GetAccountTransactionsCountResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ContractTokensOptionalParams,\n  GetAex141ContractTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractTransfersOptionalParams,\n  GetAex141ContractTransfersResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractCallsOptionalParams,\n  GetContractCallsResponse,\n  GetContractLogsOptionalParams,\n  GetContractLogsResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetDexSwapsOptionalParams,\n  GetDexSwapsResponse,\n  GetDexSwapsByContractIdOptionalParams,\n  GetDexSwapsByContractIdResponse,\n  GetEpochsOptionalParams,\n  GetEpochsResponse,\n  GetEpochTopOptionalParams,\n  GetEpochTopResponse,\n  GetSchedulesOptionalParams,\n  GetSchedulesResponse,\n  GetScheduleOptionalParams,\n  GetScheduleResponse,\n  GetValidatorsOptionalParams,\n  GetValidatorsResponse,\n  GetValidatorOptionalParams,\n  GetValidatorResponse,\n  GetValidatorDelegatesOptionalParams,\n  GetValidatorDelegatesResponse,\n  GetTopValidatorDelegatesOptionalParams,\n  GetTopValidatorDelegatesResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameAuctionClaimsOptionalParams,\n  GetNameAuctionClaimsResponse,\n  GetNamesCountOptionalParams,\n  GetNamesCountResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOracleExtendsOptionalParams,\n  GetOracleExtendsResponse,\n  GetOracleQueriesOptionalParams,\n  GetOracleQueriesResponse,\n  GetOracleResponsesOptionalParams,\n  GetOracleResponsesResponse,\n  GetStatsOptionalParams,\n  GetStatsResponse,\n  GetActiveAccountsStatsOptionalParams,\n  GetActiveAccountsStatsResponse,\n  GetAex9TransfersStatsOptionalParams,\n  GetAex9TransfersStatsResponse,\n  GetBlocksStatsOptionalParams,\n  GetBlocksStatsResponse,\n  GetContractsStatsOptionalParams,\n  GetContractsStatsResponse,\n  GetDeltaStatsOptionalParams,\n  GetDeltaStatsResponse,\n  GetDifficultyStatsOptionalParams,\n  GetDifficultyStatsResponse,\n  GetHashrateStatsOptionalParams,\n  GetHashrateStatsResponse,\n  GetMinerStatsOptionalParams,\n  GetMinerStatsResponse,\n  GetNamesStatsOptionalParams,\n  GetNamesStatsResponse,\n  GetTotalStatsOptionalParams,\n  GetTotalStatsResponse,\n  GetTotalAccountsStatsOptionalParams,\n  GetTotalAccountsStatsResponse,\n  GetTransactionsStatsOptionalParams,\n  GetTransactionsStatsResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTransactionsOptionalParams,\n  GetTransactionsResponse,\n  GetTransactionsCountOptionalParams,\n  GetTransactionsCountResponse,\n  GetPendingTransactionsOptionalParams,\n  GetPendingTransactionsResponse,\n  GetPendingTransactionsCountOptionalParams,\n  GetPendingTransactionsCountResponse,\n  GetTransactionOptionalParams,\n  GetTransactionResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n} from \"./models/index.js\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  readonly $host: string;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix,\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\",\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account activities.\n   * @param accountId The account address Account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    accountId: `ak_${string}`,\n    options?: GetAccountActivitiesOptionalParams,\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountActivitiesOperationSpec,\n    );\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: `ak_${string}`,\n    options?: GetAex141OwnedTokensOptionalParams,\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: `ak_${string}`,\n    options?: GetAex9AccountBalancesOptionalParams,\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param accountId The account id Account address\n   * @param options The options parameters.\n   */\n  getAccountDexSwaps(\n    accountId: `ak_${string}`,\n    options?: GetAccountDexSwapsOptionalParams,\n  ): Promise<GetAccountDexSwapsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountDexSwapsOperationSpec,\n    );\n  }\n\n  /**\n   * Get all name claims of an account\n   * @param accountId The account that made the claims Account address\n   * @param options The options parameters.\n   */\n  getAccountNameClaims(\n    accountId: `ak_${string}`,\n    options?: GetAccountNameClaimsOptionalParams,\n  ): Promise<GetAccountNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get account pointees\n   * @param accountId The account that names point to Account address\n   * @param options The options parameters.\n   */\n  getAccountPointees(\n    accountId: `ak_${string}`,\n    options?: GetAccountPointeesOptionalParams,\n  ): Promise<GetAccountPointeesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountPointeesOperationSpec,\n    );\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param accountId The ID of the address/name/oracle/etc Account address\n   * @param options The options parameters.\n   */\n  getAccountTransactionsCount(\n    accountId: `ak_${string}`,\n    options?: GetAccountTransactionsCountOptionalParams,\n  ): Promise<GetAccountTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAccountTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams,\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec,\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTemplatesOptionalParams,\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id Contract address\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: `ct_${string}`,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams,\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTokens(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTokensOptionalParams,\n  ): Promise<GetAex141ContractTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id Contract address\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: `ct_${string}`,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams,\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX-141 transfers on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ContractTransfers(\n    contractId: `ct_${string}`,\n    options?: GetAex141ContractTransfersOptionalParams,\n  ): Promise<GetAex141ContractTransfersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: `ct_${string}`,\n    options?: GetAex141ByContractOptionalParams,\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by creation time, name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams,\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams,\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: `ct_${string}`,\n    options?: GetAex9ContractBalancesOptionalParams,\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id Contract address\n   * @param accountId Account id Account address\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: `ct_${string}`,\n    accountId: `ak_${string}`,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams,\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec,\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id Contract address\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: `ct_${string}`,\n    options?: GetAex9ByContractOptionalParams,\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams,\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel Channel ID\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: `ch_${string}`,\n    options?: GetChannelOptionalParams,\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractCalls(\n    options?: GetContractCallsOptionalParams,\n  ): Promise<GetContractCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractCallsOperationSpec,\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractLogs(\n    options?: GetContractLogsOptionalParams,\n  ): Promise<GetContractLogsResponse> {\n    return this.sendOperationRequest({ options }, getContractLogsOperationSpec);\n  }\n\n  /**\n   * Gets contract creation info.\n   * @param id Contract that emitted the logs Contract address\n   * @param options The options parameters.\n   */\n  getContract(\n    id: `ct_${string}`,\n    options?: GetContractOptionalParams,\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest({ id, options }, getContractOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param options The options parameters.\n   */\n  getDexSwaps(\n    options?: GetDexSwapsOptionalParams,\n  ): Promise<GetDexSwapsResponse> {\n    return this.sendOperationRequest({ options }, getDexSwapsOperationSpec);\n  }\n\n  /**\n   * Get DEX swap tokens\n   * @param contractId The contract id Contract address\n   * @param options The options parameters.\n   */\n  getDexSwapsByContractId(\n    contractId: `ct_${string}`,\n    options?: GetDexSwapsByContractIdOptionalParams,\n  ): Promise<GetDexSwapsByContractIdResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getDexSwapsByContractIdOperationSpec,\n    );\n  }\n\n  /**\n   * Get Epoch information\n   * @param options The options parameters.\n   */\n  getEpochs(options?: GetEpochsOptionalParams): Promise<GetEpochsResponse> {\n    return this.sendOperationRequest({ options }, getEpochsOperationSpec);\n  }\n\n  /**\n   * Get Top Epoch information\n   * @param options The options parameters.\n   */\n  getEpochTop(\n    options?: GetEpochTopOptionalParams,\n  ): Promise<GetEpochTopResponse> {\n    return this.sendOperationRequest({ options }, getEpochTopOperationSpec);\n  }\n\n  /**\n   * Get Schedule information\n   * @param options The options parameters.\n   */\n  getSchedules(\n    options?: GetSchedulesOptionalParams,\n  ): Promise<GetSchedulesResponse> {\n    return this.sendOperationRequest({ options }, getSchedulesOperationSpec);\n  }\n\n  /**\n   * Get Schedule information\n   * @param height Schedule height\n   * @param options The options parameters.\n   */\n  getSchedule(\n    height: number,\n    options?: GetScheduleOptionalParams,\n  ): Promise<GetScheduleResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getScheduleOperationSpec,\n    );\n  }\n\n  /**\n   * Get Validators information\n   * @param options The options parameters.\n   */\n  getValidators(\n    options?: GetValidatorsOptionalParams,\n  ): Promise<GetValidatorsResponse> {\n    return this.sendOperationRequest({ options }, getValidatorsOperationSpec);\n  }\n\n  /**\n   * Get Validator information\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getValidator(\n    validator: `ak_${string}`,\n    options?: GetValidatorOptionalParams,\n  ): Promise<GetValidatorResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getValidatorOperationSpec,\n    );\n  }\n\n  /**\n   * Get Delegates information for validator\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getValidatorDelegates(\n    validator: `ak_${string}`,\n    options?: GetValidatorDelegatesOptionalParams,\n  ): Promise<GetValidatorDelegatesResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getValidatorDelegatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get top Delegates information for validator\n   * @param validator Validator address Account address\n   * @param options The options parameters.\n   */\n  getTopValidatorDelegates(\n    validator: `ak_${string}`,\n    options?: GetTopValidatorDelegatesOptionalParams,\n  ): Promise<GetTopValidatorDelegatesResponse> {\n    return this.sendOperationRequest(\n      { validator, options },\n      getTopValidatorDelegatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams,\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockOptionalParams,\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index \n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: `kh_${string}` | number,\n    options?: GetKeyBlockMicroBlocksOptionalParams,\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockOptionalParams,\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec,\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash Micro block hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: `mh_${string}`,\n    options?: GetMicroBlockTransactionsOptionalParams,\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams,\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionOptionalParams,\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec,\n    );\n  }\n\n  /**\n   * Get name auction claims\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getNameAuctionClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameAuctionClaimsOptionalParams,\n  ): Promise<GetNameAuctionClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get the total number of active names.\n   * @param options The options parameters.\n   */\n  getNamesCount(\n    options?: GetNamesCountOptionalParams,\n  ): Promise<GetNamesCountResponse> {\n    return this.sendOperationRequest({ options }, getNamesCountOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name \n   * @param options The options parameters.\n   */\n  getName(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameOptionalParams,\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameClaimsOptionalParams,\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec,\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameTransfersOptionalParams,\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec,\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash \n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: `${string}.chain` | `nm_${string}`,\n    options?: GetNameUpdatesOptionalParams,\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: `ok_${string}`,\n    options?: GetOracleOptionalParams,\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get an oracle's extensions.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleExtends(\n    id: `ok_${string}`,\n    options?: GetOracleExtendsOptionalParams,\n  ): Promise<GetOracleExtendsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleExtendsOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's queries.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleQueries(\n    id: `ok_${string}`,\n    options?: GetOracleQueriesOptionalParams,\n  ): Promise<GetOracleQueriesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleQueriesOperationSpec,\n    );\n  }\n\n  /**\n   * Get an oracle's responses.\n   * @param id The oracle Oracle address\n   * @param options The options parameters.\n   */\n  getOracleResponses(\n    id: `ok_${string}`,\n    options?: GetOracleResponsesOptionalParams,\n  ): Promise<GetOracleResponsesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getOracleResponsesOperationSpec,\n    );\n  }\n\n  /**\n   * Get stats.\n   * @param options The options parameters.\n   */\n  getStats(options?: GetStatsOptionalParams): Promise<GetStatsResponse> {\n    return this.sendOperationRequest({ options }, getStatsOperationSpec);\n  }\n\n  /**\n   * Get active accounts stats.\n   * @param options The options parameters.\n   */\n  getActiveAccountsStats(\n    options?: GetActiveAccountsStatsOptionalParams,\n  ): Promise<GetActiveAccountsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getActiveAccountsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total AEx9 token transfers.\n   * @param options The options parameters.\n   */\n  getAex9TransfersStats(\n    options?: GetAex9TransfersStatsOptionalParams,\n  ): Promise<GetAex9TransfersStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TransfersStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total blocks count stats.\n   * @param options The options parameters.\n   */\n  getBlocksStats(\n    options?: GetBlocksStatsOptionalParams,\n  ): Promise<GetBlocksStatsResponse> {\n    return this.sendOperationRequest({ options }, getBlocksStatsOperationSpec);\n  }\n\n  /**\n   * Get the created contracts count per interval.\n   * @param options The options parameters.\n   */\n  getContractsStats(\n    options?: GetContractsStatsOptionalParams,\n  ): Promise<GetContractsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltaStats(\n    options?: GetDeltaStatsOptionalParams,\n  ): Promise<GetDeltaStatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltaStatsOperationSpec);\n  }\n\n  /**\n   * Get total blocks difficulty stats.\n   * @param options The options parameters.\n   */\n  getDifficultyStats(\n    options?: GetDifficultyStatsOptionalParams,\n  ): Promise<GetDifficultyStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getDifficultyStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total blocks hashrate stats.\n   * @param options The options parameters.\n   */\n  getHashrateStats(\n    options?: GetHashrateStatsOptionalParams,\n  ): Promise<GetHashrateStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getHashrateStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get miners list with total rewards obtained through mining.\n   * @param options The options parameters.\n   */\n  getMinerStats(\n    options?: GetMinerStatsOptionalParams,\n  ): Promise<GetMinerStatsResponse> {\n    return this.sendOperationRequest({ options }, getMinerStatsOperationSpec);\n  }\n\n  /**\n   * Get total names count stats.\n   * @param options The options parameters.\n   */\n  getNamesStats(\n    options?: GetNamesStatsOptionalParams,\n  ): Promise<GetNamesStatsResponse> {\n    return this.sendOperationRequest({ options }, getNamesStatsOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalStats(\n    options?: GetTotalStatsOptionalParams,\n  ): Promise<GetTotalStatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalStatsOperationSpec);\n  }\n\n  /**\n   * Get total accounts created per interval stats.\n   * @param options The options parameters.\n   */\n  getTotalAccountsStats(\n    options?: GetTotalAccountsStatsOptionalParams,\n  ): Promise<GetTotalAccountsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTotalAccountsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Get total transactions count stats.\n   * @param options The options parameters.\n   */\n  getTransactionsStats(\n    options?: GetTransactionsStatsOptionalParams,\n  ): Promise<GetTransactionsStatsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsStatsOperationSpec,\n    );\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTransactions(\n    options?: GetTransactionsOptionalParams,\n  ): Promise<GetTransactionsResponse> {\n    return this.sendOperationRequest({ options }, getTransactionsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTransactionsCount(\n    options?: GetTransactionsCountOptionalParams,\n  ): Promise<GetTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get pending transactions.\n   * @param options The options parameters.\n   */\n  getPendingTransactions(\n    options?: GetPendingTransactionsOptionalParams,\n  ): Promise<GetPendingTransactionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingTransactionsOperationSpec,\n    );\n  }\n\n  /**\n   * Get count of pending transactions.\n   * @param options The options parameters.\n   */\n  getPendingTransactionsCount(\n    options?: GetPendingTransactionsCountOptionalParams,\n  ): Promise<GetPendingTransactionsCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingTransactionsCountOperationSpec,\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hash The transaction encoded hash Transaction hash\n   * @param options The options parameters.\n   */\n  getTransaction(\n    hash: `th_${string}`,\n    options?: GetTransactionOptionalParams,\n  ): Promise<GetTransactionResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionOperationSpec,\n    );\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams,\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.ownedOnly,\n    Parameters.typeParam,\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex141/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction1,\n    Parameters.contract,\n  ],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/aex9/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction2],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/names/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction3],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountPointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/names/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAccountTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{accountId}/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction4,\n    Parameters.by,\n    Parameters.prefix,\n    Parameters.exact,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction5],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction6],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction7],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/tokens/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141TokenDetailResponse,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ContractTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{contractId}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction8,\n    Parameters.fromParam,\n    Parameters.to,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.exact,\n    Parameters.direction9,\n    Parameters.by1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction10,\n    Parameters.by2,\n    Parameters.blockHash,\n  ],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId,\n  ],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec =\n  {\n    path: \"/v3/aex9/{contractId}/balances/{accountId}/history\",\n    httpMethod: \"GET\",\n    responses: {\n      200: {\n        bodyMapper:\n          Mappers.Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema,\n      },\n      400: {\n        bodyMapper: Mappers.ErrorResponse,\n        isError: true,\n      },\n    },\n    queryParameters: [\n      Parameters.limit,\n      Parameters.scope,\n      Parameters.direction11,\n    ],\n    urlParameters: [\n      Parameters.$host,\n      Parameters.accountId,\n      Parameters.contractId,\n    ],\n    headerParameters: [Parameters.accept],\n    serializer,\n  };\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction12,\n    Parameters.state,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction13],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionParam,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs,\n    Parameters.direction14,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Contract,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction15],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDexSwapsByContractIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dex/{contract_id}/swaps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.direction16],\n  urlParameters: [Parameters.$host, Parameters.contractId2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getEpochsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/epochs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction17,\n    Parameters.scope1,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getEpochTopOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/epochs/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EpochInfo,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getSchedulesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/schedule\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction18,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getScheduleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/schedule/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Schedule,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction19,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Validator,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getValidatorDelegatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}/delegates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction20,\n  ],\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTopValidatorDelegatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/hyperchain/validators/{validator}/delegates/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope1,\n    Parameters.direction21,\n  ],\n  urlParameters: [Parameters.$host, Parameters.validator],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction22],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlockExtended,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction23],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockExtended,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.prefix,\n    Parameters.by2,\n    Parameters.ownedBy,\n    Parameters.state1,\n    Parameters.direction24,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction25],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction26],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameAuctionClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/auctions/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction27],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.ownedBy],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction28],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction29],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction30],\n  urlParameters: [Parameters.$host, Parameters.id2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.state1,\n    Parameters.direction31,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleExtendsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/extends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleQueriesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getOracleResponsesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{id}/responses\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.id3],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Stats,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getActiveAccountsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/active-accounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy,\n    Parameters.direction32,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getAex9TransfersStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/aex9-transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy1,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.direction33,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getBlocksStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy2,\n    Parameters.typeParam1,\n    Parameters.direction34,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getContractsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/contracts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy3,\n    Parameters.direction35,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDeltaStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/delta\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction36],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getDifficultyStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/difficulty\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy4,\n    Parameters.direction37,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getHashrateStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/hashrate\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy5,\n    Parameters.direction38,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getMinerStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/miners\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction39],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getNamesStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy6,\n    Parameters.direction40,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/total\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction41],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTotalAccountsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/total-accounts\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.intervalBy7,\n    Parameters.direction42,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsStatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/stats/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.minStartDate,\n    Parameters.maxStartDate,\n    Parameters.intervalBy8,\n    Parameters.txType,\n    Parameters.direction43,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.contract,\n    Parameters.typeParam2,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint,\n    Parameters.scope2,\n    Parameters.direction44,\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id4],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.direction45],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getPendingTransactionsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/pending/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } },\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Transaction,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true,\n    },\n  },\n  urlParameters: [Parameters.$host, Parameters.hash2],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema,\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true,\n    },\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction46],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer,\n};\n\nexport const operationSpecs = [\n  getAccountActivitiesOperationSpec,\n  getAex141OwnedTokensOperationSpec,\n  getAex9AccountBalancesOperationSpec,\n  getAccountDexSwapsOperationSpec,\n  getAccountNameClaimsOperationSpec,\n  getAccountPointeesOperationSpec,\n  getAccountTransactionsCountOperationSpec,\n  getSortedAex141ContractsOperationSpec,\n  getAex141ContractTemplatesOperationSpec,\n  getAex141TemplateTokensOperationSpec,\n  getAex141ContractTokensOperationSpec,\n  getAex141TokenOwnerOperationSpec,\n  getAex141ContractTransfersOperationSpec,\n  getAex141ByContractOperationSpec,\n  getSortedAex9TokensOperationSpec,\n  getAex9TokensCountOperationSpec,\n  getAex9ContractBalancesOperationSpec,\n  getAex9ContractAccountBalanceOperationSpec,\n  getAex9ByContractOperationSpec,\n  getChannelsOperationSpec,\n  getChannelOperationSpec,\n  getContractCallsOperationSpec,\n  getContractLogsOperationSpec,\n  getContractOperationSpec,\n  getDexSwapsOperationSpec,\n  getDexSwapsByContractIdOperationSpec,\n  getEpochsOperationSpec,\n  getEpochTopOperationSpec,\n  getSchedulesOperationSpec,\n  getScheduleOperationSpec,\n  getValidatorsOperationSpec,\n  getValidatorOperationSpec,\n  getValidatorDelegatesOperationSpec,\n  getTopValidatorDelegatesOperationSpec,\n  getKeyBlocksOperationSpec,\n  getKeyBlockOperationSpec,\n  getKeyBlockMicroBlocksOperationSpec,\n  getMicroBlockOperationSpec,\n  getMicroBlockTransactionsOperationSpec,\n  getNamesOperationSpec,\n  getNamesAuctionsOperationSpec,\n  getNameAuctionOperationSpec,\n  getNameAuctionClaimsOperationSpec,\n  getNamesCountOperationSpec,\n  getNameOperationSpec,\n  getNameClaimsOperationSpec,\n  getNameTransfersOperationSpec,\n  getNameUpdatesOperationSpec,\n  getOraclesOperationSpec,\n  getOracleOperationSpec,\n  getOracleExtendsOperationSpec,\n  getOracleQueriesOperationSpec,\n  getOracleResponsesOperationSpec,\n  getStatsOperationSpec,\n  getActiveAccountsStatsOperationSpec,\n  getAex9TransfersStatsOperationSpec,\n  getBlocksStatsOperationSpec,\n  getContractsStatsOperationSpec,\n  getDeltaStatsOperationSpec,\n  getDifficultyStatsOperationSpec,\n  getHashrateStatsOperationSpec,\n  getMinerStatsOperationSpec,\n  getNamesStatsOperationSpec,\n  getTotalStatsOperationSpec,\n  getTotalAccountsStatsOperationSpec,\n  getTransactionsStatsOperationSpec,\n  getStatusOperationSpec,\n  getTransactionsOperationSpec,\n  getTransactionsCountOperationSpec,\n  getPendingTransactionsOperationSpec,\n  getPendingTransactionsCountOperationSpec,\n  getTransactionOperationSpec,\n  getTransfersOperationSpec,\n] as const;\n","/* eslint-disable max-classes-per-file */\nimport type Middleware from '../Middleware.js';\nimport { BaseError } from './errors.js';\n\ninterface MiddlewareRawPage<T = unknown> {\n  data: T[];\n  next: string | null;\n  prev: string | null;\n}\n\nexport function isMiddlewareRawPage(maybePage: unknown): maybePage is MiddlewareRawPage {\n  const testPage = maybePage as MiddlewareRawPage;\n  return (\n    testPage?.data != null &&\n    Array.isArray(testPage.data) &&\n    'next' in testPage &&\n    'prev' in testPage\n  );\n}\n\n/**\n * @category exception\n */\nexport class MiddlewarePageMissed extends BaseError {\n  constructor(isNext: boolean) {\n    super(`There is no ${isNext ? 'next' : 'previous'} page`);\n    this.name = 'MiddlewarePageMissed';\n  }\n}\n\n/**\n * A wrapper around the middleware's page allowing to get the next/previous pages.\n */\nexport class MiddlewarePage<Item> {\n  readonly data: Item[];\n\n  readonly nextPath: null | string;\n\n  readonly prevPath: null | string;\n\n  readonly #middleware: Middleware;\n\n  constructor(rawPage: MiddlewareRawPage<Item>, middleware: Middleware) {\n    this.data = rawPage.data;\n    this.nextPath = rawPage.next;\n    this.prevPath = rawPage.prev;\n    this.#middleware = middleware;\n  }\n\n  /**\n   * Get the next page.\n   * Check the presence of `nextPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async next(): Promise<MiddlewarePage<Item>> {\n    if (this.nextPath == null) throw new MiddlewarePageMissed(true);\n    return this.#middleware.requestByPath(this.nextPath);\n  }\n\n  /**\n   * Get the previous page.\n   * Check the presence of `prevPath` to not fall outside existing pages.\n   * @throws MiddlewarePageMissed\n   */\n  async prev(): Promise<MiddlewarePage<Item>> {\n    if (this.prevPath == null) throw new MiddlewarePageMissed(false);\n    return this.#middleware.requestByPath(this.prevPath);\n  }\n}\n","import { OperationArguments, OperationOptions, OperationSpec } from '@azure/core-client';\nimport { userAgentPolicyName, setClientRequestIdPolicyName } from '@azure/core-rest-pipeline';\nimport {\n  genRequestQueuesPolicy,\n  genCombineGetRequestsPolicy,\n  genErrorFormatterPolicy,\n  parseBigIntPolicy,\n  genVersionCheckPolicy,\n  genRetryOnFailurePolicy,\n} from './utils/autorest.js';\nimport {\n  Middleware as MiddlewareApi,\n  MiddlewareOptionalParams,\n  ErrorResponse,\n} from './apis/middleware/index.js';\nimport { operationSpecs } from './apis/middleware/middleware.js';\nimport { IllegalArgumentError, InternalError } from './utils/errors.js';\nimport { MiddlewarePage, isMiddlewareRawPage } from './utils/MiddlewarePage.js';\n\n/**\n * @category middleware\n */\nexport default class Middleware extends MiddlewareApi {\n  /**\n   * @param url - Url for middleware API\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if middleware\n   * is not supported, use with caution\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false,\n      retryCount = 3,\n      retryOverallDelay = 800,\n      ...options\n    }: MiddlewareOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    let version: string | undefined;\n    const getVersion = async (opts: OperationOptions): Promise<string> => {\n      if (version != null) return version;\n      version = (await this.getStatus(opts)).mdwVersion;\n      return version;\n    };\n\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genVersionCheckPolicy('middleware', getVersion, '1.81.0', '2.0.0', ignoreVersion),\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorResponse) => ` ${body.error}`),\n      ],\n      ...options,\n    });\n    this.pipeline.addPolicy(parseBigIntPolicy, { phase: 'Deserialize' });\n    this.pipeline.removePolicy({ name: userAgentPolicyName });\n    this.pipeline.removePolicy({ name: setClientRequestIdPolicyName });\n    // TODO: use instead our retry policy\n    this.pipeline.removePolicy({ name: 'defaultRetryPolicy' });\n  }\n\n  /**\n   * Get a middleware response by path instead of a method name and arguments.\n   * @param pathWithQuery - a path to request starting with `/v3/`\n   */\n  async requestByPath<Response = unknown>(pathWithQuery: string): Promise<Response> {\n    const queryPos = pathWithQuery.indexOf('?');\n    const path = pathWithQuery.slice(0, queryPos === -1 ? pathWithQuery.length : queryPos);\n    const query = pathWithQuery.slice(queryPos === -1 ? pathWithQuery.length : queryPos + 1);\n\n    const operationSpec = operationSpecs.find((os) => {\n      let p = path;\n      if (os.path == null) return false;\n      const groups = os.path.replace(/{\\w+}/g, '{param}').split('{param}');\n      while (groups.length > 0) {\n        const part = groups.shift();\n        if (part == null) throw new InternalError(`Unexpected operation spec path: ${os.path}`);\n        if (!p.startsWith(part)) return false;\n        p = p.replace(part, '');\n        if (groups.length > 0) p = p.replace(/^[\\w.]+/, '');\n      }\n      return p === '';\n    });\n    if (operationSpec == null) {\n      throw new IllegalArgumentError(`Can't find operation spec corresponding to ${path}`);\n    }\n\n    return this.sendOperationRequest(\n      {},\n      {\n        ...operationSpec,\n        path,\n        urlParameters: operationSpec.urlParameters?.filter(\n          ({ parameterPath }) => parameterPath === '$host',\n        ),\n        queryParameters: Array.from(new URLSearchParams(query)).map(([key, value]) => ({\n          parameterPath: ['options', key],\n          mapper: {\n            defaultValue: value.toString(),\n            serializedName: key,\n            type: {\n              name: 'String',\n            },\n          },\n        })),\n      },\n    );\n  }\n\n  override async sendOperationRequest<T>(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<T> {\n    const response = await super.sendOperationRequest(operationArguments, operationSpec);\n    if (!isMiddlewareRawPage(response)) return response as T;\n    return new MiddlewarePage(response, this) as T;\n  }\n}\n","import BrowserConnection from './connection/Browser.js';\n\n/**\n * Browser connection proxy\n * Provide functionality to easily forward messages from one connection to another and back\n * @category aepp wallet communication\n * @param con1 - first connection\n * @param con2 - second connection\n * @returns a function to stop proxying\n */\nexport default (con1: BrowserConnection, con2: BrowserConnection): (() => void) => {\n  con1.connect(\n    (msg: any) => con2.sendMessage(msg),\n    () => con2.disconnect(),\n  );\n  con2.connect(\n    (msg: any) => con1.sendMessage(msg),\n    () => con1.disconnect(),\n  );\n\n  return () => {\n    con1.disconnect();\n    con2.disconnect();\n  };\n};\n","import { AlreadyConnectedError, NoWalletConnectedError } from '../../utils/errors.js';\n\n/**\n * Browser connection base interface\n * @category aepp wallet communication\n */\nexport default abstract class BrowserConnection {\n  debug: boolean;\n\n  protected constructor({ debug = false }: { debug?: boolean }) {\n    this.debug = debug;\n  }\n\n  /**\n   * Connect\n   * @param onMessage - Message handler\n   * @param onDisconnect - trigger when runtime connection in closed\n   */\n  connect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMessage: (message: any, origin: string, source: any) => void,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDisconnect: () => void,\n  ): void {\n    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n  }\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void {\n    if (!this.isConnected())\n      throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  }\n\n  /**\n   * Receive message\n   */\n  protected receiveMessage(message: any): void {\n    if (this.debug) console.log('Receive message:', message);\n  }\n\n  /**\n   * Send message\n   */\n  sendMessage(message: any): void {\n    if (this.debug) console.log('Send message:', message);\n  }\n\n  /**\n   * Check if connected\n   * @returns Is connected\n   */\n  abstract isConnected(): boolean;\n}\n","import BrowserConnection from './Browser.js';\nimport { MESSAGE_DIRECTION } from '../schema.js';\nimport { InternalError, RpcConnectionError } from '../../utils/errors.js';\n\nexport type ImplPostMessage = Pick<\n  Window,\n  'addEventListener' | 'removeEventListener' | 'postMessage'\n>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  readonly #target?: ImplPostMessage;\n\n  readonly #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object' ||\n        (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      )\n        return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  override sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError(\"Can't send messages without target\");\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n","import BrowserConnection from './connection/Browser.js';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage.js';\nimport { MESSAGE_DIRECTION, METHODS } from './schema.js';\nimport { WalletInfo } from './rpc/types.js';\nimport { UnsupportedPlatformError } from '../utils/errors.js';\n\ninterface Wallet {\n  info: WalletInfo;\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets {\n  [key: string]: Wallet;\n}\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet: Wallet }) => void,\n): (() => void) => {\n  if (window == null)\n    throw new UnsupportedPlatformError(\n      'Window object not found, you can run wallet detector only in browser',\n    );\n  const wallets: Wallets = {};\n\n  connection.connect(\n    (\n      { method, params }: { method: string; params: WalletInfo },\n      origin: string,\n      source: Window,\n    ) => {\n      if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n      const wallet = {\n        info: params,\n        getConnection() {\n          return new BrowserWindowMessageConnection({\n            target: source,\n            ...(params.type === 'extension'\n              ? {\n                  sendDirection: MESSAGE_DIRECTION.to_waellet,\n                  receiveDirection: MESSAGE_DIRECTION.to_aepp,\n                  ...(window.origin !== 'null' && { origin: window.origin }),\n                }\n              : {\n                  origin: params.origin,\n                }),\n          });\n        },\n      };\n      wallets[wallet.info.id] = wallet;\n      onDetected({ wallets, newWallet: wallet });\n    },\n    () => {},\n  );\n\n  return () => connection.disconnect();\n};\n","import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser.js';\nimport { UnexpectedTsError } from '../../utils/errors.js';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  /**\n   * @param options - Options\n   */\n  constructor({ port, ...options }: { port: Runtime.Port; debug?: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n","export {\n  _getPollInterval,\n  getHeight,\n  poll,\n  awaitHeight,\n  waitForTxConfirm,\n  getAccount,\n  getBalance,\n  getCurrentGeneration,\n  getGeneration,\n  getMicroBlockTransactions,\n  getKeyBlock,\n  getMicroBlockHeader,\n  txDryRun,\n  getContractByteCode,\n  getContract,\n  getName,\n  resolveName,\n} from './chain.js';\nexport { InvalidTxError, sendTransaction } from './send-transaction.js';\nexport {\n  isAddressValid,\n  ensureEncoded,\n  isEncoded,\n  genSalt,\n  encodeUnsigned,\n  hash,\n  verifySignature,\n  hashMessage,\n  verifyMessageSignature,\n} from './utils/crypto.js';\n/**\n * @category utils\n * @deprecated use {@link verifySignature} instead\n */\nexport { verifySignature as verify } from './utils/crypto.js';\n/**\n * @deprecated use {@link hashMessage} instead\n * @category utils\n */\nexport { hashMessage as messageToHash } from './utils/crypto.js';\n/**\n * @deprecated use {@link verifyMessageSignature} instead\n * @category utils\n */\nexport { verifyMessageSignature as verifyMessage } from './utils/crypto.js';\nexport { signJwt, unpackJwt, verifyJwt, isJwt, ensureJwt } from './utils/jwt.js';\nexport type { Jwt } from './utils/jwt.js';\nexport { toBytes } from './utils/bytes.js';\nexport {\n  buildTx,\n  buildTxAsync,\n  buildTxHash,\n  unpackTx,\n  buildContractIdByContractTx,\n} from './tx/builder/index.js';\nexport {\n  buildContractId,\n  oracleQueryId,\n  produceNameId,\n  commitmentHash,\n  readInt,\n  isName,\n  ensureName,\n  getDefaultPointerKey,\n  getMinimumNameFee,\n  computeBidFee,\n  computeAuctionEndBlock,\n  isAuctionName,\n} from './tx/builder/helpers.js';\n/**\n * @category contract\n * @deprecated use {@link buildContractId} instead\n */\nexport { buildContractId as encodeContractAddress } from './tx/builder/helpers.js';\n/**\n * @category AENS\n * @deprecated use {@link isName} instead\n */\nexport { isName as isNameValid } from './tx/builder/helpers.js';\nexport {\n  MAX_AUTH_FUN_GAS,\n  MIN_GAS_PRICE,\n  NAME_FEE_MULTIPLIER,\n  NAME_FEE_BID_INCREMENT,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_MAX_LENGTH_FEE,\n  NAME_BID_RANGES,\n  ConsensusProtocolVersion,\n  VmVersion,\n  AbiVersion,\n  Tag,\n  DRY_RUN_ACCOUNT,\n} from './tx/builder/constants.js';\nexport type { Int, AensName } from './tx/builder/constants.js';\n// TODO: move to constants\nexport { ORACLE_TTL_TYPES } from './tx/builder/schema.js';\nexport { DelegationTag } from './tx/builder/delegation/schema.js';\nexport { packDelegation, unpackDelegation } from './tx/builder/delegation/index.js';\nexport { EntryTag, CallReturnType } from './tx/builder/entry/constants.js';\nexport { packEntry, unpackEntry } from './tx/builder/entry/index.js';\nexport {\n  getExecutionCost,\n  getExecutionCostBySignedTx,\n  getExecutionCostUsingNode,\n} from './tx/execution-cost.js';\nexport { default as getTransactionSignerAddress } from './tx/transaction-signer.js';\nexport {\n  AE_AMOUNT_FORMATS,\n  formatAmount,\n  toAe,\n  toAettos,\n  prefixedAmount,\n} from './utils/amount-formatter.js';\nexport { encode, decode, Encoding, Encoded } from './utils/encoder.js';\nexport { hashTypedData, hashDomain, hashJson } from './utils/typed-data.js';\nexport { default as Name } from './aens.js';\nexport { default as Contract } from './contract/Contract.js';\nexport type { ContractMethodsBase } from './contract/Contract.js';\nexport { default as Oracle } from './oracle/Oracle.js';\nexport { default as OracleClient } from './oracle/OracleClient.js';\nexport { spend, transferFunds, payForTransaction } from './spend.js';\nexport {\n  createGeneralizedAccount,\n  buildAuthTxHash,\n  buildAuthTxHashByGaMetaTx,\n} from './contract/ga.js';\n\nexport { default as AeSdkMethods } from './AeSdkMethods.js';\nexport { default as AeSdkBase } from './AeSdkBase.js';\nexport { default as AeSdk } from './AeSdk.js';\nexport { default as AeSdkAepp } from './AeSdkAepp.js';\nexport { default as WalletConnectorFrame } from './aepp-wallet-communication/WalletConnectorFrame.js';\nexport { default as WalletConnectorFrameWithNode } from './aepp-wallet-communication/WalletConnectorFrameWithNode.js';\nexport { default as AeSdkWallet } from './AeSdkWallet.js';\nexport { default as Node } from './Node.js';\nexport { default as verifyTransaction } from './tx/validator.js';\nexport { default as AccountBase } from './account/Base.js';\nexport { default as AccountMemory } from './account/Memory.js';\n/**\n * @deprecated Use {@link AccountMemory} instead\n * @category account\n */\nexport { default as MemoryAccount } from './account/Memory.js';\nexport { default as AccountMnemonicFactory } from './account/MnemonicFactory.js';\nexport { default as AccountGeneralized } from './account/Generalized.js';\nexport { default as AccountLedger } from './account/Ledger.js';\nexport { default as AccountLedgerFactory } from './account/LedgerFactory.js';\nexport { default as AccountMetamask } from './account/Metamask.js';\nexport { default as AccountMetamaskFactory } from './account/MetamaskFactory.js';\nexport { default as CompilerBase } from './contract/compiler/Base.js';\nexport { default as CompilerHttp } from './contract/compiler/Http.js';\nexport { default as Channel } from './channel/Contract.js';\nexport {\n  default as MiddlewareSubscriber,\n  MiddlewareSubscriberError,\n  MiddlewareSubscriberDisconnected,\n} from './MiddlewareSubscriber.js';\nexport { default as Middleware } from './Middleware.js';\nexport { MiddlewarePageMissed } from './utils/MiddlewarePage.js';\n\nexport { default as connectionProxy } from './aepp-wallet-communication/connection-proxy.js';\nexport {\n  MESSAGE_DIRECTION,\n  WALLET_TYPE,\n  SUBSCRIPTION_TYPES,\n  METHODS,\n  RPC_STATUS,\n  RpcError,\n  RpcInvalidTransactionError,\n  RpcRejectedByUserError,\n  RpcUnsupportedProtocolError,\n  RpcConnectionDenyError,\n  RpcNotAuthorizeError,\n  RpcPermissionDenyError,\n  RpcInternalError,\n  RpcMethodNotFoundError,\n  RpcNoNetworkById,\n} from './aepp-wallet-communication/schema.js';\nexport { default as walletDetector } from './aepp-wallet-communication/wallet-detector.js';\nexport { default as BrowserRuntimeConnection } from './aepp-wallet-communication/connection/BrowserRuntime.js';\nexport { default as BrowserWindowMessageConnection } from './aepp-wallet-communication/connection/BrowserWindowMessage.js';\nexport {\n  BaseError,\n  AccountError,\n  AensError,\n  AeppError,\n  ChannelError,\n  CompilerError,\n  ContractError,\n  CryptographyError,\n  NodeError,\n  TransactionError,\n  WalletError,\n  ArgumentError,\n  IllegalArgumentError,\n  ArgumentCountMismatchError,\n  InsufficientBalanceError,\n  MissingParamError,\n  NoSerializerFoundError,\n  RequestTimedOutError,\n  TxTimedOutError,\n  TypeError,\n  UnsupportedPlatformError,\n  UnsupportedProtocolError,\n  NotImplementedError,\n  UnsupportedVersionError,\n  LogicError,\n  InternalError,\n  UnexpectedTsError,\n  UnavailableAccountError,\n  AensPointerContextError,\n  InsufficientNameFeeError,\n  InvalidAensNameError,\n  InvalidRpcMessageError,\n  MissingCallbackError,\n  UnAuthorizedAccountError,\n  UnknownRpcClientError,\n  UnsubscribedAccountError,\n  ChannelCallError,\n  ChannelConnectionError,\n  ChannelPingTimedOutError,\n  UnexpectedChannelMessageError,\n  ChannelIncomingMessageError,\n  UnknownChannelStateError,\n  InvalidAuthDataError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  InactiveContractError,\n  InvalidMethodInvocationError,\n  MissingContractAddressError,\n  MissingContractDefError,\n  MissingFunctionNameError,\n  NodeInvocationError,\n  NoSuchContractFunctionError,\n  NotPayableFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  InvalidChecksumError,\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownNodeLengthError,\n  UnknownPathNibbleError,\n  DuplicateNodeError,\n  NodeNotFoundError,\n  DecodeError,\n  PayloadLengthError,\n  DryRunError,\n  IllegalBidFeeError,\n  InvalidSignatureError,\n  PrefixNotFoundError,\n  SchemaNotFoundError,\n  TagNotFoundError,\n  TxNotInChainError,\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  RpcConnectionError,\n} from './utils/errors.js';\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"os\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","import { execFile } from 'child_process';\nimport { tmpdir } from 'os';\nimport { resolve, dirname, basename } from 'path';\nimport { mkdir, writeFile, rm } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport CompilerBase, { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport { CompilerError, InternalError, UnsupportedVersionError } from '../../utils/errors.js';\nimport semverSatisfies from '../../utils/semver-satisfies.js';\nimport { ensureError } from '../../utils/other.js';\n\nexport const getPackagePath = (): string => {\n  const path = dirname(fileURLToPath(import.meta.url));\n  if (basename(path) === 'dist') return resolve(path, '..');\n  if (basename(path) === 'compiler') return resolve(path, '../../..');\n  throw new InternalError(\"Can't get package path\");\n};\n\n/**\n * A wrapper around aesophia_cli, available only in Node.js.\n * Requires Erlang installed, assumes that `escript` is available in PATH.\n * @category contract\n */\nexport default class CompilerCli extends CompilerBase {\n  readonly #path: string;\n\n  readonly #ensureCompatibleVersion;\n\n  /**\n   * @param compilerPath - A path to aesophia_cli binary, by default uses the integrated one\n   * @param options - Options\n   * @param options.ignoreVersion - Print warning instead of throwing exception if compiler version\n   * is not supported, use with caution\n   */\n  constructor(\n    compilerPath = resolve(getPackagePath(), './bin/aesophia_cli'),\n    { ignoreVersion = false }: { ignoreVersion?: boolean } = {},\n  ) {\n    super();\n    this.#path = compilerPath;\n    this.#ensureCompatibleVersion = this.version().then((version) => {\n      const versions = [version, '8.0.0', '9.0.0'] as const;\n      if (!semverSatisfies(...versions)) {\n        const error = new UnsupportedVersionError('compiler', ...versions);\n        if (ignoreVersion) console.warn(error.message);\n        else throw error;\n      }\n    });\n  }\n\n  async #runWithStderr(...parameters: string[]): Promise<{ stderr: string; stdout: string }> {\n    return new Promise((pResolve, pReject) => {\n      execFile('escript', [this.#path, ...parameters], (error, stdout, stderr) => {\n        if (error != null) pReject(error);\n        else pResolve({ stdout, stderr });\n      });\n    });\n  }\n\n  async #run(...parameters: string[]): Promise<string> {\n    const { stderr, stdout } = await this.#runWithStderr(...parameters);\n    if (stderr !== '') throw new CompilerError(stderr);\n    return stdout;\n  }\n\n  static async #saveContractToTmpDir(\n    sourceCode: string,\n    fileSystem: Record<string, string> = {},\n  ): Promise<string> {\n    const randomName = (): string => Math.random().toString(36).slice(2);\n    const path = resolve(tmpdir(), `aepp-sdk-js-${randomName()}`);\n    await mkdir(path);\n    const sourceCodePath = resolve(path, `${randomName()}.aes`);\n    await writeFile(sourceCodePath, sourceCode);\n    await Promise.all(\n      Object.entries(fileSystem).map(async ([name, src]) => {\n        const p = resolve(path, name);\n        await mkdir(dirname(p), { recursive: true });\n        return writeFile(p, src);\n      }),\n    );\n    return sourceCodePath;\n  }\n\n  async compile(path: string): CompileResult {\n    await this.#ensureCompatibleVersion;\n    try {\n      const [compileRes, aci] = await Promise.all([\n        this.#runWithStderr(path),\n        this.generateAci(path),\n      ]);\n      return {\n        bytecode: compileRes.stdout.trimEnd() as Encoded.ContractBytearray,\n        aci,\n        warnings: compileRes.stderr\n          .split('Warning in ')\n          .slice(1)\n          .map((warning) => {\n            const reg = /^'(.+)' at line (\\d+), col (\\d+):\\n(.+)$/s;\n            const match = warning.match(reg);\n            if (match == null) throw new InternalError(`Can't parse compiler output: \"${warning}\"`);\n            return {\n              message: match[4].trimEnd(),\n              pos: {\n                ...(match[1] !== path && { file: match[1] }),\n                line: +match[2],\n                col: +match[3],\n              },\n            };\n          }),\n      };\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): CompileResult {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.compile(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async generateAci(path: string): Promise<Aci> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return JSON.parse(await this.#run('--no_code', '--create_json_aci', path));\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.generateAci(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return (await this.#run(path, '--validate', bytecode)).includes('Validation successful.');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.validate(bytecode, tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async version(): Promise<string> {\n    const verMessage = await this.#run('--version');\n    const ver = verMessage.match(/Sophia compiler version ([\\d.]+.*)\\n/)?.[1];\n    if (ver == null) throw new CompilerError(\"Can't get compiler version\");\n    return ver;\n  }\n}\n","import { readFile } from 'fs/promises';\nimport { dirname, resolve, basename } from 'path';\nimport { InternalError } from '../../utils/errors.js';\n\nconst defaultIncludes = [\n  'List.aes',\n  'Option.aes',\n  'String.aes',\n  'Func.aes',\n  'Pair.aes',\n  'Triple.aes',\n  'BLS12_381.aes',\n  'Frac.aes',\n  'Set.aes',\n  'Bitwise.aes',\n];\nconst includeRegExp = /^include\\s*\"([\\w/.-]+)\"/im;\nconst includesRegExp = new RegExp(includeRegExp.source, `${includeRegExp.flags}g`);\n\nasync function getFileSystemRec(root: string, relative: string): Promise<Record<string, string>> {\n  const sourceCode = await readFile(resolve(root, relative), 'utf8');\n  const filesystem: Record<string, string> = {};\n  await Promise.all(\n    (sourceCode.match(includesRegExp) ?? [])\n      .map((include) => {\n        const m = include.match(includeRegExp);\n        if (m?.length !== 2) throw new InternalError('Unexpected match length');\n        return m[1];\n      })\n      .filter((include) => !defaultIncludes.includes(include))\n      .map(async (include) => {\n        const includePath = resolve(root, include);\n        filesystem[include] = await readFile(includePath, 'utf8');\n        Object.assign(filesystem, await getFileSystemRec(root, include));\n      }),\n  );\n  return filesystem;\n}\n\n/**\n * Reads all files included in the provided contract\n * Available only in Node.js\n * @param path - a path to the main contract source code\n * @category contract\n */\nexport default async function getFileSystem(path: string): Promise<Record<string, string>> {\n  return getFileSystemRec(dirname(path), basename(path));\n}\n","import { readFile } from 'fs/promises';\nimport HttpBrowser from './Http.js';\nimport { Aci, CompileResult } from './Base.js';\nimport { Encoded } from '../../utils/encoder.js';\nimport getFileSystem from './getFileSystem.js';\n\n/**\n * Contract Compiler over HTTP for Nodejs\n *\n * Inherits CompilerHttp and implements `compile`, `validate` methods\n * @category contract\n * @example CompilerHttpNode('COMPILER_URL')\n */\nexport default class CompilerHttpNode extends HttpBrowser {\n  override async compile(path: string): CompileResult {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.compileBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async generateAci(path: string): Promise<Aci> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.generateAciBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.validateBySourceCode(bytecode, sourceCode, fileSystem);\n  }\n}\n","export * from './index-browser.js';\n\nexport { default as CompilerCli } from './contract/compiler/Cli.js';\nexport { default as getFileSystem } from './contract/compiler/getFileSystem.js';\nexport { default as CompilerHttpNode } from './contract/compiler/HttpNode.js';\n"],"names":["BigNumber","isBigNumber","number","includes","isNaN","Number","isInteger","ceil","bigNumber","integerValue","ROUND_CEIL","BaseError","Error","constructor","message","name","AccountError","AensError","AeppError","ChannelError","CompilerError","ContractError","CryptographyError","NodeError","TransactionError","WalletError","ArgumentError","argumentName","requirement","argumentValue","IllegalArgumentError","ArgumentCountMismatchError","functionName","requiredCount","providedCount","InsufficientBalanceError","MissingParamError","NoSerializerFoundError","RequestTimedOutError","height","TxTimedOutError","blocks","th","TypeError","UnsupportedPlatformError","UnsupportedProtocolError","NotImplementedError","UnsupportedVersionError","dependency","version","geVersion","ltVersion","LogicError","InternalError","UnexpectedTsError","UnavailableAccountError","address","AensPointerContextError","nameOrId","prefix","InsufficientNameFeeError","nameFee","minNameFee","toString","InvalidAensNameError","InvalidRpcMessageError","MissingCallbackError","id","UnAuthorizedAccountError","onAccount","UnknownRpcClientError","UnsubscribedAccountError","ChannelCallError","ChannelConnectionError","ChannelPingTimedOutError","UnexpectedChannelMessageError","ChannelIncomingMessageError","handlerError","incomingMessage","UnknownChannelStateError","InvalidAuthDataError","BytecodeMismatchError","source","details","DuplicateContractError","InactiveContractError","contractAddress","InvalidMethodInvocationError","MissingContractAddressError","MissingContractDefError","MissingFunctionNameError","NodeInvocationError","transaction","NoSuchContractFunctionError","NotPayableFunctionError","amount","fn","MissingEventDefinitionError","eventNameHash","eventAddress","AmbiguousEventDefinitionError","matchedEvents","map","join","InvalidChecksumError","MerkleTreeHashMismatchError","MissingNodeInTreeError","UnknownNodeLengthError","nodeLength","UnknownPathNibbleError","nibble","DuplicateNodeError","NodeNotFoundError","DecodeError","PayloadLengthError","DryRunError","IllegalBidFeeError","InvalidSignatureError","PrefixNotFoundError","tag","SchemaNotFoundError","key","TagNotFoundError","TxNotInChainError","txHash","AlreadyConnectedError","NoWalletConnectedError","RpcConnectionError","AE_AMOUNT_FORMATS","DENOMINATION_MAGNITUDE","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","formatAmount","value","denomination","targetDenomination","shiftedBy","toFixed","toAe","toAettos","prefixes","magnitude","getNearestPrefix","exponent","reduce","p","n","Math","abs","getLowerBoundPrefix","_prefixes$find","find","length","prefixedAmount","rawValue","_value$e","exp","e","v","precision","min","RestError","pause","duration","Promise","resolve","setTimeout","mapObject","object","Object","fromEntries","entries","isWebpack4Buffer","Buffer","concat","Uint8Array","from","error","concatBuffers","list","totalLength","el","isKeyOfObject","isItemOfArray","item","array","isAccountNotFoundError","statusCode","ensureError","wrapWithProxy","valueCb","Proxy","t","args","target","res","Reflect","bind","unwrapProxy","_wrappedValue","Encoding","bs58","Sha256","Encoded","sha256hash","input","update","digest","base64Types","ContractBytearray","ContractStoreKey","ContractStoreValue","Transaction","OracleQuery","OracleResponse","State","Poi","StateTrees","CallStateTree","Bytearray","base58Types","KeyBlockHash","MicroBlockHash","BlockPofHash","BlockTxHash","BlockStateHash","Channel","ContractAddress","TxHash","OracleAddress","OracleQueryId","AccountAddress","AccountSecretKey","Signature","Commitment","PeerPubkey","Name","byteSizeForType","ensureValidLength","data","type","reqLen","getChecksum","payload","slice","addChecksum","getPayload","buffer","equals","base64","encode","decode","string","base58","parseType","maybeType","base64Type","base58Type","encodedPayload","extra","split","encoder","nacl","blake2b","isAddressValid","maybeEncoded","encodings","encoding","ensureEncoded","isEncoded","genSalt","random","BigUint64Array","randomBytes","BigInt","MAX_SAFE_INTEGER","encodeUnsigned","binary","allocUnsafe","writeUInt32BE","subarray","findIndex","i","hash","undefined","verifySignature","signature","sign","detached","verify","encodeVarUInt","Uint16Array","Uint32Array","messagePrefix","messagePrefixLength","hashMessage","msg","verifyMessageSignature","toBytes","val","big","hexString","DRY_RUN_ACCOUNT","pub","MAX_AUTH_FUN_GAS","MIN_GAS_PRICE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_RANGES","times","ConsensusProtocolVersion","VmVersion","AbiVersion","Tag","buildContractId","owner","nonce","ownerIdAndNonce","b2bHash","oracleQueryId","senderId","oracleId","_int32","nonceBE","alloc","AENS_SUFFIX","nameToPunycode","maybeName","suffix","other","test","at","punycode","u","URL","username","password","port","search","pathname","host","produceNameId","commitmentHash","salt","padStart","readInt","ensureName","isName","encodingToPointerKey","getDefaultPointerKey","identifier","substring","result","getMinimumNameFee","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","_ref","_ref2","_ref3","h","isAuctionName","getEventInterval","_expectedMineRate","_microBlockCycle","onNode","networkId","getNetworkId","_isHyperchain","_getPollInterval","options","floor","heightCache","WeakMap","getHeight","cached","cache","get","time","Date","now","getCurrentKeyBlockHeight","set","poll","interval","max","tx","getTransactionByHash","blockHeight","ttl","awaitHeight","currentHeight","waitForTxConfirm","confirm","newBlockHeight","getAccount","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","getAccountByPubkey","getBalance","format","addr","startsWith","balance","catch","getCurrentGeneration","getGeneration","hashOrHeight","getGenerationByHeight","getGenerationByHash","getMicroBlockTransactions","getMicroBlockTransactionsByHash","transactions","getKeyBlock","getKeyBlockByHeight","getKeyBlockByHash","getMicroBlockHeader","getMicroBlockHeaderByHash","txDryRunRequests","Map","txDryRunHandler","rs","delete","dryRunRes","top","protectedDryRunTxs","txEvents","txs","req","accounts","Array","Set","accountAddress","pubKey","forEach","reject","results","reason","resultPayload","idx","assign","txDryRun","combine","_txDryRunRequests$get","requests","_requests$timeout","push","timeout","getContractByteCode","contractId","getContractCode","getContract","getName","getNameEntryByName","resolveName","resolveByNode","pointer","pointers","ProtocolToVmAbi","Ceres","vmVersion","Fate3","abiVersion","Fate","NoAbi","getProtocolDetails","protocolVersion","_protocol$vmVersion$","protocol","Fate2","serialize","params","consensusProtocolVersion","prepare","keys","getNodeInfo","deserialize","vm","abi","_getProtocolDetails","c","kind","ContractCallTx","GaMetaTx","idTagToEncoding","genAddressField","hashId","enc","idTag","indexOf","buf","readUIntBE","genArrayField","itemHandler","items","buffers","uInt","serializeAettos","genEncodedField","optional","encodedData","genEntryField","txParams","packEntry","ArrayBuffer","isView","unpackEntry","genEnumerationField","enm","values","filter","coinAmount","gasPriceCache","getCachedIncreasedGasPrice","node","gasPrice","minGasPrice","utilization","getRecentGasPrices","maxSafeGasPrice","console","warn","BASE_GAS","GAS_PER_BYTE","KEY_BLOCK_INTERVAL","TX_BASE_GAS","txType","_feeFactors","feeFactors","ChannelForceProgressTx","ChannelOffChainTx","ContractCreateTx","GaAttachTx","PayingForTx","factor","TX_OTHER_GAS","txSize","relativeTtl","innerTxSize","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleRespondTx","getOracleRelativeTtl","ttlKeys","buildGas","builtTx","unpackTx","buildTx","txObject","encodedTx","calculateMinFee","rebuildTx","fee","previousFee","eq","gasPricePrefix","_value","_computingMinFee","_canIncreaseFee","minFee","dividedBy","replace","gt","call","shortUInt","calculateGasLimitMax","gasMax","_computingGasLimit","gasLimitMax","gasLimit","field","txFields","parameters","addressName","genNonceField","senderKey","strategy","getAccountNextNonce","nextNonce","ID_TAG","DATA_TAG","DATA_LENGTH_MAX","addressAny","allowRaw","bKey","bId","getOracleByPubkey","queryFee","genShortUIntConstField","constValue","constValueOptional","genTransactionField","absoluteTtl","_isInternalBuild","withDefault","defaultValue","withFormatting","CallReturnType","EntryTag","ctVersion","encoded","entry","enumeration","nameId","raw","shortUIntConst","ORACLE_TTL_TYPES","transactionAny","transactionSignedTx","SignedTx","entryTreesPoi","TreesPoi","clientTtl","nameTtl","NAME_TTL","txSchema","signatures","SpendTx","recipientId","NamePreclaimTx","accountId","commitmentId","NameClaimTx","nameSalt","NameUpdateTx","NameTransferTx","NameRevokeTx","ownerId","code","deposit","callData","callerId","queryFormat","responseFormat","oracleTtlType","delta","oracleTtlValue","query","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","queryId","response","ChannelCreateTx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","initiatorDelegateIds","responderDelegateIds","stateHash","ChannelCloseMutualTx","channelId","fromId","initiatorAmountFinal","responderAmountFinal","ChannelCloseSoloTx","poi","ChannelSlashTx","ChannelDepositTx","round","ChannelWithdrawTx","toId","ChannelSettleTx","offChainTrees","ChannelSnapshotSoloTx","authFun","gaId","authData","payerId","rlpDecode","rlpEncode","getSchema","schemas","subSchemas","s","defaultSchema","schema","packRecord","extraParams","unpackRecord","encodedRecord","expectedTag","readUintBE","index","genMapField","Mtree","MtreeValue","recursiveType","NodeType","_rootHash","_isComplete","_nodes","_encoding","_tag","_unpackEntry","_MPTree_brand","WeakSet","MPTree","isComplete","_classPrivateFieldGet","unpEnt","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","_classPrivateFieldSet","_nodeHash","_parseNode","Branch","Extension","Leaf","isEqual","tree","mptHash","d","_assertClassBrand","_getRaw","toObject","_entriesRaw","k","_MPTree","path","_key","searchFrom","rec","genMPTreeField","genWrappedField","boolean","mptree","wrapped","entryMtreeValueArray","mapContracts","Contract","mapAccounts","Account","mapCalls","ContractCall","mapChannels","mapNames","mapOracles","Oracle","flags","gaContract","gaAuthFun","status","log","active","referers","callerNonce","gasUsed","returnValue","returnType","channelAmount","soloRound","lockedUntil","initiatorAuth","responderAuth","ChannelOffChainUpdateTransfer","to","ChannelOffChainUpdateDeposit","ChannelOffChainUpdateWithdraw","ChannelOffChainUpdateCreateContract","ChannelOffChainUpdateCallContract","caller","contract","callStack","calls","channels","contracts","ns","oracles","ContractsMtree","CallsMtree","ChannelsMtree","NameserviceMtree","OraclesMtree","AccountsMtree","GaMetaTxAuthData","encodingTag","_encodingTag$find$","getSchemaCommon","overrideParams","buildTxAsync","all","buildTxHash","rawTx","buildContractIdByContractTx","contractTx","verCmp","a","b","getComponents","aComponents","bComponents","base","componentsToNumber","components","reverse","acc","semverSatisfies","createSerializer","createSerializerOrig","bigIntPrefix","serializer","mapper","objectName","serializedName","responseBody","safeLength","bigIntPropertyRe","RegExp","String","bigIntArrayItemRe","parseBigIntPolicy","sendRequest","request","next","bodyAsText","replaceAll","matched","match","end","genRequestQueuesPolicy","requestQueues","policy","_requestQueues$get","headers","getResponse","then","position","genCombineGetRequestsPolicy","pendingGetRequests","_pendingGetRequests$g","method","JSON","stringify","url","body","genAggressiveCacheGetResponsesPolicy","getRequests","_getRequests$get","genErrorFormatterPolicy","getMessage","parsedBody","genVersionCheckPolicy","versionCb","ignoreVersion","has","requestOptions","customHeaders","genRetryOnFailurePolicy","retryCount","retryOverallDelay","_request$headers$get","retryCode","NaN","statusesToNotRetry","intervals","fill","_","intervalSum","intervalsInMs","attempt","urlParsed","searchParams","_e$response$status","className","modelProperties","required","constraints","InclusiveMinimum","InclusiveMaximum","payable","allowedValues","ErrorModel","errorCode","NextNonceResponse","SignedTxs","element","blockHash","Tx","initiatorId","responderId","delegateIds","offchainTrees","oracleTtl","queryTtl","responseTtl","gas","Pattern","Delegates","OffChainUpdate","uberParent","polymorphicDiscriminator","clientName","op","RelativeTTL","isConstant","Ttl","NamePointer","encodedKey","AuctionEntry","startedAt","endsAt","highestBidder","highestBid","ContractObject","referrerIds","ByteCode","bytecode","PoI","Currency","symbol","subunit","subunitsPerUnit","fiatConverstionUrl","fiatConversionUrl","logo","primaryColour","secondaryColour","networkName","Image","DryRunInput","DryRunAccount","DryRunInputItem","callReq","DryRunCallReq","calldata","context","DryRunCallContext","stateful","DryRunResults","DryRunResult","callObj","ContractCallObject","Event","topics","Generation","keyBlock","microBlocks","KeyBlock","prevHash","prevKeyHash","miner","beneficiary","pow","MinItems","MaxItems","info","Header","pofHash","txsHash","PinningTx","epoch","parentPayload","lastLeader","parentType","parentNetworkId","HCContractPubkeys","staking","election","rewards","HashResponse","HeightResponse","MicroBlockHeader","CountResponse","count","NameEntry","NamePointerComplete","RegisteredOracle","OracleQueries","oracleQueries","senderNonce","PeerPubKey","pubkey","GasPricesItem","minutes","Status","genesisKeyBlockHash","solutions","difficulty","hashrate","syncing","syncProgress","uptime","listening","protocols","nodeVersion","nodeRevision","peerCount","peerConnections","pendingTransactionsCount","peerPubkey","topKeyBlockHash","topBlockHeight","Protocol","effectiveAtHeight","PeerConnections","inbound","outbound","SyncStatus","progress","speed","estimate","EncodedTx","PostTxResponse","TxInfoObject","callInfo","gaInfo","txInfo","GAObject","innerObject","ChannelSetDelegatesTx","CheckTxInPoolResponse","CommitmentId","UnsignedTx","GAAttachTx","GAMetaTx","NameHash","PeerDetails","firstSeen","lastSeen","genesisHash","topHash","topDifficulty","nodeVendor","nodeOs","PeerCount","connected","available","blocked","PeerCountConnected","PeerCountAvailable","verified","unverified","Peers","peers","PubKey","TokenSupply","contractOracles","locked","pendingRewards","total","OffChainCallContract","OffChainDeposit","OffChainNewContract","OffChainTransfer","OffChainWithdrawal","CreateContractUnsignedTx","discriminators","DryRunInputMapper","EncodedTxMapper","accept","parameterPath","$host","skipEncoding","contentType","nameHash","fromParam","limit","typeParam","body1","coreClient","Parameters","Mappers","Node","ServiceClient","_options$endpoint","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","sendOperationRequest","getAccountByPubkeyOperationSpec","getAccountByPubkeyAndHashOperationSpec","getAccountByPubkeyAndHeightOperationSpec","getAccountNextNonceOperationSpec","getPendingAccountTransactionsByPubkey","getPendingAccountTransactionsByPubkeyOperationSpec","getAuctionEntryByName","getAuctionEntryByNameOperationSpec","getChannelByPubkey","getChannelByPubkeyOperationSpec","getContractOperationSpec","getContractCodeOperationSpec","getContractPoI","getContractPoIOperationSpec","getCurrency","getCurrencyOperationSpec","protectedDryRunTxsOperationSpec","getCurrentGenerationOperationSpec","getGenerationByHashOperationSpec","getGenerationByHeightOperationSpec","getTopHeader","getTopHeaderOperationSpec","getPinningTx","getPinningTxOperationSpec","getHyperchainContractPubkeys","getHyperchainContractPubkeysOperationSpec","getCurrentKeyBlock","getCurrentKeyBlockOperationSpec","getCurrentKeyBlockHash","getCurrentKeyBlockHashOperationSpec","getCurrentKeyBlockHeightOperationSpec","getKeyBlockByHashOperationSpec","getKeyBlockByHeightOperationSpec","getPendingKeyBlock","getPendingKeyBlockOperationSpec","getMicroBlockHeaderByHashOperationSpec","getMicroBlockTransactionsByHashOperationSpec","getMicroBlockTransactionsCountByHash","getMicroBlockTransactionsCountByHashOperationSpec","getMicroBlockTransactionByHashAndIndex","getMicroBlockTransactionByHashAndIndexOperationSpec","getNameEntryByNameOperationSpec","getNameEntryByNameHash","getNameEntryByNameHashOperationSpec","getOracleByPubkeyOperationSpec","getOracleQueriesByPubkey","getOracleQueriesByPubkeyOperationSpec","getOracleQueryByPubkeyAndQueryId","getOracleQueryByPubkeyAndQueryIdOperationSpec","getPeerPubkey","getPeerPubkeyOperationSpec","getRecentGasPricesOperationSpec","getStatus","getStatusOperationSpec","getChainEnds","getChainEndsOperationSpec","getSyncStatus","getSyncStatusOperationSpec","postTransaction","postTransactionOperationSpec","getTransactionByHashOperationSpec","getTransactionInfoByHash","getTransactionInfoByHashOperationSpec","httpMethod","responses","bodyMapper","isError","urlParameters","headerParameters","queryParameters","requestBody","mediaType","userAgentPolicyName","setClientRequestIdPolicyName","NodeApi","_ignoreVersion","_cachedStatusPromise","_isHyperchainPromise","getVersion","opts","_getCachedStatus","allowInsecureConnection","additionalPolicies","pipeline","addPolicy","phase","removePolicy","promise","nodeNetworkId","versions","getTransactionSignerAddress","AccountBase","TypeResolver","ContractByteArrayEncoder","canonicalize","hashJson","_canonicalize","hashDomain","domain","domainAci","record","option","domainType","resolveType","fateValue","encodeWithType","hashTypedData","aci","getBufferToSign","innerTx","rlpBinaryTx","_secretKeyDecoded","AccountMemory","secretKey","keyPair","fromSeed","publicKey","generate","unsafeSign","signTransaction","txWithNetworkId","signMessage","signTypedData","dHash","signDelegation","delegation","getExecutionCost","isInitiator","getExecutionCostBySignedTx","isInnerTx","isNotInnerTx","f","getExecutionCostUsingNode","isMined","isSignedTx","combinedInfo","validators","verifyTransactionInternal","parentTxTypes","account","flat","verifyTransaction","nodeNotCached","clone","txBinary","txHashWithNetworkId","checkedKeys","nestedTx","cost","recipient","oracleCall","contractCreate","contractCall","parse","InvalidTxError","validation","sendTransaction","txUnsigned","waitMined","__queue","pollResult","txData","confirmationHeight","verifyTx","toBase64Url","fromBase64Url","objectToBase64Url","header","signJwt","originalPayload","sub_jwk","kty","crv","x","unpackJwt","jwt","_payload$sub_jwk","payloadEncoded","jwk","signer","isJwt","maybeJwt","ensureJwt","verifyJwt","DelegationTag","oracleAddressField","queryIdField","AensWildcard","AensName","AensPreclaim","packDelegation","unpackDelegation","NotAuctionNameError","action","_salt","revoke","opt","extendPointers","allPointers","hasRawPointers","some","transfer","getState","_options$onNode","nameEntry","getAuctionState","_options$onNode2","extendTtl","claim","preclaim","bid","Encoder","Calldata","calcHash","_Contract_brand","_aciContract","$compile","$options","onCompiler","sourceCode","compileBySourceCode","fileSystem","sourceCodePath","compile","$getCallResultByTxHash","fnName","callInfoTyped","_getCallResult","_estimateGas","$call","callStatic","$deploy","_opt$gasLimit","_calldata","_name","_sendAndProcess","decodedEvents","$decodeEvents","_opt$gasLimit2","fnAci","_getFunctionAci","useFallbackAccount","topOption","txOpt","dryRunOther","events","omitUnknown","event","contractName","_getContractNameByEvent","decoded","decodeEvent","initialize","validateBytecode","otherOptions","onChanBytecode","isValid","validateBySourceCode","validate","ContractWithMethods","_aci","aciLast","functions","arguments","aciArgs","pop","_Contract","decodedResult","decodeFateString","returns","ctAddress","contractAddressToName","addressToName","variant","eventName","arr","decodeQuery","queryEntry","decodedQuery","decodedResponse","OracleBase","getQueries","getQuery","_handleQueriesPromise","register","oracleRegisterTx","oracleExtendTx","pollQueries","onQuery","knownQueryIds","isChecking","checkNewQueries","filtered","includeResponded","add","idPromise","_opt$interval","setInterval","clearInterval","respondToQuery","oracleRespondTx","handleQueries","queuePromise","handler","q","respondPromise","stopPoll","OracleClient","postQuery","oracleQueryTx","pollForResponse","responseBuffer","spend","recipientIdOrName","transferFunds","fraction","desiredAmount","ROUND_HALF_UP","minus","payForTransaction","createGeneralizedAccount","authFnName","_options$gasLimit","freeze","gaContractId","buildAuthTxHash","buildAuthTxHashByGaMetaTx","chainMethods","spendMethods","contractGaMethods","methods","_wrappedOptions","AeSdkMethods","_defineProperty","_options","getContext","mergeWith","prototype","methodWrapper","AeSdkMethodsTyped","AeSdkBase","nodes","instance","addNode","api","compilerApi","_resolveAccount","ensureNodeConnected","pool","selectedNodeName","select","selectNode","isNodeConnected","getNodesInPool","addresses","_options$networkId","AeSdk","addAccount","selectedAddress","selectAccount","removeAccount","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","json","RpcErr","cl","RpcInvalidTransactionError","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","RpcInternalError","RpcNoNetworkById","RpcMethodNotFoundError","AccountRpc","rpcClient","_rpcClient","dataRaw","returnSigned","signedTransaction","RPC_VERSION","_callbacks","_messageId","_methods","_RpcClient_brand","RpcClient","connection","onDisconnect","connect","_handleMessage","_sendRequest","notify","origin","jsonrpc","_processResponse","methodName","_sendResponse","sendMessage","callbacks","AeSdkAepp","onAddressChange","onNetworkChange","_ensureConnected","_ensureAccountAccess","_accounts","current","connectToWallet","connectNode","disconnectParams","updateNetwork","client","updateAddress","closeConnection","disconnect","readyToConnect","walletInfo","disconnectWallet","askAddresses","subscribeAddress","askToSelectNetwork","network","EventEmitter","_WalletConnectorFrameBase_brand","WalletConnectorFrameBase","isConnected","_connect","connector","emit","_updateAccounts","_updateNetwork","_getRpcClient","getAccounts","subscribeAccounts","_networkId","WalletConnectorFrame","_node","WalletConnectorFrameWithNode","JsonBig","jsonBig","storeAsString","convertValuesToBigNumbers","isArray","bn","AeSdkWallet","onConnection","onSubscription","onAskAccounts","onAskToSelectNetwork","_type","_getAccountsForClient","addressSubscription","_pushAccountsToApps","_clients","clientId","_isRpcClientConnected","_getClient","size","rpc","_getNode","CONNECTED","_disconnectRpcClient","DISCONNECTED","removeRpcClient","addRpcClient","clientConnection","WAITING_FOR_CONNECTION_REQUEST","icons","getWalletInfo","subscribe","unsubscribe","subscription","aeppOrigin","aeppRpcClientId","transactionHash","shareWalletInfo","window","location","AccountBaseFactory","discover","mnemonicToSeed","mnemonicToSeedSync","tweetnaclAuth","ED25519_CURVE","HARDENED_OFFSET","deriveKey","I","full","IL","IR","chainCode","derivePathFromKey","segments","segment","indexBuffer","_mnemonicOrWalletOrSeed","_AccountMnemonicFactory_brand","AccountMnemonicFactory","mnemonicOrWalletOrSeed","getWallet","_getWallet","getWalletSync","accountIndex","wallet","_getAccountByWallet","initializeSync","sync","setWalletBySeed","seed","masterKey","walletKey","_authFun","AccountGeneralized","authCallData","gaMetaTx","CLA","GET_ADDRESS","SIGN_TRANSACTION","GET_APP_CONFIGURATION","SIGN_PERSONAL_MESSAGE","AccountLedger","transport","decorateAppAPIMethods","offset","headerLength","networkIdBuffer","toSend","maxChunkSize","chunkSize","bufferOffset","writeUInt8","copy","previous","send","messageStr","_ensureReadyPromise","_AccountLedgerFactory_brand","AccountLedgerFactory","ensureReady","_getAppConfiguration","oldApp","newApp","_enableExperimentalLedgerAppSupport","getAppConfiguration","getAddress","_ensureReady","addressLength","_classPrivateFieldGet2","snapId","invokeSnap","provider","AccountMetamask","derivationPath","snapMinVersion","snapMaxVersion","metamaskVersionPrefix","_provider","_AccountMetamaskFactory_brand","_providerPromise","AccountMetamaskFactory","installSnap","_getProvider","requestSnap","snapVersion","getSnapVersion","snaps","_getMetamaskAsInjected","ethereum","_getMetamaskOverEip","dispatchEvent","detail","rdns","removeEventListener","addEventListener","_classPrivateFieldGet3","_await$_assertClassBr","CompilerBase","CompileOpts","srcFile","pos","ErrorPos","file","line","col","CompileResult","warnings","SophiaCallResultInput","function","callResult","callValue","BytecodeCallResultInput","DecodedCallresult","FunctionCallInput","DecodeCalldataBytecode","DecodedCalldata","DecodeCalldataSource","ByteCodeInput","FateAssembler","fateAssembler","ValidateByteCodeInput","CompilerVersion","ApiVersion","apiVersion","SophiaBinaryData","sophiaType","SophiaJsonData","ContractMapper","SophiaCallResultInputMapper","BytecodeCallResultInputMapper","FunctionCallInputMapper","DecodeCalldataBytecodeMapper","DecodeCalldataSourceMapper","ByteCodeInputMapper","ValidateByteCodeInputMapper","body2","body3","body4","body5","body6","body7","Compiler","generateACI","generateACIOperationSpec","compileContract","compileContractOperationSpec","decodeCallResult","decodeCallResultOperationSpec","decodeCallResultBytecode","decodeCallResultBytecodeOperationSpec","encodeCalldata","encodeCalldataOperationSpec","decodeCalldataBytecode","decodeCalldataBytecodeOperationSpec","decodeCalldataSource","decodeCalldataSourceOperationSpec","getFateAssemblerCode","getFateAssemblerCodeOperationSpec","validateByteCode","validateByteCodeOperationSpec","getCompilerVersion","getCompilerVersionOperationSpec","versionOperationSpec","apiVersionOperationSpec","apiOperationSpec","CompilerApi","CompilerHttp","compilerUrl","parameter","cmpOut","warning","generateAciBySourceCode","generateAci","snakeToPascal","toUpperCase","pascalToSnake","toLowerCase","default","websocket","w3cwebsocket","W3CWebSocket","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","channel","rest","_eventEmitter","enterState","nextState","_debug","_fsm","enter","dequeueAction","changeStatus","newStatus","debug","_status","changeState","newState","_state","_websocket","_isActionQueueLocked","queue","_actionQueue","guard","enqueueAction","state","handleMessage","st","updates","dequeueMessage","_isMessageQueueLocked","_messageQueue","shift","close","clearTimeout","_pingTimeoutId","ping","onMessage","callback","_rpcCallbacks","channel_id","_channelId","_nextRpcMessageId","_message$error$data$","connectionHandler","openHandler","channelOptions","wsUrl","onerror","onopen","onclose","onmessage","appendSignature","signFn","payloadTx","signatures2","signAndNotify","signedTx","signed_tx","handleUnexpectedMessage","_channel","wsMessage","channelOpen","awaitingCompletion","onSuccess","accepted","error_code","errorMessage","error_msg","codes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","channelClosed","awaitingReestablish","awaitingChannelReestablished","message2","state2","awaitingReconnection","role","awaitingOnChainTx","awaitingBlockInclusion","awaitingChannelsUpdate","awaitingTxSignRequest","_message$method$match","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","closeTx","handlers","channelDisconnect","snakeToPascalObjKeys","obj","channelCounter","_debugId","_initialize","_options$existingFsmI","reconnect","existingFsmId","existingChannelId","reconnectHandler","reestablish","on","off","removeListener","halfSignedTx","trees","fsmId","leave","shutdown","ChannelSpend","metadata","meta","awaitingOffChainTx","_2","balances","awaitingActionTx","awaitingActionCompletion","onOnChainTx","Action","isOwn","withdraw","onOwnWithdrawLocked","onWithdrawLocked","onOwnDepositLocked","onDepositLocked","onStatusChanged","ChannelContract","createContract","call_data","vm_version","abi_version","addressKey","callContract","contract_id","forceProgress","gas_price","callContractStatic","getContractCall","caller_id","getContractState","cleanContractCalls","WebSocket","Source","MiddlewareSubscriberError","MiddlewareSubscriberDisconnected","closeEvent","_subscriptions","_requestQueue","_webSocket","_MiddlewareSubscriber_brand","MiddlewareSubscriber","webSocket","_disconnect","errorEvent","_emit","_messageHandler","_classPrivateGetter","_get_targets","_sendSubscribe","subscribeKeyBlocks","cb","_subscribe","Middleware","subscribeKeyBlocksNode","subscribeKeyBlocksAll","All","subscribeMicroBlocks","subscribeMicroBlocksNode","subscribeMicroBlocksAll","subscribeTransactions","subscribeTransactionsNode","subscribeTransactionsAll","subscribeObject","subscribeObjectNode","subscribeObjectAll","_this","_sendMessage","isSubscribe","condition","onlyReset","ownedOnly","scope","direction","direction1","direction2","direction3","direction4","by","exact","direction5","direction6","templateId","direction7","tokenId","direction8","direction9","by1","direction10","by2","direction11","direction12","id1","direction13","contractId1","functionParam","functionPrefix","aexnArgs","direction14","direction15","direction16","contractId2","direction17","scope1","direction18","direction19","validator","direction20","direction21","direction22","hashOrKbi","direction23","hash1","ownedBy","state1","direction24","direction25","id2","direction26","direction27","direction28","direction29","direction30","direction31","id3","intervalBy","direction32","intervalBy1","minStartDate","maxStartDate","direction33","intervalBy2","typeParam1","direction34","intervalBy3","direction35","direction36","intervalBy4","direction37","intervalBy5","direction38","direction39","intervalBy6","direction40","direction41","intervalBy7","direction42","intervalBy8","direction43","typeParam2","collectionFormat","typeGroup","oracle","entrypoint","scope2","direction44","id4","direction45","hash2","direction46","PathsBx0Ya3V3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchemaAllof0","Activity","blockTime","ActivityPayload","microIndex","microTime","logIdx","sender","contractTxHash","callTxHash","internalTx","refTxHash","PaginatedResponse","nullable","prev","ErrorResponse","Paths1Q9E32FV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TokenResponse","PathsZ92TkfV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchemaAllof1","Aex9BalanceResponse","decimals","tokenName","tokenSymbol","txIndex","Paths10R8Q7PV3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchemaAllof0","DexSwap","amounts","fromToken","toToken","toAccount","fromContract","toContract","fromAmount","toAmount","fromDecimals","toDecimals","DexSwapAmounts","amount0In","amount1In","amount0Out","amount1Out","Paths16G4GzrV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchemaAllof0","NameClaim","activeFrom","sourceTxHash","sourceTxType","internalSource","NotFoundResponse","PathsA60QxwV3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchemaAllof0","Pointee","PathsXcg812V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchema","contractCreateTx","contractCallTx","gaAttachTx","channelCloseMutualTx","channelCloseSoloTx","channelCreateTx","channelDepositTx","channelForceProgressTx","channelSetDelegatesTx","channelSettleTx","channelSlashTx","channelSnapshotSoloTx","channelWithdrawTx","nameClaimTx","namePreclaimTx","nameRevokeTx","nameTransferTx","nameUpdateTx","oracleResponseTx","payingForTx","spendTx","channelOffchainTx","Get200ApplicationJsonProperties","PathsEvgmfsV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesContractCallTx","Paths1Mat0BzV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaAttachTx","Paths1Smy8TV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesGaMetaTx","PathsTachlnV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseMutualTx","Paths1AeqodeV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCloseSoloTx","PathsGp6EyrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelCreateTx","Paths10Z6Jt8V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelDepositTx","Paths1Jkl3L3V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelForceProgressTx","PathsN9Iv8YV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSetDelegatesTx","PathsCsym65V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSettleTx","PathsEwav40V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSlashTx","Paths5Ehb0PV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelSnapshotSoloTx","Paths1Qk8BkgV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelWithdrawTx","PathsC7WhtoV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameClaimTx","Paths1R4Z885V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNamePreclaimTx","PathsKrpz02V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameRevokeTx","PathsPs07B4V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameTransferTx","PathsTug6HrV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesNameUpdateTx","Paths17Dchb7V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleExtendTx","Paths1Ngkd7FV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleQueryTx","PathsMvqgifV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleRegisterTx","Paths1U2Ve7RV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesOracleResponseTx","Paths1N757S0V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesPayingForTx","Paths11Bqs5V3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesSpendTx","Paths4Pjk8DV3AccountsAccountidTransactionsCountGetResponses200ContentApplicationJsonSchemaPropertiesChannelOffchainTx","Paths8I0YgwV3Aex141GetResponses200ContentApplicationJsonSchemaAllof0","Aex141Response","baseUrl","extensions","limits","invalid","creationTime","PathsWkpcwaV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplatesResponse","edition","PathsRay4X0V3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplateTokensResponse","Paths1TkisghV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TokenDetailResponse","Paths1A8Ah39V3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TransferEvent","Paths1Uqqby0V3Aex9GetResponses200ContentApplicationJsonSchemaAllof0","Aex9Response","initialSupply","eventSupply","holders","Paths19IxhsmV3Aex9CountGetResponses200ContentApplicationJsonSchema","PathsEeiffwV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0","Aex9ContractBalanceResponse","lastTxHash","lastLogIdx","PathsKr825V3Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths108B3VtV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof1","Get200ApplicationJsonAllOfPropertiesItemsItem","PathsQmewnaV3ChannelsGetResponses200ContentApplicationJsonSchemaAllof0","lastUpdatedHeight","lastUpdatedTxType","lastUpdatedTime","lastUpdatedTxHash","updatesCount","Paths18L84JcV3ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0","localIdx","Paths10Kk1UxV3ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0","ContractLog","eventHash","extCallerContractId","extCallerContractTxHash","parentContractId","aexnType","createTx","Paths9Yfxl2V3DexSwapsGetResponses200ContentApplicationJsonSchemaAllof0","Paths6Vze8ZV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchemaAllof0","Paths1F8GzwrV3HyperchainEpochsGetResponses200ContentApplicationJsonSchemaAllof0","EpochInfo","first","last","lastPinHeight","parentBlockHash","epochStartTime","EpochInfoValidatorsItem","stake","Paths7W5O80V3HyperchainScheduleGetResponses200ContentApplicationJsonSchemaAllof0","Schedule","leader","Paths1Qg7SclV3HyperchainValidatorsGetResponses200ContentApplicationJsonSchemaAllof0","Validator","totalStakes","delegates","rewardsEarned","pinningHistory","Paths7Ks32NV3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchemaAllof0","Delegate","delegate","PathsDwhnfdV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchemaAllof0","PathsEue6HzV3KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0","PathsNn60D7V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0","PathsXhlqwrV3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchemaAllof0","Paths181Cs9V3NamesGetResponses200ContentApplicationJsonSchemaAllof0","approximateActivationTime","approximateExpireTime","expireHeight","auction","auctionTimeout","ownership","claimsCount","Auction","auctionEnd","activationTime","lastBid","AuctionLastBid","Components17W16A5SchemasAuctionPropertiesLastBidPropertiesTxAllof1","NameOwnership","original","NameTx","Components171VsjiSchemasNametxPropertiesTxAllof1","Paths1R08F8HV3NamesAuctionsGetResponses200ContentApplicationJsonSchemaAllof0","PathsCrb9BgV3NamesAuctionsIdClaimsGetResponses200ContentApplicationJsonSchema","PathsMyl4W2V3NamesIdClaimsGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Ukwk06V3NamesIdTransfersGetResponses200ContentApplicationJsonSchemaAllof0","NameTransfer","PathsRcnvllV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchemaAllof0","NameUpdate","PathsGcr9MrV3OraclesGetResponses200ContentApplicationJsonSchemaAllof0","registerTime","registerTxHash","OracleFormat","OracleTx","Components1Viuqa3SchemasOracletxPropertiesTxAllof1","PathsZ4L2QlV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchemaAllof0","OracleExtend","Paths1Uni7AtV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchemaAllof0","Paths1Tcj5A9V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchemaAllof0","Stats","minersCount","feesTrend","last24HsAverageTransactionFees","last24HsTransactions","maxTransactionsPerSecond","maxTransactionsPerSecondBlockHash","transactionsTrend","PathsFso5IiV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchemaAllof0","Stat","startDate","endDate","Paths1Fl1Lh2V3StatsAex9TransfersGetResponses200ContentApplicationJsonSchemaAllof0","Paths1A27TirV3StatsBlocksGetResponses200ContentApplicationJsonSchemaAllof0","Paths72Dp44V3StatsContractsGetResponses200ContentApplicationJsonSchemaAllof0","Paths1J83O75V3StatsDeltaGetResponses200ContentApplicationJsonSchemaAllof0","DeltaStat","auctionsStarted","blockReward","burnedInAuctions","channelsClosed","channelsOpened","contractsCreated","devReward","namesActivated","namesExpired","namesRevoked","oraclesExpired","oraclesRegistered","lockedInAuctions","lockedInChannels","Paths1Qw6KhfV3StatsDifficultyGetResponses200ContentApplicationJsonSchemaAllof0","Paths1IskjkV3StatsHashrateGetResponses200ContentApplicationJsonSchemaAllof0","Paths50Qhc7V3StatsMinersGetResponses200ContentApplicationJsonSchemaAllof0","Miner","totalReward","PathsD92Xl6V3StatsNamesGetResponses200ContentApplicationJsonSchemaAllof0","Paths1K55ZdgV3StatsTotalGetResponses200ContentApplicationJsonSchemaAllof0","TotalStat","activeAuctions","activeNames","inactiveNames","activeOracles","inactiveOracles","openChannels","sumBlockReward","sumDevReward","totalTokenSupply","Paths3Bfys0V3StatsTotalAccountsGetResponses200ContentApplicationJsonSchemaAllof0","Paths6PaqluV3StatsTransactionsGetResponses200ContentApplicationJsonSchemaAllof0","mdwAsyncTasks","mdwGensPerMinute","mdwHeight","mdwLastMigration","mdwRevision","mdwSynced","mdwSyncing","mdwTxIndex","mdwVersion","nodeHeight","nodeProgress","nodeSyncing","StatusMdwAsyncTasks","longTasks","producerBuffer","totalPending","PathsHa9C78V3TransactionsGetResponses200ContentApplicationJsonSchemaAllof0","PathsI72FylV3TransactionsPendingGetResponses200ContentApplicationJsonSchemaAllof0","PendingTransaction","failures","PathsVdg67V3TransfersGetResponses200ContentApplicationJsonSchemaAllof0","Transfer","refBlockHash","refTxType","Aex9TransferEvent","Aex9TransferResponse","callTxi","InternalContractCallEvent","InternalTransferEvent","NameClaimEvent","Paths1EfdbjrV3AccountsAccountidActivitiesGetResponses200ContentApplicationJsonSchema","Paths3Hsv3GV3AccountsAccountidAex141TokensGetResponses200ContentApplicationJsonSchema","PathsKm52GqV3AccountsAccountidAex9BalancesGetResponses200ContentApplicationJsonSchema","PathsZpy8S9V3AccountsAccountidDexSwapsGetResponses200ContentApplicationJsonSchema","Paths16Cyh9EV3AccountsAccountidNamesClaimsGetResponses200ContentApplicationJsonSchema","Paths1Mheci5V3AccountsAccountidNamesPointeesGetResponses200ContentApplicationJsonSchema","Paths1XwlyjtV3Aex141GetResponses200ContentApplicationJsonSchema","Paths181AjwxV3Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","Paths15Mi2TaV3Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","PathsWl652MV3Aex141ContractidTokensGetResponses200ContentApplicationJsonSchema","Paths1O7Q6IhV3Aex141ContractidTransfersGetResponses200ContentApplicationJsonSchema","Paths1Vr3Y2EV3Aex9GetResponses200ContentApplicationJsonSchema","Paths1N61UurV3Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","Paths1Uybd4PV3Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","Paths3EzhapV3ChannelsGetResponses200ContentApplicationJsonSchema","Paths1Txblx8V3ContractsCallsGetResponses200ContentApplicationJsonSchema","Paths7A1M6RV3ContractsLogsGetResponses200ContentApplicationJsonSchema","Paths1Di8FnjV3DexSwapsGetResponses200ContentApplicationJsonSchema","PathsKwxlzlV3DexContractIdSwapsGetResponses200ContentApplicationJsonSchema","Paths194Lg3IV3HyperchainEpochsGetResponses200ContentApplicationJsonSchema","Paths1S5Zlt1V3HyperchainScheduleGetResponses200ContentApplicationJsonSchema","Paths1Ibn686V3HyperchainValidatorsGetResponses200ContentApplicationJsonSchema","Paths1I4U8D5V3HyperchainValidatorsValidatorDelegatesGetResponses200ContentApplicationJsonSchema","Paths15K0AlgV3HyperchainValidatorsValidatorDelegatesTopGetResponses200ContentApplicationJsonSchema","Paths277OngV3KeyBlocksGetResponses200ContentApplicationJsonSchema","Paths1159W94V3KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","Paths15Bkk50V3MicroBlocksHashTransactionsGetResponses200ContentApplicationJsonSchema","Paths12S1Nd4V3NamesGetResponses200ContentApplicationJsonSchema","PathsKjq4D4V3NamesAuctionsGetResponses200ContentApplicationJsonSchema","Paths1F98AqgV3NamesIdClaimsGetResponses200ContentApplicationJsonSchema","Paths1Raw8PV3NamesIdTransfersGetResponses200ContentApplicationJsonSchema","Paths1Ec8CltV3NamesIdUpdatesGetResponses200ContentApplicationJsonSchema","Paths1E14NekV3OraclesGetResponses200ContentApplicationJsonSchema","Paths1L5C64RV3OraclesIdExtendsGetResponses200ContentApplicationJsonSchema","Paths8722JhV3OraclesIdQueriesGetResponses200ContentApplicationJsonSchema","PathsVron83V3OraclesIdResponsesGetResponses200ContentApplicationJsonSchema","PathsCgzmimV3StatsActiveAccountsGetResponses200ContentApplicationJsonSchema","Paths1UxyhelV3StatsAex9TransfersGetResponses200ContentApplicationJsonSchema","Paths1Sxjoy0V3StatsBlocksGetResponses200ContentApplicationJsonSchema","PathsWbrhqnV3StatsContractsGetResponses200ContentApplicationJsonSchema","Paths5Xf9ScV3StatsDeltaGetResponses200ContentApplicationJsonSchema","Paths1D7Up0DV3StatsDifficultyGetResponses200ContentApplicationJsonSchema","PathsR51VshV3StatsHashrateGetResponses200ContentApplicationJsonSchema","PathsA8Q6T7V3StatsMinersGetResponses200ContentApplicationJsonSchema","PathsCeyhpaV3StatsNamesGetResponses200ContentApplicationJsonSchema","PathsJoz7P5V3StatsTotalGetResponses200ContentApplicationJsonSchema","Paths15F3FfuV3StatsTotalAccountsGetResponses200ContentApplicationJsonSchema","Paths1IfhshmV3StatsTransactionsGetResponses200ContentApplicationJsonSchema","Paths1Pymq07V3TransactionsGetResponses200ContentApplicationJsonSchema","PathsUq0T7JV3TransactionsPendingGetResponses200ContentApplicationJsonSchema","PathsA7P0KiV3TransfersGetResponses200ContentApplicationJsonSchema","AuctionLastBidTx","KeyBlockExtended","beneficiaryReward","microBlocksCount","transactionsCount","MicroBlockExtended","microBlockIndex","NameTxTx","OracleTxTx","getAccountActivities","getAccountActivitiesOperationSpec","getAex141OwnedTokens","getAex141OwnedTokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAccountDexSwaps","getAccountDexSwapsOperationSpec","getAccountNameClaims","getAccountNameClaimsOperationSpec","getAccountPointees","getAccountPointeesOperationSpec","getAccountTransactionsCount","getAccountTransactionsCountOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141ContractTemplates","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","getAex141TemplateTokensOperationSpec","getAex141ContractTokens","getAex141ContractTokensOperationSpec","getAex141TokenOwner","getAex141TokenOwnerOperationSpec","getAex141ContractTransfers","getAex141ContractTransfersOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractCalls","getContractCallsOperationSpec","getContractLogs","getContractLogsOperationSpec","getDexSwaps","getDexSwapsOperationSpec","getDexSwapsByContractId","getDexSwapsByContractIdOperationSpec","getEpochs","getEpochsOperationSpec","getEpochTop","getEpochTopOperationSpec","getSchedules","getSchedulesOperationSpec","getSchedule","getScheduleOperationSpec","getValidators","getValidatorsOperationSpec","getValidator","getValidatorOperationSpec","getValidatorDelegates","getValidatorDelegatesOperationSpec","getTopValidatorDelegates","getTopValidatorDelegatesOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","getMicroBlockOperationSpec","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameAuctionClaims","getNameAuctionClaimsOperationSpec","getNamesCount","getNamesCountOperationSpec","getNameOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracles","getOraclesOperationSpec","getOracle","getOracleOperationSpec","getOracleExtends","getOracleExtendsOperationSpec","getOracleQueries","getOracleQueriesOperationSpec","getOracleResponses","getOracleResponsesOperationSpec","getStats","getStatsOperationSpec","getActiveAccountsStats","getActiveAccountsStatsOperationSpec","getAex9TransfersStats","getAex9TransfersStatsOperationSpec","getBlocksStats","getBlocksStatsOperationSpec","getContractsStats","getContractsStatsOperationSpec","getDeltaStats","getDeltaStatsOperationSpec","getDifficultyStats","getDifficultyStatsOperationSpec","getHashrateStats","getHashrateStatsOperationSpec","getMinerStats","getMinerStatsOperationSpec","getNamesStats","getNamesStatsOperationSpec","getTotalStats","getTotalStatsOperationSpec","getTotalAccountsStats","getTotalAccountsStatsOperationSpec","getTransactionsStats","getTransactionsStatsOperationSpec","getTransactions","getTransactionsOperationSpec","getTransactionsCount","getTransactionsCountOperationSpec","getPendingTransactions","getPendingTransactionsOperationSpec","getPendingTransactionsCount","getPendingTransactionsCountOperationSpec","getTransaction","getTransactionOperationSpec","getTransfers","getTransfersOperationSpec","operationSpecs","isMiddlewareRawPage","maybePage","testPage","MiddlewarePageMissed","isNext","_middleware","MiddlewarePage","rawPage","middleware","nextPath","prevPath","requestByPath","MiddlewareApi","pathWithQuery","queryPos","operationSpec","os","groups","part","URLSearchParams","operationArguments","con1","con2","BrowserConnection","receiveMessage","_onDisconnect","_target","_self","BrowserWindowMessageConnection","self","sendDirection","receiveDirection","to_aepp","listener","_message$data$jsonrpc","_this$origin","postMessage","onDetected","wallets","getConnection","to_waellet","newWallet","_listeners","BrowserRuntimeConnection","_port$sender$url","addListener","messageToHash","verifyMessage","encodeContractAddress","isNameValid","MemoryAccount","connectionProxy","walletDetector","execFile","tmpdir","dirname","basename","mkdir","writeFile","rm","fileURLToPath","getPackagePath","require","pathToFileURL","__filename","_path","_ensureCompatibleVersion","_CompilerCli_brand","CompilerCli","compilerPath","compileRes","_runWithStderr","stdout","trimEnd","stderr","reg","tmp","_saveContractToTmpDir","recursive","_run","verMessage","ver","pResolve","pReject","randomName","src","readFile","defaultIncludes","includeRegExp","includesRegExp","_flagsInstanceProperty","getFileSystemRec","root","relative","_sourceCode$match","filesystem","include","m","includePath","getFileSystem","HttpBrowser","CompilerHttpNode"],"sourceRoot":""}