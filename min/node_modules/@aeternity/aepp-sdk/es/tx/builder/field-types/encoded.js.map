{"version":3,"file":"encoded.js","names":["decode","encode","ArgumentError","genEncodedField","encoding","optional","serialize","encodedData","_Buffer","from","deserialize","buffer"],"sources":["../../../../src/tx/builder/field-types/encoded.ts"],"sourcesContent":["import { decode, encode, Encoded, Encoding } from '../../../utils/encoder.js';\nimport { ArgumentError } from '../../../utils/errors.js';\n\nexport default function genEncodedField<E extends Encoding, Optional extends boolean = false>(\n  encoding: E,\n  optional?: Optional,\n): {\n  serialize: Optional extends true\n    ? (value?: Encoded.Generic<E>) => Buffer\n    : (value: Encoded.Generic<E>) => Buffer;\n  deserialize: (value: Buffer) => Encoded.Generic<E>;\n} {\n  return {\n    serialize(encodedData?: Encoded.Generic<E>) {\n      if (encodedData == null) {\n        if (optional === true) return Buffer.from([]);\n        throw new ArgumentError('Encoded data', 'provided', encodedData);\n      }\n      return decode(encodedData);\n    },\n\n    deserialize(buffer) {\n      return encode(buffer, encoding);\n    },\n  };\n}\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,MAAM,QAA2B,2BAA2B;AAC7E,SAASC,aAAa,QAAQ,0BAA0B;AAExD,eAAe,SAASC,eAAeA,CACrCC,QAAW,EACXC,QAAmB,EAMnB;EACA,OAAO;IACLC,SAASA,CAACC,WAAgC,EAAE;MAC1C,IAAIA,WAAW,IAAI,IAAI,EAAE;QACvB,IAAIF,QAAQ,KAAK,IAAI,EAAE,OAAOG,OAAA,CAAOC,IAAI,CAAC,EAAE,CAAC;QAC7C,MAAM,IAAIP,aAAa,CAAC,cAAc,EAAE,UAAU,EAAEK,WAAW,CAAC;MAClE;MACA,OAAOP,MAAM,CAACO,WAAW,CAAC;IAC5B,CAAC;IAEDG,WAAWA,CAACC,MAAM,EAAE;MAClB,OAAOV,MAAM,CAACU,MAAM,EAAEP,QAAQ,CAAC;IACjC;EACF,CAAC;AACH","ignoreList":[]}