{"version":3,"file":"parameters.js","names":["DryRunInput","DryRunInputMapper","EncodedTx","EncodedTxMapper","accept","parameterPath","mapper","defaultValue","isConstant","serializedName","type","name","$host","required","skipEncoding","pubkey","hash","height","constraints","InclusiveMaximum","InclusiveMinimum","strategy","allowedValues","contentType","body","index","nameHash","fromParam","limit","typeParam","queryId","body1"],"sources":["../../../../src/apis/node/models/parameters.ts"],"sourcesContent":["import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper,\n} from \"../models/mappers.js\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n  skipEncoding: true,\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0,\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"],\n    },\n  },\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper,\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const nameHash: OperationURLParameter = {\n  parameterPath: \"nameHash\",\n  mapper: {\n    serializedName: \"name_hash\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const fromParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1,\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\",\n    },\n  },\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"],\n    },\n  },\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\",\n    },\n  },\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper,\n};\n"],"mappings":"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","ignoreList":[]}