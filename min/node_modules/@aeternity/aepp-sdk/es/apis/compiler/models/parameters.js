import { Contract as ContractMapper, SophiaCallResultInput as SophiaCallResultInputMapper, BytecodeCallResultInput as BytecodeCallResultInputMapper, FunctionCallInput as FunctionCallInputMapper, DecodeCalldataBytecode as DecodeCalldataBytecodeMapper, DecodeCalldataSource as DecodeCalldataSourceMapper, ByteCodeInput as ByteCodeInputMapper, ValidateByteCodeInput as ValidateByteCodeInputMapper } from "../models/mappers.js";
export const contentType = {
  parameterPath: ["options", "contentType"],
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Content-Type",
    type: {
      name: "String"
    }
  }
};
export const body = {
  parameterPath: "body",
  mapper: ContractMapper
};
export const accept = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};
export const $host = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const body1 = {
  parameterPath: "body",
  mapper: SophiaCallResultInputMapper
};
export const body2 = {
  parameterPath: "body",
  mapper: BytecodeCallResultInputMapper
};
export const body3 = {
  parameterPath: "body",
  mapper: FunctionCallInputMapper
};
export const body4 = {
  parameterPath: "body",
  mapper: DecodeCalldataBytecodeMapper
};
export const body5 = {
  parameterPath: "body",
  mapper: DecodeCalldataSourceMapper
};
export const body6 = {
  parameterPath: "body",
  mapper: ByteCodeInputMapper
};
export const body7 = {
  parameterPath: "body",
  mapper: ValidateByteCodeInputMapper
};
//# sourceMappingURL=parameters.js.map