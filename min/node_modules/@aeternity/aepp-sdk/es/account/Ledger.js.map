{"version":3,"file":"Ledger.js","names":["AccountBase","ArgumentError","NotImplementedError","decode","buildTx","Tag","CLA","GET_ADDRESS","SIGN_TRANSACTION","GET_APP_CONFIGURATION","SIGN_PERSONAL_MESSAGE","AccountLedger","constructor","transport","index","address","decorateAppAPIMethods","sign","unsafeSign","signTypedData","signDelegation","signTransaction","tx","innerTx","networkId","rawTx","offset","headerLength","networkIdBuffer","_Buffer","from","toSend","length","maxChunkSize","chunkSize","buffer","alloc","bufferOffset","writeUInt32BE","writeUInt8","copy","push","response","reduce","previous","data","i","send","Promise","resolve","signatures","subarray","tag","SignedTx","encodedTx","signMessage","messageStr","message"],"sources":["../../src/account/Ledger.ts"],"sourcesContent":["import type Transport from '@ledgerhq/hw-transport';\nimport AccountBase from './Base.js';\nimport { ArgumentError, NotImplementedError } from '../utils/errors.js';\nimport { decode, Encoded } from '../utils/encoder.js';\nimport { buildTx } from '../tx/builder/index.js';\nimport { Tag } from '../tx/builder/constants.js';\n\nexport const CLA = 0xe0;\nexport const GET_ADDRESS = 0x02;\nexport const SIGN_TRANSACTION = 0x04;\nexport const GET_APP_CONFIGURATION = 0x06;\nexport const SIGN_PERSONAL_MESSAGE = 0x08;\n\n/**\n * Ledger wallet account class\n * @category account\n */\nexport default class AccountLedger extends AccountBase {\n  /**\n   * @param transport - Connection to Ledger to use\n   * @param index - Index of account\n   * @param address - Address of account\n   */\n  constructor(\n    readonly transport: Transport,\n    readonly index: number,\n    override readonly address: Encoded.AccountAddress,\n  ) {\n    super();\n    transport.decorateAppAPIMethods(this, ['signTransaction', 'signMessage'], 'w0w');\n  }\n\n  /**\n   * @deprecated Use `unsafeSign` method instead\n   */\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    return this.unsafeSign();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async unsafeSign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegation(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation using Ledger HW');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountLedger');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    const rawTx = decode(tx);\n    let offset = 0;\n    const headerLength = 4 + 1 + 4;\n    const networkIdBuffer = Buffer.from(networkId);\n    const toSend = [];\n    while (offset !== rawTx.length) {\n      const maxChunkSize = offset === 0 ? 150 - headerLength - networkIdBuffer.length : 150;\n      const chunkSize = offset + maxChunkSize > rawTx.length ? rawTx.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(\n        offset === 0 ? headerLength + networkIdBuffer.length + chunkSize : chunkSize,\n      );\n      if (offset === 0) {\n        let bufferOffset = buffer.writeUInt32BE(this.index, 0);\n        bufferOffset = buffer.writeUInt32BE(rawTx.length, bufferOffset);\n        bufferOffset = buffer.writeUInt8(networkIdBuffer.length, bufferOffset);\n        bufferOffset += networkIdBuffer.copy(buffer, bufferOffset, 0, networkIdBuffer.length);\n        rawTx.copy(buffer, bufferOffset, 0, 150 - bufferOffset);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_TRANSACTION, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    const signatures = [response.subarray(0, 64)];\n\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rawTx, signatures });\n  }\n\n  override async signMessage(messageStr: string): Promise<Uint8Array> {\n    let offset = 0;\n    const message = Buffer.from(messageStr);\n    const toSend = [];\n    while (offset !== message.length) {\n      const maxChunkSize = offset === 0 ? 150 - 4 - 4 : 150;\n      const chunkSize =\n        offset + maxChunkSize > message.length ? message.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(offset === 0 ? 4 + 4 + chunkSize : chunkSize);\n      if (offset === 0) {\n        buffer.writeUInt32BE(this.index, 0);\n        buffer.writeUInt32BE(message.length, 4);\n        message.copy(buffer, 4 + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(CLA, SIGN_PERSONAL_MESSAGE, i === 0 ? 0x00 : 0x80, 0x00, data);\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    return response.subarray(0, 64);\n  }\n}\n"],"mappings":"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","ignoreList":[]}