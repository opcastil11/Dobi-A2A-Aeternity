{"version":3,"file":"autorest.js","names":["RestError","createSerializer","createSerializerOrig","pause","semverSatisfies","InternalError","UnexpectedTsError","UnsupportedVersionError","bigIntPrefix","args","serializer","serialize","deserialize","Object","assign","mapper","object","objectName","options","type","name","call","serializedName","Error","toString","responseBody","startsWith","console","warn","replace","result","Date","Number","MAX_SAFE_INTEGER","BigInt","safeLength","length","bigIntPropertyRe","RegExp","String","raw","bigIntArrayItemRe","parseBigIntPolicy","sendRequest","request","next","response","bodyAsText","replaceAll","matched","match","value","end","join","prefix","genRequestQueuesPolicy","requestQueues","Map","policy","_requestQueues$get","key","headers","get","delete","getResponse","req","Promise","resolve","then","set","catch","position","genCombineGetRequestsPolicy","pendingGetRequests","_pendingGetRequests$g","method","JSON","stringify","url","body","genAggressiveCacheGetResponsesPolicy","getRequests","_getRequests$get","genErrorFormatterPolicy","getMessage","error","message","URL","pathname","slice","code","parsedBody","status","genVersionCheckPolicy","versionCb","geVersion","ltVersion","ignoreVersion","has","requestOptions","customHeaders","genRetryOnFailurePolicy","retryCount","retryOverallDelay","_request$headers$get","retryCode","NaN","statusesToNotRetry","filter","c","intervals","Array","fill","map","_","idx","intervalSum","reduce","a","b","intervalsInMs","e","Math","floor","attempt","urlParsed","searchParams","_e$response$status","includes"],"sources":["../../src/utils/autorest.ts"],"sourcesContent":["import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport {\n  AdditionalPolicyConfig,\n  FullOperationResponse,\n  OperationOptions,\n  createSerializer as createSerializerOrig,\n} from '@azure/core-client';\nimport { pause } from './other.js';\nimport semverSatisfies from './semver-satisfies.js';\nimport { InternalError, UnexpectedTsError, UnsupportedVersionError } from './errors.js';\n\nconst bigIntPrefix = '_sdk-big-int-';\n\nexport const createSerializer = (\n  ...args: Parameters<typeof createSerializerOrig>\n): ReturnType<typeof createSerializerOrig> => {\n  const serializer = createSerializerOrig(...args);\n  const { serialize, deserialize } = serializer;\n  return Object.assign(serializer, {\n    serialize(\n      ...[mapper, object, objectName, options]: Parameters<typeof serialize>\n    ): ReturnType<typeof serialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || object == null) {\n        return serialize.call(this, mapper, object, objectName, options);\n      }\n      if (typeof object !== 'bigint') {\n        objectName ??= mapper.serializedName;\n        throw new Error(`${objectName} with value ${object} must be of type bigint.`);\n      }\n      return object.toString();\n    },\n\n    deserialize(\n      ...[mapper, responseBody, objectName, options]: Parameters<typeof deserialize>\n    ): ReturnType<typeof deserialize> {\n      // @ts-expect-error we are extending autorest with BigInt support\n      if (mapper.type.name !== 'BigInt' || responseBody == null) {\n        if (typeof responseBody === 'string' && responseBody.startsWith(bigIntPrefix)) {\n          console.warn(`AeSdk internal error: BigInt value ${responseBody} handled incorrectly`);\n          responseBody = +responseBody.replace(bigIntPrefix, '');\n        }\n        const result = deserialize.call(this, mapper, responseBody, objectName, options);\n        // TODO: remove after fixing https://github.com/aeternity/ae_mdw/issues/1891\n        // and https://github.com/aeternity/aeternity/issues/4386\n        if (result instanceof Date) return new Date(+result / 1000);\n        return result;\n      }\n      if (typeof responseBody === 'number' && responseBody > Number.MAX_SAFE_INTEGER) {\n        throw new InternalError(`Number ${responseBody} is not accurate to be converted to BigInt`);\n      }\n      return BigInt(responseBody.toString().replace(bigIntPrefix, ''));\n    },\n  });\n};\n\nconst safeLength = Number.MAX_SAFE_INTEGER.toString().length;\nconst bigIntPropertyRe = new RegExp(String.raw`(\"\\w+\":\\s*)(\\d{${safeLength},})(\\s*[,}])`, 'm');\nconst bigIntArrayItemRe = new RegExp(String.raw`([[,]\\s*)(\\d{${safeLength},})\\b`, 'm');\nexport const parseBigIntPolicy: PipelinePolicy = {\n  name: 'parse-big-int',\n  async sendRequest(request, next) {\n    const response = await next(request);\n    if (response.bodyAsText == null) return response;\n    // TODO: replace with https://caniuse.com/mdn-javascript_builtins_json_parse_reviver_parameter_context_argument when it gets support in FF and Safari\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntPropertyRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntPropertyRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, name, value, end] = match;\n        return [\n          name,\n          +value > Number.MAX_SAFE_INTEGER ? `\"${bigIntPrefix}${value}\"` : value,\n          end,\n        ].join('');\n      },\n    );\n    // FIXME: may break strings inside json\n    response.bodyAsText = response.bodyAsText.replaceAll(\n      new RegExp(bigIntArrayItemRe, 'g'),\n      (matched) => {\n        const match = matched.match(bigIntArrayItemRe);\n        if (match == null) throw new UnexpectedTsError();\n        const [, prefix, value] = match;\n        return `${prefix}\"${bigIntPrefix}${value}\"`;\n      },\n    );\n    return response;\n  },\n};\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse);\n        requestQueues.set(\n          key,\n          req.catch(() => {}),\n        );\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-get-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genAggressiveCacheGetResponsesPolicy = (): AdditionalPolicyConfig => {\n  const getRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'aggressive-cache-get-responses',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = getRequests.get(key) ?? next(request);\n        getRequests.set(key, response);\n        return response;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (\n          !(error instanceof RestError) ||\n          error.request == null ||\n          error.message.startsWith('Error ')\n        )\n          throw error;\n        const prefix = `${new URL(error.request.url).pathname.slice(1)} error`;\n\n        if (error.response?.bodyAsText == null) {\n          if (error.message === '') error.message = `${prefix}: ${error.code}`;\n          throw error;\n        }\n\n        const body = (error.response as FullOperationResponse).parsedBody;\n        error.message = prefix;\n        const message = body == null ? ` ${error.response.status} status code` : getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  versionCb: (options: OperationOptions) => Promise<string>,\n  geVersion: string,\n  ltVersion: string,\n  ignoreVersion: boolean,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'version-check',\n    async sendRequest(request, next) {\n      if (request.headers.has('__version-check')) {\n        request.headers.delete('__version-check');\n        return next(request);\n      }\n      const options = { requestOptions: { customHeaders: { '__version-check': 'true' } } };\n      const args = [await versionCb(options), geVersion, ltVersion] as const;\n      if (!semverSatisfies(...args)) {\n        const error = new UnsupportedVersionError(name, ...args);\n        if (ignoreVersion) console.warn(error.message);\n        else throw error;\n      }\n      return next(request);\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genRetryOnFailurePolicy = (\n  retryCount: number,\n  retryOverallDelay: number,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'retry-on-failure',\n    async sendRequest(request, next) {\n      if (request.headers.get('__no-retry') != null) {\n        request.headers.delete('__no-retry');\n        return next(request);\n      }\n\n      const retryCode = request.headers.get('__retry-code') ?? NaN;\n      request.headers.delete('__retry-code');\n      const statusesToNotRetry = [200, 400, 403, 410, 500].filter((c) => c !== +retryCode);\n\n      const intervals = new Array(retryCount)\n        .fill(0)\n        .map((_, idx) => ((idx + 1) / retryCount) ** 2);\n      const intervalSum = intervals.reduce((a, b) => a + b, 0);\n      const intervalsInMs = intervals.map((e) => Math.floor((e / intervalSum) * retryOverallDelay));\n\n      let error = new RestError('Not expected to be thrown');\n      for (let attempt = 0; attempt <= retryCount; attempt += 1) {\n        if (attempt !== 0) {\n          await pause(intervalsInMs[attempt - 1]);\n          const urlParsed = new URL(request.url);\n          urlParsed.searchParams.set('__sdk-retry', attempt.toString());\n          request.url = urlParsed.toString();\n        }\n        try {\n          return await next(request);\n        } catch (e) {\n          if (!(e instanceof RestError)) throw e;\n          if (statusesToNotRetry.includes(e.response?.status ?? 0)) throw e;\n          error = e;\n        }\n      }\n      throw error;\n    },\n  },\n  position: 'perCall',\n});\n"],"mappings":"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","ignoreList":[]}